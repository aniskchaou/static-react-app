{"version":3,"sources":["logo.svg","main/config/user.js","main/urls/urls.js","libraries/axios/axios.js","main/services/messageHTTPService.js","libraries/messages/messages.js","main/services/appointementHTTPService.js","components/Header/Header.js","components/init.js","components/Navigation/Navigation.js","components/ConfigurationContent/ConfigurationContent.js","components/Configuration/Configuration.js","components/Odontogram/Odontogram.js","main/config/chart.bar.js","main/services/expenseHTTPService.js","main/services/certificateHTTPService.js","main/services/medicamentHTTPService.js","components/DashBoard/DashBoard.js","components/ViewAppointment/ViewAppointment.js","main/validations/appointementValidation.js","main/services/patientHTTPService.js","components/AddAppointment/AddAppointment.js","components/EditAppointment/EditAppointment.js","main/messages/patientMessage.js","components/SummaryWidget/SummaryWidget.js","components/Rendezvous/Rendezvous.js","components/AddPrescription/AddPrescription.js","main/services/prescriptionHTTPService.js","components/ViewPrescription/ViewPrescription.js","components/EditPrescription/EditPrescription.js","components/AddMedicamentItem/AddMedicamentItem.js","components/Prescription/Prescription.js","main/services/paymentHTTPService.js","components/AddPayment/AddPayment.js","components/EditPayment/EditPayment.js","components/Payment/Payment.js","components/AddPatient/AddPatient.js","components/Patient/ViewPatient.js","components/EditPatient/EditPatient.js","components/Patient/Patient.js","main/services/medicamentManufactureHTTPService.js","components/Medicament/AddMedicament.js","components/Medicament/Medicament.js","main/services/userHTTPService.js","components/Login/Login.js","main/validations/medicamentValidation.js","main/services/medicamentCategoryHTTPService.js","components/AddMedicament/AddMedicament.js","components/Expense/AddExpense.js","components/EditExpense/EditExpense.js","components/Expense/Expense.js","main/services/incomeHTTPService.js","components/EditIncome/EditIncome.js","components/AddIncome/AddIncome.js","components/Income/Income.js","main/services/noteHTTPService.js","components/Note/Note.js","main/services/todoHTTPService.js","components/ToDo/ToDo.js","components/Message/Message.js","components/MedicamentManufacture/AddMedicamentManufacture.js","components/EditMedicamentManufacture/EditMedicamentManufacture.js","components/MedicamentManufacture/MedicamentManufacture.js","components/MedicamentCategory/AddMedicamentCategory.js","components/EditMedicamentCategory/EditMedicamentCategory.js","components/MedicamentCategory/MedicamentCategory.js","main/services/testlabHTTPService.js","components/LabTest/AddLabTest.js","components/LabTest/EditLabTest.js","components/LabTest/ViewLabTest.js","components/LabTest/LabTest.js","main/services/invoiceHTTPService.js","components/AddInvoice/AddInvoice.js","components/Invoice/Invoice.js","components/Certificates/AddCertificate.js","components/EditCertificate/EditCertificate.js","components/Certificates/Certificates.js","components/Consultation/Consultations.jsx","main/validations/certificationtemplateValidation.js","main/services/certificationtemplatetHTTPService copy.js","components/AddCertificateTemplate/AddCertificateTemplate.js","components/EditCertificateTemplate/EditCertificateTemplate.js","components/CertificateTemplates/CertificateTemplates.js","components/MedicamentAnalytics/MedicamentAnalytics.js","components/PatientAnalytics/PatientAnalytics.js","components/SaleAnalytics/SaleAnalytics.js","main/services/serviceHTTPService.js","components/AddService/AddService.js","components/EditService/EditService.js","components/Services/Services.js","main/services/frontOfficeHTTPService.js","components/EditOpeningHourPage/EditOpeningHourPage.js","components/OpeningHourPage/OpeningHourPage.js","components/EditContactPage/EditContactPage.js","components/ContactPage/ContactPage.js","components/ServicePage/ServicePage.js","components/EditBlogPage/EditBlogPage.js","components/BlogPage/BlogPage.js","components/AddTestimonial/AddTestimonial.js","components/EditTestimonial/EditTestimonial.js","main/services/testimonialsHTTPService.js","components/Testimonial/Testimonial.js","components/Schedule/Schedule.js","components/NewsLetter/NewsLetter.js","components/SearchPatient/SearchPatient.js","components/Profile/Profile.js","components/Appointements/AddAppointment.js","components/Appointements/EditAppointment.js","components/Appointements/ViewAppointment.js","components/Appointements/Appointements.js","components/CaseStudy/CaseStudies.jsx","components/Membership/CreateMembership.jsx","components/Membership/EditMembership.js","components/Membership/MembershipDetails.jsx","components/Operation/AddOperation.js","components/Operation/EditOperation.js","components/Operation/OperationDetails.jsx","components/Clinic/ClinicInfo.jsx","components/Diagnose/CreateDiagnosis.js","components/Diagnose/Diagnoses.jsx","components/EquipmentMaintenance/AddEquipmentMaintenance.js","components/EquipmentMaintenance/EditEquipmentMaintenance.js","components/EquipmentMaintenance/EquipementMaintenance.js","components/Insurance/AddInsurance.js","components/Insurance/InsuranceInfo.jsx","components/LegalCompliance/LegalCompliance.jsx","components/LoyaltyProgram/LoyaltyProgram.js","components/MarketingCampaign/MarketingCampaign.jsx","components/Staff/AddStaff.jsx","components/Staff/ViewStaff.jsx","components/Staff/EditStaff.jsx","components/Staff/StaffProfile.jsx","components/Procedure/AddProcedure.js","components/Procedure/EditProcedure.js","components/Procedure/ProcedureDetails.jsx","components/TreatmentPlan/AddTreatmentPlan.js","components/TreatmentPlan/TreatmentPlan.jsx","components/Doctor/AddDoctor.jsx","components/Doctor/EditDoctor.jsx","components/Doctor/Doctors.jsx","components/Odontogram/ProfessionalOdontogram.js","components/Telemedicine/Telemedicine.js","components/Billing/Billing.js","components/DentalImaging/DentalImaging.js","components/InventoryItem/AddInventoryItem.js","components/InventoryItem/EditInventoryItem.js","components/InventoryItem/InventoryItem.js","components/Home/HomePage.jsx","components/DocumentationHelp/DocumentationHelp.js","components/Register/Register.js","components/AboutUsPage/AboutUsPage.jsx","components/Content/Content.js","components/Footer/Footer.js","components/Home/SendMessage.jsx","components/Appointments/BookAppointment.jsx","components/Root/Root.js","main/services/demoInterceptor.js","App.js","reportWebVitals.js","index.js"],"names":["CurrentUser","USER_NAME","CONNECTED_USER","HTTP_ERR_MESSAGE","USER_DETAIL","DELTE_MSG","SETTINGS_UPDATE_MSG","CREATE_MSG","UPDATE_MSG","REMOVE_MSG","ERR_MSG","DEMO_MODE","BASE_URL","axios","create","baseURL","headers","getAllMessage","http","get","id","delete","getCount","showMessage","title","message","type","window","createNotification","closeOnClick","displayCloseButton","positionClass","onclick","theme","myNotification","getAllAppointement","createAppointement","data","post","editAppointement","put","removeAppointement","username","userObj","JSON","parse","localStorage","getItem","charAt","toUpperCase","slice","user","name","role","avatar","Header","_ref","_clinicSettings$syste","connected","handleClick","history","useHistory","location","useLocation","loading","setLoading","useState","messsage","setmessage","appointements","setAppointements","activity","setActivity","input","darkMode","setDarkMode","lang","setLang","navOpen","setNavOpen","userAnchorEl","setUserAnchorEl","handleUserClose","quickAddAnchorEl","setQuickAddAnchorEl","handleQuickAddClose","systemStatus","setSystemStatus","breadcrumbs","pathname","split","filter","Boolean","appointmentsAnchorEl","setAppointmentsAnchorEl","clinicSettings","setClinicSettings","system","appName","useEffect","fetch","then","res","json","catch","_jsx","className","style","display","children","_jsxs","alignItems","justifyContent","width","flexWrap","padding","minHeight","boxSizing","fontWeight","fontSize","color","letterSpacing","fontFamily","FaTooth","marginRight","IconButton","onClick","toggleNav","open","sx","ml","md","FaBars","flex","marginLeft","minWidth","overflow","FaGlobe","flexShrink","aria-label","margin","background","whiteSpace","overflowX","Link","to","map","crumb","idx","join","gap","Select","value","onChange","e","target","size","MenuItem","disabled","onSubmit","preventDefault","replace","event","onKeyDown","keyCode","placeholder","maxWidth","Tooltip","currentTarget","FaPlus","Menu","anchorEl","onClose","push","appointementHTTPService","response","Badge","badgeContent","length","FaBell","handleAppointmentsClose","PaperProps","maxHeight","overflowY","paddingBottom","itemm","borderBottom","borderRadius","marginBottom","patient","status","date","Date","toLocaleString","startTime","endTime","doctor","phone","reason","notes","createdAt","updatedAt","component","FaQuestionCircle","Avatar","src","alt","mr","FaUserCircle","FaCog","clear","FaPowerOff","defaultProps","LoadJSFiles","scripts","i","node","document","createElement","async","charset","getElementById","appendChild","console","log","Navigation","messages","setMessages","sidebarCollapsed","setSidebarCollapsed","search","setSearch","getMessages","messageHTTPService","menuItems","section","items","icon","label","dropdown","badge","iconSize","transition","tabIndex","key","textAlign","border","cursor","flexDirection","height","marginTop","item","filteredChildren","child","toLowerCase","includes","React","Fragment","borderTop","href","data-toggle","aria-haspopup","aria-expanded","left","NavLink","_ref2","isActive","_ref3","defaultSettings","address","email","showLogo","localisation","language","dateFormat","currency","currencySymbol","openHours","day","hours","SETTINGS_FILE_KEY","CLINIC_SETTINGS_API_URL","dateFormatOptions","languageOptions","currencyOptions","currencySymbolOptions","ConfigurationContent","_settings$system$appN","_settings$system","_settings$system$show","_settings$system2","_settings$system$addr","_settings$system3","_settings$system$emai","_settings$system4","_settings$localisatio","_settings$localisatio2","_settings$localisatio3","_settings$localisatio4","_settings$localisatio5","_settings$localisatio6","_settings$localisatio7","_settings$localisatio8","settings","setSettings","tab","setTab","editDialog","setEditDialog","loadingOpenHours","setLoadingOpenHours","saved","restoreSection","prev","openEdit","closeEdit","EditDialogContent","_settings$section","_sectionSettings$appN","_sectionSettings$addr","_sectionSettings$emai","_sectionSettings$show","_sectionSettings$lang","_sectionSettings$date","_sectionSettings$curr","_sectionSettings$curr2","sectionSettings","handleChange","checked","handleHoursChange","Stack","spacing","mt","TextField","fullWidth","_Fragment","FormControl","InputLabel","opt","Box","mx","p","bgcolor","boxShadow","direction","xs","Tabs","orientation","_","v","variant","borderRight","borderColor","Tab","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","handleEditSave","setItem","stringify","Configuration","class","Odontogram","chartBarOption","indexAxis","elements","bar","borderWidth","responsive","plugins","legend","position","text","intialChartBarData","labels3","datasets","backgroundColor","getAllExpense","editExpense","getAllCertificate","createCertificate","editCertificate","removeCertificate","removeAllCertificates","getAllMedicament","createMedicament","editMedicament","getMedicamentByDate","removeMedicament","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Legend","ArcElement","BarElement","labels","data2","chartData","pie","doughnut","line","fill","polar","radar","scatter","x","y","bubble","r","bar2","pie2","doughnut2","line2","polar2","radar2","scatter2","bubble2","bar3","pie3","doughnut3","line3","chartList","Bar","Pie","Doughnut","Line","PolarArea","Radar","Scatter","Bubble","DashBoard","expenseChart","setExpenseChart","incomeChart","setIncomeChart","memberLine","setmemberLine","activityPie","setActivityPie","attendance","setAttendance","certificateCountCount","setcertificateCount","appointementCount","setAppointementsCount","medicamentCount","setMedicamentCount","patientCount","setPatientCount","dashboardSettings","setDashboardSettings","appointementsCalendar","setAppointementsCalendar","topDoctors","setTopDoctors","topPatients","setTopPatients","topMedicaments","setTopMedicaments","getExpenseChartData","getIncomeChartData","getMemberLinetData","getActivityPieData","getAttendencesCalendar","getPatientCount","getAppointementCount","getMedicamentCount","getCertificateCount","getDashboardSettings","appointement","medicamentHTTPService","medicament","certificateHTTPService","certificate","widgetColors","bg","widgetData","appointmentDates","appointmentDate","toDateString","getAppointmentsForDate","selectedDate","setSelectedDate","w","onMouseOver","transform","onMouseOut","lineHeight","opacity","gridTemplateColumns","chart","options","paddingLeft","doc","fullName","doctorName","appointmentCount","visits","pat","patientName","visitCount","med","medicamentName","salesCount","sold","textDecoration","Calendar","onClickDay","tileContent","view","tileClassName","calendarType","locale","toLocaleDateString","listStyle","borderLeft","patientId","doctorId","appointmentType","reasonForVisit","ViewAppointment","scope","expenseValidation","amount","note","paymenMode","getAllPatients","getPatientById","createPatient","editPatient","removePatient","removeAllPatients","AddAppointment","props","initialState","problem","handleSubmit","errors","useForm","setAppointement","patients","setPatients","getAllPatient","patientHTTPService","handleInputChange","closeModal","method","accept-charset","ref","required","autocomplete","appointementValidation","namepatient","patient_id","rows","EditAppointment","datee","patientMessage","add","edit","SummaryWidget","Rendezvous","updatedItem","setUpdatedItem","closeButtonEdit","useForceUpdate","useRef","closeButtonAdd","getAllAppointements","closeModalEdit","current","click","closeModalAdd","updatedItemId","setUpdatedItemId","updatedItemIds","setUpdatedItemIds","showFilter","setShowFilter","showChart","setShowChart","gutterBottom","removeAppointementAction","confirm","LinearProgress","DataGrid","columns","field","headerName","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","selectedItem","find","components","Toolbar","GridToolbar","tabindex","aria-labelledby","aria-hidden","data-dismiss","EdiTAppointement","refillOptions","statusOptions","AddPrescription","onSuccess","form","setForm","clinicId","medications","dosage","duration","frequency","instructions","medicationId","medicationName","prescriptionDate","validUntil","refillAllowed","refillCount","pharmacyId","digitalSignature","doctors","setDoctors","clinics","setClinics","handleMedicationChange","f","meds","now","toISOString","autoComplete","select","clinic","clinicName","mb","handleAddMedication","AddIcon","InputLabelProps","shrink","getPrescription","getMedicamentPrescription","removeMedicamentPrescription","ViewPrescription","setMedicament","medicaments","setMedicaments","prescriptionHTTPService","pression","temperature","dose","remove","EditPrescription","enctype","onkeyup","for","colspan","AddMedicamentItem","statusColors","Active","Expired","Completed","Pending","Prescription","_selectedPrescription","_selectedPrescription2","_selectedPrescription3","prescriptions","setPrescriptions","actionAnchorEl","setActionAnchorEl","actionRow","setActionRow","addDialogOpen","setAddDialogOpen","editDialogOpen","setEditDialogOpen","viewDialogOpen","setViewDialogOpen","addMedicamentDialogOpen","setAddMedicamentDialogOpen","drawerOpen","setDrawerOpen","selectedPrescription","setSelectedPrescription","selectedIds","setSelectedIds","notification","setNotification","severity","getAllPrescriptions","getPatientName","getDoctorName","d","getClinicName","c","handleActionClose","getMedicationWarnings","prescription","_prescription$medicat","some","m","handlePrint","print","generatePrescriptionPDF","jsPDF","unit","format","setFillColor","rect","setFontSize","setTextColor","setFont","forEach","notesLines","splitTextToSize","setDrawColor","save","valueGetter","params","row","renderCell","valueFormatter","Chip","sortable","filterable","aria-controls","handleActionClick","MoreVertIcon","ids","handleView","handleDelete","sm","Divider","Alert","startIcon","PrintIcon","DownloadIcon","Drawer","anchor","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","getAllPayment","editPayment","paymentMethods","paymentStatuses","currencies","AddPayment","appointmentId","invoiceId","paymentMethod","transactionId","insuranceClaimId","paymentStatus","paymentDate","payment","setPayment","Math","random","toString","substr","Number","paymentHTTPService","finally","cur","multiline","EditPayment","invoiceNumber","amountReceived","invoiceBlanceDue","Payment","payments","setPayments","setAnchorEl","selectedRow","setSelectedRow","viewItem","setViewItem","viewOpen","setViewOpen","getAllPayments","resfreshComponent","removePaymentAction","updatePaymentAction","data-target","autoHeight","bloodTypes","AddPatient","medicalRecordNumber","insuranceId","bloodType","allergies","medicalHistory","condition","diagnosedAt","currentMedications","prescribedBy","emergencyContact","relationship","nationalId","setPatient","handleMedicalHistoryChange","updated","handleEmergencyContactChange","addAllergy","addMedicalHistory","addMedication","patientData","a","trim","mh","PersonIcon","verticalAlign","Grid","container","Card","CardContent","MedicalServicesIcon","bt","LocalHospitalIcon","allergy","handleAllergyChange","removeAllergy","RemoveCircleOutlineIcon","AddCircleOutlineIcon","Paper","removeMedicalHistory","removeMedication","ContactPhoneIcon","ViewPatient","_patient$emergencyCon","_patient$emergencyCon2","_patient$emergencyCon3","userId","BloodtypeIcon","my","HistoryEduIcon","MedicationIcon","ContactEmergencyIcon","EditPatient","dta","encType","acceptCharset","emailpatient","birth","telephone","gender","insuranceNumber","bloodGroup","maritalStatus","occupation","chronicDiseases","Chart","ChartTooltip","ChartLegend","Patient","searchQuery","setSearchQuery","editOpen","setEditOpen","removePatientAction","handleMenuClose","handleMenuAction","action","dataStr","encodeURIComponent","downloadAnchorNode","setAttribute","body","exportPatientData","printWindow","write","close","printPatientData","navigator","share","alert","sharePatientData","duplicated","duplicatePatient","warn","handleMenuOpen","filteredPatients","Object","values","reduce","acc","bloodTypeLabels","bloodTypeCounts","totalPatients","typeCounts","doughnutData","barData","lineData","align","updatePatientAction","getAllMedicamentManufacture","editMedicamentManufacture","categories","dosageForms","AddMedicament","onCreate","genericName","category","description","activeIngredients","ingredient","concentration","dosageForm","strength","manufacturerId","requiresPrescription","sideEffects","contraindications","usageInstructions","stockQuantity","pricePerUnit","expirationDate","storageConditions","barcode","batchNumber","handleIngredientChange","addIngredient","addSideEffect","addContraindication","ai","s","cat","removeIngredient","df","side","handleSideEffectChange","removeSideEffect","contra","handleContraindicationChange","removeContraindication","Medicament","_viewMedicament$stock","_viewMedicament$price","selectedMedicaments","setSelectedMedicaments","openConfirmDialog","setOpenConfirmDialog","isDarkMode","setIsDarkMode","addOpen","setAddOpen","viewMedicament","setViewMedicament","filteredMedicaments","producer","handleEdit","duplicate","handleDuplicate","active","updateMedicament","toggleActive","handleArchive","handleRestore","handleViewHistory","keepMounted","getRowId","dividers","DialogContentText","confirmBulkDelete","Login","setUser","password","snackbar","setSnackbar","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","elevation","backdropFilter","LockOutlinedIcon","demoUser","setTimeout","error","inputRef","helperText","autoFocus","getFullYear","medicamentValidation","medicine_name","company_name","group_name","getAllMedicamentCayegory","editMedicamentCayegory","medicamentCategory","setMedicamentCategory","medicamentManufacture","setMedicamentManufacture","getAllMedicamentManufactures","getAllMedicamentCategories","medicamentManufactureHTTPService","medicamentCategoryHTTPService","expenseCategories","AddExpense","estimatedDuration","expenseCategory","expenseHTTPService","EditExpense","expense","setExpense","Expense","expenses","setExpenses","viewExpense","setViewExpense","getAllExpenses","removeExpenseAction","updateExpenseAction","totalExpenses","paidExpenses","pendingExpenses","keys","handleExpenseCreated","vendorName","transactionDate","receiptAttachments","rel","getAllIncome","createIncome","editIncome","removeIncome","EditIncome","AddIncome","Income","incomes","setIncomes","forceUpdate","getAllIncomes","incomeHTTPService","_params$value","updateIncomeAction","removeIncomeAction","removeAll","getAllNote","Note","setNotes","noteHTTPService","updateNoteAction","removeNoteAction","getAllToDo","ToDo","todos","setToDos","getAllToDos","todoHTTPService","Message","openViewDialog","setOpenViewDialog","selectedMessage","setSelectedMessage","getAllMessages","filteredMessages","_message$name","_message$subject","_message$message","subject","VisibilityIcon","DeleteIcon","CircularProgress","pb","borderTopLeftRadius","borderTopRightRadius","MessageIcon","EmailIcon","SubjectIcon","borderBottomLeftRadius","borderBottomRightRadius","contactPerson","street","city","state","postalCode","country","website","licenseNumber","certifications","medicamentsSupplied","contractStartDate","contractEndDate","manufactureStatus","setCategories","_id","EditMedicamentManufacture","typeSubs","setTypeSubs","members","setMembers","MedicamentManufacture","_viewItem$contactPers","_viewItem$contactPers2","_viewItem$contactPers3","medicamentManufactures","setMedicamentManufactures","fetchData","formatted","index","cp","addr","cert","removeMedicamentManufactureAction","selected","AddMedicamentManufacture","clickable","AddMedicamentCategory","EditMedicamentCategory","MedicamentCategory","medicamentsCategories","setMedicamentsCategories","removeMedicamentCategoryAction","updateMedicamentCategoryAction","querySelector","getAllTestLab","statuses","insuranceOptions","AddLabTest","laboratories","testName","testCategory","testDescription","sampleType","sampleCollectionDate","sampleCollectedBy","testStatus","result","laboratoryId","testCost","insuranceCovered","labTestData","l","sampleConditions","urgencyLevels","resultDeliveryMethods","EditLabTest","testLab","sampleCondition","urgencyLevel","resultDeliveryMethod","resultDeliveryDate","comments","ViewLabTest","uploading","setUploading","uploadedFile","setUploadedFile","fileInputRef","accept","file","files","formData","FormData","append","url","err","handleDownload","link","download","removeChild","LabTest","labTests","setLabTests","editModalOpen","setEditModalOpen","viewModalOpen","setViewModalOpen","viewedItem","setViewedItem","fetchAllLabTests","testlabHTTPService","hidden","handleUploadReport","undefined","splitText","String","addPage","totalLabTests","completedTests","t","pendingTests","updateLabTestAction","removeLabTestAction","bulkDelete","exportSelected","getAllInvoice","AddInvoice","setTestLab","Invoice","invoices","setInvoices","getAllInvoices","invoiceHTTPService","removeInvoiceAction","updateInvoiceAction","client","certificateTypes","AddCertificate","certificateNumber","certificateType","issueDate","diagnosis","treatmentDetails","recommendations","attachments","signature","EditCertificate","setCertificate","template","content","Certificates","skeleton","setSkeleton","certificates","setCertificates","drawerCertificate","setDrawerCertificate","bulkSelection","setBulkSelection","editRowsModel","setEditRowsModel","setFilter","from","getAllCertificates","filteredCertificates","matchesType","matchesStatus","matchesPatient","matchesDoctor","matchesClinic","matchesFrom","matchesTo","_patients$find","_doctors$find","_clinics$find","exportToExcel","csvContent","blob","Blob","URL","createObjectURL","editable","userRole","exportCertificateToPDF","types","Skeleton","setLineWidth","paragraph","lines","leftMargin","AssignmentIcon","TemplateIcon","exportToPDF","onRowSelectionModelChange","editMode","onRowEditCommit","changes","fromEntries","entries","k","updateCertificate","onEditRowsModelChange","model","certificateData","ShareIcon","Consultations","consultations","setConsultations","retrieveConsultations","refresh","_params$value2","diagnosisName","_params$value3","_params$value4","treatmentName","_params$value5","_params$value6","update","DELETE_MSG","certificateTemplateValidation","getAllCertificationTemplate","editCertificationTemplate","AddCertificateTemplate","certificateTemplate","setCertificateTemplate","certificationtemplatetHTTPServiceCopy","EditCertificateTemplate","CertificateTemplates","createTemplate","templateDetails","designCertificateLayout","layoutDetails","logo","signatures","applyTemplateToGenerateCertificate","templateId","EditCertificationTemplate","RadialLinearScale","MedicamentAnalytics","charts","setCharts","typePie","prepareCharts","categoryCounts","manufacturerCounts","manufacturerName","monthCounts","month","year","months","stockCounts","stockStatus","ingredientCounts","scatterData","price","floor","stock","bubbleData","PatientAnalytics","genderPie","insuranceCounts","cityCounts","_p$address","paymentStatusCounts","allergyCounts","age","genderCounts","SaleAnalytics","getAllService","createService","filename","AddService","fileName","setService","service","serviceHTTPService","EditService","groupe","setGroupe","groupe_name","Services","getOpeningHourPage","editContactPage","getContactPage","editOpeningHourPage","editBlogPage","getBlogPage","EditOpeningHourPage","frontOffice","setFrontOffice","frontOfficeHTTPService","subtitle","OpeningHourPage","retrieveEvents","EditContactPage","setfrontOffice","sendButton","ContactPage","ServicePage","services","setServices","textarea","setTextarea","setEditMode","success","setSuccess","setError","fetchServices","minRows","updatedServices","handleCancel","EditBlogPage","BlogPage","AddTestimonial","EditTestimonial","testimonial","getAllTestimonials","Testimonial","testimonialsHTTPService","showQuickFilter","Schedule","NewsLetter","SearchPatient","projects","setProjects","searchProject","match","searchPatient","Profile","_user$birthday","top","right","objectFit","birthday","substring","clinicLocationId","roomNumber","isFirstVisit","followUpDate","FormControlLabel","control","Checkbox","appointment","paymentAmount","insuranceProvider","Appointments","appointmentsList","setAppointments","viewMode","setViewMode","retrieveAppointments","resfresh","handleExport","syncWithGoogleCalendar","sendReminder","saveAs","MenuIcon","MuiMenuItem","totalAppointments","completed","pending","confirmed","noShow","appt","filteredAppointments","q","handleBulkArchive","renderCalendarView","grouped","dates","sort","List","ListItem","ListItemText","primary","secondary","renderTimelineView","sortedAppointments","b","CaseStudies","caseStudies","setCaseStudies","filteredCaseStudies","setFilteredCaseStudies","retrieveCaseStudies","query","filtered","cs","exportToCSV","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","bookType","plans","defaultBenefits","CreateMembership","onCancel","membershipPlan","benefits","validityPeriod","startDate","endDate","renewalDate","lastPaymentAmount","lastPaymentDate","benefitInput","setBenefitInput","startsWith","handleAddBenefit","objToSend","plan","onDelete","handleRemoveBenefit","benefit","db","planOptions","EditMembership","membership","_membership$validityP","_membership$validityP2","planColors","Premium","Standard","Basic","Inactive","Cancelled","Memberships","_viewMembership$valid","_viewMembership$valid2","memberships","setMemberships","selectedMembership","setSelectedMembership","selectedMembershipId","setSelectedMembershipId","setOpen","viewMembership","setViewMembership","fetchMemberships","_params$row$validityP","_params$row$validityP2","handleViewMenu","handleEditMenu","handleDeleteRow","handleSuccess","operationTypes","anesthesiaTypes","followUpOptions","AddOperation","operationType","procedureName","operationDate","anesthesiaType","complications","postOperationInstructions","followUpRequired","EditOperation","operation","onEdit","Operations","operations","setOperations","selectedOperation","setSelectedOperation","selectedOperationId","setSelectedOperationId","fetchOperations","op","handleActionEdit","handleActionDelete","initialForm","zipCode","contactNumber","workingHours","doctorsAvailable","Clinic","selectedClinic","setSelectedClinic","selectedId","setSelectedId","menuRowId","setMenuRowId","fetchClinics","handleFormChange","wh","rowId","pl","handleMenuView","handleMenuEdit","handleMenuDelete","severityOptions","CreateDiagnosis","diagnosisDate","Diagnoses","diagnoses","setDiagnoses","severityFilter","setSeverityFilter","conditionFilter","setConditionFilter","doctorFilter","setDoctorFilter","dateRange","setDateRange","drawerDiagnosis","setDrawerDiagnosis","auditTrail","setAuditTrail","chartFilter","setChartFilter","fetchDiagnoses","useCallback","filteredDiagnoses","matchesSeverity","matchesCondition","matchesSearch","matchesDate","matchesChart","conditionCounts","cond","severityCounts","sev","doctorCounts","dateCounts","pieData","tension","diagnosisResults","entry","AddEquipmentMaintenance","technicians","equipmentName","modelNumber","manufacturer","purchaseDate","lastServiceDate","nextServiceDue","assignedTechnician","maintenanceNotes","EditEquipmentMaintenance","equipment","EquipmentMaintenance","maintenanceData","setMaintenanceData","scheduleDialogOpen","setScheduleDialogOpen","historyDrawerOpen","setHistoryDrawerOpen","selectedHistory","setSelectedHistory","filterStatus","setFilterStatus","filterTechnician","setFilterTechnician","filterClinic","setFilterClinic","assignDialogOpen","setAssignDialogOpen","fileDialogOpen","setFileDialogOpen","qrDialogOpen","setQrDialogOpen","editEquipment","setEditEquipment","viewEquipment","setViewEquipment","maintenanceDialogOpen","setMaintenanceDialogOpen","selectedEquipment","setSelectedEquipment","maintenanceDate","setMaintenanceDate","maintenanceType","setMaintenanceType","setMaintenanceNotes","isMobile","useMediaQuery","cl","filteredData","_row$equipmentName","isOverdue","dateChip","arguments","containerSx","handleBulkDelete","palette","paper","handleScheduleMaintenance","handleAddMaintenanceDialog","h","technician","UploadFileIcon","QrCodeIcon","py","newHistory","maintenanceHistory","AddInsurance","providerName","policyNumber","coverageDetails","maxAnnualCoverage","treatmentCoverage","medicationCoverage","consultationCoverage","validFrom","InsuranceInfo","insuranceData","setInsuranceData","coverageModalOpen","setCoverageModalOpen","coverageModalData","setCoverageModalData","totalInsurances","activeInsurances","expiredInsurances","providers","provider","_ref4","CoverageModalContent","_ref5","_coverageDetails$cons","_coverageDetails$trea","_coverageDetails$medi","insurance","mainChips","additional","_ref6","patientFullName","chip","_ref7","str","viewCoverage","LegalCompliance","records","setRecords","Loyalty","loyaltyData","setLoyaltyData","selectedLoyalty","setSelectedLoyalty","fetchLoyalty","parsedData","earnedFrom","redeemedRewards","pointsEarned","reward","rewardName","pointsUsed","redeemedDate","Marketing","campaigns","setCampaigns","selectedCampaign","setSelectedCampaign","selectedCampaignId","setSelectedCampaignId","fetchCampaigns","ta","ageGroup","lastVisitDate","treatmentHistory","_metrics$openRate","_metrics$clickThrough","_metrics$conversionRa","metrics","openRate","clickThroughRate","conversionRate","campaign","roles","permissionsList","daysOfWeek","AddStaff","shiftSchedule","Mon","start","end","Tue","Wed","Thu","Fri","Sat","Sun","permissions","handleScheduleChange","staffData","perm","handlePermissionToggle","ViewStaff","staff","_staff$shiftSchedule","_staff$shiftSchedule$","_staff$shiftSchedule2","_staff$shiftSchedule3","_staff$shiftSchedule4","_staff$shiftSchedule5","EditStaff","Staff","staffList","setStaffList","selectedStaff","setSelectedStaff","selectedStaffId","setSelectedStaffId","fetchStaff","totalStaff","activeStaff","onLeaveStaff","inactiveStaff","roleCounts","staffMember","handleActionView","AddProcedure","procedureDate","EditProcedure","procedure","ViewProcedure","Procedures","procedures","setProcedures","selectedProcedure","setSelectedProcedure","selectedProcedureId","setSelectedProcedureId","fetchProcedures","proc","AddTreatmentPlan","TreatmentPlans","treatmentPlans","setTreatmentPlans","selectedPlan","setSelectedPlan","selectedPlanId","setSelectedPlanId","fetchTreatmentPlans","totalPlans","completedPlans","inProgressPlans","pendingPlans","treatmentType","specializations","AddDoctor","specialization","experienceYears","consultationFee","availableDays","availableTimeSlots","rating","timeSlot","setTimeSlot","SelectProps","multiple","ts","handleAddTimeSlot","slot","handleRemoveTimeSlot","inputProps","min","max","step","EditDoctor","Doctors","selectedDoctor","setSelectedDoctor","parseFloat","toFixed","Rating","precision","readOnly","totalDoctors","avgRating","sum","avgExperience","spec","rowHeight","TOOTH_STATUSES","TOOTH_TYPES","getInitialTeeth","Array","surfaces","images","treatmentSummary","ProfessionalOdontogram","teeth","setTeeth","selectedTooth","setSelectedTooth","showModal","setShowModal","appointments","selectedPatient","setSelectedPatient","selectedAppointment","setSelectedAppointment","sentFormData","setSentFormData","backendTeethHistory","setBackendTeethHistory","parseInt","isNaN","backendTeeth","prevTeeth","tooth","found","toothNumber","getToothTooltip","toothSVG","isSelected","numberColor","cross","x1","y1","x2","y2","stroke","strokeWidth","viewBox","cx","cy","rx","ry","textAnchor","renderArch","teethSlice","arch","archCenterY","angle","PI","cos","sin","handleToothDetails","onMouseEnter","onMouseLeave","handleModalChange","handleSaveToothDetails","newHistoryItem","payload","formatDate","dateStr","FaUser","FaUserMd","FaClinicMedical","FaCalendarAlt","FaIdBadge","odontogramEl","html2canvas","default","parentNode","canvas","toDataURL","resize","o","borderCollapse","colSpan","localizer","momentLocalizer","moment","dummyCallHistory","patientAvatar","loadScript","Promise","resolve","script","onload","Telemedicine","_patients$find2","_doctors$find2","inCall","setInCall","videoEnabled","setVideoEnabled","audioEnabled","setAudioEnabled","showChat","setShowChat","chatInput","setChatInput","showHistory","setShowHistory","meetLink","setMeetLink","copied","setCopied","calendarLoading","setCalendarLoading","openModal","setOpenModal","newAppointment","setNewAppointment","sessionDuration","meetingLink","recordedSessionUrl","selectedEvent","setSelectedEvent","showEventModal","setShowEventModal","localVideoRef","remoteVideoRef","fetchAppointments","fetchPatients","fetchDoctors","handleSendMessage","sender","createMeetEvent","accessToken","reject","google","accounts","oauth2","initTokenClient","client_id","callback","tokenResponse","access_token","requestAccessToken","authenticate","gapi","load","init","apiKey","discoveryDocs","setToken","summary","dateTime","conferenceData","createRequest","requestId","calendar","events","insert","calendarId","resource","conferenceDataVersion","hangoutLink","calendarEvents","getTime","VideocamIcon","handleOpenModal","startAccessor","endAccessor","titleAccessor","onSelectEvent","tooltipAccessor","eventPropGetter","wordBreak","ContentCopyIcon","handleCopyLink","clipboard","writeText","HistoryIcon","call","ListItemAvatar","autoPlay","playsInline","poster","muted","bottom","msg","px","Billing","_selectedInvoice$disc","_selectedInvoice$disc2","billItems","setBillItems","quantity","setQuantity","openDialog","setOpenDialog","loadingInvoices","setLoadingInvoices","selectedInvoice","setSelectedInvoice","viewInvoiceDialog","setViewInvoiceDialog","setClinicId","discount","setDiscount","percentage","discountReason","taxAmount","setTaxAmount","setPaymentMethod","dueDate","setDueDate","fetchInvoices","totalAmount","total","handleCloseDialog","handleCloseInvoiceDialog","handleDownloadInvoicePDF","invoice","_invoice$discount","_invoice$discount2","invoiceDate","autoTable","startY","head","itemType","itemDescription","unitPrice","totalPrice","lastAutoTable","finalY","subTotal","grandTotal","invoiceColumns","handleViewInvoice","PictureAsPdfIcon","handleAddItem","selectedService","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","handleRemoveItem","handleGenerateBill","disableSelectionOnClick","invoiceObj","getMonth","padStart","getDate","itemId","imagingTypes","DentalImaging","setImages","openView","setOpenView","selectedImage","setSelectedImage","imageType","uploadDate","diagnosisNotes","imageUrl","dragActive","setDragActive","selectedFile","setSelectedFile","fetchImages","handleCloseView","img","AddPhotoAlternateIcon","handleOpenDialog","_imagingTypes$find2","onDrop","stopPropagation","dataTransfer","reader","FileReader","ev","readAsDataURL","onDragOver","onDragLeave","htmlFor","_imagingTypes$find","curlParts","units","AddInventoryItem","reorderLevel","expiryDate","clinicObj","itemData","u","EditInventoryItem","DEMO_ITEMS","DEMO_CLINICS","InventoryItem","setItems","addModalOpen","setAddModalOpen","editItem","setEditItem","Inventory2OutlinedIcon","EditIcon","menuLinks","HomePage","loadingServices","setLoadingServices","aboutUs","setAboutUs","highlights","loadingAbout","setLoadingAbout","editingHours","setEditingHours","openHoursDraft","setOpenHoursDraft","savingHours","setSavingHours","loadingMemberships","setLoadingMemberships","staffs","setStaffs","loadingDoctors","setLoadingDoctors","loadingStaffs","setLoadingStaffs","openPatientModal","setOpenPatientModal","openAppointmentModal","setOpenAppointmentModal","patientForm","setPatientForm","savedPatient","setSavedPatient","appointmentForm","setAppointmentForm","doctorsList","setDoctorsList","clinicsList","setClinicsList","isArray","fetchAboutUs","fetchClinicSettings","fetchStaffs","handleClose","handleMenuClick","el","scrollIntoView","behavior","handleBookVisit","handleContactScroll","contactSection","AppBar","flexGrow","textTransform","pt","Container","order","_item$membershipPlan","_item$validityPeriod","_item$validityPeriod2","zIndex","_doc$fullName","specialty","_staff$fullName","docItems","DashboardIcon","BarChartIcon","FlashOnIcon","ListAltIcon","MonetizationOnIcon","SearchIcon","SettingsIcon","ChatIcon","moduleItems","desc","DocumentationHelp","openModule","setOpenModule","moduleContent","setModuleContent","moduleDocs","HelpOutlineIcon","mod","button","ListItemIcon","Register","PersonAddAltIcon","ok","goToLogin","AboutUsPage","setDescription","setHighlights","about","updatedHighlights","Content","Route","exact","path","Dashbord","Consultation","TestLab","MembershipDetails","OperationDetails","TreatmentPlan","ProcedureDetails","StaffProfile","MarketingCampaign","LoyaltyProgram","ClinicInfo","Footer","SendMessage","sent","setSent","BookAppointment","loadingSelects","setLoadingSelects","patientsRes","doctorsRes","clinicsRes","all","Root","setConnected","num","BrowserRouter","Switch","demo","endpointToFile","defaults","interceptors","request","use","config","urlPath","origin","endpoint","ep","adapter","statusText","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","mode","main","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.1c3e2450.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default class CurrentUser {\r\n    static USER_NAME = \"Admin\"\r\n    static CONNECTED_USER = false\r\n    static HTTP_ERR_MESSAGE = \"\"\r\n    static USER_DETAIL = {}\r\n    static DELTE_MSG = 'Are you sure you want to delete ?'\r\n    static SETTINGS_UPDATE_MSG = \"Your settings has been updated.\"\r\n    static CREATE_MSG = \"New item has been created.\"\r\n    static UPDATE_MSG = \"item has been updated.\"\r\n    static REMOVE_MSG = \"item has been removed.\"\r\n    static ERR_MSG = 'An Error Occurred Please Try Again Later'\r\n    static DEMO_MODE = false\r\n    static DEMO_MODE = true\r\n}","const BASE_URL = ''\r\nexport default BASE_URL\r\n\r\n","import axios from \"axios\";\r\nimport BASE_URL from '../../main/urls/urls'\r\nexport default axios.create({\r\n    baseURL: BASE_URL,\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllMessage = () => {\r\n    return http.get(`${BASE_URL}/messages`)\r\n}\r\n\r\nconst getCount = () => {\r\n    return http.get(`${BASE_URL}/messages/count`)\r\n}\r\nconst createMessage = data => {\r\n    return http.post(`${BASE_URL}/messages`, data);\r\n};\r\n\r\nconst editMessage = (id, data) => {\r\n    return http.put(`${BASE_URL}/messages/${id}`, data);\r\n};\r\n\r\nconst removeMessage = id => {\r\n    return http.delete(`${BASE_URL}/messages/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllMessage,\r\n    createMessage,\r\n    editMessage,\r\n    removeMessage,\r\n    getCount\r\n};","\r\nexport default function showMessage(title, message, type) {\r\n    const myNotification = window.createNotification({\r\n        title: title,\r\n        message: message,\r\n        closeOnClick: true,\r\n        displayCloseButton: false,\r\n        positionClass: 'nfc-top-right',\r\n        onclick: false,\r\n        theme: type\r\n    });\r\n    myNotification({\r\n        title: title,\r\n        message: message,\r\n        closeOnClick: true,\r\n        displayCloseButton: false,\r\n        positionClass: 'nfc-top-right',\r\n        onclick: false,\r\n        theme: type\r\n    });\r\n}\r\n\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllAppointement = () => {\r\n    return http.get(`${BASE_URL}/appointments`)\r\n}\r\nconst createAppointement = data => {\r\n    return http.post(`${BASE_URL}/appointments`, data);\r\n};\r\n\r\nconst editAppointement = (id, data) => {\r\n    return http.put(`${BASE_URL}/appointments/${id}`, data);\r\n};\r\n\r\nconst removeAppointement = id => {\r\n    return http.delete(`${BASE_URL}/appointments/${id}`);\r\n};\r\nconst getCount = () => {\r\n    return http.get(`${BASE_URL}/appointments/count`)\r\n}\r\n\r\nexport default {\r\n    getAllAppointement,\r\n    createAppointement,\r\n    editAppointement,\r\n    getCount,\r\n    removeAppointement\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Header.css';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport CurrentUser from '../../main/config/user';\r\nimport messageHTTPService from '../../main/services/messageHTTPService'\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport { LinearProgress, Switch, MenuItem, Menu, IconButton, Avatar, Tooltip, Badge, Chip, Select } from '@mui/material';\r\nimport appointementHTTPService from '../../main/services/appointementHTTPService';\r\nimport { FaPlus, FaBell, FaQuestionCircle, FaBars, FaCircle, FaUserCircle, FaCog, FaPowerOff, FaUser, FaGlobe, FaTooth } from 'react-icons/fa';\r\nimport axios from 'axios'; // Add this if not already imported\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst languages = [\r\n  { code: 'en', label: 'English' },\r\n  { code: 'fr', label: 'Français' },\r\n  { code: 'ar', label: 'العربية' }\r\n];\r\n\r\n// Get username from localStorage user object and capitalize first character\r\nlet username = '';\r\ntry {\r\n  const userObj = JSON.parse(localStorage.getItem('user'));\r\n  if (userObj && userObj.username) {\r\n    username = userObj.username.charAt(0).toUpperCase() + userObj.username.slice(1);\r\n  }\r\n} catch {\r\n  username = '';\r\n}\r\n\r\n// Example usage in header (e.g., greeting or profile menu)\r\nconst user = {\r\n  name: username || \"User\",\r\n  role: \"Administrator\",\r\n  avatar: \"images/admin.png\"\r\n};\r\n\r\nconst Header = ({ connected, handleClick }) => {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const [loading, setLoading] = useState(false);\r\n    const [messsage, setmessage] = useState([]);\r\n    const [appointements, setAppointements] = useState([]);\r\n    const initialState = { input: '' };\r\n    const [activity, setActivity] = useState(initialState);\r\n\r\n    // Theme switcher\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const handleThemeChange = () => setDarkMode((prev) => !prev);\r\n\r\n    // Language selector\r\n    const [lang, setLang] = useState('en');\r\n    const handleLangChange = (e) => setLang(e.target.value);\r\n\r\n    // Hamburger menu for mobile\r\n    const [navOpen, setNavOpen] = useState(true);\r\n    const toggleNav = () => setNavOpen(open => !open);\r\n\r\n    // User dropdown\r\n    const [userAnchorEl, setUserAnchorEl] = useState(null);\r\n    const handleUserMenu = (event) => setUserAnchorEl(event.currentTarget);\r\n    const handleUserClose = () => setUserAnchorEl(null);\r\n\r\n    // Quick Add\r\n    const [quickAddAnchorEl, setQuickAddAnchorEl] = useState(null);\r\n    const handleQuickAdd = (event) => setQuickAddAnchorEl(event.currentTarget);\r\n    const handleQuickAddClose = () => setQuickAddAnchorEl(null);\r\n\r\n    // System status\r\n    const [systemStatus, setSystemStatus] = useState('online'); // online, warning, offline\r\n\r\n    // Customizable shortcuts (example)\r\n    const shortcuts = [];\r\n\r\n    // Breadcrumbs\r\n    const breadcrumbs = location.pathname.split('/').filter(Boolean);\r\n\r\n    // Add state for appointments menu anchor\r\n    const [appointmentsAnchorEl, setAppointmentsAnchorEl] = useState(null);\r\n    const [clinicSettings, setClinicSettings] = useState({ system: { appName: 'App' } });\r\n\r\n    const logout = () => {\r\n        handleClick(false)\r\n        localStorage.clear()\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (CurrentUser.DEMO_MODE) {\r\n            fetch('/demo/clinicssettings.json')\r\n                .then(res => res.json())\r\n                .then(data => setClinicSettings(data))\r\n                .catch(() => setClinicSettings({ system: { appName: 'App' } }));\r\n        } else {\r\n            axios.get(`${BASE_URL}/clinicsettings`)\r\n                .then(res => setClinicSettings(res.data))\r\n                .catch(() => setClinicSettings({ system: { appName: 'App' } }));\r\n        }\r\n        // LoadJS()\r\n        //  getAllExpenses()\r\n    }, []);\r\n\r\n    const print = () => {\r\n        history.replace(\"/result/\" + activity.input)\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setActivity({ ...activity, [name]: value });\r\n    };\r\n\r\n    const search = (event) => {\r\n        if (event.keyCode === 13) {\r\n            history.replace(\"/result/\" + activity.input)\r\n        }\r\n    }\r\n\r\n    const getAllExpenses = () => {\r\n        setLoading(true);\r\n        messageHTTPService.getAllMessage()\r\n            .then(response => {\r\n                setmessage(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(e => {\r\n                showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n            });\r\n    };\r\n\r\n    const getAllAppointements = () => {\r\n        setLoading(true);\r\n\r\n        if (CurrentUser.DEMO_MODE) {\r\n            fetch('/demo/appointments.json')\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    setAppointements(data);\r\n                    setLoading(false);\r\n                })\r\n                .catch(e => {\r\n                    showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n                    setLoading(false);\r\n                });\r\n        } else {\r\n            appointementHTTPService.getAllAppointement()\r\n                .then(response => {\r\n                    setAppointements(response.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch(e => {\r\n                    showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleAppointmentsClick = (event) => {\r\n        setAppointmentsAnchorEl(event.currentTarget);\r\n        getAllAppointements(); // Fetch appointments when opening\r\n    };\r\n    const handleAppointmentsClose = () => setAppointmentsAnchorEl(null);\r\n\r\n    return (\r\n        <div id=\"right-panel\" className={`right-panel${darkMode ? ' dark-mode' : ''}`} style={{ display: (connected ? 'block' : 'none') }}>\r\n            <header id=\"header\" className=\"header\">\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-between',\r\n                        width: '100%',\r\n                        flexWrap: 'nowrap',\r\n                        padding: '0 16px',\r\n                        minHeight: 64,\r\n                        boxSizing: 'border-box'\r\n                    }}\r\n                >\r\n                    {/* Left: App Name instead of Logo */}\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <span className=\"navbar-brand\" style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            fontWeight: 700,\r\n                            fontSize: 28,\r\n                            color: '#1976d2',\r\n                            letterSpacing: 1,\r\n                            fontFamily: 'inherit'\r\n                        }}>\r\n                            <FaTooth style={{ fontSize: 32, marginRight: 10, color: '#1976d2' }} />\r\n                            {clinicSettings?.system?.appName || 'App'}\r\n                        </span>\r\n                        {/* Remove logo images */}\r\n                        {/* <a className=\"navbar-brand\"><img src=\"images/logo.png\" alt=\"Logo\" /></a>\r\n                        <a className=\"navbar-brand hidden\"><img src=\"images/logo2.png\" alt=\"Logo\" /></a> */}\r\n                        <IconButton onClick={toggleNav} sx={{ ml: 1, display: { md: 'none' } }}>\r\n                            <FaBars />\r\n                        </IconButton>\r\n                    </div>\r\n                    {/* Breadcrumb Navigation */}\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        flex: 1,\r\n                        marginLeft: 16,\r\n                        marginRight: 16,\r\n                        minWidth: 0,\r\n                        overflow: 'hidden'\r\n                    }}>\r\n                        <FaGlobe style={{ marginRight: 8, color: '#1976d2', flexShrink: 0 }} />\r\n                        <nav aria-label=\"breadcrumb\" style={{ width: '100%', overflow: 'hidden' }}>\r\n                            <ol className=\"breadcrumb\" style={{\r\n                                margin: 0,\r\n                                background: 'none',\r\n                                padding: 0,\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                width: '100%',\r\n                                whiteSpace: 'nowrap',\r\n                                overflowX: 'auto'\r\n                            }}>\r\n                                <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                                {breadcrumbs.map((crumb, idx) => (\r\n                                    <li key={idx} className=\"breadcrumb-item\">\r\n                                        <Link to={`/${breadcrumbs.slice(0, idx + 1).join('/')}`}>{crumb.charAt(0).toUpperCase() + crumb.slice(1)}</Link>\r\n                                    </li>\r\n                                ))}\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n                    {/* Right: All header actions */}\r\n                    <div className=\"header-menu\" style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 8,\r\n                        flexShrink: 0\r\n                    }}>\r\n                        {/* Remove the dark mode Switch */}\r\n                        {/* <Tooltip title=\"Toggle light/dark mode\">\r\n                            <Switch checked={darkMode} onChange={handleThemeChange} color=\"default\" />\r\n                        </Tooltip> */}\r\n                        <Select\r\n                            value={lang}\r\n                            onChange={handleLangChange}\r\n                            size=\"small\"\r\n                            sx={{ minWidth: 90, fontSize: 14, background: '#fff' }}\r\n                        >\r\n                            {/* Only English enabled, others disabled */}\r\n                            <MenuItem key=\"en\" value=\"en\">English</MenuItem>\r\n                            <MenuItem key=\"fr\" value=\"fr\" disabled>Français</MenuItem>\r\n                            <MenuItem key=\"ar\" value=\"ar\" disabled>العربية</MenuItem>\r\n                        </Select>\r\n                        <div className=\"form-inline\" style={{ marginRight: 0 }}>\r\n                            <form className=\"search-form\" onSubmit={e => { e.preventDefault(); print(); }}>\r\n                                <input\r\n                                    onChange={handleInputChange}\r\n                                    name=\"input\"\r\n                                    value={activity.input}\r\n                                    onKeyDown={search}\r\n                                    className=\"form-control mr-sm-2\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Global Search...\"\r\n                                    aria-label=\"Search\"\r\n                                    style={{ minWidth: 140, maxWidth: 180 }}\r\n                                />\r\n                                <button className=\"search-close\" type=\"submit\"><i className=\"fa fa-search\"></i></button>\r\n                            </form>\r\n                        </div>\r\n                        <Tooltip title=\"Quick Add\">\r\n                            <IconButton color=\"primary\" onClick={handleQuickAdd}>\r\n                                <FaPlus />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Menu\r\n                            anchorEl={quickAddAnchorEl}\r\n                            open={Boolean(quickAddAnchorEl)}\r\n                            onClose={handleQuickAddClose}\r\n                        >\r\n                            <MenuItem onClick={() => { handleQuickAddClose(); history.push('/appointments/add'); }}>\r\n                                Add Appointment\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => { handleQuickAddClose(); history.push('/patients/add'); }}>\r\n                                Add Patient\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => { handleQuickAddClose(); history.push('/inventory/add'); }}>\r\n                                Add Inventory Item\r\n                            </MenuItem>\r\n                        </Menu>\r\n                        <Tooltip title=\"Appointments\">\r\n                            <IconButton color=\"secondary\" onClick={handleAppointmentsClick}>\r\n                                <Badge badgeContent={appointements?.length} color=\"error\">\r\n                                    <FaBell />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Menu\r\n                            anchorEl={appointmentsAnchorEl}\r\n                            open={Boolean(appointmentsAnchorEl)}\r\n                            onClose={handleAppointmentsClose}\r\n                            PaperProps={{\r\n                                style: { minWidth: 340, maxHeight: 350, overflowY: 'auto', paddingBottom: 0 }\r\n                            }}\r\n                        >\r\n                            <MenuItem disabled>\r\n                                <strong>You have {appointements.length} Appointments</strong>\r\n                            </MenuItem>\r\n                            {loading ? (\r\n                                <MenuItem>Loading...</MenuItem>\r\n                            ) : appointements.length === 0 ? (\r\n                                <MenuItem>No appointments found.</MenuItem>\r\n                            ) : (\r\n                                appointements.map(itemm => (\r\n                                    <MenuItem\r\n                                        key={itemm.id || itemm.patient}\r\n                                        style={{\r\n                                            whiteSpace: 'normal',\r\n                                            alignItems: 'flex-start',\r\n                                            padding: '12px 8px',\r\n                                            borderBottom: '1px solid #f0f0f0',\r\n                                            background: '#f9f9f9',\r\n                                            borderRadius: 8,\r\n                                            margin: '6px 0'\r\n                                        }}\r\n                                    >\r\n                                        <div style={{ width: '100%' }}>\r\n                                            <div style={{ display: 'flex', alignItems: 'center', marginBottom: 4 }}>\r\n                                                <span style={{\r\n                                                    fontWeight: 600,\r\n                                                    fontSize: 15,\r\n                                                    color: '#1976d2',\r\n                                                    marginRight: 8\r\n                                                }}>\r\n                                                    {itemm.patient}\r\n                                                </span>\r\n                                                {itemm.status && (\r\n                                                    <span\r\n                                                        style={{\r\n                                                            background:\r\n                                                                itemm.status === 'Confirmed' ? '#e8f5e9'\r\n                                                                : itemm.status === 'Pending' ? '#fff8e1'\r\n                                                                : itemm.status === 'Cancelled' ? '#ffebee'\r\n                                                                : '#e3f2fd',\r\n                                                            color:\r\n                                                                itemm.status === 'Confirmed' ? '#388e3c'\r\n                                                                : itemm.status === 'Pending' ? '#ffa000'\r\n                                                                : itemm.status === 'Cancelled' ? '#e53935'\r\n                                                                : '#1976d2',\r\n                                                            borderRadius: 8,\r\n                                                            padding: '2px 10px',\r\n                                                            fontSize: 13,\r\n                                                            fontWeight: 600,\r\n                                                            marginLeft: 4\r\n                                                        }}\r\n                                                    >\r\n                                                        {itemm.status}\r\n                                                    </span>\r\n                                                )}\r\n                                            </div>\r\n                                            {itemm.date && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Date:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#e3f2fd',\r\n                                                        color: '#1976d2',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13,\r\n                                                        fontWeight: 500\r\n                                                    }}>\r\n                                                        {new Date(itemm.date).toLocaleString()}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.startTime && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Start:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#fffde7',\r\n                                                        color: '#fbc02d',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.startTime}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.endTime && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>End:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#e1f5fe',\r\n                                                        color: '#0288d1',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.endTime}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.doctor && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Doctor:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#ede7f6',\r\n                                                        color: '#5e35b1',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.doctor}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.type && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Type:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#f3e5f5',\r\n                                                        color: '#8e24aa',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.type}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.location && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Location:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#e0f2f1',\r\n                                                        color: '#00897b',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.location}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.phone && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Phone:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#fce4ec',\r\n                                                        color: '#ad1457',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.phone}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.reason && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Reason:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#fff3e0',\r\n                                                        color: '#ef6c00',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.reason}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.notes && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Notes:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#f3e5f5',\r\n                                                        color: '#8e24aa',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.notes}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.createdAt && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Created:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#ede7f6',\r\n                                                        color: '#5e35b1',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {new Date(itemm.createdAt).toLocaleString()}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.updatedAt && (\r\n                                                <div>\r\n                                                    <strong>Updated:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#fbe9e7',\r\n                                                        color: '#d84315',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {new Date(itemm.updatedAt).toLocaleString()}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </MenuItem>\r\n                                ))\r\n                            )}\r\n                        </Menu>\r\n                        <Tooltip title=\"Help & Support\">\r\n                            <IconButton color=\"info\" component={Link} to=\"/help\">\r\n                                <FaQuestionCircle />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <IconButton onClick={handleUserMenu} sx={{ ml: 1 }}>\r\n                            <Avatar src={user.avatar} alt={user.name} />\r\n                        </IconButton>\r\n                        <Menu\r\n                            anchorEl={userAnchorEl}\r\n                            open={Boolean(userAnchorEl)}\r\n                            onClose={handleUserClose}\r\n                        >\r\n                            <MenuItem disabled>\r\n                                <Avatar src={user.avatar} sx={{ mr: 1 }} />\r\n                                <div>\r\n                                    <div style={{ fontWeight: 600 }}>{user.name}</div>\r\n                                    <div style={{ fontSize: 13, color: '#888' }}>{user.role}</div>\r\n                                </div>\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => { handleUserClose(); history.push('/profile'); }}>\r\n                                <FaUserCircle style={{ marginRight: 8 }} /> My Profile\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => { handleUserClose(); history.push('/configuration'); }}>\r\n                                <FaCog style={{ marginRight: 8 }} /> Settings\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => { handleUserClose(); logout(); }}>\r\n                                <FaPowerOff style={{ marginRight: 8 }} /> Log Out\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    )\r\n};\r\n\r\nHeader.propTypes = {};\r\n\r\nHeader.defaultProps = {};\r\n\r\nexport default Header;\r\n","export function LoadJSFiles() {\r\n\r\n  let scripts = [\r\n    { src: \"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.1/jquery.min.js\" },\r\n\r\n    { src: \"assets/js/init.js\" },\r\n    { src: \"assets/js/main.js\" }\r\n\r\n  ]\r\n  //Append the script element on each iteration\r\n\r\n\r\n  for (let i = 0; i < scripts.length; i++) {\r\n    const node = document.createElement('script');\r\n    node.src = scripts[i].src;\r\n    node.type = 'text/javascript';\r\n    node.async = false;\r\n    node.charset = 'utf-8';\r\n    document.getElementById('root').appendChild(node);\r\n    console.log(i)\r\n  }\r\n\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Header from '../Header/Header';\r\nimport { NavLink, useLocation } from \"react-router-dom\"\r\nimport CurrentUser from '../../main/config/user';\r\nimport { LoadJSFiles } from '../init';\r\nimport messageHTTPService from '../../main/services/messageHTTPService';\r\nimport './Navigation.css'\r\n\r\n// Get username from localStorage user object and capitalize first character\r\nlet username = '';\r\ntry {\r\n  const userObj = JSON.parse(localStorage.getItem('user'));\r\n  if (userObj && userObj.username) {\r\n    username = userObj.username.charAt(0).toUpperCase() + userObj.username.slice(1);\r\n  }\r\n} catch {\r\n  username = '';\r\n}\r\n\r\n// Example user data for profile section\r\nconst user = {\r\n  name: username || \"User\",\r\n  role: \"Admin\",\r\n  avatar: \"images/admin.png\"\r\n};\r\n\r\nconst Navigation = ({ connected, darkMode }) => {\r\n  const [messages, setMessages] = useState(2);\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n  const [search, setSearch] = useState('');\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    getMessages()\r\n  }, []);\r\n\r\n  const getMessages = () => {\r\n    messageHTTPService.getCount().then(data => {\r\n      setMessages(data.data.message)\r\n    })\r\n  }\r\n\r\n  // Example dynamic menu items based on role\r\n  const menuItems = [\r\n    {\r\n      section: \"Main\",\r\n      items: [\r\n        { to: \"/dashboard\", icon: \"fa-laptop\", label: \"Dashboard\" },\r\n        { to: \"/Odontogram\", icon: \"fa-tooth\", label: \"Odontogram\" }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Consultations\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-calendar\",\r\n          label: \"Consultations\",\r\n          children: [\r\n            { to: \"/rendezvous\", label: \"Appointments\", badge: 2, icon: \"fa-calendar-check\" },\r\n            { to: \"/quick-test\", label: \"Quick tests\", icon: \"fa-vial\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Management\",\r\n      items: [\r\n        { to: \"/patient\", icon: \"fa-user\", label: \"Patients\" },\r\n        { to: \"/messages\", icon: \"fa-envelope-open\", label: \"Messages\", badge: messages }, // <-- use messages state here\r\n        { to: \"/certificate\", icon: \"fa-certificate\", label: \"Certificates\" },\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-usd\",\r\n          label: \"Finances\",\r\n          children: [\r\n            { to: \"/payment\", label: \"Payments\", icon: \"fa-credit-card\" },\r\n            { to: \"/expense\", label: \"Expenses\", icon: \"fa-money-bill\" }\r\n          ]\r\n        },\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-hotel\",\r\n          label: \"Pharmaceuticals\",\r\n          children: [\r\n            { to: \"/medicaments\", label: \"Medicaments\", icon: \"fa-pills\" },\r\n            { to: \"/medicament-manufacture\", label: \"Manufactures\", icon: \"fa-industry\" },\r\n            { to: \"/medicament-category\", label: \"Categories\", icon: \"fa-tags\" }\r\n          ]\r\n        },\r\n        { to: \"/prescription\", icon: \"fa-bars\", label: \"Prescriptions\" }\r\n      ]\r\n    },\r\n    {\r\n      section: \"CMS\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-bookmark\",\r\n          label: \"CMS\",\r\n          children: [\r\n            { to: \"/\", label: \"Web Front\", icon: \"fa-screen\" },\r\n            { to: \"/aboutus\", label: \"About Us Page\", icon: \"fa-home\" },\r\n            { to: \"/servicepage\", label: \"Service Page\", icon: \"fa-concierge-bell\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Analytics\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-area-chart\",\r\n          label: \"Analytics\",\r\n          children: [\r\n            { to: \"/patient-analytics\", label: \"Patient\", icon: \"fa-user-chart\" },\r\n            { to: \"/medicament-analytics\", label: \"Medicament\", icon: \"fa-chart-bar\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Clinic\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-medkit\",\r\n          label: \"Clinic Management\",\r\n          children: [\r\n            { to: \"/treatment-plan\", label: \"Treatment Plan\", icon: \"fa-notes-medical\" },\r\n            { to: \"/telemedicine\", label: \"Telemedicine\", icon: \"fa-video\" },\r\n            { to: \"/staff\", label: \"Staff\", icon: \"fa-users\" },\r\n            { to: \"/doctor\", label: \"Doctor\", icon: \"fa-user-md\" },\r\n            { to: \"/clinic\", label: \"Clinic\", icon: \"fa-hospital\" },\r\n            { to: \"/billing\", label: \"Billing\", icon: \"fa-file-invoice-dollar\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Diagnostics\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-stethoscope\",\r\n          label: \"Diagnostics & Treatment\",\r\n          children: [\r\n            { to: \"/procedure\", label: \"Procedure\", icon: \"fa-stethoscope\" },\r\n            { to: \"/operation\", label: \"Operation\", icon: \"fa-syringe\" },\r\n            { to: \"/diagnosis\", label: \"Diagnosis\", icon: \"fa-diagnoses\" },\r\n            { to: \"/dental-imaging\", label: \"Dental Imaging\", icon: \"fa-x-ray\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Records\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-heartbeat\",\r\n          label: \"Patient Records\",\r\n          children: [\r\n            { to: \"/dental-membership\", label: \"Dental Membership\", icon: \"fa-id-card\" },\r\n            { to: \"/insurance\", label: \"Insurance\", icon: \"fa-shield-alt\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Inventory\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-archive\",\r\n          label: \"Inventory Management\",\r\n          children: [\r\n            { to: \"/inventory-item\", label: \"Inventory Item\", icon: \"fa-boxes\" },\r\n            { to: \"/equipment-maintenance\", label: \"Equipment Maintenance\", icon: \"fa-tools\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Settings\",\r\n      items: [\r\n        { to: \"/configuration\", icon: \"fa-cogs\", label: \"Settings\" },\r\n        { to: \"/help\", icon: \"fa-question-circle\", label: \"Help\" }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  // Filter menu items by search\r\n  const filterMenu = (items) => {\r\n    if (!search) return items;\r\n    return items\r\n      .map(section => ({\r\n        ...section,\r\n        items: section.items\r\n          .map(item => {\r\n            if (item.dropdown) {\r\n              const filteredChildren = item.children.filter(child =>\r\n                child.label.toLowerCase().includes(search.toLowerCase())\r\n              );\r\n              return filteredChildren.length > 0 ? { ...item, children: filteredChildren } : null;\r\n            }\r\n            return item.label.toLowerCase().includes(search.toLowerCase()) ? item : null;\r\n          })\r\n          .filter(Boolean)\r\n      }))\r\n      .filter(section => section.items.length > 0);\r\n  };\r\n\r\n  // Keyboard navigation support (basic)\r\n  // You can enhance this for full accessibility\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Escape\") setSidebarCollapsed(false);\r\n  };\r\n\r\n  // Change icon size based on sidebarCollapsed\r\n  const iconSize = sidebarCollapsed ? 28 : 18;\r\n\r\n  return (\r\n    <aside\r\n      id=\"left-panel\"\r\n      className={`left-panel${sidebarCollapsed ? ' collapsed' : ''}${darkMode ? ' dark-mode' : ''}`}\r\n      style={{\r\n        display: (connected ? 'block' : 'none'),\r\n        width: sidebarCollapsed ? 80 : 250, // Increased collapsed width from 60 to 80\r\n        minWidth: sidebarCollapsed ? 80 : 250,\r\n        maxWidth: sidebarCollapsed ? 80 : 250,\r\n        transition: 'width 0.2s, min-width 0.2s, max-width 0.2s'\r\n      }}\r\n      tabIndex={0}\r\n      onKeyDown={handleKeyDown}\r\n    >\r\n      {/* Collapsible Sidebar Toggle */}\r\n      <div className=\"sidebar-toggle\" style={{ padding: 8, textAlign: 'right' }}>\r\n        <button\r\n          aria-label={sidebarCollapsed ? \"Expand sidebar\" : \"Collapse sidebar\"}\r\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n          style={{\r\n            background: 'none',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n            color: darkMode ? '#fff' : '#333',\r\n            fontSize: 20\r\n          }}\r\n        >\r\n          <i className={`fa ${sidebarCollapsed ? 'fa-chevron-right' : 'fa-chevron-left'}`}></i>\r\n        </button>\r\n      </div>\r\n\r\n      {/* User Profile Section */}\r\n      <div className=\"sidebar-profile\" style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: sidebarCollapsed ? 'column' : 'row',\r\n        padding: sidebarCollapsed ? '8px 0' : '8px 16px',\r\n        borderBottom: '1px solid #eee'\r\n      }}>\r\n        <img src={user.avatar} alt=\"avatar\" style={{\r\n          width: 38, height: 38, borderRadius: '50%', marginRight: sidebarCollapsed ? 0 : 10, marginBottom: sidebarCollapsed ? 6 : 0\r\n        }} />\r\n        {!sidebarCollapsed && (\r\n          <div>\r\n            <div style={{ fontWeight: 600 }}>{user.name}</div>\r\n            <div style={{ fontSize: 13, color: '#888' }}>{user.role}</div>\r\n            {/* Version info just below the role */}\r\n            <div style={{\r\n              fontSize: 12,\r\n              color: '#1976d2',\r\n              fontWeight: 500,\r\n              marginTop: 2\r\n            }}>\r\n              Version 1.1.0\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Search in Sidebar */}\r\n      <div style={{ padding: sidebarCollapsed ? '8px 0' : '8px 16px', borderBottom: '1px solid #eee' }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search menu...\"\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '6px 10px',\r\n            borderRadius: 4,\r\n            border: '1px solid #ccc',\r\n            fontSize: 14\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Main Menu */}\r\n      <nav className=\"navbar navbar-expand-sm navbar-default\" style={{ width: '100%' }}>\r\n        <div id=\"main-menu\" className=\"main-menu collapse navbar-collapse\">\r\n          <ul className=\"nav navbar-nav\" style={{ width: '100%' }}>\r\n            {filterMenu(menuItems).map(section => (\r\n              <React.Fragment key={section.section}>\r\n                {/* Section Title/Divider */}\r\n                <li className=\"nav-section-title\" style={{\r\n                  fontWeight: 700,\r\n                  fontSize: 13,\r\n                  color: '#888',\r\n                  padding: sidebarCollapsed ? '8px 0 4px 0' : '12px 16px 4px 16px',\r\n                  borderTop: '1px solid #eee'\r\n                }}>\r\n                  {!sidebarCollapsed && section.section}\r\n                </li>\r\n                {section.items.map(item =>\r\n                  item.dropdown ? (\r\n                    <li className=\"menu-item-has-children dropdown\" key={item.label}>\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\"\r\n                        tabIndex={0}\r\n                        title={item.label}\r\n                        style={{ display: 'flex', alignItems: 'center' }}\r\n                      >\r\n                        <i\r\n                          className={`menu-icon fa ${item.icon}`}\r\n                          style={{\r\n                            width: 32,\r\n                            textAlign: 'center',\r\n                            fontSize: iconSize,\r\n                            transition: 'font-size 0.2s'\r\n                          }}\r\n                        ></i>\r\n                        {!sidebarCollapsed && <span>{item.label}</span>}\r\n                        {!sidebarCollapsed && <i className=\"fa fa-caret-down\" style={{ marginLeft: 'auto', fontSize: 12 }}></i>}\r\n                      </a>\r\n                      <ul className=\"sub-menu children dropdown-menu\" style={{ left: sidebarCollapsed ? 60 : 250 }}>\r\n                        {item.children.map(child => (\r\n                          <li key={child.to}>\r\n                            <NavLink\r\n                              to={child.to}\r\n                              className={({ isActive }) => isActive ? 'activeNavLink' : ''}\r\n                              tabIndex={0}\r\n                              title={child.label}\r\n                              style={{ display: 'flex', alignItems: 'center', padding: '6px 0' }}\r\n                            >\r\n                              {!sidebarCollapsed && (\r\n                                <span style={{ marginRight: 12 }}>{child.label}</span>\r\n                              )}\r\n                              {child.badge && <span className=\"badge badge-primary\" style={{ marginLeft: 8 }}>{child.badge}</span>}\r\n                            </NavLink>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </li>\r\n                  ) : (\r\n                    <li key={item.to}>\r\n                      <NavLink\r\n                        to={item.to}\r\n                        className={({ isActive }) => isActive ? 'activeNavLink' : ''}\r\n                        tabIndex={0}\r\n                        title={item.label}\r\n                        style={{ display: 'flex', alignItems: 'center', padding: '6px 0' }}\r\n                      >\r\n                        <i\r\n                          className={`menu-icon fa ${item.icon || 'fa-circle'}`}\r\n                          style={{\r\n                            width: 32,\r\n                            textAlign: 'center',\r\n                            fontSize: iconSize,\r\n                            transition: 'font-size 0.2s',\r\n                            marginRight: !sidebarCollapsed ? 16 : 0 // <-- increased space between icon and label\r\n                          }}\r\n                        ></i>\r\n                        {!sidebarCollapsed && (\r\n                          <span style={{ marginRight: 12 }}>{item.label}</span> // <-- increased space between label and badge\r\n                        )}\r\n                        {item.badge && <span className=\"badge badge-primary\" style={{ marginLeft: 8 }}>{item.badge}</span>}\r\n                      </NavLink>\r\n                    </li>\r\n                  )\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Responsive design: hide sidebar on small screens */}\r\n      <style>\r\n        {`\r\n          @media (max-width: 768px) {\r\n            .left-panel {\r\n              position: absolute;\r\n              z-index: 2000;\r\n              height: 100vh;\r\n              left: 0;\r\n              top: 0;\r\n              background: #fff;\r\n              box-shadow: 2px 0 8px rgba(0,0,0,0.08);\r\n            }\r\n            .left-panel.collapsed {\r\n              width: 0 !important;\r\n              min-width: 0 !important;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          .left-panel.dark-mode {\r\n            background: #23272b;\r\n            color: #fff;\r\n          }\r\n          .left-panel .activeNavLink {\r\n            background: #1976d2;\r\n            color: #fff !important;\r\n            border-radius: 4px;\r\n          }\r\n          .left-panel .menu-icon {\r\n            color: #1976d2;\r\n          }\r\n          .left-panel.dark-mode .menu-icon {\r\n            color: #90caf9;\r\n          }\r\n          .left-panel .badge-primary {\r\n            background: #1976d2;\r\n            color: #fff;\r\n          }\r\n        `}\r\n      </style>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import PropTypes from 'prop-types';\r\nimport './ConfigurationContent.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Box, Tabs, Tab, Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Stack, TextField, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\n// Only keep important settings\r\nconst defaultSettings = {\r\n  system: {\r\n    appName: 'Dentic',\r\n    address: '123 Dentic St',\r\n    email: 'support@dentic.com',\r\n    showLogo: false,\r\n  },\r\n  localisation: {\r\n    language: 'en',\r\n    dateFormat: 'YYYY-MM-DD',\r\n    currency: 'USD',\r\n    currencySymbol: '$',\r\n  },\r\n  openHours: [\r\n    { day: 'Monday', hours: '08:00 - 18:00' },\r\n    { day: 'Tuesday', hours: '08:00 - 18:00' },\r\n    { day: 'Wednesday', hours: '08:00 - 18:00' },\r\n    { day: 'Thursday', hours: '08:00 - 18:00' },\r\n    { day: 'Friday', hours: '08:00 - 18:00' },\r\n    { day: 'Saturday', hours: '09:00 - 14:00' },\r\n    { day: 'Sunday', hours: 'Closed' },\r\n  ]\r\n};\r\n\r\nconst SETTINGS_FILE_KEY = 'dentic_settings_json';\r\nconst CLINIC_SETTINGS_API_URL = BASE_URL + '/clinicsettings';\r\n\r\nconst dateFormatOptions = [\r\n  { value: 'YYYY-MM-DD', label: 'YYYY-MM-DD' },\r\n  { value: 'DD-MM-YYYY', label: 'DD-MM-YYYY' },\r\n  { value: 'MM/DD/YYYY', label: 'MM/DD/YYYY' },\r\n];\r\n\r\nconst languageOptions = [\r\n  { value: 'en', label: 'English' },\r\n  { value: 'fr', label: 'French' },\r\n  { value: 'ar', label: 'Arabic' },\r\n  { value: 'es', label: 'Spanish' },\r\n];\r\n\r\nconst currencyOptions = [\r\n  { value: 'USD', label: 'USD - US Dollar' },\r\n  { value: 'EUR', label: 'EUR - Euro' },\r\n  { value: 'GBP', label: 'GBP - British Pound' },\r\n  { value: 'MAD', label: 'MAD - Moroccan Dirham' },\r\n];\r\n\r\nconst currencySymbolOptions = [\r\n  { value: '$', label: '$' },\r\n  { value: '€', label: '€' },\r\n  { value: '£', label: '£' },\r\n  { value: 'د.م.', label: 'د.م.' },\r\n];\r\n\r\nconst ConfigurationContent = () => {\r\n  const [settings, setSettings] = useState(defaultSettings);\r\n  const [tab, setTab] = useState(0);\r\n  const [editDialog, setEditDialog] = useState({ open: false, section: null });\r\n  const [loadingOpenHours, setLoadingOpenHours] = useState(false);\r\n\r\n  // Load from backend on mount\r\n  useEffect(() => {\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/clinicssettings.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data) setSettings(data);\r\n        })\r\n        .catch(() => {\r\n          const saved = localStorage.getItem(SETTINGS_FILE_KEY);\r\n          if (saved) setSettings(JSON.parse(saved));\r\n        });\r\n    } else {\r\n      axios.get(CLINIC_SETTINGS_API_URL)\r\n        .then(res => {\r\n          if (res.data) setSettings(res.data);\r\n        })\r\n        .catch(() => {\r\n          const saved = localStorage.getItem(SETTINGS_FILE_KEY);\r\n          if (saved) setSettings(JSON.parse(saved));\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  // Save to backend when user clicks Save in dialog\r\n  const handleEditSave = () => {\r\n    axios.put(CLINIC_SETTINGS_API_URL, settings)\r\n      .then(() => {\r\n        closeEdit();\r\n      })\r\n      .catch(() => {\r\n        // fallback to localStorage if backend fails\r\n        localStorage.setItem(SETTINGS_FILE_KEY, JSON.stringify(settings));\r\n        closeEdit();\r\n      });\r\n  };\r\n\r\n  const convertToYesNoValue = (value) => value ? 'Yes' : 'No';\r\n\r\n  // Restore default for a section\r\n  const restoreSection = (section) => {\r\n    setSettings(prev => ({ ...prev, [section]: defaultSettings[section] }));\r\n  };\r\n\r\n  // Dialog open/close helpers\r\n  const openEdit = (section) => setEditDialog({ open: true, section });\r\n  const closeEdit = () => setEditDialog({ open: false, section: null });\r\n\r\n  // Simple edit dialog for demonstration\r\n  const EditDialogContent = () => {\r\n    const section = editDialog.section;\r\n    const sectionSettings = settings[section] ?? {};\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value, type, checked } = e.target;\r\n      setSettings(prev => ({\r\n        ...prev,\r\n        [section]: {\r\n          ...prev[section],\r\n          [name]: type === 'checkbox' ? checked : value\r\n        }\r\n      }));\r\n    };\r\n\r\n    // For openHours, handle array of days\r\n    if (section === 'openHours') {\r\n      const handleHoursChange = (idx, value) => {\r\n        setSettings(prev => ({\r\n          ...prev,\r\n          openHours: prev.openHours.map((item, i) =>\r\n            i === idx ? { ...item, hours: value } : item\r\n          )\r\n        }));\r\n      };\r\n      return (\r\n        <Stack spacing={2} sx={{ mt: 1 }}>\r\n          {settings.openHours.map((item, idx) => (\r\n            <TextField\r\n              key={item.day}\r\n              label={item.day}\r\n              value={item.hours}\r\n              onChange={e => handleHoursChange(idx, e.target.value)}\r\n              fullWidth\r\n            />\r\n          ))}\r\n        </Stack>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Stack spacing={2} sx={{ mt: 1 }}>\r\n        {section === 'system' && (\r\n          <>\r\n            <TextField label=\"App Name\" name=\"appName\" value={sectionSettings.appName ?? ''} onChange={handleChange} fullWidth />\r\n            <TextField label=\"Address\" name=\"address\" value={sectionSettings.address ?? ''} onChange={handleChange} fullWidth />\r\n            <TextField label=\"Email\" name=\"email\" value={sectionSettings.email ?? ''} onChange={handleChange} fullWidth />\r\n            <label>\r\n              <input type=\"checkbox\" name=\"showLogo\" checked={sectionSettings.showLogo ?? false} onChange={handleChange} />\r\n              Show Logo\r\n            </label>\r\n          </>\r\n        )}\r\n        {section === 'localisation' && (\r\n          <>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Language</InputLabel>\r\n              <Select\r\n                label=\"Language\"\r\n                name=\"language\"\r\n                value={sectionSettings.language ?? ''}\r\n                onChange={handleChange}\r\n              >\r\n                {languageOptions.map(opt => (\r\n                  <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ mt: 2 }}>\r\n              <InputLabel>Date Format</InputLabel>\r\n              <Select\r\n                label=\"Date Format\"\r\n                name=\"dateFormat\"\r\n                value={sectionSettings.dateFormat ?? ''}\r\n                onChange={handleChange}\r\n              >\r\n                {dateFormatOptions.map(opt => (\r\n                  <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ mt: 2 }}>\r\n              <InputLabel>Currency</InputLabel>\r\n              <Select\r\n                label=\"Currency\"\r\n                name=\"currency\"\r\n                value={sectionSettings.currency ?? ''}\r\n                onChange={handleChange}\r\n              >\r\n                {currencyOptions.map(opt => (\r\n                  <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ mt: 2 }}>\r\n              <InputLabel>Currency Symbol</InputLabel>\r\n              <Select\r\n                label=\"Currency Symbol\"\r\n                name=\"currencySymbol\"\r\n                value={sectionSettings.currencySymbol ?? ''}\r\n                onChange={handleChange}\r\n              >\r\n                {currencySymbolOptions.map(opt => (\r\n                  <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </>\r\n        )}\r\n      </Stack>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 900, mx: 'auto', p: 2, bgcolor: '#fff', borderRadius: 2, boxShadow: 2 }}>\r\n      <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n        <Box sx={{ minWidth: 220 }}>\r\n          <Tabs\r\n            orientation=\"vertical\"\r\n            value={tab}\r\n            onChange={(_, v) => setTab(v)}\r\n            aria-label=\"Settings Tabs\"\r\n            variant=\"scrollable\"\r\n            sx={{ borderRight: 1, borderColor: 'divider' }}\r\n          >\r\n            <Tab label=\"System\" />\r\n            <Tab label=\"Localisation\" />\r\n            <Tab label=\"Open Hours\" />\r\n          </Tabs>\r\n        </Box>\r\n        <Box sx={{ flex: 1 }}>\r\n          {/* System */}\r\n          {tab === 0 && (\r\n            <Box>\r\n              <Typography variant=\"h6\">System Settings</Typography><hr />\r\n              <Typography>App Title: {settings?.system?.appName ?? ''}</Typography>\r\n              <Typography>Show logo: {convertToYesNoValue(settings?.system?.showLogo ?? false)}</Typography>\r\n              <Typography>Address: {settings?.system?.address ?? ''}</Typography>\r\n              <Typography>Email: {settings?.system?.email ?? ''}</Typography>\r\n              <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n                <Button variant=\"contained\" color=\"info\" onClick={() => openEdit('system')}>Edit</Button>\r\n                <Button variant=\"contained\" color=\"warning\" onClick={() => restoreSection('system')}>Restore Default</Button>\r\n              </Stack>\r\n            </Box>\r\n          )}\r\n          {/* Localisation */}\r\n          {tab === 1 && (\r\n            <Box>\r\n              <Typography variant=\"h6\">Localisation Settings</Typography><hr />\r\n              <Typography>Language: {settings?.localisation?.language ?? ''}</Typography>\r\n              <Typography>Date format: {settings?.localisation?.dateFormat ?? ''}</Typography>\r\n              <Typography>Currency: {settings?.localisation?.currency ?? ''}</Typography>\r\n              <Typography>Currency symbol: {settings?.localisation?.currencySymbol ?? ''}</Typography>\r\n              <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n                <Button variant=\"contained\" color=\"info\" onClick={() => openEdit('localisation')}>Edit</Button>\r\n                <Button variant=\"contained\" color=\"warning\" onClick={() => restoreSection('localisation')}>Restore Default</Button>\r\n              </Stack>\r\n            </Box>\r\n          )}\r\n          {/* Open Hours */}\r\n          {tab === 2 && (\r\n            <Box>\r\n              <Typography variant=\"h6\">Open Hours</Typography><hr />\r\n              {loadingOpenHours ? (\r\n                <Typography>Loading...</Typography>\r\n              ) : (\r\n                <Box>\r\n                  {settings.openHours && settings.openHours.map((item, idx) => (\r\n                    <Typography key={item.day}>\r\n                      <b>{item.day}:</b> {item.hours}\r\n                    </Typography>\r\n                  ))}\r\n                  <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n                    <Button variant=\"contained\" color=\"info\" onClick={() => openEdit('openHours')}>Edit</Button>\r\n                  </Stack>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Stack>\r\n\r\n      {/* Material-UI Edit Dialog */}\r\n      <Dialog open={editDialog.open} onClose={closeEdit} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Edit Settings</DialogTitle>\r\n        <DialogContent>\r\n          <EditDialogContent />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEditSave} color=\"primary\" variant=\"contained\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={closeEdit} color=\"secondary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  )\r\n};\r\n\r\nConfigurationContent.propTypes = {};\r\n\r\nConfigurationContent.defaultProps = {};\r\n\r\nexport default ConfigurationContent\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Configuration.css';\r\nimport ConfigurationContent from '../ConfigurationContent/ConfigurationContent';\r\n\r\nconst Configuration = () => (\r\n  <div class=\"container\">\r\n    <ConfigurationContent />\r\n  </div>\r\n\r\n);\r\n\r\nConfiguration.propTypes = {};\r\n\r\nConfiguration.defaultProps = {};\r\n\r\nexport default Configuration;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Odontogram.css';\r\nimport axios from 'axios';\r\nimport { Box, Button, Dialog, DialogTitle, DialogContent, DialogActions, Typography, TextField, MenuItem, Stack } from '@mui/material';\r\n\r\nconst TOOTH_STATUSES = ['healthy', 'decayed', 'missing', 'treated'];\r\nconst TOOTH_SURFACES = ['mesial', 'distal', 'occlusal', 'buccal', 'lingual'];\r\n\r\nconst getInitialTeeth = () =>\r\n  Array.from({ length: 32 }, (_, i) => ({\r\n    id: i + 1,\r\n    status: 'healthy',\r\n    surfaces: {},\r\n    notes: '',\r\n    images: [],\r\n    history: [],\r\n    procedure: '',\r\n    operation: '',\r\n    diagnosis: ''\r\n  }));\r\n\r\nconst Odontogram = ({ patientId }) => {\r\n  const [teeth, setTeeth] = useState(getInitialTeeth());\r\n  const [selectedTooth, setSelectedTooth] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // Data for selects\r\n  const [procedures, setProcedures] = useState([]);\r\n  const [operations, setOperations] = useState([]);\r\n  const [diagnosis, setDiagnosis] = useState([]);\r\n\r\n  // Fetch select options\r\n  useEffect(() => {\r\n    axios.get('/procedures').then(res => setProcedures(res.data));\r\n    axios.get('/operations').then(res => setOperations(res.data));\r\n    axios.get('/diagnosis').then(res => setDiagnosis(res.data));\r\n  }, []);\r\n\r\n  // Load from localStorage for patient-specific odontogram\r\n  useEffect(() => {\r\n    if (patientId) {\r\n      const saved = localStorage.getItem(`odontogram_${patientId}`);\r\n      if (saved) setTeeth(JSON.parse(saved));\r\n    }\r\n  }, [patientId]);\r\n\r\n  // Save to localStorage on change\r\n  useEffect(() => {\r\n    if (patientId) {\r\n      localStorage.setItem(`odontogram_${patientId}`, JSON.stringify(teeth));\r\n    }\r\n  }, [teeth, patientId]);\r\n\r\n  // Cycle tooth status on click\r\n  const handleToothClick = (id) => {\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === id\r\n          ? {\r\n              ...tooth,\r\n              status:\r\n                TOOTH_STATUSES[\r\n                  (TOOTH_STATUSES.indexOf(tooth.status) + 1) %\r\n                    TOOTH_STATUSES.length\r\n                ],\r\n              history: [\r\n                ...tooth.history,\r\n                {\r\n                  date: new Date().toISOString(),\r\n                  status: tooth.status,\r\n                },\r\n              ],\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n  };\r\n\r\n  // Open modal for tooth details\r\n  const handleToothDetails = (tooth) => {\r\n    setSelectedTooth(tooth);\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Update notes, surfaces, images, selects\r\n  const handleModalChange = (field, value) => {\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? { ...tooth, [field]: value }\r\n          : tooth\r\n      )\r\n    );\r\n    setSelectedTooth({ ...selectedTooth, [field]: value });\r\n\r\n    // Remove \"Selected:\" from value if present (for select boxes)\r\n    if (typeof value === 'string' && value.startsWith('Selected:')) {\r\n      const cleanValue = value.replace(/^Selected:\\s*/, '');\r\n      setTeeth((prev) =>\r\n        prev.map((tooth) =>\r\n          tooth.id === selectedTooth.id\r\n            ? { ...tooth, [field]: cleanValue }\r\n            : tooth\r\n        )\r\n      );\r\n      setSelectedTooth({ ...selectedTooth, [field]: cleanValue });\r\n    }\r\n  };\r\n\r\n  // Surface selection\r\n  const handleSurfaceToggle = (surface) => {\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? {\r\n              ...tooth,\r\n              surfaces: {\r\n                ...tooth.surfaces,\r\n                [surface]: !tooth.surfaces[surface],\r\n              },\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n    setSelectedTooth({\r\n      ...selectedTooth,\r\n      surfaces: {\r\n        ...selectedTooth.surfaces,\r\n        [surface]: !selectedTooth.surfaces[surface],\r\n      },\r\n    });\r\n  };\r\n\r\n  // Image upload\r\n  const handleImageUpload = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? {\r\n              ...tooth,\r\n              images: [\r\n                ...tooth.images,\r\n                ...files.map((file) => URL.createObjectURL(file)),\r\n              ],\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n    setSelectedTooth({\r\n      ...selectedTooth,\r\n      images: [\r\n        ...selectedTooth.images,\r\n        ...files.map((file) => URL.createObjectURL(file)),\r\n      ],\r\n    });\r\n  };\r\n\r\n  // Export odontogram as image\r\n  const handleExport = () => {\r\n    const odontogramEl = document.querySelector('.odontogram');\r\n    if (!odontogramEl) return;\r\n    import('html2canvas').then((html2canvas) => {\r\n      html2canvas.default(odontogramEl).then((canvas) => {\r\n        const link = document.createElement('a');\r\n        link.download = 'odontogram.png';\r\n        link.href = canvas.toDataURL();\r\n        link.click();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box className=\"odontogram\">\r\n        {teeth.map((tooth) => (\r\n          <div\r\n            key={tooth.id}\r\n            className={`tooth ${tooth.status}`}\r\n            title={`Tooth ${tooth.id}: ${tooth.status}`}\r\n            onClick={() => handleToothClick(tooth.id)}\r\n            onDoubleClick={() => handleToothDetails(tooth)}\r\n          >\r\n            {tooth.id}\r\n            <span className=\"surfaces\">\r\n              {TOOTH_SURFACES.map(\r\n                (surface) =>\r\n                  tooth.surfaces[surface] && (\r\n                    <span key={surface} className={`surface ${surface}`}>\r\n                      {surface[0].toUpperCase()}\r\n                    </span>\r\n                  )\r\n              )}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </Box>\r\n      <Button variant=\"contained\" onClick={handleExport} sx={{ mt: 2 }}>\r\n        Export Odontogram\r\n      </Button>\r\n      <Dialog open={showModal && !!selectedTooth} onClose={() => setShowModal(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Tooth {selectedTooth?.id} Details</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Typography><strong>Status:</strong> {selectedTooth?.status}</Typography>\r\n            <Box>\r\n              <strong>Surfaces:</strong>\r\n              <Stack direction=\"row\" spacing={1}>\r\n                {TOOTH_SURFACES.map((surface) => (\r\n                  <label key={surface}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={!!selectedTooth?.surfaces[surface]}\r\n                      onChange={() => handleSurfaceToggle(surface)}\r\n                    />\r\n                    {surface}\r\n                  </label>\r\n                ))}\r\n              </Stack>\r\n            </Box>\r\n            <TextField\r\n              label=\"Notes\"\r\n              value={selectedTooth?.notes || ''}\r\n              onChange={(e) => handleModalChange('notes', e.target.value)}\r\n              multiline\r\n              rows={2}\r\n              fullWidth\r\n            />\r\n            <Box>\r\n              <strong>Images:</strong>\r\n              <input\r\n                type=\"file\"\r\n                multiple\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n              />\r\n              <Box className=\"images\" sx={{ mt: 1 }}>\r\n                {selectedTooth?.images.map((img, idx) => (\r\n                  <img key={idx} src={img} alt={`Tooth ${selectedTooth?.id}`} width={50} />\r\n                ))}\r\n              </Box>\r\n            </Box>\r\n            {/* Select Procedure, Operation, Diagnosis */}\r\n            <TextField\r\n              select\r\n              label=\"Procedure\"\r\n              value={selectedTooth?.procedure || ''}\r\n              onChange={e => handleModalChange('procedure', e.target.value)}\r\n              fullWidth\r\n            >\r\n              {procedures.map((proc) => (\r\n                <MenuItem key={proc.id || proc.name} value={proc.id || proc.name}>\r\n                  {proc.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              select\r\n              label=\"Operation\"\r\n              value={selectedTooth?.operation || ''}\r\n              onChange={e => handleModalChange('operation', e.target.value)}\r\n              fullWidth\r\n            >\r\n              {operations.map((op) => (\r\n                <MenuItem key={op.id || op.name} value={op.id || op.name}>\r\n                  {op.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              select\r\n              label=\"Diagnosis\"\r\n              value={selectedTooth?.diagnosis || ''}\r\n              onChange={e => handleModalChange('diagnosis', e.target.value)}\r\n              fullWidth\r\n            >\r\n              {diagnosis.map((diag) => (\r\n                <MenuItem key={diag.id || diag.name} value={diag.id || diag.name}>\r\n                  {diag.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            {/* Save button below select boxes */}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              sx={{ mt: 2, minWidth: 120 }}\r\n              fullWidth\r\n              onClick={() => setShowModal(false)}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Box>\r\n              <strong>History:</strong>\r\n              <ul>\r\n                {selectedTooth?.history.map((h, idx) => (\r\n                  <li key={idx}>\r\n                    {h.date}: {h.status}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </Box>\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowModal(false)} color=\"secondary\">Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Odontogram;\r\n","export const chartBarOption = {\r\n    indexAxis: 'y',\r\n    elements: {\r\n        bar: {\r\n            borderWidth: 2,\r\n        },\r\n    },\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'right',\r\n        },\r\n        title: {\r\n            display: false,\r\n            text: '',\r\n        },\r\n    },\r\n};\r\nconst labels3 = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\nexport const intialChartBarData = {\r\n    labels3,\r\n    datasets: [\r\n        {\r\n            label: 'Dataset 1',\r\n            data: [1, 3, 4, 5, 11, 3, 2],\r\n            borderColor: '#ffa400',\r\n            backgroundColor: '#ffa400',\r\n        }\r\n\r\n    ],\r\n}","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllExpense = () => {\r\n    return http.get(`${BASE_URL}/expenses`)\r\n}\r\nconst createExpense = data => {\r\n    return http.post(`${BASE_URL}/expenses`, data);\r\n};\r\n\r\nconst editExpense = (id, data) => {\r\n    return http.put(`${BASE_URL}/expenses/${id}`, data);\r\n};\r\n\r\nconst removeExpense = id => {\r\n    return http.delete(`${BASE_URL}/expense/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllExpense,\r\n    createExpense,\r\n    editExpense,\r\n    removeExpense\r\n};","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllCertificate = () => {\r\n    return http.get(`${BASE_URL}/certificates`)\r\n}\r\nconst createCertificate = data => {\r\n    return http.post(`${BASE_URL}/certificates`, data);\r\n};\r\n\r\nconst editCertificate = (id, data) => {\r\n    return http.put(`${BASE_URL}/certificates/${id}`, data);\r\n};\r\n\r\nconst removeCertificate = id => {\r\n    return http.delete(`${BASE_URL}/certificates/${id}`);\r\n};\r\n\r\nconst removeAllCertificates = id => {\r\n    return http.delete(`${BASE_URL}/certificates`);\r\n};\r\n\r\n\r\nconst getCount = () => {\r\n    return http.get(`${BASE_URL}/certificates/count`)\r\n}\r\n\r\n\r\nexport default {\r\n    getAllCertificate,\r\n    createCertificate,\r\n    editCertificate,\r\n    removeCertificate,\r\n    getCount,\r\n    removeAllCertificates\r\n};","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllMedicament = () => {\r\n    return http.get(`${BASE_URL}/medicaments`)\r\n}\r\n\r\nconst getMedicamentByDate = () => {\r\n    return http.get(`${BASE_URL}/medicaments/analytics`)\r\n}\r\nconst createMedicament = data => {\r\n    return http.post(`${BASE_URL}/medicaments`, data);\r\n};\r\n\r\nconst editMedicament = (id, data) => {\r\n    return http.put(`${BASE_URL}/medicaments/${id}`, data);\r\n};\r\n\r\nconst removeMedicament = id => {\r\n    return http.delete(`${BASE_URL}/medicaments/${id}`);\r\n};\r\nconst getCount = () => {\r\n    return http.get(`${BASE_URL}/medicaments/count`)\r\n}\r\nexport default {\r\n    getAllMedicament,\r\n    createMedicament,\r\n    editMedicament,\r\n    getCount,\r\n    getMedicamentByDate,\r\n    removeMedicament\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './DashBoard.css';\r\nimport {\r\n  Bar, Pie, Doughnut, Line, PolarArea, Radar, Scatter, Bubble\r\n} from 'react-chartjs-2';\r\nimport Odontogram from '../Odontogram/Odontogram';\r\n\r\n//import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  BarElement\r\n} from 'chart.js';\r\nimport { chartBarOption, intialChartBarData } from '../../main/config/chart.bar';\r\nimport expenseHTTPService from '../../main/services/expenseHTTPService';\r\n\r\n\r\nimport showMessage from '../../libraries/messages/messages'\r\nimport appointementHTTPService from '../../main/services/appointementHTTPService';\r\nimport certificateHTTPService from '../../main/services/certificateHTTPService';\r\nimport medicamentHTTPService from '../../main/services/medicamentHTTPService';\r\nimport { Link } from 'react-router-dom';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport CurrentUser from '../../main/config/user'; // Make sure this import exists or adjust as needed\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend, ArcElement, BarElement\r\n);\r\n\r\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\n\r\n\r\nexport const data3 = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: [3, 5, 6, 4, 2, 7, 8],\r\n      borderColor: 'rgba(255, 99, 132, 0.5)',\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n    }\r\n  ],\r\n};\r\n\r\n\r\nconst labels3 = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\n\r\n\r\n\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: 'Chart.js Line Chart',\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\nexport const data2 = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: [1, 3, 4, 5, 11, 3, 2],\r\n      borderColor: 'rgba(255, 99, 132, 0.5)',\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n    }\r\n\r\n  ],\r\n};\r\n\r\nexport const data = {\r\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n};\r\n\r\n// Example chart data for demonstration (replace with real API data as needed)\r\nconst chartData = {\r\n  bar: { labels: ['A', 'B', 'C', 'D'], datasets: [{ label: 'Bar', data: [12, 19, 3, 5], backgroundColor: 'rgba(53, 162, 235, 0.5)' }] },\r\n  pie: { labels: ['A', 'B', 'C', 'D'], datasets: [{ label: 'Pie', data: [12, 19, 3, 5], backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f'] }] },\r\n  doughnut: { labels: ['A', 'B', 'C', 'D'], datasets: [{ label: 'Doughnut', data: [12, 19, 3, 5], backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56'] }] },\r\n  line: { labels: ['Jan', 'Feb', 'Mar', 'Apr'], datasets: [{ label: 'Line', data: [3, 5, 6, 4], borderColor: '#1976d2', backgroundColor: 'rgba(25, 118, 210, 0.2)', fill: true }] },\r\n  polar: { labels: ['A', 'B', 'C', 'D'], datasets: [{ label: 'Polar', data: [12, 19, 3, 5], backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f'] }] },\r\n  radar: { labels: ['A', 'B', 'C', 'D'], datasets: [{ label: 'Radar', data: [12, 19, 3, 5], backgroundColor: 'rgba(255,99,132,0.2)', borderColor: 'rgba(255,99,132,1)' }] },\r\n  scatter: { datasets: [{ label: 'Scatter', data: [{ x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 1 }], backgroundColor: 'rgba(53, 162, 235, 0.5)' }] },\r\n  bubble: { datasets: [{ label: 'Bubble', data: [{ x: 1, y: 2, r: 10 }, { x: 2, y: 3, r: 15 }, { x: 3, y: 1, r: 8 }], backgroundColor: 'rgba(255, 206, 86, 0.5)' }] },\r\n  bar2: { labels: ['X', 'Y', 'Z', 'W'], datasets: [{ label: 'Bar2', data: [7, 11, 5, 9], backgroundColor: 'rgba(255, 99, 132, 0.5)' }] },\r\n  pie2: { labels: ['X', 'Y', 'Z', 'W'], datasets: [{ label: 'Pie2', data: [7, 11, 5, 9], backgroundColor: ['#0288d1', '#7b1fa2', '#fbc02d', '#388e3c'] }] },\r\n  doughnut2: { labels: ['X', 'Y', 'Z', 'W'], datasets: [{ label: 'Doughnut2', data: [7, 11, 5, 9], backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56'] }] },\r\n  line2: { labels: ['May', 'Jun', 'Jul', 'Aug'], datasets: [{ label: 'Line2', data: [8, 6, 7, 5], borderColor: '#d32f2f', backgroundColor: 'rgba(211, 47, 47, 0.2)', fill: true }] },\r\n  polar2: { labels: ['X', 'Y', 'Z', 'W'], datasets: [{ label: 'Polar2', data: [7, 11, 5, 9], backgroundColor: ['#0288d1', '#7b1fa2', '#fbc02d', '#388e3c'] }] },\r\n  radar2: { labels: ['X', 'Y', 'Z', 'W'], datasets: [{ label: 'Radar2', data: [7, 11, 5, 9], backgroundColor: 'rgba(54, 162, 235, 0.2)', borderColor: 'rgba(54, 162, 235, 1)' }] },\r\n  scatter2: { datasets: [{ label: 'Scatter2', data: [{ x: 2, y: 4 }, { x: 3, y: 2 }, { x: 4, y: 5 }], backgroundColor: 'rgba(255, 99, 132, 0.5)' }] },\r\n  bubble2: { datasets: [{ label: 'Bubble2', data: [{ x: 2, y: 4, r: 12 }, { x: 3, y: 2, r: 10 }, { x: 4, y: 5, r: 14 }], backgroundColor: 'rgba(54, 162, 235, 0.5)' }] },\r\n  bar3: { labels: ['M', 'N', 'O', 'P'], datasets: [{ label: 'Bar3', data: [10, 8, 12, 6], backgroundColor: 'rgba(75, 192, 192, 0.5)' }] },\r\n  pie3: { labels: ['M', 'N', 'O', 'P'], datasets: [{ label: 'Pie3', data: [10, 8, 12, 6], backgroundColor: ['#75cdd9', '#fbc02d', '#d32f2f', '#388e3c'] }] },\r\n  doughnut3: { labels: ['M', 'N', 'O', 'P'], datasets: [{ label: 'Doughnut3', data: [10, 8, 12, 6], backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56'] }] },\r\n  line3: { labels: ['Sep', 'Oct', 'Nov', 'Dec'], datasets: [{ label: 'Line3', data: [5, 9, 7, 11], borderColor: '#388e3c', backgroundColor: 'rgba(56, 142, 60, 0.2)', fill: true }] },\r\n};\r\n\r\n// Add chart data for each model (replace with real API data if available)\r\nconst chartList = [\r\n  { type: Bar, data: chartData.bar, title: 'Patients by Month' },\r\n  { type: Pie, data: chartData.pie, title: 'Patients by Gender' },\r\n  { type: Doughnut, data: chartData.doughnut, title: 'Medicaments by Category' },\r\n  { type: Line, data: chartData.line, title: 'Medicaments Added Over Time' },\r\n  { type: PolarArea, data: chartData.polar, title: 'Appointments by Status' },\r\n  { type: Radar, data: chartData.radar, title: 'TestLab Results Distribution' },\r\n  { type: Scatter, data: chartData.scatter, title: 'Expenses: Amount vs Date' },\r\n  { type: Bubble, data: chartData.bubble, title: 'Doctors by Specialty' },\r\n  { type: Bar, data: chartData.bar2, title: 'Staff by Department' },\r\n  { type: Pie, data: chartData.pie2, title: 'Clinics by City' },\r\n  { type: Doughnut, data: chartData.doughnut2, title: 'Membership Types' },\r\n  { type: Line, data: chartData.line2, title: 'Insurance Claims Over Time' },\r\n  { type: PolarArea, data: chartData.polar2, title: 'Expenses by Category' },\r\n  { type: Radar, data: chartData.radar2, title: 'Doctor Ratings' },\r\n  { type: Scatter, data: chartData.scatter2, title: 'Appointments: Duration vs Satisfaction' },\r\n  { type: Bubble, data: chartData.bubble2, title: 'Staff Attendance' },\r\n  { type: Bar, data: chartData.bar3, title: 'Clinic Revenue' },\r\n  { type: Pie, data: chartData.pie3, title: 'Insurance Types' },\r\n  { type: Doughnut, data: chartData.doughnut3, title: 'TestLab Types' },\r\n  { type: Line, data: chartData.line3, title: 'Membership Growth' },\r\n];\r\n\r\nconst DashBoard = () => {\r\n  const [expenseChart, setExpenseChart] = useState(intialChartBarData);\r\n  const [incomeChart, setIncomeChart] = useState(data2);\r\n  const [memberLine, setmemberLine] = useState(data2);\r\n  const [activityPie, setActivityPie] = useState(data);\r\n  const [attendance, setAttendance] = useState([])\r\n\r\n\r\n  const [certificateCountCount, setcertificateCount] = useState(0);\r\n  const [appointementCount, setAppointementsCount] = useState(0);\r\n  const [medicamentCount, setMedicamentCount] = useState(0);\r\n  const [patientCount, setPatientCount] = useState(0);\r\n  const [dashboardSettings, setDashboardSettings] = useState([]);\r\n  const [appointements, setAppointements] = useState([]);\r\n  const [appointementsCalendar, setAppointementsCalendar] = useState([]);\r\n  const [topDoctors, setTopDoctors] = useState([]);\r\n  const [topPatients, setTopPatients] = useState([]);\r\n  const [topMedicaments, setTopMedicaments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const aar = []\r\n    // Runs ONCE after initial rendering\r\n    getExpenseChartData()\r\n    getIncomeChartData()\r\n    getMemberLinetData()\r\n    getActivityPieData()\r\n    getAttendencesCalendar()\r\n    getPatientCount()\r\n    getAppointementCount()\r\n    getMedicamentCount()\r\n    getCertificateCount()\r\n    getDashboardSettings()\r\n    appointementHTTPService.getAllAppointement()\r\n      .then(response => {\r\n        setAppointements(response.data);\r\n        console.log(response.data)\r\n        //setLoading(false);\r\n        for (const item of response.data) {\r\n          console.log(item)\r\n          appointementsCalendar.push({ title: item.patient, date: item.createdAt })\r\n        }\r\n\r\n\r\n        // console.log(aar)\r\n        setAppointements(appointementsCalendar)\r\n        console.log(appointements)\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      });\r\n\r\n    // Fetch Top 5 Doctors by Appointments\r\n    fetch(BASE_URL+'/doctors?sort=appointments&limit=5')\r\n      .then(res => res.json())\r\n      .then(data => setTopDoctors(data))\r\n      .catch(() => setTopDoctors([]));\r\n\r\n    // Fetch Top 5 Patients by Visits\r\n    fetch(BASE_URL+'/patients?sort=visits&limit=5')\r\n      .then(res => res.json())\r\n      .then (data => setTopPatients(data))\r\n      .catch(() => setTopPatients([]));\r\n\r\n    // Fetch Top 5 Medicaments by Sales\r\n    fetch(BASE_URL+'/medicaments?sort=sales&limit=5')\r\n      .then(res => res.json())\r\n      .then(data => setTopMedicaments(data))\r\n      .catch(() => setTopMedicaments([]));\r\n  }, []);\r\n\r\n  const getPatientCount = () => {\r\n    //patientHTTPService.getCount().then(data => {\r\n      //setPatientCount(data.data.patient)\r\n    //})\r\n  }\r\n\r\n  const getAppointementCount = () => {\r\n    appointementHTTPService.getCount().then(data => {\r\n      setAppointementsCount(data.data.appointement)\r\n    })\r\n  }\r\n\r\n  const getMedicamentCount = () => {\r\n    medicamentHTTPService.getCount().then(data => {\r\n      setMedicamentCount(data.data.medicament)\r\n    })\r\n  }\r\n\r\n  const getCertificateCount = () => {\r\n    certificateHTTPService.getCount().then(data => {\r\n      setcertificateCount(data.data.certificate)\r\n    })\r\n  }\r\n\r\n  const getAttendencesCalendar = () => {\r\n\r\n    /*  attendanceHTTPService.getAllAtendances()\r\n       .then(response => {\r\n         setAttendance(response.data);\r\n \r\n       })\r\n       .catch(e => {\r\n         showMessage('Confirmation', e, 'info')\r\n       }); */\r\n  };\r\n\r\n\r\n  const getExpenseChartData = () => {\r\n\r\n    /* expenseHTTPService.getExpenseByDate()\r\n      .then(response => {\r\n        setExpenseChart(response.data);\r\n\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      }); */\r\n  };\r\n\r\n  const getMemberLinetData = () => {\r\n\r\n    /*    memberHTTPService.getAllMemberByDate()\r\n         .then(response => {\r\n           setmemberLine(response.data);\r\n   \r\n         })\r\n         .catch(e => {\r\n           showMessage('Confirmation', e, 'info')\r\n         }); */\r\n  };\r\n\r\n  const getIncomeChartData = () => {\r\n\r\n    /*  revenueHTTPService.getAllRevenueByDate()\r\n       .then(response => {\r\n         setIncomeChart(response.data);\r\n \r\n       })\r\n       .catch(e => {\r\n         showMessage('Confirmation', e, 'info')\r\n       }); */\r\n  };\r\n\r\n  const getActivityPieData = () => {\r\n\r\n    /*   activityHTTPService.getAllActivityByDate()\r\n        .then(response => {\r\n          setActivityPie(response.data);\r\n  \r\n        })\r\n        .catch(e => {\r\n          showMessage('Confirmation', e, 'info')\r\n        }); */\r\n  };\r\n\r\n  const getDashboardSettings = () => {\r\n    /*  settingsHTTPService.getDashboardSettings().then(data => {\r\n       setDashboardSettings(data.data[0])\r\n       console.log(dashboardSettings)\r\n \r\n     }) */\r\n  }\r\n\r\n  const widgetColors = [\r\n  { bg: \"#1976d2\", color: \"#fff\" },\r\n  { bg: \"#388e3c\", color: \"#fff\" },\r\n  { bg: \"#fbc02d\", color: \"#222\" },\r\n  { bg: \"#d32f2f\", color: \"#fff\" },\r\n  { bg: \"#0288d1\", color: \"#fff\" },\r\n  { bg: \"#7b1fa2\", color: \"#fff\" },\r\n  { bg: \"#ff9800\", color: \"#fff\" },\r\n  { bg: \"#009688\", color: \"#fff\" },\r\n  { bg: \"#c2185b\", color: \"#fff\" },\r\n  { bg: \"#455a64\", color: \"#fff\" },\r\n  { bg: \"#43a047\", color: \"#fff\" },\r\n  { bg: \"#5d4037\", color: \"#fff\" },\r\n];\r\n\r\nconst widgetData = [\r\n  { icon: \"fas fa-user-injured\", label: \"Patients\", value: patientCount },\r\n  { icon: \"fas fa-capsules\", label: \"Medicaments\", value: medicamentCount },\r\n  { icon: \"fas fa-calendar-check\", label: \"Appointements\", value: appointementCount },\r\n  { icon: \"fas fa-certificate\", label: \"Certificates\", value: certificateCountCount },\r\n  { icon: \"fas fa-flask\", label: \"TestLabs\", value: 12 },\r\n  { icon: \"fas fa-money-bill-wave\", label: \"Expenses\", value: 8 },\r\n  { icon: \"fas fa-user-md\", label: \"Doctors\", value: 5 },\r\n  { icon: \"fas fa-users\", label: \"Staff\", value: 20 },\r\n  { icon: \"fas fa-hospital\", label: \"Clinics\", value: 3 },\r\n  { icon: \"fas fa-id-card\", label: \"Memberships\", value: 15 },\r\n  { icon: \"fas fa-shield-alt\", label: \"Insurance\", value: 7 },\r\n];\r\n\r\n  // Prepare appointment dates for calendar (using appointmentDate)\r\n  const appointmentDates = appointements\r\n    .filter(item => item.appointmentDate)\r\n    .map(item => new Date(item.appointmentDate).toDateString());\r\n\r\n  // Show a dot on days with appointments\r\n  const tileContent = ({ date, view }) => {\r\n    if (view === 'month' && appointmentDates.includes(date.toDateString())) {\r\n      return (\r\n        <div style={{\r\n          marginTop: 2,\r\n          width: 8,\r\n          height: 8,\r\n          borderRadius: '50%',\r\n          background: '#1976d2',\r\n          marginLeft: 'auto',\r\n          marginRight: 'auto'\r\n        }} />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Highlight days with appointments\r\n  const tileClassName = ({ date, view }) => {\r\n    if (view === 'month' && appointmentDates.includes(date.toDateString())) {\r\n      return 'calendar-appointment-day';\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Helper to get appointments for a specific date\r\n  const getAppointmentsForDate = (date) => {\r\n    return appointements.filter(\r\n      item => item.appointmentDate && new Date(item.appointmentDate).toDateString() === date.toDateString()\r\n    );\r\n  };\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {CurrentUser.DEMO_MODE && (\r\n        <div style={{\r\n          background: '#e3f2fd',\r\n          color: '#1565c0',\r\n          border: '1px solid #90caf9',\r\n          borderRadius: 8,\r\n          padding: '14px 20px',\r\n          marginBottom: 24,\r\n          fontWeight: 500,\r\n          fontSize: 15,\r\n          textAlign: 'center'\r\n        }}>\r\n          <i className=\"fas fa-info-circle\" style={{ marginRight: 8 }}></i>\r\n          <span>\r\n            <strong>Demo Mode:</strong> The application is running in presentation mode. Some features are limited or unavailable.\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {/* Statistics Cards - Improved UI/UX */}\r\n      <div className=\"row\" style={{ marginBottom: 8 }}>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"row\" style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n            {widgetData.map((w, idx) => (\r\n              <div\r\n                key={w.label}\r\n                className=\"col-lg-3 col-md-6\"\r\n                style={{\r\n                  flex: '1 1 220px',\r\n                  minWidth: 220,\r\n                  maxWidth: 260,\r\n                  marginBottom: 8,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card\"\r\n                  style={{\r\n                    width: '100%',\r\n                    border: 'none',\r\n                    borderRadius: 16,\r\n                    background: widgetColors[idx % widgetColors.length].bg,\r\n                    color: widgetColors[idx % widgetColors.length].color,\r\n                    boxShadow: '0 4px 24px rgba(25, 118, 210, 0.10)',\r\n                    transition: 'transform 0.2s',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  onMouseOver={e => e.currentTarget.style.transform = 'translateY(-4px) scale(1.03)'}\r\n                  onMouseOut={e => e.currentTarget.style.transform = 'none'}\r\n                >\r\n                  <div className=\"card-body\" style={{ padding: 24 }}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n                      <div style={{\r\n                        fontSize: 36,\r\n                        background: 'rgba(255,255,255,0.12)',\r\n                        borderRadius: '50%',\r\n                        width: 56,\r\n                        height: 56,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center'\r\n                      }}>\r\n                        <i className={w.icon}></i>\r\n                      </div>\r\n                      <div>\r\n                        <div style={{ fontSize: 28, fontWeight: 700, lineHeight: 1 }}>\r\n                          {w.value}\r\n                        </div>\r\n                        <div style={{ fontSize: 16, opacity: 0.85 }}>{w.label}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Charts Section */}\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '32px',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\r\n          margin: '24px 0'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gap: '30px'\r\n          }}\r\n        >\r\n          {chartList.map((chart, idx) => (\r\n            <div key={idx}>\r\n              <h5>{chart.title}</h5>\r\n              <chart.type data={chart.data} options={chartBarOption} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {/* Top 5 Lists */}\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '24px',\r\n          margin: '24px 0',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\r\n        }}\r\n      >\r\n        <h5 style={{ marginBottom: 24 }}>Top 5 Lists</h5>\r\n        <div style={{ display: 'flex', gap: '32px', flexWrap: 'wrap' }}>\r\n          {/* Top 5 Doctors */}\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 220,\r\n            background: '#f8fafc',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            boxShadow: '0 1px 4px rgba(25,118,210,0.06)'\r\n          }}>\r\n            <strong style={{ fontSize: 16, color: '#1976d2' }}>Top 5 Doctors by Appointments</strong>\r\n            <ol style={{ marginTop: 12, paddingLeft: 20 }}>\r\n              {topDoctors.length === 0 && <li style={{ color: '#888' }}>No data</li>}\r\n              {topDoctors.slice(0, 5).map((doc, idx) => (\r\n                <li key={doc.id || idx} style={{ marginBottom: 8 }}>\r\n                  <span style={{ fontWeight: 600 }}>{doc.name || doc.fullName || doc.doctorName}</span>\r\n                  <span style={{\r\n                    marginLeft: 8,\r\n                    color: '#388e3c',\r\n                    fontSize: 13,\r\n                    background: '#e8f5e9',\r\n                    borderRadius: 6,\r\n                    padding: '2px 8px'\r\n                  }}>\r\n                    {doc.appointmentCount || doc.visits || 0} appts\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </div>\r\n          {/* Top 5 Patients */}\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 220,\r\n            background: '#f8fafc',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            boxShadow: '0 1px 4px rgba(25,118,210,0.06)'\r\n          }}>\r\n            <strong style={{ fontSize: 16, color: '#388e3c' }}>Top 5 Patients by Visits</strong>\r\n            <ol style={{ marginTop: 12, paddingLeft: 20 }}>\r\n              {topPatients.length === 0 && <li style={{ color: '#888' }}>No data</li>}\r\n              {topPatients.slice(0, 5).map((pat, idx) => (\r\n                <li key={pat.id || idx} style={{ marginBottom: 8 }}>\r\n                  <span style={{ fontWeight: 600 }}>{pat.name || pat.fullName || pat.patientName}</span>\r\n                  <span style={{\r\n                    marginLeft: 8,\r\n                    color: '#1976d2',\r\n                    fontSize: 13,\r\n                    background: '#e3f2fd',\r\n                    borderRadius: 6,\r\n                    padding: '2px 8px'\r\n                  }}>\r\n                    {pat.visitCount || pat.visits || 0} visits\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </div>\r\n          {/* Top 5 Medicaments */}\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 220,\r\n            background: '#f8fafc',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            boxShadow: '0 1px 4px rgba(25,118,210,0.06)'\r\n          }}>\r\n            <strong style={{ fontSize: 16, color: '#d32f2f' }}>Top 5 Selling Medicaments</strong>\r\n            <ol style={{ marginTop: 12, paddingLeft: 20 }}>\r\n              {topMedicaments.length === 0 && <li style={{ color: '#888' }}>No data</li>}\r\n              {topMedicaments.slice(0, 5).map((med, idx) => (\r\n                <li key={med.id || idx} style={{ marginBottom: 8 }}>\r\n                  <span style={{ fontWeight: 600 }}>{med.name || med.medicamentName}</span>\r\n                  <span style={{\r\n                    marginLeft: 8,\r\n                    color: '#d32f2f',\r\n                    fontSize: 13,\r\n                    background: '#ffebee',\r\n                    borderRadius: 6,\r\n                    padding: '2px 8px'\r\n                  }}>\r\n                    {med.salesCount || med.sold || 0} sold\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Calendar Widget */}\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '24px',\r\n          margin: '24px 0',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\r\n        }}\r\n      >\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 12 }}>\r\n          <h5 style={{ margin: 0 }}>Appointments Calendar</h5>\r\n          <Link to=\"/rendezvous\" style={{ textDecoration: 'none' }}>\r\n            <button className=\"btn btn-primary\" style={{ fontSize: 14, padding: '4px 16px' }}>\r\n              View All Appointments\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: 32 }}>\r\n          <div style={{ minWidth: 320, flex: 1 }}>\r\n            <Calendar\r\n              value={selectedDate}\r\n              onClickDay={setSelectedDate}\r\n              tileContent={tileContent}\r\n              tileClassName={tileClassName}\r\n              calendarType=\"gregory\"\r\n              locale=\"en-US\"\r\n            />\r\n          </div>\r\n          <div style={{\r\n            flex: 2,\r\n            minWidth: 280,\r\n            maxWidth: 500,\r\n            background: '#f8fafc',\r\n            borderRadius: 12,\r\n            padding: 20,\r\n            marginLeft: 16,\r\n            boxShadow: '0 1px 4px rgba(25,118,210,0.06)'\r\n          }}>\r\n            <div style={{ marginBottom: 8 }}>\r\n              <strong>\r\n                {getAppointmentsForDate(selectedDate).length > 0\r\n                  ? `Appointments for ${selectedDate.toLocaleDateString()}`\r\n                  : `No appointments for ${selectedDate.toLocaleDateString()}`}\r\n              </strong>\r\n            </div>\r\n            <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>\r\n              {getAppointmentsForDate(selectedDate).map((item, idx) => (\r\n                <li key={item.id} style={{\r\n                  background: '#fff',\r\n                  borderRadius: 8,\r\n                  marginBottom: 12,\r\n                  padding: '12px 16px',\r\n                  boxShadow: '0 1px 4px rgba(25,118,210,0.04)',\r\n                  borderLeft: '4px solid #1976d2',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 4\r\n                }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <span style={{ fontWeight: 600, color: '#1976d2' }}>\r\n                      {item.patient || item.patientId}\r\n                    </span>\r\n                    <span style={{\r\n                      background:\r\n                        item.status === 'Confirmed' || item.status === 'Scheduled' ? '#e8f5e9'\r\n                          : item.status === 'Pending' ? '#fff8e1'\r\n                          : item.status === 'Cancelled' ? '#ffebee'\r\n                          : '#e3f2fd',\r\n                      color:\r\n                        item.status === 'Confirmed' || item.status === 'Scheduled' ? '#388e3c'\r\n                          : item.status === 'Pending' ? '#ffa000'\r\n                          : item.status === 'Cancelled' ? '#e53935'\r\n                          : '#1976d2',\r\n                      borderRadius: 8,\r\n                      padding: '2px 10px',\r\n                      fontSize: 13,\r\n                      fontWeight: 600,\r\n                    }}>\r\n                      {item.status}\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <span style={{ fontWeight: 500 }}>Time:</span>{' '}\r\n                    <span>{item.startTime} - {item.endTime}</span>\r\n                  </div>\r\n                  <div>\r\n                    <span style={{ fontWeight: 500 }}>Doctor:</span>{' '}\r\n                    <span>{item.doctor || item.doctorId}</span>\r\n                  </div>\r\n                  <div>\r\n                    <span style={{ fontWeight: 500 }}>Type:</span>{' '}\r\n                    <span>{item.appointmentType}</span>\r\n                  </div>\r\n                  {item.reasonForVisit && (\r\n                    <div>\r\n                      <span style={{ fontWeight: 500 }}>Reason:</span>{' '}\r\n                      <span>{item.reasonForVisit}</span>\r\n                    </div>\r\n                  )}\r\n                  {item.notes && (\r\n                    <div>\r\n                      <span style={{ fontWeight: 500 }}>Notes:</span>{' '}\r\n                      <span>{item.notes}</span>\r\n                    </div>\r\n                  )}\r\n                  <div style={{ marginTop: 4 }}>\r\n                    <Link to={`/rendezvous/${item.id}`} style={{ color: '#1976d2', textDecoration: 'underline', fontSize: 13 }}>\r\n                      View Details\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* System Health/Status */}\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '24px',\r\n          margin: '24px 0',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\r\n        }}\r\n      >\r\n        <h5 style={{ marginBottom: 18, display: 'flex', alignItems: 'center', gap: 8 }}>\r\n          <i className=\"fas fa-heartbeat\" style={{ color: '#d32f2f', fontSize: 22 }}></i>\r\n          System Health / Status\r\n        </h5>\r\n        <div style={{ display: 'flex', gap: 32, flexWrap: 'wrap' }}>\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 180,\r\n            background: '#e8f5e9',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 12,\r\n            marginBottom: 12\r\n          }}>\r\n            <i className=\"fas fa-server\" style={{ color: '#388e3c', fontSize: 20 }}></i>\r\n            <div>\r\n              <div style={{ fontWeight: 600 }}>Backend</div>\r\n              <div style={{ color: '#388e3c', fontWeight: 500 }}>Online</div>\r\n            </div>\r\n          </div>\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 180,\r\n            background: '#e3f2fd',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 12,\r\n            marginBottom: 12\r\n          }}>\r\n            <i className=\"fas fa-network-wired\" style={{ color: '#1976d2', fontSize: 20 }}></i>\r\n            <div>\r\n              <div style={{ fontWeight: 600 }}>API</div>\r\n              <div style={{ color: '#1976d2', fontWeight: 500 }}>Healthy</div>\r\n            </div>\r\n          </div>\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 180,\r\n            background: '#fffde7',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 12,\r\n            marginBottom: 12\r\n          }}>\r\n            <i className=\"fas fa-clock\" style={{ color: '#fbc02d', fontSize: 20 }}></i>\r\n            <div>\r\n              <div style={{ fontWeight: 600 }}>Uptime</div>\r\n              <div style={{ color: '#fbc02d', fontWeight: 500 }}>99.9%</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDashBoard.propTypes = {};\r\n\r\nDashBoard.defaultProps = {};\r\n\r\nexport default DashBoard;\r\n\r\n/* Add this CSS to your DashBoard.css for appointment highlight\r\n.calendar-appointment-day {\r\n  position: relative;\r\n}\r\n\r\n.calendar-appointment-day::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 6px;\r\n  height: 6px;\r\n  border-radius: 50%;\r\n  background: #1976d2;\r\n}\r\n*/\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ViewAppointment.css';\r\n\r\nconst ViewAppointment = () => (\r\n  <div className=\"ViewAppointment\">\r\n\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">ID de rendez-vous</th>\r\n          <th scope=\"col\">A201LPSI</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">Nom\r\n               </th>\r\n          <td>David</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\"> Heure</th>\r\n          <td>14h00</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Date</th>\r\n          <td>11/11/2018</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Docteur</th>\r\n          <td>Dr Anderson</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Département</th>\r\n          <td>Lorem Ipsum est simplement un faux texte de la norme de l'industrie</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n\r\n  </div>\r\n);\r\n\r\nViewAppointment.propTypes = {};\r\n\r\nViewAppointment.defaultProps = {};\r\n\r\nexport default ViewAppointment;\r\n","const expenseValidation = {\r\n    date: 'dd',\r\n    name: 'd',\r\n    amount: 'sss',\r\n    note: 'ss',\r\n    paymenMode: 'ss'\r\n\r\n\r\n}\r\nexport default expenseValidation;","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllPatients = () => {\r\n    return http.get(`${BASE_URL}/patients`);\r\n};\r\n\r\nconst getPatientById = (id) => {\r\n    return http.get(`${BASE_URL}/patients/${id}`);\r\n};\r\n\r\nconst createPatient = (data) => {\r\n    return http.post(`${BASE_URL}/patients`, data);\r\n};\r\n\r\nconst editPatient = (id, data) => {\r\n    return http.put(`${BASE_URL}/patients/${id}`, data);\r\n};\r\n\r\nconst removePatient = (id) => {\r\n    return http.delete(`${BASE_URL}/patients/${id}`);\r\n};\r\n\r\nconst removeAllPatients = () => {\r\n    return http.delete(`${BASE_URL}/patients`);\r\n};\r\n\r\nexport default {\r\n    getAllPatients,\r\n    getPatientById,\r\n    createPatient,\r\n    editPatient,\r\n    removePatient,\r\n    removeAllPatients\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport './AddAppointment.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages'\r\nimport appointementMessage from '../../main/messages/appointementMessage'\r\nimport AppointementTestService from '../../main/mocks/AppointementTestService';\r\nimport appointementValidation from '../../main/validations/appointementValidation'\r\nimport appointementHTTPService from '../../main/services/appointementHTTPService';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst AddAppointment = (props) => {\r\n\r\n    const initialState = {\r\n        date: '',\r\n        patient: '',\r\n        problem: '',\r\n    };\r\n\r\n    const { register, handleSubmit, errors } = useForm()\r\n    const [appointement, setAppointement] = useState(initialState);\r\n    const [patients, setPatients] = useState([]);\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        //saveAppointement(data)\r\n        //AppointementTestService.create(data)\r\n        appointementHTTPService.createAppointement(data).then(data => {\r\n            setAppointement(initialState)\r\n            showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success')\r\n            props.closeModal()\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllPatient()\r\n    }, []);\r\n\r\n\r\n    const getAllPatient = () => {\r\n\r\n        patientHTTPService.getAllPatient()\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setPatients(response.data);\r\n\r\n            })\r\n            .catch(e => {\r\n                showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n            });\r\n    };\r\n\r\n    const saveAppointement = (data) => {\r\n\r\n        appointementHTTPService.create(data)\r\n            .then(response => {\r\n                setAppointement(initialState)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n    };\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setAppointement({ ...appointement, [name]: value });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"AddAppointment\">\r\n            <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n                <div class=\"form-body\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Date:</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={appointement.date} ref={register({ required: true })}\r\n                                type=\"date\" id=\"date\" name=\"date\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n                            <div className=\"error text-danger\">\r\n                                {errors.date && appointementValidation.date}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Patient:</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <select onChange={handleInputChange} value={appointement.patient} ref={register({ required: true })}\r\n                                name=\"patient\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\">\r\n                                {patients.map(response =>\r\n                                    <option value={response?.id}>{response?.namepatient}</option>\r\n                                )}\r\n                            </select>\r\n                            <div className=\"error text-danger\">\r\n                                {errors.patient_id && appointementValidation.patient}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><font  ><font  >Problem:</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <textarea onChange={handleInputChange} value={appointement.problem} ref={register({ required: true })}\r\n                                name=\"problem\" class=\"form-control\" rows=\"3\"></textarea>\r\n                            <div className=\"error text-danger\">\r\n                                {errors.problem && appointementValidation.problem}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group row\">\r\n                        <div class=\" col-8\">\r\n                            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nAddAppointment.propTypes = {};\r\n\r\nAddAppointment.defaultProps = {};\r\n\r\nexport default AddAppointment;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './EditAppointment.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport appointementHTTPService from '../../main/services/appointementHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditAppointment = (props) => {\r\n    const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n    const [appointement, setAppointement] = useState(props.event);\r\n    const [patients, setPatients] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        setAppointement(props.appointement)\r\n        getAllPatient()\r\n    }, [props.appointement]);\r\n\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        //EventTestService.update(props.event, data)\r\n\r\n        console.log(props.appointement)\r\n        appointementHTTPService.editAppointement(props.appointement, data).then(data => {\r\n            showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n            props.closeModal()\r\n        })\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setAppointement({ ...event, [name]: value });\r\n    };\r\n    const getAllPatient = () => {\r\n\r\n        patientHTTPService.getAllPatient()\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setPatients(response.data);\r\n\r\n            })\r\n            .catch(e => {\r\n                showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n            <div class=\"form-body\">\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Date:</font></font></label>\r\n                    <div class=\"col-md-12\">\r\n                        <input onChange={handleInputChange} value={appointement?.datee} ref={register({ required: true })}\r\n                            type=\"date\" id=\"date\" name=\"date\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Patient:</font></font></label>\r\n                    <div class=\"col-md-12\">\r\n                        <select onChange={handleInputChange} value={appointement?.patient} ref={register({ required: true })}\r\n                            name=\"patient\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\">\r\n                            {patients.map(response =>\r\n                                <option value={response?.id}>{response?.namepatient}</option>\r\n                            )}\r\n                        </select>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-3 control-label\"><font  ><font  >Problem:</font></font></label>\r\n                    <div class=\"col-md-12\">\r\n                        <textarea onChange={handleInputChange} value={appointement?.problem} ref={register({ required: true })}\r\n                            name=\"problem\" class=\"form-control\" rows=\"3\"></textarea>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-8\">\r\n                        <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                            <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nEditAppointment.propTypes = {};\r\n\r\nEditAppointment.defaultProps = {};\r\n\r\nexport default EditAppointment;\r\n","const patientMessage = {\r\n    add: 'Le patient a été ajouté avec succés',\r\n    edit: 'Le patient a été modifié avec succés',\r\n    delete: 'Le patient a été supprimé avec succés'\r\n}\r\n\r\nexport default patientMessage\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SummaryWidget.css';\r\n\r\nconst SummaryWidget = () => (\r\n  <div class=\"col-lg-3 col-md-6\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"stat-widget-four\">\r\n          <div class=\"stat-icon dib\">\r\n            <i class=\"ti-stats-up text-muted\"></i>\r\n          </div>\r\n          <div class=\"stat-content\">\r\n            <div class=\"text-left dib\">\r\n              <div class=\"stat-heading\">Daily Sales</div>\r\n              <div class=\"stat-text\">Total: $76,58,714</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nSummaryWidget.propTypes = {};\r\n\r\nSummaryWidget.defaultProps = {};\r\n\r\nexport default SummaryWidget;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './Rendezvous.css';\r\nimport { LoadJS, LoadJSFiles } from './../init';\r\nimport ViewAppointment from './../ViewAppointment/ViewAppointment';\r\nimport AddAppointment from '../AddAppointment/AddAppointment';\r\nimport EdiTAppointement from './../EditAppointment/EditAppointment'\r\nimport appointementHTTPService from '../../main/services/appointementHTTPService';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport useForceUpdate from 'use-force-update';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst Rendezvous = () => {\r\n\r\n  const [appointements, setAppointements] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllAppointements()\r\n  }, []);\r\n\r\n\r\n  const getAllAppointements = () => {\r\n    setLoading(true);\r\n    appointementHTTPService.getAllAppointement()\r\n      .then(response => {\r\n        setAppointements(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'info')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllAppointements()\r\n    forceUpdate()\r\n  }\r\n\r\n  const removeAppointementAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success')\r\n      appointementHTTPService.removeAppointement(data).then(data => {\r\n        // resfreshComponent()\r\n        getAllAppointements()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateAppointementAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //resfreshComponent()\r\n\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    closeButtonEdit.current.click()\r\n    getAllAppointements()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    getAllAppointements()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n    { field: 'patient', headerName: 'Full Name', width: 200 },\r\n    { field: 'datee', headerName: 'Date', width: 150 },\r\n    { field: 'email', headerName: 'Email', width: 200 },\r\n    { field: 'telephone', headerName: 'Telephone', width: 150 },\r\n    { field: 'message', headerName: 'Problem', width: 200 },\r\n    { field: 'doctor', headerName: 'Doctor', width: 180 },\r\n    { field: 'status', headerName: 'Status', width: 120 },\r\n    { field: 'time', headerName: 'Time', width: 120 },\r\n    { field: 'created_at', headerName: 'Created At', width: 180 },\r\n    { field: 'updated_at', headerName: 'Updated At', width: 180 },\r\n    // Add any other fields from your appointment model here\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = appointements.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Appointements\r\n        </Typography>\r\n        <br />\r\n        <Button onClick={e => removeAppointementAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n        <Button type=\"button\" onClick={() => getAllAppointements()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n\r\n        <br /><br />\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={appointements}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n          /></div>}\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addRendezvous\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">New</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddAppointment closeModal={closeModalAdd} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonAdd} type=\"button\" onClick={closeModalAdd} class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"editRendezvous\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <EdiTAppointement appointement={updatedItem} closeModal={closeModalEdit} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonEdit} onClick={closeModalEdit} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewRendezvous\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">View</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <ViewAppointment />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nRendezvous.propTypes = {};\r\n\r\nRendezvous.defaultProps = {};\r\n\r\nexport default Rendezvous;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, TextField, MenuItem, Stack, Typography, IconButton } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst refillOptions = ['Yes', 'No'];\r\nconst statusOptions = ['Active', 'Expired', 'Completed', 'Pending'];\r\n\r\nconst AddPrescription = ({ closeModal, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicId: '',\r\n    medications: [{\r\n      dosage: '',\r\n      duration: '',\r\n      frequency: '',\r\n      instructions: '',\r\n      medicationId: '',\r\n      medicationName: ''\r\n    }],\r\n    prescriptionDate: '',\r\n    validUntil: '',\r\n    refillAllowed: 'Yes',\r\n    refillCount: 1,\r\n    pharmacyId: '',\r\n    digitalSignature: '',\r\n    status: 'Active'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Add state for select box data\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(BASE_URL+'/patients').then(res => setPatients(res.data)).catch(() => setPatients([]));\r\n    axios.get(BASE_URL+'/doctors').then(res => setDoctors(res.data)).catch(() => setDoctors([]));\r\n    axios.get(BASE_URL+'/clinics').then(res => setClinics(res.data)).catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  // Add more medications\r\n  const handleAddMedication = () => {\r\n    setForm(f => ({\r\n      ...f,\r\n      medications: [\r\n        ...f.medications,\r\n        { dosage: '', duration: '', frequency: '', instructions: '', medicationId: '', medicationName: '' }\r\n      ]\r\n    }));\r\n  };\r\n\r\n  // Change medication fields\r\n  const handleMedicationChange = (idx, e) => {\r\n    const { name, value } = e.target;\r\n    setForm(f => {\r\n      const meds = [...f.medications];\r\n      meds[idx][name] = value;\r\n      return { ...f, medications: meds };\r\n    });\r\n  };\r\n\r\n  // Change main fields\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...form,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      // Replace with your backend endpoint\r\n      await axios.post(BASE_URL+'/prescriptions', data);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(patient => (\r\n          <MenuItem key={patient.id} value={patient.id}>\r\n            {patient.fullName || patient.name || patient.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(doctor => (\r\n          <MenuItem key={doctor.id} value={doctor.id}>\r\n            {doctor.fullName || doctor.name || doctor.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic\"\r\n        name=\"clinicId\"\r\n        value={form.clinicId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {clinics.map(clinic => (\r\n          <MenuItem key={clinic.id} value={clinic.id}>\r\n            {clinic.name || clinic.clinicName || clinic.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>Medications</Typography>\r\n      {form.medications.map((med, idx) => (\r\n        <Stack key={idx} direction=\"row\" spacing={1} sx={{ mb: 1 }}>\r\n          <TextField\r\n            label=\"Medication Name\"\r\n            name=\"medicationName\"\r\n            value={med.medicationName}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Medication ID\"\r\n            name=\"medicationId\"\r\n            value={med.medicationId}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Dosage\"\r\n            name=\"dosage\"\r\n            value={med.dosage}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Duration (days)\"\r\n            name=\"duration\"\r\n            type=\"number\"\r\n            value={med.duration}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Frequency\"\r\n            name=\"frequency\"\r\n            value={med.frequency}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Instructions\"\r\n            name=\"instructions\"\r\n            value={med.instructions}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n          />\r\n        </Stack>\r\n      ))}\r\n      <IconButton color=\"primary\" onClick={handleAddMedication} sx={{ mb: 2 }}>\r\n        <AddIcon />\r\n      </IconButton>\r\n      <TextField\r\n        label=\"Prescription Date\"\r\n        name=\"prescriptionDate\"\r\n        type=\"datetime-local\"\r\n        value={form.prescriptionDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Valid Until\"\r\n        name=\"validUntil\"\r\n        type=\"datetime-local\"\r\n        value={form.validUntil}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Refill Allowed\"\r\n        name=\"refillAllowed\"\r\n        value={form.refillAllowed}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {refillOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Refill Count\"\r\n        name=\"refillCount\"\r\n        type=\"number\"\r\n        value={form.refillCount}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Pharmacy ID\"\r\n        name=\"pharmacyId\"\r\n        value={form.pharmacyId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Digital Signature\"\r\n        name=\"digitalSignature\"\r\n        value={form.digitalSignature}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Status\"\r\n        name=\"status\"\r\n        value={form.status}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {statusOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Create Prescription'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddPrescription;","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllPrescription = () => {\r\n    return http.get(`${BASE_URL}/prescriptions`)\r\n}\r\nconst createPrescription = data => {\r\n    return http.post(`${BASE_URL}/prescriptions`, data);\r\n};\r\n\r\nconst createMedicamentPrescription = data => {\r\n    return http.post(`${BASE_URL}/prescriptions/medicament`, data);\r\n};\r\n\r\nconst getPrescription = (id, data) => {\r\n    return http.get(`${BASE_URL}/prescriptions/${id}`, data);\r\n};\r\n\r\nconst getMedicamentPrescription = (id, data) => {\r\n    return http.get(`${BASE_URL}/prescriptions/medicament/${id}`, data);\r\n};\r\n\r\nconst editPrescription = (id, data) => {\r\n    return http.put(`${BASE_URL}/prescriptions/${id}`, data);\r\n};\r\n\r\nconst removePrescription = id => {\r\n    return http.delete(`${BASE_URL}/prescriptions/${id}`);\r\n};\r\n\r\nconst removeMedicamentPrescription = (id, data) => {\r\n    return http.delete(`${BASE_URL}/prescriptions/medicament/${id}`, data);\r\n};\r\n\r\nexport default {\r\n    getAllPrescription,\r\n    createPrescription,\r\n    editPrescription,\r\n    removePrescription,\r\n    createMedicamentPrescription,\r\n    getPrescription,\r\n    getMedicamentPrescription,\r\n    removeMedicamentPrescription\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ViewPrescription.css';\r\nimport prescriptionHTTPService from '../../main/services/prescriptionHTTPService';\r\nimport { Button } from 'bootstrap';\r\n\r\nconst ViewPrescription = (props) => {\r\n  const [medicament, setMedicament] = useState({});\r\n  const [medicaments, setMedicaments] = useState([]);\r\n  useEffect(() => {\r\n    console.log(props.updatedItem)\r\n    prescriptionHTTPService.getPrescription(props.updatedItem).then(data => {\r\n      console.log(data.data)\r\n      setMedicament(data.data)\r\n    })\r\n\r\n    prescriptionHTTPService.getMedicamentPrescription(props.updatedItem).then(data => {\r\n      console.log(data.data)\r\n      setMedicaments(data.data)\r\n    })\r\n  }, [props.updatedItem]);\r\n\r\n  const remove = (e, id) => {\r\n    prescriptionHTTPService.removeMedicamentPrescription(id).then(data => {\r\n      prescriptionHTTPService.getMedicamentPrescription(props.updatedItem).then(data => {\r\n        console.log(data.data)\r\n        setMedicaments(data.data)\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"ViewPrescription\">\r\n      <p>Patient :{medicament.patient}</p>\r\n      <p>Pression : {medicament.pression}</p>\r\n      <p>temperature :{medicament.temperature} </p>\r\n      <p>Problem : {medicament.problem}</p>\r\n      <p>Note : {medicament.note}</p>\r\n\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Medicament</th>\r\n            <th scope=\"col\">Duration</th>\r\n            <th scope=\"col\">Dose</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            medicaments.map(data =>\r\n              <tr>\r\n                <th scope=\"row\">{data.medicament}\r\n                </th>\r\n                <td>{data.duration}</td>\r\n                <td>{data.dose}</td>\r\n                <td> <button className=\"btn btn-danger\" onClick={e => remove(e, data.id)} type=\"button\" ><i class=\"fas fa-trash\"></i> </button></td>\r\n              </tr>\r\n            )\r\n          }\r\n\r\n\r\n        </tbody>\r\n      </table>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nViewPrescription.propTypes = {};\r\n\r\nViewPrescription.defaultProps = {};\r\n\r\nexport default ViewPrescription;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditPrescription.css';\r\n\r\nconst EditPrescription = () => (\r\n    <div className=\"EditPrescription\">\r\n        <form className=\"form-horizontal\" method=\"post\" name=\"n_p\" enctype=\"multipart/form-data\" accept-charset=\"utf-8\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"panel panel-default panel-form\">\r\n                    <div className=\"panel-body\">\r\n                        <div className=\"portlet-body form\">\r\n\r\n                            <div className=\"portlet-title\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"portlet-title\">\r\n                                            <div className=\"form-group \">\r\n\r\n\r\n                                                <div className=\"col-md-12\">\r\n                                                    <select className=\"form-control\" name=\"venue_id\" required=\"\">\r\n                                                        <option value=\"\">--Sélectionnez le lieu--</option>\r\n                                                        <option value=\"1\"><b  ><b  >Démo Medical Collage</b></b></option><option value=\"3\"><b  ><b  >Tour verte</b></b></option><option value=\"4\"><b  ><b  >Tour de Manan</b></b></option>                                                        </select>\r\n\r\n                                                </div><br /><hr />\r\n\r\n                                                <div className=\"col-md-12 \">\r\n                                                    <div id=\"ab\"></div>\r\n                                                </div>\r\n                                                <div className=\"col-md-6 pid\">\r\n                                                    <input type=\"text\" name=\"p_id\" id=\"p_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadNameOne(this.value);\" className=\"form-control\" placeholder=\"ID du patient\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"had\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Nom du patient\" name=\"name\" required=\"\" />\r\n                                                    </div>\r\n                                                    <input type=\"hidden\" name=\"patient_id\" required=\"\" />\r\n\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Numéro de téléphone\" name=\"phone\" required=\"\" />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <input type=\"text\" name=\"birth_date\" className=\"form-control datepicker1 birth_date hasDatepicker\" placeholder=\"Date de naissance\" required=\"\" id=\"dp1608289767518\" />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <input type=\"text\" name=\"age\" id=\"age\" className=\"form-control\" placeholder=\"Âge\" />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-3\">\r\n                                                        <div className=\"md-radio\">\r\n                                                            <input type=\"radio\" id=\"lb1\" name=\"gender\" value=\"Male\" />\r\n                                                            <label for=\"lb1\"><b  ><b  > Masculin</b></b></label>\r\n\r\n                                                            <input type=\"radio\" id=\"lb2\" name=\"gender\" value=\"Female\" />\r\n\r\n                                                            <label for=\"lb2\"><b  ><b  > Femme</b></b></label>\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div> <hr />\r\n\r\n                                <div className=\"portlet-title\">\r\n                                    <div className=\"form-group \">\r\n                                        <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"CC du patient\" name=\"Problem\" /><samp></samp></div>\r\n                                        <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"Poids du patient\" name=\"Weight\" value=\"\" /></div>\r\n                                        <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"PA du patient\" name=\"Pressure\" value=\"\" /></div>\r\n                                        <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"Température\" name=\"temperature\" value=\"\" /></div>\r\n                                    </div>\r\n                                </div><hr />\r\n\r\n                                <div className=\"portlet-title\">\r\n                                    <div className=\"form-group \">\r\n                                        <div className=\"col-md-4\"><input type=\"text\" className=\"form-control\" placeholder=\"L'histoire\" name=\"history\" /></div>\r\n                                        <div className=\"col-md-4\"><input type=\"text\" className=\"form-control\" placeholder=\"O / Ex\" name=\"oex\" /></div>\r\n                                        <div className=\"col-md-4\"><input type=\"text\" className=\"form-control\" placeholder=\"PD\" name=\"pd\" value=\"\" /></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"portlet-title\">\r\n                                <div className=\"row\">\r\n\r\n\r\n                                    <div className=\"col-sm-12 col-md-12\">\r\n                                        <table className=\"table table-bordered table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <td colspan=\"6\" className=\"m_add_btn\"><b  ><b  >Médicament </b></b><a href=\"javascript:void(0);\" className=\"btn btn-primary add_button pull-right\" title=\"Ajouter le champ\"> <span className=\"glyphicon glyphicon-plus\"></span><b  ><b  >Ajouter</b></b></a></td>\r\n                                                </tr>\r\n\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className=\"field_wrapper\">\r\n                                                            <div className=\"form-group \">\r\n                                                                <div className=\"col-md-6 col-md-12\">\r\n                                                                    <input type=\"text\" className=\"form-control\" name=\"type[]\" placeholder=\"Type\" />\r\n\r\n                                                                </div>\r\n                                                                <div className=\"col-md-3\">\r\n                                                                    <input type=\"hidden\" className=\"mdcn_value\" name=\"group_id[]\" value=\"\" id=\"search-group_id\" />\r\n                                                                    <input type=\"text\" className=\"group_name form-control\" name=\"group_name[]\" id=\"search-group\" autocomplete=\"off\" placeholder=\"Nom générique\" />\r\n                                                                    <div id=\"suggesstion-box\"></div>\r\n\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"Mg / ml\" name=\"mg[]\" /></div>\r\n                                                                <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"Dose\" name=\"dose[]\" /></div>\r\n                                                                <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"journée\" name=\"day[]\" /></div>\r\n                                                                <div className=\"col-md-3\"><input type=\"text\" className=\"form-control\" placeholder=\"commentaires\" name=\"comments[]\" /></div>\r\n                                                                <a href=\"javascript:void(0);\" className=\" btn btn-danger remove_button\" title=\"Supprimer le champ\"><i class=\"fas fa-minus\"></i></a>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colspan=\"6\">\r\n                                                        <div className=\"form-group col-md-12\">\r\n                                                            <textarea placeholder=\"Commentaire général\" name=\"prescription_comment\" className=\"form-control\" rows=\"2\"></textarea>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className=\"col-sm-6 col-md-12\">\r\n                                        <table className=\"table table-bordered table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <td colspan=\"6\" className=\"t_add_btn\"><b  ><b  >Tester\r\n                                                                </b></b><a href=\"javascript:void(0);\" className=\"btn btn-primary add_button1 pull-right\" title=\"Ajouter le champ\"><span className=\"glyphicon glyphicon-plus\"></span><b  ><b  >Ajouter</b></b></a>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className=\"field_wrapper1\">\r\n                                                            <div id=\"count_test1\">\r\n                                                                <div className=\"form-group \">\r\n                                                                    <div className=\"col-md-5\">\r\n                                                                        <input type=\"hidden\" className=\"test_value\" name=\"test_name[]\" value=\"\" />\r\n                                                                        <input placeholder=\"Test Name\" className=\"test_name form-control\" name=\"te_name[]\" autocomplete=\"off\" />\r\n                                                                        <div id=\"test-box\"></div>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-md-5\">\r\n                                                                        <input placeholder=\"Description\" name=\"test_description[]\" className=\"form-control\" />\r\n                                                                    </div>\r\n                                                                    <a href=\"javascript:void(0);\" className=\" btn btn-danger remove_button\" title=\"Remove field\"><i class=\"fas fa-minus\"></i></a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className=\"col-sm-6 col-md-12\">\r\n                                        <table className=\"table table-bordered table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <td colspan=\"6\" className=\"a_btn\"><b  ><b  >Conseil\r\n                                                                </b></b><a href=\"javascript:void(0);\" className=\"btn btn-primary add_advice pull-right\" title=\"Add field\"><span className=\"glyphicon glyphicon-plus\"></span><b  ><b  >Ajouter</b></b></a>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className=\"field_wrapper2\">\r\n                                                            <div id=\"count_advice1\">\r\n                                                                <div className=\"form-group \">\r\n                                                                    <div className=\"col-md-10\">\r\n                                                                        <input type=\"hidden\" className=\"advice_value\" name=\"advice[]\" value=\"\" />\r\n                                                                        <input placeholder=\"Advice\" className=\"advice_name form-control\" name=\"adv[]\" autocomplete=\"off\" />\r\n                                                                        <div id=\"advice-box\"></div>\r\n                                                                    </div><a href=\"javascript:void(0);\" className=\" btn btn-danger remove_button\" title=\"Remove field\"><i class=\"fas fa-minus\"></i></a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-offset-9 col-sm-6\">\r\n                                        <button type=\"reset\" className=\"btn btn-danger\"><b  ><b  >Réinitialiser</b></b></button>\r\n                                        <button type=\"button\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; demoModeOne()\" className=\"btn btn-success\"><b  ><b  >Soumettre</b></b></button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n);\r\n\r\nEditPrescription.propTypes = {};\r\n\r\nEditPrescription.defaultProps = {};\r\n\r\nexport default EditPrescription;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport medicamentHTTPService from '../../main/services/medicamentHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport prescriptionHTTPService from '../../main/services/prescriptionHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\n\r\nconst AddMedicamentItem = (props) => {\r\n\r\n    const initialState = {\r\n        medicament: \"\",\r\n        dose: \"\",\r\n        duration: \"\",\r\n    };\r\n\r\n    const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n    const [medicament, setMedicament] = useState({});\r\n    useEffect(() => {\r\n        console.log('kjbkblk')\r\n        console.log(props.updatedItem)\r\n\r\n    }, [props.updatedItem]);\r\n\r\n    const onSubmit = (data) => {\r\n        //savePrescription(data)\r\n        // PrescriptionTestService.create(data)\r\n        prescriptionHTTPService.createMedicamentPrescription(data)\r\n            .then(response => {\r\n                setMedicament(initialState)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n        setMedicament(initialState)\r\n        showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success')\r\n    }\r\n\r\n    /*  const savePrescription = (data) => {\r\n     \r\n         medicamentHTTPService.create(data)\r\n             .then(response => {\r\n                 setPrescription(initialState)\r\n             })\r\n             .catch(e => {\r\n                 console.log(e);\r\n             });\r\n     \r\n     }; */\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setMedicament({ ...medicament, [name]: value });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\">\r\n\r\n                <input value={props.updatedItem} onChange={handleInputChange} ref={register({ required: false })} id=\"appendedtext\" name=\"prescription\" class=\"form-control\" placeholder=\"placeholder\" type=\"hidden\" />\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-4 control-label\" for=\"Medicament\">Medicament</label>\r\n                    <div class=\"col-md-5\">\r\n                        <select value={medicament.medicament} onChange={handleInputChange} ref={register({ required: true })} id=\"Medicament\" name=\"medicament\" class=\"form-control\">\r\n                            <option value=\"1\">Option one</option>\r\n                            <option value=\"2\">Option two</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-4 control-label\" for=\"appendedtext\">Dose</label>\r\n                    <div class=\"col-md-5\">\r\n                        <div class=\"input-group\">\r\n                            <input value={medicament.dose} onChange={handleInputChange} ref={register({ required: true })} id=\"appendedtext\" name=\"dose\" class=\"form-control\" placeholder=\"placeholder\" type=\"text\" />\r\n                            <span class=\"input-group-addon\">Mg/ml</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-4 control-label\" for=\"appendedtext\">Duration</label>\r\n                    <div class=\"col-md-5\">\r\n                        <div class=\"input-group\">\r\n                            <input value={medicament.duration} onChange={handleInputChange} ref={register({ required: true })} id=\"appendedtext\" name=\"duration\" class=\"form-control\" placeholder=\"placeholder\" type=\"text\" />\r\n                            <span class=\"input-group-addon\">Days</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-4 control-label\" for=\"singlebutton\"></label>\r\n                    <div class=\"col-md-4\">\r\n                        <button id=\"singlebutton\" name=\"singlebutton\" class=\"btn btn-primary\">Add Item</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nAddMedicamentItem.propTypes = {};\r\n\r\nAddMedicamentItem.defaultProps = {};\r\n\r\nexport default AddMedicamentItem;\r\n","import PropTypes from 'prop-types';\r\nimport './Prescription.css';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport AddPrescription from '../AddPrescription/AddPrescription';\r\nimport ViewPrescription from './../ViewPrescription/ViewPrescription';\r\nimport EditPrescription from './../EditPrescription/EditPrescription';\r\nimport AddMedicamentItem from '../AddMedicamentItem/AddMedicamentItem';\r\nimport prescriptionHTTPService from '../../main/services/prescriptionHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport CurrentUser from '../../main/config/user';\r\nimport { Button, LinearProgress, Typography, IconButton, Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Snackbar, Alert, Drawer, Chip, Tooltip, Box, Stack, Divider } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport jsPDF from 'jspdf';\r\n\r\nconst statusColors = {\r\n  Active: 'success',\r\n  Expired: 'error',\r\n  Completed: 'info',\r\n  Pending: 'warning',\r\n};\r\n\r\nconst Prescription = () => {\r\n  const [prescriptions, setPrescriptions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Modal/dialog states\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\r\n  const [addMedicamentDialogOpen, setAddMedicamentDialogOpen] = useState(false);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  const [selectedPrescription, setSelectedPrescription] = useState(null);\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllPrescriptions();\r\n    axios.get(BASE_URL+'/patients').then(res => setPatients(res.data)).catch(() => setPatients([]));\r\n    axios.get(BASE_URL+'/doctors').then(res => setDoctors(res.data)).catch(() => setDoctors([]));\r\n    axios.get(BASE_URL+'/clinics').then(res => setClinics(res.data)).catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  const getAllPrescriptions = () => {\r\n    setLoading(true);\r\n\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/prescriptions.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setPrescriptions(data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      fetch(BASE_URL + '/prescriptions')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setPrescriptions(data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  // Helper functions to get names by ID\r\n  const getPatientName = id => {\r\n    const p = patients.find(x => x.id === id);\r\n    return p ? (p.fullName || p.name || p.id) : id;\r\n  };\r\n  const getDoctorName = id => {\r\n    const d = doctors.find(x => x.id === id);\r\n    return d ? (d.fullName || d.name || d.id) : id;\r\n  };\r\n  const getClinicName = id => {\r\n    const c = clinics.find(x => x.id === id);\r\n    return c ? (c.name || c.clinicName || c.id) : id;\r\n  };\r\n\r\n  // Actions\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setSelectedPrescription(actionRow);\r\n    setEditDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleView = () => {\r\n    setSelectedPrescription(actionRow);\r\n    setViewDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleAddMedicament = () => {\r\n    setSelectedPrescription(actionRow);\r\n    setAddMedicamentDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\")) {\r\n      prescriptionHTTPService.removePrescription([actionRow.id])\r\n        .then(() => {\r\n          setNotification({ open: true, message: 'Prescription deleted', severity: 'success' });\r\n          getAllPrescriptions();\r\n        })\r\n        .catch(() => setNotification({ open: true, message: 'Error deleting', severity: 'error' }));\r\n    }\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleBulkDelete = () => {\r\n    if (window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\")) {\r\n      prescriptionHTTPService.removePrescription(selectedIds)\r\n        .then(() => {\r\n          setNotification({ open: true, message: 'Prescriptions deleted', severity: 'success' });\r\n          getAllPrescriptions();\r\n        })\r\n        .catch(() => setNotification({ open: true, message: 'Error deleting', severity: 'error' }));\r\n    }\r\n  };\r\n\r\n  // For medication warnings (mock logic)\r\n  const getMedicationWarnings = (prescription) => {\r\n    // Example: if patient has allergy to \"Penicillin\"\r\n    if (prescription && prescription.medications?.some(m => m.medicationName === 'Penicillin')) {\r\n      return \"Warning: Patient is allergic to Penicillin!\";\r\n    }\r\n    // Add more logic for drug interactions\r\n    return null;\r\n  };\r\n\r\n  // Bulk status update\r\n  const handleBulkStatusUpdate = (status) => {\r\n    // Call your backend here\r\n    setNotification({ open: true, message: `Marked as ${status}`, severity: 'success' });\r\n    // Optionally refresh data\r\n  };\r\n\r\n  // Print/download PDF (mock)\r\n  const handlePrint = () => window.print();\r\n  const handleDownloadPDF = () => setNotification({ open: true, message: 'PDF downloaded (mock)', severity: 'info' });\r\n\r\n  // PDF generation\r\n  const generatePrescriptionPDF = (prescription) => {\r\n    const doc = new jsPDF({\r\n      orientation: 'portrait',\r\n      unit: 'pt',\r\n      format: 'A4'\r\n    });\r\n\r\n    // Header\r\n    doc.setFillColor('#1976d2');\r\n    doc.rect(0, 0, 595, 70, 'F');\r\n    doc.setFontSize(24);\r\n    doc.setTextColor('#fff');\r\n    doc.setFont('times', 'bold');\r\n    doc.text('Dentic Clinic Prescription', 45, 45);\r\n\r\n    // Title\r\n    doc.setFontSize(18);\r\n    doc.setTextColor('#1976d2');\r\n    doc.setFont('times', 'bold');\r\n    doc.text('Medical Prescription', 200, 100);\r\n\r\n    // Patient/Doctor/Clinic Info\r\n    doc.setFontSize(12);\r\n    doc.setTextColor('#222');\r\n    doc.setFont('times', 'normal');\r\n    let y = 130;\r\n    const left = 45;\r\n    doc.text(`Patient: `, left, y);\r\n    doc.setFont('times', 'bold');\r\n    doc.text(getPatientName(prescription.patientId), left + 60, y);\r\n    doc.setFont('times', 'normal');\r\n    y += 20;\r\n    doc.text(`Doctor: `, left, y);\r\n    doc.setFont('times', 'bold');\r\n    doc.text(getDoctorName(prescription.doctorId), left + 60, y);\r\n    doc.setFont('times', 'normal');\r\n    y += 20;\r\n    doc.text(`Clinic: `, left, y);\r\n    doc.setFont('times', 'bold');\r\n    doc.text(getClinicName(prescription.clinicId), left + 60, y);\r\n    doc.setFont('times', 'normal');\r\n    y += 20;\r\n    doc.text(`Prescribed On: `, left, y);\r\n    doc.setFont('times', 'bold');\r\n    doc.text(prescription.prescriptionDate ? new Date(prescription.prescriptionDate).toLocaleDateString() : '-', left + 90, y);\r\n    doc.setFont('times', 'normal');\r\n    y += 20;\r\n    doc.text(`Valid Until: `, left, y);\r\n    doc.setFont('times', 'bold');\r\n    doc.text(prescription.validUntil ? new Date(prescription.validUntil).toLocaleDateString() : '-', left + 80, y);\r\n\r\n    // Medications\r\n    y += 35;\r\n    doc.setFont('times', 'bold');\r\n    doc.setFontSize(14);\r\n    doc.text('Medications:', left, y);\r\n    doc.setFont('times', 'normal');\r\n    doc.setFontSize(12);\r\n    y += 18;\r\n    if (prescription.medications && prescription.medications.length > 0) {\r\n      prescription.medications.forEach((m, idx) => {\r\n        doc.text(\r\n          `${idx + 1}. ${m.medicationName} (${m.dosage}, ${m.frequency})`,\r\n          left + 10,\r\n          y\r\n        );\r\n        y += 16;\r\n      });\r\n    } else {\r\n      doc.text('No medications listed.', left + 10, y);\r\n      y += 16;\r\n    }\r\n\r\n    // Notes\r\n    if (prescription.notes) {\r\n      y += 18;\r\n      doc.setFont('times', 'bold');\r\n      doc.text('Notes:', left, y);\r\n      doc.setFont('times', 'normal');\r\n      const notesLines = doc.splitTextToSize(prescription.notes, 480);\r\n      doc.text(notesLines, left + 50, y);\r\n      y += notesLines.length * 14;\r\n    }\r\n\r\n    // Status\r\n    y += 18;\r\n    doc.setFont('times', 'bold');\r\n    doc.text('Status:', left, y);\r\n    doc.setFont('times', 'normal');\r\n    doc.text(prescription.status, left + 50, y);\r\n\r\n    // Signature area\r\n    y += 60;\r\n    doc.setDrawColor('#1976d2');\r\n    doc.line(400, y, 555, y);\r\n    doc.setFontSize(14);\r\n    doc.setTextColor('#1976d2');\r\n    doc.setFont('times', 'italic');\r\n    doc.text(getDoctorName(prescription.doctorId), 420, y + 18);\r\n    doc.setFont('times', 'normal');\r\n    doc.setFontSize(11);\r\n    doc.setTextColor('#222');\r\n    doc.text('Doctor Signature', 420, y + 34);\r\n\r\n    // Footer\r\n    doc.setFontSize(10);\r\n    doc.setTextColor('#888');\r\n    doc.text('This prescription was generated electronically by Dentic Clinic.', left, 800);\r\n\r\n    doc.save(`prescription_${prescription.id || ''}.pdf`);\r\n  };\r\n\r\n  // Update columns for status chip and view action\r\n  const columns = [\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 200,\r\n      valueGetter: params => getPatientName(params.row.patientId), // Shows patient name\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor',\r\n      width: 200,\r\n      valueGetter: params => getDoctorName(params.row.doctorId), // Shows doctor name\r\n    },\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: 200,\r\n      valueGetter: params => getClinicName(params.row.clinicId), // Shows clinic name\r\n    },\r\n    {\r\n      field: 'medications',\r\n      headerName: 'Medications',\r\n      width: 220,\r\n      renderCell: (params) =>\r\n        params.value && params.value.length > 0\r\n          ? params.value.map(m => `${m.medicationName} (${m.dosage}, ${m.frequency})`).join(', ')\r\n          : '-'\r\n    },\r\n    {\r\n      field: 'prescriptionDate',\r\n      headerName: 'Prescribed On',\r\n      width: 150,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleDateString() : ''\r\n    },\r\n    {\r\n      field: 'validUntil',\r\n      headerName: 'Valid Until',\r\n      width: 150,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleDateString() : ''\r\n    },\r\n    { field: 'refillAllowed', headerName: 'Refill Allowed', width: 120 },\r\n    { field: 'refillCount', headerName: 'Refill Count', width: 110 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 110,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={statusColors[params.value] || 'default'}\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 90,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"action-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleActionClick(event, params.row)}\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <Tooltip title=\"View Details\">\r\n            <IconButton size=\"small\" onClick={() => { setSelectedPrescription(params.row); setDrawerOpen(true); }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </>\r\n      ),\r\n    }\r\n  ];\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i> Prescriptions\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => setAddDialogOpen(true)}\r\n          sx={{ mb: 2 }}\r\n        >\r\n          <i className=\"fas fa-plus\"></i> Create\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={getAllPrescriptions}\r\n          sx={{ mb: 2, ml: 2 }}\r\n        >\r\n          <i className=\"fas fa-refresh\"></i> Reload\r\n        </Button>\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={prescriptions}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection\r\n              components={{ Toolbar: GridToolbar }}\r\n              onSelectionModelChange={ids => setSelectedIds(ids)}\r\n            />\r\n            <Menu\r\n              id=\"action-menu\"\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleView}>View</MenuItem>\r\n              <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  generatePrescriptionPDF(actionRow);\r\n                  handleActionClose();\r\n                }}\r\n              >\r\n                Generate PDF\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Prescription Dialog */}\r\n        <Dialog open={addDialogOpen} onClose={() => setAddDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Add Prescription</DialogTitle>\r\n          <DialogContent>\r\n            <AddPrescription closeModal={() => { setAddDialogOpen(false); getAllPrescriptions(); }} />\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* Edit Prescription Dialog */}\r\n        <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Edit Prescription</DialogTitle>\r\n          <DialogContent>\r\n            <EditPrescription updatedItem={selectedPrescription} closeModal={() => { setEditDialogOpen(false); getAllPrescriptions(); }} />\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* View Prescription Dialog */}\r\n        <Dialog open={viewDialogOpen} onClose={() => setViewDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            <span style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n              <i className=\"fas fa-prescription-bottle-alt\" style={{ color: '#1976d2', fontSize: 22 }} />\r\n              Prescription Details\r\n            </span>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {selectedPrescription ? (\r\n              <div>\r\n                <Box\r\n                  sx={{\r\n                    bgcolor: '#fafdff',\r\n                    borderRadius: 2,\r\n                    boxShadow: 1,\r\n                    p: { xs: 2, sm: 3 },\r\n                    minWidth: 320,\r\n                    minHeight: 200,\r\n                    mb: 2\r\n                  }}\r\n                >\r\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                    <Chip\r\n                      label={`Patient: ${getPatientName(selectedPrescription.patientId)}`}\r\n                      color=\"primary\"\r\n                      icon={<i className=\"fas fa-user\"></i>}\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Doctor: ${getDoctorName(selectedPrescription.doctorId)}`}\r\n                      color=\"info\"\r\n                      icon={<i className=\"fas fa-user-md\"></i>}\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Clinic: ${getClinicName(selectedPrescription.clinicId)}`}\r\n                      color=\"success\"\r\n                      icon={<i className=\"fas fa-hospital\"></i>}\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Status: ${selectedPrescription.status}`}\r\n                      color={statusColors[selectedPrescription.status] || 'default'}\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                  </Stack>\r\n                  <Divider sx={{ mb: 2 }} />\r\n                  <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                    <Chip\r\n                      label={`Prescribed On: ${selectedPrescription.prescriptionDate ? new Date(selectedPrescription.prescriptionDate).toLocaleDateString() : '-'}`}\r\n                      color=\"default\"\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Valid Until: ${selectedPrescription.validUntil ? new Date(selectedPrescription.validUntil).toLocaleDateString() : '-'}`}\r\n                      color=\"warning\"\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Refill Allowed: ${selectedPrescription.refillAllowed ? 'Yes' : 'No'}`}\r\n                      color={selectedPrescription.refillAllowed ? 'success' : 'default'}\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Refill Count: ${selectedPrescription.refillCount ?? '-'}`}\r\n                      color=\"info\"\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                  </Stack>\r\n                  <Divider sx={{ mb: 2 }} />\r\n                  <Typography variant=\"subtitle1\" fontWeight={600} sx={{ mb: 1 }}>\r\n                    Medications:\r\n                  </Typography>\r\n                  <Stack spacing={1} sx={{ mb: 2 }}>\r\n                    {selectedPrescription.medications?.length > 0 ? (\r\n                      selectedPrescription.medications.map((m, idx) => (\r\n                        <Chip\r\n                          key={idx}\r\n                          label={`${m.medicationName} (${m.dosage}, ${m.frequency})`}\r\n                          color=\"primary\"\r\n                          variant=\"outlined\"\r\n                          sx={{ fontWeight: 600, fontSize: 14, mb: 0.5 }}\r\n                        />\r\n                      ))\r\n                    ) : (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">No medications listed.</Typography>\r\n                    )}\r\n                  </Stack>\r\n                  <Divider sx={{ mb: 2 }} />\r\n                  <Typography variant=\"subtitle2\" fontWeight={600}>Notes:</Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 2 }}>{selectedPrescription.notes || '-'}</Typography>\r\n                  {/* Medication Warnings */}\r\n                  {getMedicationWarnings(selectedPrescription) && (\r\n                    <Alert severity=\"warning\" sx={{ mt: 2 }}>\r\n                      {getMedicationWarnings(selectedPrescription)}\r\n                    </Alert>\r\n                  )}\r\n                </Box>\r\n                <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n                  <Button variant=\"outlined\" startIcon={<PrintIcon />} onClick={handlePrint}>Print</Button>\r\n                  <Button variant=\"outlined\" startIcon={<DownloadIcon />} onClick={() => generatePrescriptionPDF(selectedPrescription)}>Download PDF</Button>\r\n                </Stack>\r\n              </div>\r\n            ) : (\r\n              <Typography>No prescription selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewDialogOpen(false)} color=\"secondary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Add Medicament Item Dialog */}\r\n        <Dialog open={addMedicamentDialogOpen} onClose={() => setAddMedicamentDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Add Medicament Item</DialogTitle>\r\n          <DialogContent>\r\n            <AddMedicamentItem updatedItem={selectedPrescription} />\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* Detailed View Drawer */}\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={drawerOpen}\r\n          onClose={() => setDrawerOpen(false)}\r\n          PaperProps={{ sx: { width: { xs: 320, sm: 480 } } }}\r\n        >\r\n          <div style={{ padding: 24, maxWidth: 480 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Prescription Details\r\n            </Typography>\r\n            {selectedPrescription && (\r\n              <>\r\n                <Typography variant=\"subtitle2\">Patient: {getPatientName(selectedPrescription.patientId)}</Typography>\r\n                <Typography variant=\"subtitle2\">Doctor: {getDoctorName(selectedPrescription.doctorId)}</Typography>\r\n                <Typography variant=\"subtitle2\">Clinic: {getClinicName(selectedPrescription.clinicId)}</Typography>\r\n                <Typography variant=\"subtitle2\">Prescribed On: {selectedPrescription.prescriptionDate ? new Date(selectedPrescription.prescriptionDate).toLocaleDateString() : '-'}</Typography>\r\n                <Typography variant=\"subtitle2\">Valid Until: {selectedPrescription.validUntil ? new Date(selectedPrescription.validUntil).toLocaleDateString() : '-'}</Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Medications:</Typography>\r\n                <ul>\r\n                  {selectedPrescription.medications?.map((m, idx) => (\r\n                    <li key={idx}>\r\n                      <strong>{m.medicationName}</strong> ({m.dosage}, {m.frequency})\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                <Typography variant=\"subtitle2\">Notes:</Typography>\r\n                <Typography variant=\"body2\">{selectedPrescription.notes || '-'}</Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Status: <Chip label={selectedPrescription.status} color={statusColors[selectedPrescription.status] || 'default'} size=\"small\" /></Typography>\r\n                {/* Medication Warnings */}\r\n                {getMedicationWarnings(selectedPrescription) && (\r\n                  <Alert severity=\"warning\" sx={{ mt: 2 }}>\r\n                    {getMedicationWarnings(selectedPrescription)}\r\n                  </Alert>\r\n                )}\r\n                {/* Print/Download PDF */}\r\n                <div style={{ marginTop: 24, display: 'flex', gap: 8 }}>\r\n                  <Button variant=\"outlined\" startIcon={<PrintIcon />} onClick={handlePrint}>Print</Button>\r\n                  <Button variant=\"outlined\" startIcon={<DownloadIcon />} onClick={() => generatePrescriptionPDF(selectedPrescription)}>Download PDF</Button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Drawer>\r\n\r\n        {/* Snackbar Notifications */}\r\n        <Snackbar\r\n          open={notification.open}\r\n          autoHideDuration={3000}\r\n          onClose={() => setNotification({ ...notification, open: false })}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n        >\r\n          <Alert onClose={() => setNotification({ ...notification, open: false })} severity={notification.severity} sx={{ width: '100%' }}>\r\n            {notification.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPrescription.propTypes = {};\r\nPrescription.defaultProps = {};\r\nexport default Prescription;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllPayment = () => {\r\n    return http.get(`${BASE_URL}/payments`)\r\n}\r\nconst createPayment = data => {\r\n    return http.post(`${BASE_URL}/payments`, data);\r\n};\r\n\r\nconst editPayment = (id, data) => {\r\n    return http.put(`${BASE_URL}/payments/${id}`, data);\r\n};\r\n\r\nconst removePayment = id => {\r\n    return http.delete(`${BASE_URL}/payments/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllPayment,\r\n    createPayment,\r\n    editPayment,\r\n    removePayment\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport paymentHTTPService from '../../main/services/paymentHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst paymentMethods = ['Cash', 'Credit Card', 'Bank Transfer', 'Insurance', 'Other'];\r\nconst paymentStatuses = ['Completed', 'Pending', 'Failed', 'Refunded'];\r\nconst currencies = ['USD', 'EUR', 'GBP', 'DZD', 'Other'];\r\n\r\nconst AddPayment = (props) => {\r\n  const initialState = {\r\n    patientId: '',\r\n    appointmentId: '',\r\n    invoiceId: '',\r\n    clinicId: '',\r\n    amount: '',\r\n    currency: 'USD',\r\n    paymentMethod: '',\r\n    transactionId: '',\r\n    insuranceClaimId: '',\r\n    paymentStatus: 'Completed',\r\n    paymentDate: '',\r\n    notes: ''\r\n  };\r\n\r\n  const [payment, setPayment] = useState(initialState);\r\n  const [patients, setPatients] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getAllPatients();\r\n  }, []);\r\n\r\n  const getAllPatients = () => {\r\n    patientHTTPService.getAllPatients()\r\n      .then(response => setPatients(response.data))\r\n      .catch(() => showMessage('Error', CurrentUser.ERR_MSG, 'warning'));\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setPayment({ ...payment, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...payment,\r\n      id: payment.id || Math.random().toString(36).substr(2, 9),\r\n      amount: Number(payment.amount),\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    paymentHTTPService.createPayment(data)\r\n      .then(() => {\r\n        setPayment(initialState);\r\n        if (props.closeModal) props.closeModal(data);\r\n        showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success');\r\n      })\r\n      .catch(() => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2, maxWidth: 500 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          select\r\n          label=\"Patient\"\r\n          name=\"patientId\"\r\n          value={payment.patientId}\r\n          onChange={handleInputChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {patients.map((p) => (\r\n            <MenuItem key={p.id} value={p.id}>\r\n              {p.fullName || p.namepatient || p.id}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Appointment ID\"\r\n          name=\"appointmentId\"\r\n          value={payment.appointmentId}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Invoice ID\"\r\n          name=\"invoiceId\"\r\n          value={payment.invoiceId}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Clinic ID\"\r\n          name=\"clinicId\"\r\n          value={payment.clinicId}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Amount\"\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          value={payment.amount}\r\n          onChange={handleInputChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Currency\"\r\n          name=\"currency\"\r\n          value={payment.currency}\r\n          onChange={handleInputChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {currencies.map(cur => (\r\n            <MenuItem key={cur} value={cur}>{cur}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Payment Method\"\r\n          name=\"paymentMethod\"\r\n          value={payment.paymentMethod}\r\n          onChange={handleInputChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {paymentMethods.map(method => (\r\n            <MenuItem key={method} value={method}>{method}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Transaction ID\"\r\n          name=\"transactionId\"\r\n          value={payment.transactionId}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Insurance Claim ID\"\r\n          name=\"insuranceClaimId\"\r\n          value={payment.insuranceClaimId}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Payment Status\"\r\n          name=\"paymentStatus\"\r\n          value={payment.paymentStatus}\r\n          onChange={handleInputChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {paymentStatuses.map(status => (\r\n            <MenuItem key={status} value={status}>{status}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Payment Date\"\r\n          name=\"paymentDate\"\r\n          type=\"datetime-local\"\r\n          value={payment.paymentDate}\r\n          onChange={handleInputChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Notes\"\r\n          name=\"notes\"\r\n          value={payment.notes}\r\n          onChange={handleInputChange}\r\n          multiline\r\n          rows={2}\r\n          fullWidth\r\n        />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={() => props.closeModal && props.closeModal()} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddPayment;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditPayment.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport paymentHTTPService from '../../main/services/paymentHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditPayment = (props) => {\r\n\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [payment, setPayment] = useState(props.payment);\r\n\r\n  useEffect(() => {\r\n    setPayment(props.payment)\r\n  }, [props.payment]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    paymentHTTPService.editPayment(props.payment.id, data)\r\n    props.closeModal(data)\r\n    showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setPayment({ ...payment, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditPayment\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Invoice:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={payment?.invoiceNumber} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"invoiceNumber\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" >\r\n                <option value=\"1\">INV001</option>\r\n              </select>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Payment Date:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={payment?.paymentDate} ref={register({ required: true })}\r\n                type=\"date\" name=\"paymentDate\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Payment Mode</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={payment?.paymenMode} ref={register({ required: true })}\r\n                type=\"text\" name=\"paymenMode\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n                <option>Cash</option>\r\n                <option>Credit Card</option>\r\n              </select>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Amount received:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={payment?.amountReceived} ref={register({ required: true })}\r\n                name=\"amountReceived\" class=\"form-control\" rows=\"3\" type=\"text\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Invoice Balance Due :</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={payment?.invoiceBlanceDue} ref={register({ required: true })}\r\n                name=\"invoiceBlanceDue\" class=\"form-control\" rows=\"3\" type=\"date\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form >\r\n    </div>\r\n  )\r\n};\r\n\r\nEditPayment.propTypes = {};\r\n\r\nEditPayment.defaultProps = {};\r\n\r\nexport default EditPayment;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Payment.css';\r\nimport { LoadJSFiles } from './../init';\r\nimport useForceUpdate from 'use-force-update';\r\nimport paymentHTTPService from '../../main/services/paymentHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport AddPayment from '../AddPayment/AddPayment';\r\nimport EditPayment from '../EditPayment/EditPayment';\r\nimport { Button, LinearProgress, Typography, Menu, MenuItem, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Chip, Box, Divider, Stack } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport CurrentUser from '../../main/config/user';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst deleteTask = () => {\r\n  return window.confirm(\"Êtes-vous sûr de vouloir supprimer cette tache ?\")\r\n}\r\n\r\nconst Payment = () => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [patients, setPatients] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [viewItem, setViewItem] = useState(null);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllPayments()\r\n    // Fetch patients\r\n    fetch(`${BASE_URL}/patients`)\r\n      .then(res => res.json())\r\n      .then(data => setPatients(data));\r\n    // Fetch clinics\r\n    fetch(`${BASE_URL}/clinics`)\r\n      .then(res => res.json())\r\n      .then(data => setClinics(data));\r\n  }, []);\r\n\r\n  const getAllPayments = () => {\r\n    setLoading(true);\r\n\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/payments.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setPayments(data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      paymentHTTPService.getAllPayment()\r\n        .then(response => {\r\n          setPayments(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllPayments()\r\n    // forceUpdate()\r\n  }\r\n\r\n  const removePaymentAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success')\r\n      paymentHTTPService.removePayment(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updatePaymentAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  // Helper functions to get names\r\n  const getPatientName = (id) => {\r\n    const pat = patients.find(p => p.id === id);\r\n    return pat ? pat.fullName : 'Patient not found';\r\n  };\r\n  const getClinicName = (id) => {\r\n    const clinic = clinics.find(c => c.id === id);\r\n    return clinic ? clinic.name : 'Clinic not found';\r\n  };\r\n\r\n  // Actions menu for each row\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton onClick={(event) => { setAnchorEl(event.currentTarget); setSelectedRow(params.row); }}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\r\n        <MenuItem onClick={() => {\r\n          setViewItem(params.row);\r\n          setViewOpen(true);\r\n          setAnchorEl(null);\r\n        }}>View</MenuItem>\r\n        <MenuItem onClick={() => { updatePaymentAction({}, params.row); setAnchorEl(null); }}>Edit</MenuItem>\r\n        <MenuItem onClick={() => { removePaymentAction({}, [params.row.id]); setAnchorEl(null); }}>Delete</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  // Columns for Payment object (do not show id, createdAt, updatedAt)\r\n  const columns = [\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Chip label={getPatientName(params.value)} color=\"primary\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Chip label={getClinicName(params.value)} color=\"info\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"success\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'currency',\r\n      headerName: 'Currency',\r\n      width: 100,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"default\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentMethod',\r\n      headerName: 'Payment Method',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"info\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentStatus',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Paid'\r\n              ? 'success'\r\n              : params.value === 'Pending'\r\n                ? 'warning'\r\n                : 'default'\r\n          }\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentDate',\r\n      headerName: 'Payment Date',\r\n      width: 160,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={new Date(params.value).toLocaleString()}\r\n          color=\"default\"\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      renderCell: renderActionsMenu\r\n    }\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = payments.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n\r\n\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Payments\r\n        </Typography>\r\n        <br />\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          type=\"button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#addPayment\"\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          onClick={e => updatePaymentAction(e, updatedItem)}\r\n          type=\"button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#editPayment\"\r\n          startIcon={<i className=\"fas fa-edit\"></i>}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          onClick={e => removePaymentAction(e, updatedItemIds)}\r\n          type=\"button\"\r\n          startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n        >\r\n          Remove\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, fontWeight: 600 }}\r\n          type=\"button\"\r\n          onClick={() => getAllPayments()}\r\n          startIcon={<i className=\"fas fa-refresh\"></i>}\r\n        >\r\n          Reload\r\n        </Button>\r\n        <br /><br />\r\n\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={payments}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[5, 10, 15, 20]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n            autoHeight\r\n          /></div>}\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddPayment closeModal={closeModalAdd} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" ref={closeButtonAdd} data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <EditPayment closeModal={closeModalEdit} payment={updatedItem} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" ref={closeButtonEdit} class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Add this MUI Dialog for viewing payment details */}\r\n        <Dialog open={viewOpen} onClose={() => setViewOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>View Payment</DialogTitle>\r\n          <DialogContent>\r\n            {viewItem ? (\r\n              <Box sx={{\r\n                bgcolor: '#fafdff',\r\n                borderRadius: 2,\r\n                boxShadow: 1,\r\n                p: { xs: 2, sm: 3 },\r\n                minWidth: 320,\r\n                minHeight: 200,\r\n                mb: 2\r\n              }}>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip label={getPatientName(viewItem.patientId)} color=\"primary\" icon={<i className=\"fas fa-user\"></i>} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={getClinicName(viewItem.clinicId)} color=\"info\" icon={<i className=\"fas fa-hospital\"></i>} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Amount: ${viewItem.amount} ${viewItem.currency}`} color=\"success\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={viewItem.paymentMethod} color=\"info\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={viewItem.paymentStatus} color={viewItem.paymentStatus === 'Paid' ? 'success' : viewItem.paymentStatus === 'Pending' ? 'warning' : 'default'} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                  <b>Appointment ID:</b> {viewItem.appointmentId}<br />\r\n                  <b>Invoice ID:</b> {viewItem.invoiceId}<br />\r\n                  <b>Transaction ID:</b> {viewItem.transactionId}<br />\r\n                  <b>Insurance Claim:</b> {viewItem.insuranceClaimId}<br />\r\n                  <b>Payment Date:</b> {viewItem.paymentDate ? new Date(viewItem.paymentDate).toLocaleString() : '-'}<br />\r\n                  <b>Notes:</b> {viewItem.notes}\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No payment selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"primary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nPayment.propTypes = {};\r\n\r\nPayment.defaultProps = {};\r\n\r\nexport default Payment;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box, Button, TextField, Typography, IconButton, Stack, Paper, Divider, Grid, Card, CardContent,\r\n  MenuItem\r\n} from '@mui/material';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport MedicalServicesIcon from '@mui/icons-material/MedicalServices';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst bloodTypes = ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'];\r\n\r\nconst AddPatient = ({ closeModal }) => {\r\n  const initialState = {\r\n    fullName: '',\r\n    medicalRecordNumber: '', // <-- Add this field\r\n    insuranceId: '',\r\n    bloodType: '',\r\n    allergies: [''],\r\n    medicalHistory: [{ notes: '', condition: '', diagnosedAt: '' }],\r\n    currentMedications: [{ name: '', dosage: '', frequency: '', prescribedBy: '' }],\r\n    emergencyContact: { name: '', phone: '', relationship: '' },\r\n    nationalId: '' // <-- new field\r\n  };\r\n\r\n  const [patient, setPatient] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Handlers for fields\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setPatient({ ...patient, [name]: value });\r\n  };\r\n\r\n  const handleAllergyChange = (idx, value) => {\r\n    const updated = [...patient.allergies];\r\n    updated[idx] = value;\r\n    setPatient({ ...patient, allergies: updated });\r\n  };\r\n\r\n  const handleMedicalHistoryChange = (idx, field, value) => {\r\n    const updated = [...patient.medicalHistory];\r\n    updated[idx][field] = value;\r\n    setPatient({ ...patient, medicalHistory: updated });\r\n  };\r\n\r\n  const handleMedicationChange = (idx, field, value) => {\r\n    const updated = [...patient.currentMedications];\r\n    updated[idx][field] = value;\r\n    setPatient({ ...patient, currentMedications: updated });\r\n  };\r\n\r\n  const handleEmergencyContactChange = (field, value) => {\r\n    setPatient({ ...patient, emergencyContact: { ...patient.emergencyContact, [field]: value } });\r\n  };\r\n\r\n  // Add/Remove for dynamic fields\r\n  const addAllergy = () => setPatient({ ...patient, allergies: [...patient.allergies, ''] });\r\n  const removeAllergy = idx => setPatient({ ...patient, allergies: patient.allergies.filter((_, i) => i !== idx) });\r\n\r\n  const addMedicalHistory = () => setPatient({ ...patient, medicalHistory: [...patient.medicalHistory, { notes: '', condition: '', diagnosedAt: '' }] });\r\n  const removeMedicalHistory = idx => setPatient({ ...patient, medicalHistory: patient.medicalHistory.filter((_, i) => i !== idx) });\r\n\r\n  const addMedication = () => setPatient({ ...patient, currentMedications: [...patient.currentMedications, { name: '', dosage: '', frequency: '', prescribedBy: '' }] });\r\n  const removeMedication = idx => setPatient({ ...patient, currentMedications: patient.currentMedications.filter((_, i) => i !== idx) });\r\n\r\n  // Submit handler\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    // Validation for required fields (remove medicalRecordNumber)\r\n    if (\r\n      !patient.fullName ||\r\n      !patient.insuranceId ||\r\n      !patient.bloodType\r\n    ) {\r\n      showMessage('Error', 'Please fill all required fields.', 'warning');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Do not include medicalRecordNumber in patientData\r\n    const patientData = {\r\n      fullName: patient.fullName,\r\n      medicalRecordNumber: patient.medicalRecordNumber, // <-- Add this field\r\n      insuranceId: patient.insuranceId,\r\n      bloodType: patient.bloodType,\r\n      nationalId: patient.nationalId,\r\n      allergies: patient.allergies.filter(a => a.trim() !== ''),\r\n      medicalHistory: patient.medicalHistory.map(mh => ({\r\n        condition: mh.condition,\r\n        diagnosedAt: mh.diagnosedAt,\r\n        notes: mh.notes\r\n      })),\r\n      currentMedications: patient.currentMedications.map(med => ({\r\n        name: med.name,\r\n        dosage: med.dosage,\r\n        frequency: med.frequency,\r\n        prescribedBy: med.prescribedBy\r\n      })),\r\n      emergencyContact: {\r\n        name: patient.emergencyContact.name,\r\n        relationship: patient.emergencyContact.relationship,\r\n        phone: patient.emergencyContact.phone\r\n      }\r\n    };\r\n\r\n    console.log('Sent object:', patientData);\r\n\r\n    try {\r\n      await patientHTTPService.createPatient(patientData);\r\n      showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success');\r\n      setPatient(initialState);\r\n      if (closeModal) closeModal(patientData);\r\n    } catch (e) {\r\n      showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={onSubmit} sx={{ p: 3, maxWidth: 700, mx: 'auto', bgcolor: '#f8f9fa', borderRadius: 3, boxShadow: 2 }}>\r\n      <Typography variant=\"h5\" gutterBottom sx={{ fontWeight: 700, mb: 2, textAlign: 'center', color: '#1976d2' }}>\r\n        <PersonIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n        Add New Patient\r\n      </Typography>\r\n      <Divider sx={{ mb: 3 }} />\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Card variant=\"outlined\" sx={{ mb: 2 }}>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n                <MedicalServicesIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Basic Information\r\n              </Typography>\r\n              <Stack spacing={2}>\r\n                <TextField label=\"Full Name\" name=\"fullName\" value={patient.fullName} onChange={handleInputChange} required fullWidth />\r\n                <TextField label=\"Insurance ID\" name=\"insuranceId\" value={patient.insuranceId} onChange={handleInputChange} required fullWidth />\r\n                <TextField select label=\"Blood Type\" name=\"bloodType\" value={patient.bloodType} onChange={handleInputChange} required fullWidth>\r\n                  {bloodTypes.map(bt => <MenuItem key={bt} value={bt}>{bt}</MenuItem>)}\r\n                </TextField>\r\n                <TextField\r\n                  label=\"National ID\"\r\n                  name=\"nationalId\"\r\n                  value={patient.nationalId}\r\n                  onChange={handleInputChange}\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Medical Record Number\"\r\n                  name=\"medicalRecordNumber\"\r\n                  value={patient.medicalRecordNumber}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  fullWidth\r\n                />\r\n              </Stack>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card variant=\"outlined\" sx={{ mb: 2 }}>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n                <LocalHospitalIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Allergies\r\n              </Typography>\r\n              {patient.allergies.map((allergy, idx) => (\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx} sx={{ mb: 1 }}>\r\n                  <TextField\r\n                    label={`Allergy ${idx + 1}`}\r\n                    value={allergy}\r\n                    onChange={e => handleAllergyChange(idx, e.target.value)}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                  <IconButton\r\n                    color=\"error\"\r\n                    onClick={() => removeAllergy(idx)}\r\n                    disabled={patient.allergies.length === 1}\r\n                    aria-label=\"Remove allergy\"\r\n                  >\r\n                    <RemoveCircleOutlineIcon />\r\n                  </IconButton>\r\n                  {idx === patient.allergies.length - 1 && (\r\n                    <IconButton color=\"primary\" onClick={addAllergy} aria-label=\"Add allergy\">\r\n                      <AddCircleOutlineIcon />\r\n                    </IconButton>\r\n                  )}\r\n                </Stack>\r\n              ))}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Card variant=\"outlined\" sx={{ mb: 2 }}>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n                <MedicalServicesIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Medical History\r\n              </Typography>\r\n              {patient.medicalHistory.map((mh, idx) => (\r\n                <Paper key={idx} variant=\"outlined\" sx={{ p: 2, mb: 1, bgcolor: '#f5f5f5' }}>\r\n                  <Stack spacing={1}>\r\n                    <TextField\r\n                      label=\"Condition\"\r\n                      value={mh.condition}\r\n                      onChange={e => handleMedicalHistoryChange(idx, 'condition', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      label=\"Diagnosed At\"\r\n                      type=\"date\"\r\n                      value={mh.diagnosedAt}\r\n                      onChange={e => handleMedicalHistoryChange(idx, 'diagnosedAt', e.target.value)}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      label=\"Notes\"\r\n                      value={mh.notes}\r\n                      onChange={e => handleMedicalHistoryChange(idx, 'notes', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <IconButton\r\n                        color=\"error\"\r\n                        onClick={() => removeMedicalHistory(idx)}\r\n                        disabled={patient.medicalHistory.length === 1}\r\n                        aria-label=\"Remove medical history\"\r\n                      >\r\n                        <RemoveCircleOutlineIcon />\r\n                      </IconButton>\r\n                      {idx === patient.medicalHistory.length - 1 && (\r\n                        <IconButton color=\"primary\" onClick={addMedicalHistory} aria-label=\"Add medical history\">\r\n                          <AddCircleOutlineIcon />\r\n                        </IconButton>\r\n                      )}\r\n                    </Stack>\r\n                  </Stack>\r\n                </Paper>\r\n              ))}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card variant=\"outlined\" sx={{ mb: 2 }}>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n                <MedicalServicesIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Current Medications\r\n              </Typography>\r\n              {patient.currentMedications.map((med, idx) => (\r\n                <Paper key={idx} variant=\"outlined\" sx={{ p: 2, mb: 1, bgcolor: '#f5f5f5' }}>\r\n                  <Stack spacing={1}>\r\n                    <TextField\r\n                      label=\"Name\"\r\n                      value={med.name}\r\n                      onChange={e => handleMedicationChange(idx, 'name', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      label=\"Dosage\"\r\n                      value={med.dosage}\r\n                      onChange={e => handleMedicationChange(idx, 'dosage', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      label=\"Frequency\"\r\n                      value={med.frequency}\r\n                      onChange={e => handleMedicationChange(idx, 'frequency', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                    <TextField\r\n                      label=\"Prescribed By (Doctor ID)\"\r\n                      value={med.prescribedBy}\r\n                      onChange={e => handleMedicationChange(idx, 'prescribedBy', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required\r\n                    />\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <IconButton\r\n                        color=\"error\"\r\n                        onClick={() => removeMedication(idx)}\r\n                        disabled={patient.currentMedications.length === 1}\r\n                        aria-label=\"Remove medication\"\r\n                      >\r\n                        <RemoveCircleOutlineIcon />\r\n                      </IconButton>\r\n                      {idx === patient.currentMedications.length - 1 && (\r\n                        <IconButton color=\"primary\" onClick={addMedication} aria-label=\"Add medication\">\r\n                          <AddCircleOutlineIcon />\r\n                        </IconButton>\r\n                      )}\r\n                    </Stack>\r\n                  </Stack>\r\n                </Paper>\r\n              ))}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Card variant=\"outlined\" sx={{ mt: 3 }}>\r\n        <CardContent>\r\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n            <ContactPhoneIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n            Emergency Contact\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                label=\"Name\"\r\n                value={patient.emergencyContact.name}\r\n                onChange={e => handleEmergencyContactChange('name', e.target.value)}\r\n                fullWidth\r\n                size=\"small\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                label=\"Phone\"\r\n                value={patient.emergencyContact.phone}\r\n                onChange={e => handleEmergencyContactChange('phone', e.target.value)}\r\n                fullWidth\r\n                size=\"small\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                label=\"Relationship\"\r\n                value={patient.emergencyContact.relationship}\r\n                onChange={e => handleEmergencyContactChange('relationship', e.target.value)}\r\n                fullWidth\r\n                size=\"small\"\r\n                required\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 4, justifyContent: 'center' }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"success\" size=\"large\" disabled={loading}>\r\n          <i className=\"fa fa-check\"></i> Save Patient\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"secondary\" size=\"large\" onClick={() => closeModal && closeModal()} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddPatient;\r\n","import React from 'react';\r\nimport { Box, Typography, Stack, Paper, Divider, Chip, Avatar } from '@mui/material';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport BloodtypeIcon from '@mui/icons-material/Bloodtype';\r\nimport MedicationIcon from '@mui/icons-material/Medication';\r\nimport HistoryEduIcon from '@mui/icons-material/HistoryEdu';\r\nimport ContactEmergencyIcon from '@mui/icons-material/ContactEmergency';\r\n\r\nconst ViewPatient = ({ patient }) => {\r\n  if (!patient) return (\r\n    <Box sx={{ p: 4, textAlign: 'center' }}>\r\n      <Typography color=\"text.secondary\">No patient selected.</Typography>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ p: 3, maxWidth: 650, mx: 'auto', bgcolor: '#fafdff', borderRadius: 3, boxShadow: 2 }}>\r\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 2 }}>\r\n        <Avatar sx={{ bgcolor: 'primary.main', width: 56, height: 56 }}>\r\n          <PersonIcon fontSize=\"large\" />\r\n        </Avatar>\r\n        <Box>\r\n          <Typography variant=\"h5\" fontWeight={700} color=\"primary\">\r\n            {patient.fullName}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n            User ID: {patient.userId}\r\n          </Typography>\r\n        </Box>\r\n      </Stack>\r\n\r\n      <Divider sx={{ mb: 2 }} />\r\n\r\n      <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n        <Chip icon={<LocalHospitalIcon />} label={`MRN: ${patient.medicalRecordNumber || '-'}`} color=\"info\" variant=\"outlined\" />\r\n        <Chip icon={<BloodtypeIcon />} label={`Blood: ${patient.bloodType || '-'}`} color=\"error\" variant=\"outlined\" />\r\n        <Chip label={`Insurance: ${patient.insuranceId || '-'}`} color=\"success\" variant=\"outlined\" />\r\n      </Stack>\r\n\r\n      <Divider sx={{ my: 2 }} />\r\n\r\n      {/* Allergies */}\r\n      <Typography variant=\"subtitle1\" sx={{ mb: 1, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <HistoryEduIcon fontSize=\"small\" color=\"warning\" /> Allergies\r\n      </Typography>\r\n      {patient.allergies && patient.allergies.length > 0 ? (\r\n        <Stack spacing={0.5} sx={{ mb: 2 }}>\r\n          {patient.allergies.map((allergy, idx) => (\r\n            <Chip key={idx} label={allergy} color=\"warning\" variant=\"outlined\" sx={{ ml: 1 }} />\r\n          ))}\r\n        </Stack>\r\n      ) : (\r\n        <Typography sx={{ ml: 2, mb: 2 }} color=\"text.secondary\">None</Typography>\r\n      )}\r\n\r\n      {/* Medical History */}\r\n      <Typography variant=\"subtitle1\" sx={{ mb: 1, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <HistoryEduIcon fontSize=\"small\" color=\"primary\" /> Medical History\r\n      </Typography>\r\n      {patient.medicalHistory && patient.medicalHistory.length > 0 ? (\r\n        <Stack spacing={1} sx={{ mb: 2 }}>\r\n          {patient.medicalHistory.map((mh, idx) => (\r\n            <Paper key={idx} variant=\"outlined\" sx={{ p: 1.5, bgcolor: '#f3f6fb' }}>\r\n              <Typography><b>Condition:</b> {mh.condition}</Typography>\r\n              <Typography><b>Diagnosed At:</b> {mh.diagnosedAt}</Typography>\r\n              <Typography><b>Notes:</b> {mh.notes}</Typography>\r\n            </Paper>\r\n          ))}\r\n        </Stack>\r\n      ) : (\r\n        <Typography sx={{ ml: 2, mb: 2 }} color=\"text.secondary\">None</Typography>\r\n      )}\r\n\r\n      {/* Current Medications */}\r\n      <Typography variant=\"subtitle1\" sx={{ mb: 1, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <MedicationIcon fontSize=\"small\" color=\"info\" /> Current Medications\r\n      </Typography>\r\n      {patient.currentMedications && patient.currentMedications.length > 0 ? (\r\n        <Stack spacing={1} sx={{ mb: 2 }}>\r\n          {patient.currentMedications.map((med, idx) => (\r\n            <Paper key={idx} variant=\"outlined\" sx={{ p: 1.5, bgcolor: '#f3f6fb' }}>\r\n              <Typography><b>Name:</b> {med.name}</Typography>\r\n              <Typography><b>Dosage:</b> {med.dosage}</Typography>\r\n              <Typography><b>Frequency:</b> {med.frequency}</Typography>\r\n              <Typography><b>Prescribed By:</b> {med.prescribedBy}</Typography>\r\n            </Paper>\r\n          ))}\r\n        </Stack>\r\n      ) : (\r\n        <Typography sx={{ ml: 2, mb: 2 }} color=\"text.secondary\">None</Typography>\r\n      )}\r\n\r\n      {/* Emergency Contact */}\r\n      <Typography variant=\"subtitle1\" sx={{ mb: 1, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <ContactEmergencyIcon fontSize=\"small\" color=\"error\" /> Emergency Contact\r\n      </Typography>\r\n      <Paper variant=\"outlined\" sx={{ p: 1.5, bgcolor: '#fff8f0', mb: 2 }}>\r\n        <Typography><b>Name:</b> {patient.emergencyContact?.name || '-'}</Typography>\r\n        <Typography><b>Phone:</b> {patient.emergencyContact?.phone || '-'}</Typography>\r\n        <Typography><b>Relationship:</b> {patient.emergencyContact?.relationship || '-'}</Typography>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ViewPatient;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditPatient.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport PatientTestService from '../../main/mocks/PatientTestService';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientValidation from '../../main/validations/patientValidation';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditPatient = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n    const [patient, setPatient] = useState(props.patient);\r\n\r\n    useEffect(() => {\r\n        setPatient(props.patient)\r\n    }, [props.patient]);\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        patientHTTPService.editPatient(props.patient, data).then(dta => {\r\n            props.closeModal(data)\r\n            showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n        })\r\n\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setPatient({ ...patient, [name]: value });\r\n    };\r\n\r\n    // Add or update fields to match AddPatient (example: maritalStatus, occupation, allergies, chronicDiseases, etc.)\r\n    return (\r\n        <div className=\"EditPatient\">\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"form-horizontal\" role=\"form\" encType=\"multipart/form-data\" method=\"post\" acceptCharset=\"utf-8\">\r\n                <div className=\"form-body\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\"><span className=\"text-danger\"> * </span>  Fullname </label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.namepatient} ref={register({ required: true })}\r\n                                type=\"text\" name=\"namepatient\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\"><span className=\"text-danger\"> * </span> Email</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.emailpatient} ref={register({ required: true })}\r\n                                type=\"email\" id=\"emailpatient\" autoComplete=\"off\" name=\"emailpatient\"\r\n                                className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\"><span className=\"text-danger\"> * </span>  Date Of Birth </label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.birth} ref={register({ required: true })}\r\n                                type=\"date\" name=\"birth\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\"><span className=\"text-danger\"> * </span>  Telephone </label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.telephone} ref={register({ required: true })}\r\n                                type=\"text\" name=\"telephone\" id=\"old\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\"> Address </label>\r\n                        <div className=\"col-md-12\">\r\n                            <textarea onChange={handleInputChange} value={patient.address}\r\n                                ref={register({ required: true })}\r\n                                name=\"address\" className=\"form-control\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                    {/* New fields below */}\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Gender</label>\r\n                        <div className=\"col-md-12\">\r\n                            <select name=\"gender\" className=\"form-control\" value={patient.gender || ''} onChange={handleInputChange} ref={register({ required: true })}>\r\n                                <option value=\"\">Select Gender</option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">National ID</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.nationalId || ''} ref={register}\r\n                                type=\"text\" name=\"nationalId\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Insurance Number</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.insuranceNumber || ''} ref={register}\r\n                                type=\"text\" name=\"insuranceNumber\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Emergency Contact</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.emergencyContact || ''} ref={register}\r\n                                type=\"text\" name=\"emergencyContact\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Blood Group</label>\r\n                        <div className=\"col-md-12\">\r\n                            <select name=\"bloodGroup\" className=\"form-control\" value={patient.bloodGroup || ''} onChange={handleInputChange} ref={register}>\r\n                                <option value=\"\">Select Blood Group</option>\r\n                                <option value=\"A+\">A+</option>\r\n                                <option value=\"A-\">A-</option>\r\n                                <option value=\"B+\">B+</option>\r\n                                <option value=\"B-\">B-</option>\r\n                                <option value=\"AB+\">AB+</option>\r\n                                <option value=\"AB-\">AB-</option>\r\n                                <option value=\"O+\">O+</option>\r\n                                <option value=\"O-\">O-</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Marital Status</label>\r\n                        <div className=\"col-md-12\">\r\n                            <select name=\"maritalStatus\" className=\"form-control\" value={patient.maritalStatus || ''} onChange={handleInputChange} ref={register}>\r\n                                <option value=\"\">Select Marital Status</option>\r\n                                <option value=\"Single\">Single</option>\r\n                                <option value=\"Married\">Married</option>\r\n                                <option value=\"Divorced\">Divorced</option>\r\n                                <option value=\"Widowed\">Widowed</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Occupation</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.occupation || ''} ref={register}\r\n                                type=\"text\" name=\"occupation\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Allergies</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.allergies || ''} ref={register}\r\n                                type=\"text\" name=\"allergies\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Chronic Diseases</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.chronicDiseases || ''} ref={register}\r\n                                type=\"text\" name=\"chronicDiseases\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    {/* End new fields */}\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-offset-9 col-sm-6\">\r\n                            <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">\r\n                                <i className=\"fa fa-check\"></i>  Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nEditPatient.propTypes = {};\r\n\r\nEditPatient.defaultProps = {};\r\n\r\nexport default EditPatient;\r\n","// Enhanced Patient.js (with added features)\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport './Patient.css';\r\nimport { LoadJSFiles } from './../init';\r\nimport AddPatient from './../AddPatient/AddPatient';\r\nimport ViewPatient from './ViewPatient';\r\nimport EditPatient from './../EditPatient/EditPatient';\r\n\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\n\r\nimport { Button, LinearProgress, Typography, Menu, MenuItem, IconButton, Box, Dialog, DialogTitle, DialogContent, DialogActions, Chip } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport CurrentUser from '../../main/config/user';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport axios from '../../libraries/axios/axios';\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst Patient = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    getAllPatient();\r\n  }, []);\r\n\r\n  const getAllPatient = () => {\r\n    setLoading(true);\r\n\r\n    if (CurrentUser.DEMO_MODE) {\r\n      // Directly fetch the demo JSON file\r\n      fetch('/demo/patients.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setPatients(data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      axios.get(`${BASE_URL}/patients`)\r\n        .then(res => {\r\n          setPatients(res.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const removePatientAction = (e, data) => {\r\n    e?.preventDefault();\r\n    if (window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\")) {\r\n      patientHTTPService.removePatient(data)\r\n        .then(() => {\r\n          resfreshComponent();\r\n          showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success');\r\n        })\r\n        .catch(() => showMessage('Error', CurrentUser.ERR_MSG, 'warning'));\r\n    }\r\n  };\r\n\r\n  const updatePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data);\r\n  };\r\n\r\n  const closeModalEdit = () => {\r\n    closeButtonEdit.current.click();\r\n    getAllPatient();\r\n  };\r\n\r\n  const closeModalAdd = () => {\r\n    closeButtonAdd.current.click();\r\n    getAllPatient();\r\n  };\r\n\r\n  const resfreshComponent = () => {\r\n    getAllPatient();\r\n  };\r\n\r\n  const exportPatientData = (patient) => {\r\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(patient, null, 2));\r\n    const downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", `patient_${patient.userId}.json`);\r\n    document.body.appendChild(downloadAnchorNode);\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n  };\r\n\r\n  const printPatientData = (patient) => {\r\n    const printWindow = window.open('', '_blank');\r\n    printWindow.document.write('<html><head><title>Print Patient</title></head><body>');\r\n    printWindow.document.write(`<pre>${JSON.stringify(patient, null, 2)}</pre>`);\r\n    printWindow.document.write('</body></html>');\r\n    printWindow.document.close();\r\n    printWindow.print();\r\n  };\r\n\r\n  const sharePatientData = (patient) => {\r\n    const text = JSON.stringify(patient, null, 2);\r\n    if (navigator.share) {\r\n      navigator.share({\r\n        title: `Patient: ${patient.userId}`,\r\n        text: text\r\n      });\r\n    } else {\r\n      alert('Web Share API not supported in your browser');\r\n    }\r\n  };\r\n\r\n  const duplicatePatient = (patient) => {\r\n    const duplicated = { ...patient, id: Date.now() };\r\n    patientHTTPService.createPatient(duplicated)\r\n      .then(() => {\r\n        showMessage('Duplicated', 'Patient duplicated successfully', 'success');\r\n        getAllPatient();\r\n      })\r\n      .catch(() => showMessage('Error', 'Failed to duplicate', 'warning'));\r\n  };\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length === 1) {\r\n      setUpdatedItemId(e[0]);\r\n      const selectedItem = patients.find(item => item.id === e[0]);\r\n      setUpdatedItem(selectedItem);\r\n    }\r\n  };\r\n\r\n  const handleMenuOpen = (event, row) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedRow(row);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  const handleMenuAction = (action) => {\r\n    switch (action) {\r\n      case 'view':\r\n        setUpdatedItem(selectedRow);\r\n        setViewOpen(true);\r\n        break;\r\n      case 'edit':\r\n        setUpdatedItem(selectedRow);\r\n        setEditOpen(true);\r\n        break;\r\n      case 'delete':\r\n        removePatientAction(null, selectedRow);\r\n        break;\r\n      case 'archive':\r\n        break;\r\n      case 'export':\r\n        exportPatientData(selectedRow);\r\n        break;\r\n      case 'print':\r\n        printPatientData(selectedRow);\r\n        break;\r\n      case 'share':\r\n        sharePatientData(selectedRow);\r\n        break;\r\n      case 'duplicate':\r\n        duplicatePatient(selectedRow);\r\n        break;\r\n      default:\r\n        console.warn('Unknown action:', action);\r\n    }\r\n    handleMenuClose();\r\n  };\r\n\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton onClick={(event) => handleMenuOpen(event, params.row)}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleMenuClose}>\r\n        <MenuItem onClick={() => handleMenuAction('view')}>View</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('edit')}>Edit</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('delete')}>Delete</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  // Columns for Patient object (do not show id, userId, createdAt, updatedAt)\r\n  const columns = [\r\n    // { field: 'userId', headerName: 'User ID', width: 220 }, // deleted\r\n    { field: 'fullName', headerName: 'Full Name', width: 220 },\r\n    { field: 'medicalRecordNumber', headerName: 'Medical Record #', width: 180 },\r\n    {\r\n      field: 'bloodType',\r\n      headerName: 'Blood Type',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'A+' || params.value === 'A-' ? 'primary'\r\n            : params.value === 'B+' || params.value === 'B-' ? 'warning'\r\n            : params.value === 'O+' || params.value === 'O-' ? 'success'\r\n            : params.value === 'AB+' || params.value === 'AB-' ? 'error'\r\n            : 'default'\r\n          }\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'allergies',\r\n      headerName: 'Allergies',\r\n      width: 180,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {(params.value && params.value.length > 0)\r\n            ? params.value.map((a, i) => (\r\n                <Chip key={i} label={a} color=\"error\" size=\"small\" variant=\"outlined\" sx={{ mb: 0.5 }} />\r\n              ))\r\n            : <Chip label=\"None\" color=\"default\" size=\"small\" />}\r\n        </Box>\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 150,\r\n      renderCell: renderActionsMenu\r\n    },\r\n  ];\r\n\r\n  const filteredPatients = patients.filter(patient =>\r\n    Object.values(patient).some(value => value?.toString().toLowerCase().includes(searchQuery.toLowerCase()))\r\n  );\r\n\r\n  // --- Replace bloodTypes and chart data logic ---\r\n\r\n  // Count all blood types including A+, A-, B+, B-, AB+, AB-, O+, O-\r\n  const bloodTypes = patients.reduce((acc, p) => {\r\n    acc[p.bloodType] = (acc[p.bloodType] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const bloodTypeLabels = ['A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-'];\r\n  const bloodTypeColors = ['#43a047', '#81c784', '#ffa000', '#ffe082', '#1976d2', '#90caf9', '#e53935', '#ef9a9a'];\r\n  const bloodTypeCounts = bloodTypeLabels.map(type => bloodTypes[type] || 0);\r\n\r\n  // Example widget summary data (replace with your actual logic)\r\n  const totalPatients = patients.length;\r\n  const typeCounts = {};\r\n  bloodTypeLabels.forEach(type => { typeCounts[type] = bloodTypes[type] || 0; });\r\n\r\n  // Example chart data (customize for your context)\r\n  const doughnutData = {\r\n    labels: bloodTypeLabels,\r\n    datasets: [{\r\n      data: bloodTypeCounts,\r\n      backgroundColor: bloodTypeColors,\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: bloodTypeLabels,\r\n    datasets: [{\r\n      label: 'Blood Type Count',\r\n      data: bloodTypeCounts,\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: bloodTypeLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Blood Type Trend',\r\n        data: bloodTypeCounts,\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      {/* Widgets row */}\r\n      <Typography\r\n        variant=\"h4\"\r\n        gutterBottom\r\n        sx={{ mb: 3, mt: 2, display: 'flex', alignItems: 'center', gap: 1 }}\r\n      >\r\n        <i className=\"menu-icon fa fa-bars\"></i> Patients\r\n      </Typography>\r\n\r\n      {/* Chips for Medical Record Number and Blood Type */}\r\n      \r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Patients</Typography>\r\n          <Typography variant=\"h6\">{totalPatients}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Type A</Typography>\r\n          <Typography variant=\"h6\">{typeCounts['A+'] + typeCounts['A-']}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Type B</Typography>\r\n          <Typography variant=\"h6\">{typeCounts['B+'] + typeCounts['B-']}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#f3e5f5', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Type O</Typography>\r\n          <Typography variant=\"h6\">{typeCounts['O+'] + typeCounts['O-']}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"error.main\">Type AB</Typography>\r\n          <Typography variant=\"h6\">{typeCounts['AB+'] + typeCounts['AB-']}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts row */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Patients by Blood Type</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Blood Type Count</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Blood Type Trend</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        {showChart && (\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {showFilter && (\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n          </div>\r\n        )}\r\n\r\n        \r\n\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#addPatient\"\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={e => updatePatientAction(e, updatedItemId)}\r\n          data-toggle=\"modal\"\r\n          data-target=\"#editPatient\"\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n          startIcon={<i className=\"fas fa-edit\"></i>}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={e => removePatientAction(e, updatedItemId)}\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n          startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n        >\r\n          Remove\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={getAllPatient}\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n          startIcon={<i className=\"fas fa-refresh\"></i>}\r\n        >\r\n          Reload\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => console.log('Search clicked')}\r\n          sx={{ mb: 2, fontWeight: 600 }}\r\n          startIcon={<i className=\"fas fa-search\"></i>}\r\n        >\r\n          Search\r\n        </Button>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search patients...\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          style={{ marginBottom: '10px', padding: '5px', width: '100%' }}\r\n        />\r\n\r\n        {loading ? <LinearProgress /> : (\r\n          <div style={{ width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredPatients}\r\n              columns={columns}\r\n              pageSize={10} // Show 10 rows visible\r\n              rowsPerPageOptions={[10, 15, 20]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n              autoHeight // <-- Add this prop to remove vertical scroll and fit rows\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Modals */}\r\n        <div className=\"modal fade\" id=\"addPatient\">\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">New Patient</h5>\r\n                <button onClick={resfreshComponent} className=\"close\" data-dismiss=\"modal\">×</button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <AddPatient closeModal={closeModalAdd} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button ref={closeButtonAdd} className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"editPatient\">\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Patient</h5>\r\n                <button className=\"close\" data-dismiss=\"modal\">×</button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <EditPatient patient={updatedItem} closeModal={closeModalEdit} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button ref={closeButtonEdit} className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* View Patient Modal (for detailed view) */}\r\n        <Dialog open={viewOpen} onClose={() => setViewOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Patient Details</DialogTitle>\r\n          <DialogContent>\r\n            <ViewPatient patient={updatedItem} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"primary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog open={editOpen} onClose={() => setEditOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Edit Patient</DialogTitle>\r\n          <DialogContent>\r\n            <EditPatient patient={updatedItem} closeModal={() => setEditOpen(false)} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditOpen(false)} color=\"primary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patient;","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllMedicamentManufacture = () => {\r\n    return http.get(`${BASE_URL}/medicament-manufactures`)\r\n}\r\nconst createMedicamentManufacture = data => {\r\n    return http.post(`${BASE_URL}/medicament-manufactures`, data);\r\n};\r\n\r\nconst editMedicamentManufacture = (id, data) => {\r\n    return http.put(`${BASE_URL}/medicament-manufactures/${id}`, data);\r\n};\r\n\r\nconst removeMedicamentManufacture = id => {\r\n    return http.delete(`${BASE_URL}/medicament-manufactures/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllMedicamentManufacture,\r\n    createMedicamentManufacture,\r\n    editMedicamentManufacture,\r\n    removeMedicamentManufacture\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, Stack, Typography, MenuItem } from '@mui/material';\r\nimport medicamentHTTPService from '../../main/services/medicamentHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nimport medicamentManufactureHTTPService from '../../main/services/medicamentManufactureHTTPService';\r\n\r\nconst categories = [\r\n  'Antibiotic',\r\n  'Analgesic',\r\n  'Antipyretic',\r\n  'Antiseptic',\r\n  'Antimalarial',\r\n  'Antiviral',\r\n  'Antifungal',\r\n  'Vaccine',\r\n  'Other'\r\n];\r\n\r\nconst dosageForms = [\r\n  \"Tablet\",\r\n  \"Capsule\",\r\n  \"Syrup\",\r\n  \"Injection\",\r\n  \"Gel\",\r\n  \"Spray\"\r\n];\r\n\r\nconst AddMedicament = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    genericName: '',\r\n    category: '',\r\n    description: '',\r\n    activeIngredients: [{ ingredient: '', concentration: '' }],\r\n    dosageForm: '',\r\n    strength: '',\r\n    manufacturerId: '',\r\n    requiresPrescription: 'Yes',\r\n    sideEffects: [''],\r\n    contraindications: [''],\r\n    usageInstructions: '',\r\n    stockQuantity: '',\r\n    pricePerUnit: '',\r\n    expirationDate: '',\r\n    storageConditions: '',\r\n    barcode: '',\r\n    batchNumber: '',\r\n    status: 'Available'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  // Active Ingredients\r\n  const handleIngredientChange = (idx, field, value) => {\r\n    const activeIngredients = [...form.activeIngredients];\r\n    activeIngredients[idx][field] = value;\r\n    setForm(f => ({ ...f, activeIngredients }));\r\n  };\r\n  const addIngredient = () => setForm(f => ({\r\n    ...f,\r\n    activeIngredients: [...f.activeIngredients, { ingredient: '', concentration: '' }]\r\n  }));\r\n  const removeIngredient = idx => setForm(f => ({\r\n    ...f,\r\n    activeIngredients: f.activeIngredients.length > 1\r\n      ? f.activeIngredients.filter((_, i) => i !== idx)\r\n      : [{ ingredient: '', concentration: '' }]\r\n  }));\r\n\r\n  // Side Effects\r\n  const handleSideEffectChange = (idx, value) => {\r\n    const sideEffects = [...form.sideEffects];\r\n    sideEffects[idx] = value;\r\n    setForm(f => ({ ...f, sideEffects }));\r\n  };\r\n  const addSideEffect = () => setForm(f => ({ ...f, sideEffects: [...f.sideEffects, ''] }));\r\n  const removeSideEffect = idx => setForm(f => ({\r\n    ...f,\r\n    sideEffects: f.sideEffects.length > 1\r\n      ? f.sideEffects.filter((_, i) => i !== idx)\r\n      : ['']\r\n  }));\r\n\r\n  // Contraindications\r\n  const handleContraindicationChange = (idx, value) => {\r\n    const contraindications = [...form.contraindications];\r\n    contraindications[idx] = value;\r\n    setForm(f => ({ ...f, contraindications }));\r\n  };\r\n  const addContraindication = () => setForm(f => ({ ...f, contraindications: [...f.contraindications, ''] }));\r\n  const removeContraindication = idx => setForm(f => ({\r\n    ...f,\r\n    contraindications: f.contraindications.length > 1\r\n      ? f.contraindications.filter((_, i) => i !== idx)\r\n      : ['']\r\n  }));\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      name: form.name,\r\n      genericName: form.genericName,\r\n      category: form.category,\r\n      description: form.description,\r\n      activeIngredients: form.activeIngredients.filter(ai => ai.ingredient && ai.concentration),\r\n      dosageForm: form.dosageForm,\r\n      strength: form.strength,\r\n      manufacturerId: Number(form.manufacturerId),\r\n      requiresPrescription: form.requiresPrescription,\r\n      sideEffects: form.sideEffects.filter(s => s.trim() !== ''),\r\n      contraindications: form.contraindications.filter(c => c.trim() !== ''),\r\n      usageInstructions: form.usageInstructions,\r\n      stockQuantity: Number(form.stockQuantity),\r\n      pricePerUnit: Number(form.pricePerUnit),\r\n      expirationDate: new Date(form.expirationDate).toISOString(),\r\n      storageConditions: form.storageConditions,\r\n      barcode: form.barcode,\r\n      batchNumber: form.batchNumber,\r\n      status: form.status,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await medicamentHTTPService.createMedicament(data);\r\n      showMessage('Success', 'Medicament created successfully', 'success');\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } catch (e) {\r\n      showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2, minWidth: 350 }}>\r\n      <Stack spacing={2}>\r\n        <TextField label=\"Name\" name=\"name\" value={form.name} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Generic Name\" name=\"genericName\" value={form.genericName} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Category\"\r\n          name=\"category\"\r\n          value={form.category}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {categories.map(cat => (\r\n            <MenuItem key={cat} value={cat}>\r\n              {cat}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField label=\"Description\" name=\"description\" value={form.description} onChange={handleChange} multiline rows={3} required fullWidth />\r\n\r\n        <Typography variant=\"subtitle2\">Active Ingredients</Typography>\r\n        {form.activeIngredients.map((ai, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              label=\"Ingredient\"\r\n              value={ai.ingredient}\r\n              onChange={e => handleIngredientChange(idx, 'ingredient', e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Concentration\"\r\n              value={ai.concentration}\r\n              onChange={e => handleIngredientChange(idx, 'concentration', e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <Button color=\"error\" onClick={() => removeIngredient(idx)} disabled={form.activeIngredients.length === 1}>-</Button>\r\n            {idx === form.activeIngredients.length - 1 && (\r\n              <Button color=\"success\" onClick={addIngredient}>+</Button>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <TextField\r\n          select\r\n          label=\"Dosage Form\"\r\n          name=\"dosageForm\"\r\n          value={form.dosageForm}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {dosageForms.map(df => (\r\n            <MenuItem key={df} value={df}>\r\n              {df}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField label=\"Strength\" name=\"strength\" value={form.strength} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Manufacturer ID\" name=\"manufacturerId\" value={form.manufacturerId} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Requires Prescription\"\r\n          name=\"requiresPrescription\"\r\n          value={form.requiresPrescription}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"Yes\">Yes</MenuItem>\r\n          <MenuItem value=\"No\">No</MenuItem>\r\n        </TextField>\r\n\r\n        <Typography variant=\"subtitle2\">Side Effects</Typography>\r\n        {form.sideEffects.map((side, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              value={side}\r\n              onChange={e => handleSideEffectChange(idx, e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <Button color=\"error\" onClick={() => removeSideEffect(idx)} disabled={form.sideEffects.length === 1}>-</Button>\r\n            {idx === form.sideEffects.length - 1 && (\r\n              <Button color=\"success\" onClick={addSideEffect}>+</Button>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <Typography variant=\"subtitle2\">Contraindications</Typography>\r\n        {form.contraindications.map((contra, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              value={contra}\r\n              onChange={e => handleContraindicationChange(idx, e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <Button color=\"error\" onClick={() => removeContraindication(idx)} disabled={form.contraindications.length === 1}>-</Button>\r\n            {idx === form.contraindications.length - 1 && (\r\n              <Button color=\"success\" onClick={addContraindication}>+</Button>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <TextField label=\"Usage Instructions\" name=\"usageInstructions\" value={form.usageInstructions} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Stock Quantity\" name=\"stockQuantity\" type=\"number\" value={form.stockQuantity} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Price Per Unit\" name=\"pricePerUnit\" type=\"number\" value={form.pricePerUnit} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          label=\"Expiration Date\"\r\n          name=\"expirationDate\"\r\n          type=\"date\"\r\n          value={form.expirationDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField label=\"Storage Conditions\" name=\"storageConditions\" value={form.storageConditions} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Barcode\" name=\"barcode\" value={form.barcode} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Batch Number\" name=\"batchNumber\" value={form.batchNumber} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"Available\">Available</MenuItem>\r\n          <MenuItem value=\"Unavailable\">Unavailable</MenuItem>\r\n          <MenuItem value=\"Expired\">Expired</MenuItem>\r\n        </TextField>\r\n\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Medicament'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddMedicament;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Medicament.css';\r\nimport { LoadJSFiles } from './../init';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport medicamentHTTPService from '../../main/services/medicamentHTTPService';\r\nimport { Button, LinearProgress, Typography, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Switch, FormControlLabel, Menu, MenuItem, IconButton, Stack, Divider, Chip, Box } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { saveAs } from 'file-saver';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport AddMedicament from './AddMedicament'; // <-- Import the AddMedicament component\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst Medicament = () => {\r\n  const [medicaments, setMedicaments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedMedicaments, setSelectedMedicaments] = useState([]);\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const [viewMedicament, setViewMedicament] = useState(null);\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    getAllMedicament();\r\n  }, []);\r\n\r\n  const getAllMedicament = () => {\r\n    setLoading(true);\r\n\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/medicaments.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setMedicaments(data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', e.message, 'warning');\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      medicamentHTTPService.getAllMedicament()\r\n        .then(response => {\r\n          setMedicaments(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', e.message, 'warning');\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const filteredMedicaments = medicaments.filter(medicament =>\r\n    medicament.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    medicament.producer.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const handleExport = () => {\r\n    const csvContent = [\r\n      ['ID', 'Name', 'Producer', 'Category'],\r\n      ...medicaments.map(m => [m.id, m.name, m.producer, m.group])\r\n    ].map(e => e.join(\",\")).join(\"\\n\");\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    saveAs(blob, 'medicaments.csv');\r\n  };\r\n\r\n  const handleBulkDelete = () => {\r\n    setOpenConfirmDialog(true);\r\n  };\r\n\r\n  const confirmBulkDelete = () => {\r\n    selectedMedicaments.forEach(id => {\r\n      medicamentHTTPService.removeMedicament(id)\r\n        .then(() => {\r\n          showMessage('Success', 'Medicament deleted successfully', 'success');\r\n          getAllMedicament();\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', e.message, 'warning');\r\n        });\r\n    });\r\n    setOpenConfirmDialog(false);\r\n  };\r\n\r\n  const handleDuplicate = (row) => {\r\n    const duplicate = { ...row, id: Date.now() };\r\n    medicamentHTTPService.createMedicament(duplicate)\r\n      .then(() => {\r\n        showMessage('Success', 'Medicament duplicated successfully', 'success');\r\n        getAllMedicament();\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', e.message, 'warning');\r\n      });\r\n  };\r\n\r\n  const toggleActive = (row) => {\r\n    const updated = { ...row, active: !row.active };\r\n    medicamentHTTPService.updateMedicament(updated)\r\n      .then(() => {\r\n        showMessage('Success', 'Medicament status updated successfully', 'success');\r\n        getAllMedicament();\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', e.message, 'warning');\r\n      });\r\n  };\r\n\r\n  const handleImport = (file) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const content = e.target.result;\r\n      const rows = content.split(\"\\n\").slice(1);\r\n      rows.forEach(row => {\r\n        const [id, name, producer, group] = row.split(\",\");\r\n        const medicament = { id, name, producer, group };\r\n        medicamentHTTPService.createMedicament(medicament)\r\n          .then(() => getAllMedicament())\r\n          .catch(e => showMessage('Error', e.message, 'warning'));\r\n      });\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const handleMenuOpen = (event, row) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedRow(row);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  const handleMenuAction = (action) => {\r\n    if (action === 'view') handleView(selectedRow);\r\n    if (action === 'edit') handleEdit(selectedRow);\r\n    if (action === 'duplicate') handleDuplicate(selectedRow);\r\n    if (action === 'toggle') toggleActive(selectedRow);\r\n    if (action === 'delete') handleDelete(selectedRow.id);\r\n    if (action === 'archive') handleArchive(selectedRow);\r\n    if (action === 'restore') handleRestore(selectedRow);\r\n    if (action === 'history') handleViewHistory(selectedRow);\r\n    handleMenuClose();\r\n  };\r\n\r\n  const handleView = (row) => {\r\n    setViewMedicament(row);\r\n    setViewOpen(true);\r\n  };\r\n\r\n  const handleEdit = (row) => {\r\n    showMessage('Info', `Editing ${row.name}`, 'info');\r\n    // Add logic to open an edit modal or navigate to an edit page\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this medicament?')) {\r\n      medicamentHTTPService.removeMedicament(id)\r\n        .then(() => {\r\n          showMessage('Success', 'Medicament deleted successfully', 'success');\r\n          getAllMedicament();\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', e.message, 'warning');\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleArchive = (row) => {\r\n    showMessage('Info', `Archiving ${row.name}`, 'info');\r\n    // Add logic to archive the medicament\r\n  };\r\n\r\n  const handleRestore = (row) => {\r\n    showMessage('Info', `Restoring ${row.name}`, 'info');\r\n    // Add logic to restore the medicament\r\n  };\r\n\r\n  const handleViewHistory = (row) => {\r\n    showMessage('Info', `Viewing history for ${row.name}`, 'info');\r\n    // Add logic to view the history of the medicament\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'name', headerName: 'Name', width: 150 },\r\n    { field: 'genericName', headerName: 'Generic Name', width: 130 },\r\n    { field: 'category', headerName: 'Category', width: 120 },\r\n    {\r\n      field: 'expirationDate',\r\n      headerName: 'Expiration',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={new Date(params.value).toLocaleDateString()}\r\n          color=\"warning\"\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 100,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Available'\r\n              ? 'success'\r\n              : params.value === 'Expired'\r\n              ? 'warning'\r\n              : 'default'\r\n          }\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    }, \r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <div>\r\n          <IconButton\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleMenuOpen(event, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}\r\n          >\r\n            <MenuItem onClick={() => handleMenuAction('view')}>View</MenuItem>\r\n            <MenuItem onClick={() => handleMenuAction('edit')}>Edit</MenuItem>\r\n            <MenuItem onClick={() => handleMenuAction('delete')}>Delete</MenuItem>\r\n          </Menu>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className={`card ${isDarkMode ? 'dark-mode' : ''}`}>\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i> Medicaments\r\n        </Typography>\r\n\r\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"success\"\r\n            onClick={() => setAddOpen(true)}\r\n            startIcon={<i className=\"fas fa-plus\"></i>}\r\n          >\r\n            Add Medicament\r\n          </Button>\r\n        </Stack>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredMedicaments}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection\r\n              onSelectionModelChange={(ids) => setSelectedMedicaments(ids)}\r\n              components={{ Toolbar: GridToolbar }}\r\n              getRowId={(row) => row.id || row.barcode || row.batchNumber}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <Dialog\r\n          open={addOpen}\r\n          onClose={() => setAddOpen(false)}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle>Add Medicament</DialogTitle>\r\n          <DialogContent>\r\n            <AddMedicament\r\n              closeModal={() => setAddOpen(false)}\r\n              onCreate={getAllMedicament}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAddOpen(false)} color=\"secondary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={viewOpen}\r\n          onClose={() => setViewOpen(false)}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n              <i className=\"fas fa-capsules\" style={{ color: '#1976d2', fontSize: 22 }} />\r\n              Medicament Details\r\n            </Stack>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            {viewMedicament ? (\r\n              <Box\r\n                sx={{\r\n                  bgcolor: '#fafdff',\r\n                  borderRadius: 2,\r\n                  boxShadow: 1,\r\n                  p: { xs: 2, sm: 3 },\r\n                  minWidth: 320,\r\n                  minHeight: 200,\r\n                  mb: 2\r\n                }}\r\n              >\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip label={viewMedicament.name} color=\"primary\" icon={<i className=\"fas fa-capsules\"></i>} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={viewMedicament.genericName} color=\"info\" icon={<i className=\"fas fa-flask\"></i>} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={viewMedicament.category} color=\"success\" icon={<i className=\"fas fa-tags\"></i>} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={viewMedicament.status} color={viewMedicament.status === 'Available' ? 'success' : viewMedicament.status === 'Expired' ? 'warning' : 'default'} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip label={`Dosage: ${viewMedicament.dosageForm || '-'}`} color=\"default\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Strength: ${viewMedicament.strength || '-'}`} color=\"info\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Manufacturer: ${viewMedicament.manufacturerId || '-'}`} color=\"primary\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Batch: ${viewMedicament.batchNumber || '-'}`} color=\"info\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Barcode: ${viewMedicament.barcode || '-'}`} color=\"default\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                </Stack>\r\n                <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip label={`Stock: ${viewMedicament.stockQuantity ?? '-'}`} color=\"info\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Price/Unit: ${viewMedicament.pricePerUnit ?? '-'}`} color=\"success\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Expires: ${viewMedicament.expirationDate ? new Date(viewMedicament.expirationDate).toLocaleDateString() : '-'}`} color=\"warning\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Prescription: ${viewMedicament.requiresPrescription ? 'Yes' : 'No'}`} color={viewMedicament.requiresPrescription ? 'success' : 'default'} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle1\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Description:\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>{viewMedicament.description || '-'}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Active Ingredients:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewMedicament.activeIngredients || []).length > 0 ? (\r\n                    viewMedicament.activeIngredients.map((ai, i) => (\r\n                      <Chip\r\n                        key={i}\r\n                        label={`${ai.ingredient} (${ai.concentration})`}\r\n                        color=\"warning\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        sx={{ mb: 1 }}\r\n                      />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">No active ingredients listed.</Typography>\r\n                  )}\r\n                </Stack>\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Side Effects:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewMedicament.sideEffects || []).length > 0 ? (\r\n                    viewMedicament.sideEffects.map((s, i) => (\r\n                      <Chip key={i} label={s} color=\"error\" variant=\"outlined\" size=\"small\" sx={{ mb: 1 }} />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">No side effects listed.</Typography>\r\n                  )}\r\n                </Stack>\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Contraindications:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewMedicament.contraindications || []).length > 0 ? (\r\n                    viewMedicament.contraindications.map((c, i) => (\r\n                      <Chip key={i} label={c} color=\"warning\" variant=\"outlined\" size=\"small\" sx={{ mb: 1 }} />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">No contraindications listed.</Typography>\r\n                  )}\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Usage Instructions:\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>{viewMedicament.usageInstructions || '-'}</Typography>\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Storage Conditions:\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>{viewMedicament.storageConditions || '-'}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"caption\">\r\n                  <b>Created At:</b> {viewMedicament.createdAt ? new Date(viewMedicament.createdAt).toLocaleString() : '-'}<br />\r\n                  <b>Updated At:</b> {viewMedicament.updatedAt ? new Date(viewMedicament.updatedAt).toLocaleString() : '-'}\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No medicament selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"primary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={openConfirmDialog}\r\n          onClose={() => setOpenConfirmDialog(false)}\r\n        >\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you sure you want to delete the selected medicaments?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setOpenConfirmDialog(false)} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={confirmBulkDelete} color=\"secondary\">\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMedicament.propTypes = {};\r\nMedicament.defaultProps = {};\r\n\r\nexport default Medicament;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllUser = () => {\r\n    return http.get(`${BASE_URL}/api/user`)\r\n}\r\nconst createUser = data => {\r\n    return http.post(`${BASE_URL}/api/user`, data);\r\n};\r\n\r\nconst editUser = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/user/${id}`, data);\r\n};\r\n\r\nconst removeUser = id => {\r\n    return http.delete(`${BASE_URL}/api/user/${id}`);\r\n};\r\nconst getCount = () => {\r\n    return http.get(`${BASE_URL}/api/count/user/all`)\r\n}\r\nconst login = data => {\r\n    return http.post(`${BASE_URL}/api/user/login`, data);\r\n};\r\nexport default {\r\n    getAllUser,\r\n    createUser,\r\n    editUser,\r\n    removeUser,\r\n    getCount,\r\n    login\r\n};","import React, { useEffect, useState } from 'react';\r\nimport './Login.css';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport CurrentUser from '../../main/config/user';\r\nimport userHTTPService from '../../main/services/userHTTPService';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  Avatar,\r\n  Stack,\r\n  Snackbar,\r\n  Alert,\r\n} from '@mui/material';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n;\r\n\r\nconst Login = ({ handleClick }) => {\r\n  let history = useHistory();\r\n  var userInit = { username: \"admin\", password: \"admin\" };\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [user, setUser] = useState(userInit);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'error' });\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const registerPage = () => {\r\n    history.replace(\"/register\");\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      if (CurrentUser.DEMO_MODE === true) {\r\n        const demoUser = { id: 1, username: \"admin\", role: \"admin\" };\r\n        CurrentUser.USER_DETAIL = demoUser;\r\n        localStorage.setItem('user', JSON.stringify(demoUser)); // Store user info for demo mode\r\n        localStorage.setItem('connected', CurrentUser.CONNECTED_USER);\r\n        handleClick(true);\r\n         setTimeout(() => {\r\n          history.push(\"/dashboard\");\r\n        }, 800);\r\n        return; // Prevent further execution\r\n      }else{\r\n        const response = await axios.post(`${BASE_URL}/users/login`, {\r\n          username: user.username,\r\n          password: user.password,\r\n        });\r\n\r\n         if (response.data && response.data.id) {\r\n        // Save user info in localStorage\r\n        localStorage.setItem('user', JSON.stringify(response.data));\r\n        handleClick(true);\r\n        CurrentUser.USER_DETAIL = response.data;\r\n        localStorage.setItem('connected', CurrentUser.CONNECTED_USER);\r\n        setSnackbar({ open: true, message: 'Login successful!', severity: 'success' });\r\n        setTimeout(() => {\r\n          history.push(\"/dashboard\");\r\n        }, 800);\r\n      } else {\r\n        setSnackbar({ open: true, message: 'Login failed. Please check your credentials.', severity: 'error' });\r\n      }\r\n      }\r\n      } catch (error) {\r\n      setSnackbar({ open: true, message: 'Login failed. Please check your credentials.', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        bgcolor: '#fafdff',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundImage: 'url(\"images/login.jpg\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n      }}\r\n    >\r\n      <Paper elevation={6} sx={{ p: 4, maxWidth: 380, width: '100%', borderRadius: 3, backdropFilter: 'blur(2px)', background: 'rgba(255,255,255,0.92)' }}>\r\n        <Stack alignItems=\"center\" spacing={2}>\r\n          <Avatar sx={{ bgcolor: '#1976d2', width: 64, height: 64 }}>\r\n            <LockOutlinedIcon fontSize=\"large\" />\r\n          </Avatar>\r\n          <Typography variant=\"h5\" fontWeight={700} color=\"primary\">\r\n            Dentic Clinic Login\r\n          </Typography>\r\n        </Stack>\r\n        <form onSubmit={handleSubmit(onSubmit)} style={{ marginTop: 24 }}>\r\n          <TextField\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={user.username}\r\n            onChange={handleInputChange}\r\n            inputRef={register({ required: true })}\r\n            error={!!errors?.username}\r\n            helperText={errors?.username && \"Username is required\"}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={user.password}\r\n            onChange={handleInputChange}\r\n            inputRef={register({ required: true })}\r\n            error={!!errors?.password}\r\n            helperText={errors?.password && \"Password is required\"}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            size=\"large\"\r\n            sx={{ mt: 2, mb: 1, fontWeight: 600 }}\r\n            startIcon={<LockOutlinedIcon />}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Link to=\"/register\" style={{ textDecoration: 'none' }}>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              fullWidth\r\n              sx={{ mb: 1, fontWeight: 600 }}\r\n            >\r\n              Register\r\n            </Button>\r\n          </Link>\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            sx={{ fontWeight: 600 }}\r\n            onClick={() => history.push('/')}\r\n          >\r\n            Back to Website\r\n          </Button>\r\n        </form>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mt: 2 }}>\r\n          &copy; {new Date().getFullYear()} Dentic Clinic\r\n        </Typography>\r\n        <Snackbar\r\n          open={snackbar.open}\r\n          autoHideDuration={3000}\r\n          onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n        >\r\n          <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n            {snackbar.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {};\r\n\r\nLogin.defaultProps = {};\r\n\r\nexport default Login;","\r\nconst medicamentValidation = {\r\n    medicine_name: 'Le nom de medicamnt est obligatoire',\r\n    company_name: 'Le nom de constructeur est obligatoire',\r\n    group_name: 'Le groupe sanguin est obligatoire',\r\n    description: 'La description est obligatoire',\r\n}\r\nexport default medicamentValidation;","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllMedicamentCayegory = () => {\r\n    return http.get(`${BASE_URL}/medicament-categories`)\r\n}\r\nconst createMedicamentCayegory = data => {\r\n    return http.post(`${BASE_URL}/medicament-categories`, data);\r\n};\r\n\r\nconst editMedicamentCayegory = (id, data) => {\r\n    return http.put(`${BASE_URL}/medicament-categories/${id}`, data);\r\n};\r\n\r\nconst removeMedicamentCayegory = id => {\r\n    return http.delete(`${BASE_URL}/medicament-categories/${id}`);\r\n};\r\n\r\nconst getMedicamentCayegoryById = id => {\r\n    return http.get(`${BASE_URL}/medicament-categories/${id}`);\r\n};\r\n\r\nexport default {\r\n    getMedicamentCayegoryById,\r\n    getAllMedicamentCayegory,\r\n    createMedicamentCayegory,\r\n    editMedicamentCayegory,\r\n    removeMedicamentCayegory\r\n};","import React, { useEffect, useState } from 'react';\r\nimport './AddMedicament.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages'\r\nimport medicamentMessage from '../../main/messages/medicamentMessage'\r\nimport medicamentValidation from '../../main/validations/medicamentValidation'\r\nimport MedicamentTestService from '../../main/mocks/MedicamentTestService';\r\nimport medicamentHTTPService from '../../main/services/medicamentHTTPService';\r\nimport medicamentManufactureHTTPService from '../../main/services/medicamentManufactureHTTPService';\r\nimport medicamentCategoryHTTPService from '../../main/services/medicamentCategoryHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst AddMedicament = (props) => {\r\n\r\n    const initialState = {\r\n        medicine_name: \"\",\r\n        company_name: \"\",\r\n        group_name: \"\",\r\n        description: \"\",\r\n    };\r\n\r\n    const { register, handleSubmit, errors } = useForm()\r\n    const [medicament, setMedicament] = useState(initialState);\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        //saveMedicament(data)\r\n        //MedicamentTestService.create(data)\r\n        medicamentHTTPService.createMedicament(data).then(data => {\r\n            setMedicament(initialState)\r\n            showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success')\r\n            props.closeModal()\r\n        })\r\n\r\n    }\r\n\r\n    const saveMedicament = (data) => {\r\n\r\n        medicamentHTTPService.create(data)\r\n            .then(response => {\r\n                setMedicament(initialState)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n    };\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setMedicament({ ...medicament, [name]: value });\r\n    };\r\n\r\n    const [medicamentCategory, setMedicamentCategory] = useState([]);\r\n    const [medicamentManufacture, setMedicamentManufacture] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //LoadJSFiles()\r\n        getAllMedicamentManufactures()\r\n        getAllMedicamentCategories()\r\n    }, []);\r\n\r\n\r\n    const getAllMedicamentManufactures = () => {\r\n        //setLoading(true);\r\n        medicamentManufactureHTTPService.getAllMedicamentManufacture()\r\n            .then(response => {\r\n                setMedicamentManufacture(response.data);\r\n                //setLoading(false);\r\n\r\n            })\r\n            .catch(e => {\r\n                showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n            });\r\n    };\r\n\r\n    const getAllMedicamentCategories = () => {\r\n        //setLoading(true);\r\n        medicamentCategoryHTTPService.getAllMedicamentCayegory()\r\n            .then(response => {\r\n                setMedicamentCategory(response.data);\r\n                //setLoading(false);\r\n            })\r\n            .catch(e => {\r\n                showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"AddMedicament\">\r\n            <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" role=\"form\" enctype=\"multipart/form-data\" method=\"post\" accept-charset=\"utf-8\">\r\n\r\n                <div class=\"form-body\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Name:</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={medicament.name}\r\n                                ref={register({ required: true })}\r\n                                type=\"text\" data-toggle=\"tooltip\"\r\n                                name=\"name\" class=\"form-control test\"\r\n                            />\r\n\r\n                            <div className=\"error text-danger\">\r\n                                {errors.name && medicamentValidation.name}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Manufacture :</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <select onChange={handleInputChange} value={medicament.company_name} ref={register({ required: true })}\r\n                                type=\"text\" class=\"form-control\" autocomplete=\"off\" id=\"search-box\"\r\n                                placeholder=\"Nom de la compagnie\" data-toggle=\"tooltip\" title=\"Nom de la compagnie\"\r\n                                name=\"company_name\" required=\"\" >\r\n                                {medicamentCategory.map(data =>\r\n                                    <option value={data.id}>{data.name}</option>\r\n                                )}\r\n\r\n                            </select>\r\n\r\n                            <div className=\"error text-danger\">\r\n                                {errors.company_name && medicamentValidation.company_name}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><font  ><font  >Category :</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <select onChange={handleInputChange} value={medicament.group_name} ref={register({ required: true })}\r\n                                type=\"text\" name=\"group_name\" autocomplete=\"off\" id=\"search-group\" class=\"form-control\"\r\n                                data-toggle=\"tooltip\" title=\"Nom de groupe \" required=\"\" >\r\n                                {medicamentManufacture.map(data =>\r\n                                    <option value={data.id}>{data.name}</option>\r\n                                )}\r\n                            </select>\r\n\r\n                            <div className=\"error text-danger\">\r\n                                {errors.group_name && medicamentValidation.group_name}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><font  ><font  >Description:</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <textarea name=\"description\" class=\"form-control\" rows=\"6\"\r\n                                onChange={handleInputChange} value={medicament.description} ref={register({ required: true })}\r\n                            ></textarea>\r\n\r\n                            <div className=\"error text-danger\">\r\n                                {errors.description && medicamentValidation.description}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"form-group row\">\r\n                    <div class=\" col-8\">\r\n                        <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                            <i className=\"fa fa-check\"></i>  Save</button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nAddMedicament.propTypes = {};\r\n\r\nAddMedicament.defaultProps = {};\r\n\r\nexport default AddMedicament;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport expenseHTTPService from '../../main/services/expenseHTTPService';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statusOptions = ['Planned', 'In Progress', 'Completed', 'Cancelled'];\r\nconst expenseCategories = ['Consultation', 'Treatment', 'Medication', 'Lab', 'Other'];\r\nconst paymentMethods = ['Cash', 'Card', 'Insurance', 'Online'];\r\n\r\nconst AddExpense = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    description: '',\r\n    estimatedDuration: '',\r\n    status: 'Planned',\r\n    expenseCategory: '',\r\n    amount: '',\r\n    paymentMethod: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Add state for select box data\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Replace with your actual endpoints if needed\r\n    fetch(BASE_URL+'/patients').then(res => res.json()).then(setPatients).catch(() => setPatients([]));\r\n    fetch(BASE_URL+'/doctors').then(res => res.json()).then(setDoctors).catch(() => setDoctors([]));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      patientId: form.patientId,\r\n      doctorId: form.doctorId,\r\n      description: form.description,\r\n      estimatedDuration: Number(form.estimatedDuration),\r\n      status: form.status,\r\n      expenseCategory: form.expenseCategory,\r\n      amount: Number(form.amount),\r\n      paymentMethod: form.paymentMethod,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await expenseHTTPService.createExpense(data);\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          select\r\n          label=\"Patient\"\r\n          name=\"patientId\"\r\n          value={form.patientId}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {patients.map(patient => (\r\n            <MenuItem key={patient.id} value={patient.id}>\r\n              {patient.fullName || patient.name || patient.id}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Doctor\"\r\n          name=\"doctorId\"\r\n          value={form.doctorId}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {doctors.map(doctor => (\r\n            <MenuItem key={doctor.id} value={doctor.id}>\r\n              {doctor.fullName || doctor.name || doctor.id}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          value={form.description}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Estimated Duration (days)\"\r\n          name=\"estimatedDuration\"\r\n          type=\"number\"\r\n          value={form.estimatedDuration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Expense Category\"\r\n          name=\"expenseCategory\"\r\n          value={form.expenseCategory}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {expenseCategories.map(cat => (\r\n            <MenuItem key={cat} value={cat}>{cat}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Amount\"\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          value={form.amount}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Payment Method\"\r\n          name=\"paymentMethod\"\r\n          value={form.paymentMethod}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {paymentMethods.map(method => (\r\n            <MenuItem key={method} value={method}>{method}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Expense'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddExpense;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditExpense.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport expenseHTTPService from '../../main/services/expenseHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditExpense = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [expense, setExpense] = useState(props.expense);\r\n\r\n  useEffect(() => {\r\n    setExpense(props.expense)\r\n  }, [props.expense]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    expenseHTTPService.editExpense(props.expense.id, data)\r\n    props.closeModal(data)\r\n    showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setExpense({ ...expense, [name]: value });\r\n  };\r\n  return (\r\n    <div className=\"EditExpense\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Date:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={expense?.date} ref={register({ required: true })}\r\n                type=\"date\" id=\"date\" name=\"date\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Name:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={expense?.name} ref={register({ required: true })}\r\n                type=\"text\" name=\"name\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Amount:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={expense?.amount} ref={register({ required: true })}\r\n                name=\"amount\" class=\"form-control\" type=\"number\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Note:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={expense?.note} ref={register({ required: true })}\r\n                name=\"note\" class=\"form-control\" rows=\"3\"></textarea>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Payment Mode</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={expense?.paymenMode} ref={register({ required: true })}\r\n                type=\"text\" name=\"paymenMode\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n                <option>Cash</option>\r\n                <option>Credit Card</option>\r\n              </select>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nEditExpense.propTypes = {};\r\n\r\nEditExpense.defaultProps = {};\r\n\r\nexport default EditExpense;\r\n","import PropTypes from 'prop-types';\r\nimport './Expense.css';\r\nimport expenseHTTPService from '../../main/services/expenseHTTPService';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { LoadJSFiles } from '../init';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport useForceUpdate from 'use-force-update';\r\nimport AddExpense from './AddExpense';\r\nimport EditExpense from '../EditExpense/EditExpense';\r\nimport { Typography, Button, LinearProgress, Menu, MenuItem, IconButton, Box, Dialog, DialogTitle, DialogContent, DialogActions, Divider, Chip } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport CurrentUser from '../../main/config/user';\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\n\r\n\r\nconst Expense = () => {\r\n\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [viewExpense, setViewExpense] = useState(null);\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllExpenses()\r\n  }, []);\r\n\r\n\r\n  const getAllExpenses = () => {\r\n    setLoading(true);\r\n\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/expenses.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setExpenses(data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      expenseHTTPService.getAllExpense()\r\n        .then(response => {\r\n          setExpenses(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllExpenses()\r\n    //   forceUpdate()\r\n  }\r\n\r\n  const removeExpenseAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success')\r\n      expenseHTTPService.removeExpense(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateExpenseAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  // Actions menu for each row\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton onClick={(event) => { setAnchorEl(event.currentTarget); setSelectedRow(params.row); }}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\r\n        <MenuItem onClick={() => {\r\n          setViewExpense(params.row);\r\n          setViewDialogOpen(true);\r\n          setAnchorEl(null);\r\n        }}>View</MenuItem>\r\n        <MenuItem onClick={e => updateExpenseAction(e, params.row)}>Edit</MenuItem>\r\n        <MenuItem onClick={e => removeExpenseAction(e, [params.row.id])}>Delete</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  // Columns for Expense object (do not show id, createdAt, updatedAt)\r\n  const columns = [\r\n    {\r\n      field: 'expenseCategory',\r\n      headerName: 'Category',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"primary\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    { field: 'description', headerName: 'Description', width: 220 },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"success\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentMethod',\r\n      headerName: 'Payment Method',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"info\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentStatus',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Paid'\r\n              ? 'success'\r\n              : params.value === 'Pending'\r\n              ? 'warning'\r\n              : 'default'\r\n          }\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      renderCell: renderActionsMenu\r\n    }\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = expenses.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n  // Widget summary data\r\n  const totalExpenses = expenses.length;\r\n  const paidExpenses = expenses.filter(e => e.paymentStatus === 'Paid').length;\r\n  const pendingExpenses = expenses.filter(e => e.paymentStatus === 'Pending').length;\r\n  const categories = expenses.reduce((acc, e) => {\r\n    acc[e.expenseCategory] = (acc[e.expenseCategory] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [{\r\n      data: Object.values(categories),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [{\r\n      label: 'Expenses per Category',\r\n      data: Object.values(categories),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [\r\n      {\r\n        label: 'Paid',\r\n        data: Object.keys(categories).map(cat => expenses.filter(e => e.expenseCategory === cat && e.paymentStatus === 'Paid').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Pending',\r\n        data: Object.keys(categories).map(cat => expenses.filter(e => e.expenseCategory === cat && e.paymentStatus === 'Pending').length),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  // Add this handler to refresh after adding\r\n  const handleExpenseCreated = () => {\r\n    setAddDialogOpen(false);\r\n    getAllExpenses();\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Expenses\r\n        </Typography>\r\n        <br />\r\n        {/* Widgets row */}\r\n        <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n          <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n            <Typography variant=\"subtitle2\" color=\"primary\">Total Expenses</Typography>\r\n            <Typography variant=\"h6\">{totalExpenses}</Typography>\r\n          </Box>\r\n          <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n            <Typography variant=\"subtitle2\" color=\"success.main\">Paid</Typography>\r\n            <Typography variant=\"h6\">{paidExpenses}</Typography>\r\n          </Box>\r\n          <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n            <Typography variant=\"subtitle2\" color=\"warning.main\">Pending</Typography>\r\n            <Typography variant=\"h6\">{pendingExpenses}</Typography>\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Charts row */}\r\n        <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n          <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n            <Typography variant=\"subtitle1\" align=\"center\">Expenses by Category</Typography>\r\n            <Doughnut data={doughnutData} />\r\n          </Box>\r\n          <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n            <Typography variant=\"subtitle1\" align=\"center\">Expenses per Category</Typography>\r\n            <Bar data={barData} />\r\n          </Box>\r\n          <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n            <Typography variant=\"subtitle1\" align=\"center\">Status Trends by Category</Typography>\r\n            <Line data={lineData} />\r\n          </Box>\r\n        </Box>\r\n\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n       \r\n        {/* Material-UI Create Button */}\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          onClick={() => setAddDialogOpen(true)}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create Expense\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          onClick={e => updateExpenseAction(e, updatedItemId)}\r\n          startIcon={<i className=\"fas fa-edit\"></i>}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          onClick={e => removeExpenseAction(e, updatedItemIds)}\r\n          startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n        >\r\n          Remove\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, fontWeight: 600 }}\r\n          onClick={() => getAllExpenses()}\r\n          startIcon={<i className=\"fas fa-refresh\"></i>}\r\n        >\r\n          Reload\r\n        </Button>\r\n\r\n        <br /><br />\r\n\r\n\r\n\r\n\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={expenses}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[5, 10, 15, 20]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n            autoHeight\r\n          /></div>}\r\n\r\n        {/* Material-UI Add Expense Dialog */}\r\n        <Dialog open={addDialogOpen} onClose={() => setAddDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Create Expense</DialogTitle>\r\n          <DialogContent>\r\n            <AddExpense\r\n              closeModal={() => setAddDialogOpen(false)}\r\n              onCreate={handleExpenseCreated}\r\n            />\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <EditExpense expense={updatedItem} closeModal={closeModalEdit} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" onClick={resfreshComponent} ref={closeButtonEdit} class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Add this MUI Dialog for viewing expense details */}\r\n        <Dialog open={viewDialogOpen} onClose={() => setViewDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle sx={{ bgcolor: '#e3f2fd', fontWeight: 700, fontSize: 22 }}>\r\n            <i className=\"fas fa-file-invoice-dollar\" style={{ color: '#1976d2', marginRight: 10 }} />\r\n            Expense Details\r\n          </DialogTitle>\r\n          <DialogContent dividers sx={{ bgcolor: '#fafdff' }}>\r\n            {viewExpense ? (\r\n              <Box sx={{ p: 2 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\r\n                  <Typography variant=\"h6\" color=\"primary\" fontWeight={700}>\r\n                    {viewExpense.expenseCategory}\r\n                  </Typography>\r\n                  <Chip\r\n                    label={viewExpense.paymentStatus}\r\n                    color={\r\n                      viewExpense.paymentStatus === 'Paid'\r\n                        ? 'success'\r\n                        : viewExpense.paymentStatus === 'Pending'\r\n                        ? 'warning'\r\n                        : 'default'\r\n                    }\r\n                    size=\"small\"\r\n                  />\r\n                </Box>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Box sx={{ mb: 2 }}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 0.5 }}>\r\n                    <b>Description:</b> {viewExpense.description}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Amount:</b> <span style={{ color: '#1976d2', fontWeight: 600 }}>{viewExpense.amount}</span>\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Payment Method:</b> {viewExpense.paymentMethod}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Vendor:</b> {viewExpense.vendorName}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Invoice ID:</b> {viewExpense.invoiceId}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Clinic ID:</b> {viewExpense.clinicId}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Transaction Date:</b> {viewExpense.transactionDate ? new Date(viewExpense.transactionDate).toLocaleString() : '-'}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Notes:</b> {viewExpense.notes || '-'}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Receipt:</b>{' '}\r\n                    {viewExpense.receiptAttachments && viewExpense.receiptAttachments.length > 0 ? (\r\n                      <a href={viewExpense.receiptAttachments[0]} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        Download\r\n                      </a>\r\n                    ) : (\r\n                      '-'\r\n                    )}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            ) : (\r\n              <Typography color=\"text.secondary\" sx={{ p: 2 }}>No expense selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions sx={{ bgcolor: '#fafdff' }}>\r\n            <Button onClick={() => setViewDialogOpen(false)} color=\"primary\" variant=\"outlined\" sx={{ minWidth: 100 }}>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>)\r\n};\r\n\r\nExpense.propTypes = {};\r\n\r\nExpense.defaultProps = {};\r\n\r\nexport default Expense;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllIncome = () => {\r\n    return http.get(`${BASE_URL}/incomes`)\r\n}\r\nconst createIncome = data => {\r\n    return http.post(`${BASE_URL}/incomes`, data);\r\n};\r\n\r\nconst editIncome = (id, data) => {\r\n    return http.put(`${BASE_URL}/incomes/${id}`, data);\r\n};\r\n\r\nconst removeIncome = id => {\r\n    return http.delete(`${BASE_URL}/incomes/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllIncome,\r\n    createIncome,\r\n    editIncome,\r\n    removeIncome\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditIncome.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditIncome = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [patient, setPatient] = useState(props.patient);\r\n\r\n  useEffect(() => {\r\n    setPatient(props.patient)\r\n  }, [props.patient]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    patientHTTPService.editPatient(props.patient.id, data)\r\n    props.closeModal(data)\r\n    showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setPatient({ ...patient, [name]: value });\r\n  };\r\n  return (\r\n    <div className=\"EditIncome\">\r\n      EditIncome Component\r\n    </div>\r\n  )\r\n};\r\n\r\nEditIncome.propTypes = {};\r\n\r\nEditIncome.defaultProps = {};\r\n\r\nexport default EditIncome;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddIncome.css';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\n\r\nconst AddIncome = (props) => {\r\n\r\n  const initialState = {\r\n    namepatient: '',\r\n    emailpatient: '',\r\n    birth: '',\r\n    telephone: '',\r\n    gender: '',\r\n    address: '',\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [patient, setPatient] = useState(initialState);\r\n\r\n  const onSubmit = (data) => {\r\n    patientHTTPService.createPatient(data)\r\n      .then(response => {\r\n        setPatient(initialState)\r\n        props.closeModal(data)\r\n        showMessage('Confirmation', patientMessage.add, 'success')\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'warning')\r\n      });\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setPatient({ ...patient, [name]: value });\r\n  };\r\n  return (\r\n    <div className=\"AddIncome\">\r\n      AddIncome Component\r\n    </div>)\r\n};\r\n\r\nAddIncome.propTypes = {};\r\n\r\nAddIncome.defaultProps = {};\r\n\r\nexport default AddIncome;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './Income.css';\r\nimport incomeHTTPService from '../../main/services/incomeHTTPService';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LoadJSFiles } from '../init';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport EditIncome from '../EditIncome/EditIncome';\r\nimport AddIncome from '../AddIncome/AddIncome';\r\nimport { Button, LinearProgress, Link, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport { Bar } from 'react-chartjs-2';\r\nconst Income = () => {\r\n\r\n  const [incomes, setIncomes] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllIncomes()\r\n  }, []);\r\n\r\n\r\n  const getAllIncomes = () => {\r\n    setLoading(true);\r\n    incomeHTTPService.getAllIncome()\r\n      .then(response => {\r\n        setIncomes(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllIncomes()\r\n    forceUpdate()\r\n  }\r\n\r\n  const removeIncomeAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', patientMessage.delete, 'success')\r\n      incomeHTTPService.removePatient(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Confirmation', e, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateIncomeAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  \r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'incomeCategory', headerName: 'Category', width: 180 },\r\n    { field: 'description', headerName: 'Description', width: 220 },\r\n    { field: 'amount', headerName: 'Amount ($)', width: 120, type: 'number' },\r\n    { field: 'paymentMethod', headerName: 'Method', width: 130 },\r\n    { field: 'paymentStatus', headerName: 'Status', width: 130 },\r\n    {\r\n      field: 'transactionDate',\r\n      headerName: 'Date',\r\n      width: 140,\r\n      valueFormatter: ({ value }) => new Date(value).toLocaleDateString()\r\n    },\r\n    { field: 'patientId', headerName: 'Patient ID', width: 230 },\r\n    { field: 'doctorId', headerName: 'Doctor ID', width: 230 },\r\n    { field: 'invoiceId', headerName: 'Invoice ID', width: 230 },\r\n    { field: 'clinicId', headerName: 'Clinic ID', width: 230 },\r\n    {\r\n      field: 'receiptAttachments',\r\n      headerName: 'Receipt',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        params.value?.length > 0 ? (\r\n          <Link href={params.value[0]} target=\"_blank\" rel=\"noopener\">\r\n            View Receipt\r\n          </Link>\r\n        ) : '—'\r\n      )\r\n    },\r\n    { field: 'notes', headerName: 'Notes', width: 250 }\r\n  ];\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = incomes.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n  return (<div className=\"card\">\r\n\r\n    <div className=\"card-body\">\r\n      {\r\n        showChart &&\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h4>Chart</h4>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      {showFilter &&\r\n        <div className=\"row\">\r\n          <SummaryWidget />\r\n\r\n          <SummaryWidget />\r\n\r\n          <SummaryWidget />\r\n\r\n          <SummaryWidget />\r\n        </div>\r\n      }\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        <i className=\"menu-icon fa fa-bars\"></i>   Incomes\r\n      </Typography>\r\n      <br />\r\n      <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addPayment\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n      <Button onClick={e => updateIncomeAction(e, updatedItemId)} type=\"button\" data-toggle=\"modal\" data-target=\"#editMedicament\"><i class=\"fas fa-edit\"></i> Edit</Button>\r\n      <Button onClick={e => removeIncomeAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n      <Button type=\"button\" onClick={() => setShowFilter(!showFilter)} ><i class=\"fas fa-bar-chart\"></i> Show/Hide Summary</Button>\r\n      <Button type=\"button\" onClick={() => setShowChart(!showChart)} ><i class=\"fas fa-pie-chart\"></i> Show/Hide Analytics</Button>\r\n      <Button type=\"button\" onClick={() => getAllIncomes()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n      <Button type=\"button\" onClick={e => removeAll(e)} ><i class=\"fas fa-eraser\"></i> Remove All</Button>\r\n      <br /><br />\r\n      {loading ?\r\n        <LinearProgress />\r\n        : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n          rows={incomes}\r\n          columns={columns}\r\n          pageSize={5}\r\n          rowsPerPageOptions={[6]}\r\n          checkboxSelection\r\n          onSelectionModelChange={handleRowSelection}\r\n          components={{ Toolbar: GridToolbar }}\r\n        /></div>}\r\n      <button data-toggle=\"modal\" data-target=\"#addPayment\" type=\"button\" className=\"btn btn-success btn-sm\">Ajouter</button>\r\n\r\n      <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>)\r\n};\r\n\r\nIncome.propTypes = {};\r\n\r\nIncome.defaultProps = {};\r\n\r\nexport default Income;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllNote = () => {\r\n    return http.get(`${BASE_URL}/api/note`)\r\n}\r\nconst createNote = data => {\r\n    return http.post(`${BASE_URL}/api/note`, data);\r\n};\r\n\r\nconst editNote = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/note/${id}`, data);\r\n};\r\n\r\nconst removeNote = id => {\r\n    return http.delete(`${BASE_URL}/api/note/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllNote,\r\n    createNote,\r\n    editNote,\r\n    removeNote\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Note.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LoadJSFiles } from '../init';\r\nimport noteHTTPService from '../../main/services/noteHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst Note = () => {\r\n\r\n  const [notes, setNotes] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllIncomes()\r\n  }, []);\r\n\r\n\r\n  const getAllIncomes = () => {\r\n    setLoading(true);\r\n    noteHTTPService.getAllNote()\r\n      .then(response => {\r\n        setNotes(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllIncomes()\r\n    forceUpdate()\r\n  }\r\n\r\n  const removeNoteAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', patientMessage.delete, 'success')\r\n      noteHTTPService.removeNote(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Confirmation', e, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateNoteAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 200 },\r\n    { field: 'name', headerName: 'Name', width: 200 }\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    /*  if (e.length == 1) {\r\n \r\n       setUpdatedItemId(e[0])\r\n       const selectedItem = patients.find(item => item.id == e[0])\r\n       setUpdatedItem(selectedItem)\r\n       console.log(updatedItem);\r\n     }\r\n     setUpdatedItemIds(e)\r\n  */\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Notes\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addMedicament\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n        <Button onClick={e => updateNoteAction(e, updatedItemId)} type=\"button\" data-toggle=\"modal\" data-target=\"#editMedicament\"><i class=\"fas fa-edit\"></i> Edit</Button>\r\n        <Button onClick={e => removeNoteAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n        <Button type=\"button\" onClick={() => setShowFilter(!showFilter)} ><i class=\"fas fa-bar-chart\"></i> Show/Hide Summary</Button>\r\n        <Button type=\"button\" onClick={() => setShowChart(!showChart)} ><i class=\"fas fa-pie-chart\"></i> Show/Hide Analytics</Button>\r\n        <Button type=\"button\" onClick={() => getAllIncomes()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n        <Button type=\"button\" onClick={e => removeAll(e)} ><i class=\"fas fa-eraser\"></i> Remove All</Button>\r\n        <br /><br />\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={notes}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n          /></div>}\r\n        <button data-toggle=\"modal\" data-target=\"#addPayment\" type=\"button\" className=\"btn btn-success btn-sm\">Ajouter</button>\r\n\r\n        <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nNote.propTypes = {};\r\n\r\nNote.defaultProps = {};\r\n\r\nexport default Note;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllToDo = () => {\r\n    return http.get(`${BASE_URL}/api/todo`)\r\n}\r\nconst createToDo = data => {\r\n    return http.post(`${BASE_URL}/api/todo`, data);\r\n};\r\n\r\nconst editToDo = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/todo/${id}`, data);\r\n};\r\n\r\nconst removeToDo = id => {\r\n    return http.delete(`${BASE_URL}/api/todo/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllToDo,\r\n    createToDo,\r\n    editToDo,\r\n    removeToDo\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ToDo.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LoadJSFiles } from '../init';\r\nimport todoHTTPService from '../../main/services/todoHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\n\r\nconst ToDo = () => {\r\n\r\n  const [todos, setToDos] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllToDos()\r\n  }, []);\r\n\r\n\r\n  const getAllToDos = () => {\r\n    setLoading(true);\r\n    todoHTTPService.getAllToDo()\r\n      .then(response => {\r\n        setToDos(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllToDos()\r\n    forceUpdate()\r\n  }\r\n\r\n  const removeIncomeAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', patientMessage.delete, 'success')\r\n      todoHTTPService.removeToDo(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Confirmation', e, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateIncomeAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 200 },\r\n    { field: 'name_income', headerName: 'Name', width: 200 },\r\n    { field: 'amount', headerName: 'Amount', width: 200 },\r\n    { field: 'datee', headerName: 'Date', width: 200 },\r\n    { field: 'note', headerName: 'Note', width: 200 },\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = todos.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n\r\n\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Tasks\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addMedicament\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n        <Button onClick={e => updateIncomeAction(e, updatedItemId)} type=\"button\" data-toggle=\"modal\" data-target=\"#editMedicament\"><i class=\"fas fa-edit\"></i> Edit</Button>\r\n        <Button onClick={e => removeIncomeAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n        <Button type=\"button\" onClick={() => setShowFilter(!showFilter)} ><i class=\"fas fa-bar-chart\"></i> Show/Hide Summary</Button>\r\n        <Button type=\"button\" onClick={() => setShowChart(!showChart)} ><i class=\"fas fa-pie-chart\"></i> Show/Hide Analytics</Button>\r\n        <Button type=\"button\" onClick={() => getAllToDos()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n        <Button type=\"button\" onClick={e => removeAll(e)} ><i class=\"fas fa-eraser\"></i> Remove All</Button>\r\n        <br /><br />\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={todos}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n          /></div>}\r\n        <button data-toggle=\"modal\" data-target=\"#addPayment\" type=\"button\" className=\"btn btn-success btn-sm\">Ajouter</button>\r\n\r\n        <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nToDo.propTypes = {};\r\n\r\nToDo.defaultProps = {};\r\n\r\nexport default ToDo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Message.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport messageHTTPService from '../../main/services/messageHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n  CircularProgress,\r\n  IconButton,\r\n  Tooltip,\r\n  Box,\r\n  Divider,\r\n  Stack\r\n} from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport SubjectIcon from '@mui/icons-material/Subject';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst Message = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n  const [openViewDialog, setOpenViewDialog] = useState(false);\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    getAllMessages();\r\n  }, []);\r\n\r\n  const getAllMessages = () => {\r\n    setLoading(true);\r\n    messageHTTPService.getAllMessage()\r\n      .then(response => {\r\n        setMessages(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedMessage) {\r\n      messageHTTPService.removeMessage(selectedMessage)\r\n        .then(() => {\r\n          showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success');\r\n          getAllMessages();\r\n        })\r\n        .catch(() => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n        });\r\n    }\r\n    setOpenConfirmDialog(false);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const filteredMessages = messages.filter(message =>\r\n    message.name?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    message.subject?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    message.message?.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n    { field: 'name', headerName: 'From', width: 200 },\r\n    { field: 'subject', headerName: 'Subject', width: 200 },\r\n    { field: 'message', headerName: 'Message', width: 200 },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Box>\r\n          <Tooltip title=\"View\">\r\n            <IconButton\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                setSelectedMessage(params.row);\r\n                setOpenViewDialog(true);\r\n              }}\r\n            >\r\n              <VisibilityIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                setSelectedMessage(params.row);\r\n                setOpenConfirmDialog(true);\r\n              }}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i> Messages\r\n        </Typography>\r\n\r\n        <TextField\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={searchQuery}\r\n          onChange={handleSearch}\r\n        />\r\n\r\n        {loading ? (\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '200px' }}>\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredMessages}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection={false}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* View Message Dialog */}\r\n        <Dialog\r\n          open={openViewDialog}\r\n          onClose={() => setOpenViewDialog(false)}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n          PaperProps={{\r\n            sx: {\r\n              borderRadius: 3,\r\n              bgcolor: '#fafdff',\r\n              boxShadow: 6,\r\n            }\r\n          }}\r\n        >\r\n          <DialogTitle sx={{ bgcolor: '#1976d2', color: '#fff', pb: 2, borderTopLeftRadius: 12, borderTopRightRadius: 12 }}>\r\n            <MessageIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n            View Message\r\n          </DialogTitle>\r\n          <DialogContent dividers sx={{ p: 3 }}>\r\n            {selectedMessage && (\r\n              <Box>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 2 }}>\r\n                  <PersonIcon color=\"primary\" />\r\n                  <Typography variant=\"subtitle1\" fontWeight={600}>\r\n                    {selectedMessage.name}\r\n                  </Typography>\r\n                </Stack>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 2 }}>\r\n                  <EmailIcon color=\"action\" />\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {selectedMessage.email || '-'}\r\n                  </Typography>\r\n                </Stack>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 2 }}>\r\n                  <SubjectIcon color=\"secondary\" />\r\n                  <Typography variant=\"body2\" fontWeight={500}>\r\n                    {selectedMessage.subject}\r\n                  </Typography>\r\n                </Stack>\r\n                <Divider sx={{ my: 2 }} />\r\n                <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-line', fontSize: 17 }}>\r\n                  {selectedMessage.message}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions sx={{ bgcolor: '#f5f5f5', borderBottomLeftRadius: 12, borderBottomRightRadius: 12 }}>\r\n            <Button onClick={() => setOpenViewDialog(false)} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Delete Confirmation Dialog */}\r\n        <Dialog\r\n          open={openConfirmDialog}\r\n          onClose={() => setOpenConfirmDialog(false)}\r\n        >\r\n          <DialogTitle>Confirmation</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you sure you want to delete this message?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setOpenConfirmDialog(false)} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDelete} color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {};\r\nMessage.defaultProps = {};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack, Typography, IconButton } from '@mui/material';\r\nimport medicamentManufactureHTTPService from '../../main/services/medicamentManufactureHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statusOptions = ['Available', 'Unavailable', 'Expired'];\r\n\r\nconst AddMedicament = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    genericName: '',\r\n    category: '',\r\n    description: '',\r\n    activeIngredients: [{ ingredient: '', concentration: '' }],\r\n    dosageForm: '',\r\n    strength: '',\r\n    manufacturerId: '',\r\n    requiresPrescription: 'Yes',\r\n    sideEffects: [''],\r\n    contraindications: [''],\r\n    usageInstructions: '',\r\n    stockQuantity: '',\r\n    pricePerUnit: '',\r\n    expirationDate: '',\r\n    storageConditions: '',\r\n    barcode: '',\r\n    batchNumber: '',\r\n    status: 'Available',\r\n    // Add missing fields for manufacturer\r\n    contactPerson: {\r\n      fullName: '',\r\n      phone: '',\r\n      email: ''\r\n    },\r\n    address: {\r\n      street: '',\r\n      city: '',\r\n      state: '',\r\n      postalCode: '',\r\n      country: ''\r\n    },\r\n    phone: '',\r\n    email: '',\r\n    website: '',\r\n    licenseNumber: '',\r\n    certifications: [],\r\n    medicamentsSupplied: [],\r\n    contractStartDate: '',\r\n    contractEndDate: '',\r\n    manufactureStatus: 'Active' // renamed to avoid conflict with medicament status\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Replace with your actual service/API for medicament categories\r\n    // Example: medicamentCategoryHTTPService.getAllCategories()\r\n    fetch(BASE_URL+'/medicament-categories')\r\n      .then(res => res.json())\r\n      .then(data => setCategories(data || []))\r\n      .catch(() => setCategories([]));\r\n  }, []);\r\n\r\n  // Handlers for main fields\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  // Active Ingredients\r\n  const handleIngredientChange = (idx, field, value) => {\r\n    const activeIngredients = [...form.activeIngredients];\r\n    activeIngredients[idx][field] = value;\r\n    setForm(f => ({ ...f, activeIngredients }));\r\n  };\r\n  const addIngredient = () => setForm(f => ({\r\n    ...f,\r\n    activeIngredients: [...f.activeIngredients, { ingredient: '', concentration: '' }]\r\n  }));\r\n  const removeIngredient = idx => setForm(f => ({\r\n    ...f,\r\n    activeIngredients: f.activeIngredients.length > 1\r\n      ? f.activeIngredients.filter((_, i) => i !== idx)\r\n      : [{ ingredient: '', concentration: '' }]\r\n  }));\r\n\r\n  // Side Effects\r\n  const handleSideEffectChange = (idx, value) => {\r\n    const sideEffects = [...form.sideEffects];\r\n    sideEffects[idx] = value;\r\n    setForm(f => ({ ...f, sideEffects }));\r\n  };\r\n  const addSideEffect = () => setForm(f => ({ ...f, sideEffects: [...f.sideEffects, ''] }));\r\n  const removeSideEffect = idx => setForm(f => ({\r\n    ...f,\r\n    sideEffects: f.sideEffects.length > 1\r\n      ? f.sideEffects.filter((_, i) => i !== idx)\r\n      : ['']\r\n  }));\r\n\r\n  // Contraindications\r\n  const handleContraindicationChange = (idx, value) => {\r\n    const contraindications = [...form.contraindications];\r\n    contraindications[idx] = value;\r\n    setForm(f => ({ ...f, contraindications }));\r\n  };\r\n  const addContraindication = () => setForm(f => ({ ...f, contraindications: [...f.contraindications, ''] }));\r\n  const removeContraindication = idx => setForm(f => ({\r\n    ...f,\r\n    contraindications: f.contraindications.length > 1\r\n      ? f.contraindications.filter((_, i) => i !== idx)\r\n      : ['']\r\n  }));\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n\r\n    // Validation for required fields\r\n    if (\r\n      !form.name ||\r\n      !form.genericName ||\r\n      !form.category ||\r\n      !form.description ||\r\n      !form.dosageForm ||\r\n      !form.strength ||\r\n      !form.manufacturerId ||\r\n      !form.usageInstructions ||\r\n      !form.stockQuantity ||\r\n      !form.pricePerUnit ||\r\n      !form.expirationDate ||\r\n      !form.storageConditions ||\r\n      !form.barcode ||\r\n      !form.batchNumber ||\r\n      !form.status\r\n    ) {\r\n      showMessage('Error', 'Please fill all required fields.', 'warning');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      name: form.name,\r\n      genericName: form.genericName,\r\n      category: form.category,\r\n      description: form.description,\r\n      activeIngredients: form.activeIngredients.filter(ai => ai.ingredient && ai.concentration),\r\n      dosageForm: form.dosageForm,\r\n      strength: form.strength,\r\n      manufacturerId: Number(form.manufacturerId),\r\n      requiresPrescription: form.requiresPrescription,\r\n      sideEffects: form.sideEffects.filter(s => s.trim() !== ''),\r\n      contraindications: form.contraindications.filter(c => c.trim() !== ''),\r\n      usageInstructions: form.usageInstructions,\r\n      stockQuantity: Number(form.stockQuantity),\r\n      pricePerUnit: Number(form.pricePerUnit),\r\n      expirationDate: new Date(form.expirationDate).toISOString(),\r\n      storageConditions: form.storageConditions,\r\n      barcode: form.barcode,\r\n      batchNumber: form.batchNumber,\r\n      status: form.status,\r\n      contactPerson: form.contactPerson,\r\n      address: form.address,\r\n      phone: form.phone,\r\n      email: form.email,\r\n      website: form.website,\r\n      licenseNumber: form.licenseNumber,\r\n      certifications: form.certifications,\r\n      medicamentsSupplied: form.medicamentsSupplied,\r\n      contractStartDate: form.contractStartDate ? new Date(form.contractStartDate).toISOString() : '',\r\n      contractEndDate: form.contractEndDate ? new Date(form.contractEndDate).toISOString() : '',\r\n      manufactureStatus: form.manufactureStatus,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n\r\n    try {\r\n      await medicamentManufactureHTTPService.createMedicamentManufacture(data);\r\n      showMessage('Success', 'Medicament created successfully', 'success');\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } catch (e) {\r\n      showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2, minWidth: 400 }}>\r\n      <Stack spacing={2}>\r\n        <TextField label=\"Name\" name=\"name\" value={form.name} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Generic Name\" name=\"genericName\" value={form.genericName} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Category\"\r\n          name=\"category\"\r\n          value={form.category}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {categories.map(cat => (\r\n            <MenuItem key={cat.id || cat._id || cat.name} value={cat.name}>\r\n              {cat.name}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField label=\"Description\" name=\"description\" value={form.description} onChange={handleChange} required fullWidth />\r\n\r\n        <Typography variant=\"subtitle2\">Active Ingredients</Typography>\r\n        {form.activeIngredients.map((ai, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              label=\"Ingredient\"\r\n              value={ai.ingredient}\r\n              onChange={e => handleIngredientChange(idx, 'ingredient', e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Concentration\"\r\n              value={ai.concentration}\r\n              onChange={e => handleIngredientChange(idx, 'concentration', e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <IconButton color=\"error\" onClick={() => removeIngredient(idx)} disabled={form.activeIngredients.length === 1}>\r\n              <span className=\"fa fa-minus\" />\r\n            </IconButton>\r\n            {idx === form.activeIngredients.length - 1 && (\r\n              <IconButton color=\"success\" onClick={addIngredient}>\r\n                <span className=\"fa fa-plus\" />\r\n              </IconButton>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <TextField label=\"Dosage Form\" name=\"dosageForm\" value={form.dosageForm} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Strength\" name=\"strength\" value={form.strength} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Manufacturer ID\" name=\"manufacturerId\" value={form.manufacturerId} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Requires Prescription\"\r\n          name=\"requiresPrescription\"\r\n          value={form.requiresPrescription}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"Yes\">Yes</MenuItem>\r\n          <MenuItem value=\"No\">No</MenuItem>\r\n        </TextField>\r\n\r\n        <Typography variant=\"subtitle2\">Side Effects</Typography>\r\n        {form.sideEffects.map((side, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              value={side}\r\n              onChange={e => handleSideEffectChange(idx, e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <IconButton color=\"error\" onClick={() => removeSideEffect(idx)} disabled={form.sideEffects.length === 1}>\r\n              <span className=\"fa fa-minus\" />\r\n            </IconButton>\r\n            {idx === form.sideEffects.length - 1 && (\r\n              <IconButton color=\"success\" onClick={addSideEffect}>\r\n                <span className=\"fa fa-plus\" />\r\n              </IconButton>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <Typography variant=\"subtitle2\">Contraindications</Typography>\r\n        {form.contraindications.map((contra, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              value={contra}\r\n              onChange={e => handleContraindicationChange(idx, e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <IconButton color=\"error\" onClick={() => removeContraindication(idx)} disabled={form.contraindications.length === 1}>\r\n              <span className=\"fa fa-minus\" />\r\n            </IconButton>\r\n            {idx === form.contraindications.length - 1 && (\r\n              <IconButton color=\"success\" onClick={addContraindication}>\r\n                <span className=\"fa fa-plus\" />\r\n              </IconButton>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <TextField label=\"Usage Instructions\" name=\"usageInstructions\" value={form.usageInstructions} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Stock Quantity\" name=\"stockQuantity\" type=\"number\" value={form.stockQuantity} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Price Per Unit\" name=\"pricePerUnit\" type=\"number\" value={form.pricePerUnit} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          label=\"Expiration Date\"\r\n          name=\"expirationDate\"\r\n          type=\"date\"\r\n          value={form.expirationDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField label=\"Storage Conditions\" name=\"storageConditions\" value={form.storageConditions} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Barcode\" name=\"barcode\" value={form.barcode} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Batch Number\" name=\"batchNumber\" value={form.batchNumber} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n        {/* Manufacturer Details Section */}\r\n        <Typography variant=\"h6\" sx={{ mt: 3 }}>Manufacturer Details</Typography>\r\n        <TextField label=\"Contact Person\" name=\"contactPerson.fullName\" value={form.contactPerson.fullName} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Phone\" name=\"contactPerson.phone\" value={form.contactPerson.phone} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Email\" name=\"contactPerson.email\" value={form.contactPerson.email} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Street\" name=\"address.street\" value={form.address.street} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"City\" name=\"address.city\" value={form.address.city} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"State\" name=\"address.state\" value={form.address.state} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Postal Code\" name=\"address.postalCode\" value={form.address.postalCode} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Country\" name=\"address.country\" value={form.address.country} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Phone\" name=\"phone\" value={form.phone} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Email\" name=\"email\" value={form.email} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Website\" name=\"website\" value={form.website} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"License Number\" name=\"licenseNumber\" value={form.licenseNumber} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Certifications\"\r\n          name=\"certifications\"\r\n          value={form.certifications}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"GMP\">GMP</MenuItem>\r\n          <MenuItem value=\"ISO\">ISO</MenuItem>\r\n          <MenuItem value=\"Other\">Other</MenuItem>\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Medicaments Supplied\"\r\n          name=\"medicamentsSupplied\"\r\n          value={form.medicamentsSupplied}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"Medicament A\">Medicament A</MenuItem>\r\n          <MenuItem value=\"Medicament B\">Medicament B</MenuItem>\r\n          <MenuItem value=\"Medicament C\">Medicament C</MenuItem>\r\n        </TextField>\r\n        <TextField\r\n          label=\"Contract Start Date\"\r\n          name=\"contractStartDate\"\r\n          type=\"date\"\r\n          value={form.contractStartDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Contract End Date\"\r\n          name=\"contractEndDate\"\r\n          type=\"date\"\r\n          value={form.contractEndDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Manufacture Status\"\r\n          name=\"manufactureStatus\"\r\n          value={form.manufactureStatus}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"Active\">Active</MenuItem>\r\n          <MenuItem value=\"Inactive\">Inactive</MenuItem>\r\n        </TextField>\r\n\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Medicament'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddMedicament;","\r\nimport PropTypes from 'prop-types';\r\nimport './EditMedicamentManufacture.css';\r\nimport medicamentManufactureHTTPService from '../../main/services/medicamentManufactureHTTPService';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nconst EditMedicamentManufacture = (props) => {\r\n\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [medicamentManufacture, setMedicamentManufacture] = useState(props.medicamentManufacture);\r\n  const [typeSubs, setTypeSubs] = useState([]);\r\n  const [members, setMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMedicamentManufacture(props.medicamentManufacture)\r\n\r\n  }, [props.medicamentManufacture]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //ActivityTestService.update(props.medicamentManufacture, data)\r\n    medicamentManufactureHTTPService.editMedicamentManufacture(props.medicamentManufacture.id, data).then(data => {\r\n      props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setMedicamentManufacture({ ...medicamentManufacture, [name]: value });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"EditActivity\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Manufacture:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={medicamentManufacture?.name} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nEditMedicamentManufacture.propTypes = {};\r\n\r\nEditMedicamentManufacture.defaultProps = {};\r\n\r\nexport default EditMedicamentManufacture;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './MedicamentManufacture.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport medicamentManufactureHTTPService from '../../main/services/medicamentManufactureHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nimport AddMedicamentManufacture from './AddMedicamentManufacture';\r\nimport EditMedicamentManufacture from '../EditMedicamentManufacture/EditMedicamentManufacture';\r\nimport { Button, Chip, LinearProgress, Menu, MenuItem, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Divider, Box, Stack } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst MedicamentManufacture = () => {\r\n  const [medicamentManufactures, setMedicamentManufactures] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [viewItem, setViewItem] = useState(null);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    setLoading(true);\r\n\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/medicament-manufactures.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          // Ensure every row has a unique id\r\n          const formatted = data.map((item, index) => ({\r\n            ...item,\r\n            id: item.id ? item.id : (item.barcode ? item.barcode : index + 1)\r\n          }));\r\n          setMedicamentManufactures(formatted);\r\n          setLoading(false);\r\n        })\r\n        .catch(() => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      medicamentManufactureHTTPService.getAllMedicamentManufacture()\r\n        .then(response => {\r\n          // Ensure every row has a unique id\r\n          const formatted = response.data.map((item, index) => ({\r\n            ...item,\r\n            id: item.id ? item.id : (item.barcode ? item.barcode : index + 1) // Use id, else barcode, else index\r\n          }));\r\n          setMedicamentManufactures(formatted);\r\n          setLoading(false);\r\n        })\r\n        .catch(() => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    setUpdatedItemIds(ids);\r\n    if (ids.length === 1) {\r\n      const selected = medicamentManufactures.find(item => item.id === ids[0]);\r\n      setUpdatedItemId(ids[0]);\r\n      setUpdatedItem(selected || {});\r\n    }\r\n  };\r\n\r\n  const removeMedicamentManufactureAction = (e, ids) => {\r\n    e.preventDefault();\r\n    if (!ids.length) return;\r\n    if (window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\")) {\r\n      // You may want to loop and delete each or support batch delete\r\n      medicamentManufactureHTTPService.removeMedicamentManufacture(ids[0])\r\n        .then(() => {\r\n          fetchData();\r\n          showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success');\r\n        }).catch(() => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n        });\r\n    }\r\n  };\r\n\r\n  const closeModalEdit = () => {\r\n    fetchData();\r\n    closeButtonEdit.current.click();\r\n  };\r\n\r\n  const closeModalAdd = () => {\r\n    fetchData();\r\n    closeButtonAdd.current.click();\r\n  };\r\n\r\n  // Update actions menu for View\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton onClick={(event) => { setAnchorEl(event.currentTarget); setSelectedRow(params.row); }}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\r\n        <MenuItem onClick={() => {\r\n          setViewItem(params.row);\r\n          setViewOpen(true);\r\n          setAnchorEl(null);\r\n        }}>View</MenuItem>\r\n        <MenuItem onClick={() => {/* Edit logic */}}>Edit</MenuItem>\r\n        <MenuItem onClick={() => {/* Delete logic */}}>Delete</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  // Columns for MedicamentManufacture table (delete id column, add chip for status, add actions column)\r\n  const columns = [\r\n    // { field: 'id', headerName: '#', width: 60 }, // deleted\r\n    { field: 'name', headerName: 'Manufacture', width: 150 },\r\n    { field: 'licenseNumber', headerName: 'License No.', width: 130 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Active'\r\n              ? 'success'\r\n              : params.value === 'Inactive'\r\n              ? 'default'\r\n              : 'warning'\r\n          }\r\n          size=\"small\"\r\n          variant=\"filled\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    { field: 'phone', headerName: 'Phone', width: 140 },\r\n    { field: 'email', headerName: 'Email', width: 200 },\r\n    {\r\n      field: 'website',\r\n      headerName: 'Website',\r\n      width: 180,\r\n      renderCell: (params) => (\r\n        <a href={params.value} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {params.value}\r\n        </a>\r\n      )\r\n    },\r\n    {\r\n      field: 'contactPerson',\r\n      headerName: 'Contact',\r\n      width: 230,\r\n      renderCell: (params) => {\r\n        const cp = params.row.contactPerson;\r\n        return cp ? (\r\n          <div>\r\n            <div><strong>{cp.fullName}</strong></div>\r\n            <div>{cp.email}</div>\r\n            <div>{cp.phone}</div>\r\n          </div>\r\n        ) : 'N/A';\r\n      }\r\n    },\r\n    {\r\n      field: 'address',\r\n      headerName: 'Address',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        const addr = params.row.address;\r\n        return addr ? `${addr.street}, ${addr.city}, ${addr.state}, ${addr.country} ${addr.postalCode}` : 'N/A';\r\n      }\r\n    },\r\n    {\r\n      field: 'certifications',\r\n      headerName: 'Certifications',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {(params.row.certifications || []).map((cert, i) => (\r\n            <Chip key={i} label={cert} color=\"warning\" variant=\"outlined\" size=\"small\" sx={{ mb: 0.5 }} />\r\n          ))}\r\n        </Box>\r\n      )\r\n    },\r\n    {\r\n      field: 'medicamentsSupplied',\r\n      headerName: 'Medicaments',\r\n      width: 250,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {(params.row.medicamentsSupplied || []).map((med, i) => (\r\n            <Chip key={i} label={`${med.name} (${med.batchNumber})`} color=\"success\" variant=\"outlined\" size=\"small\" sx={{ mb: 0.5 }} />\r\n          ))}\r\n        </Box>\r\n      )\r\n    },\r\n    {\r\n      field: 'contractStartDate',\r\n      headerName: 'Start Date',\r\n      width: 120,\r\n      valueGetter: (params) => new Date(params.value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'contractEndDate',\r\n      headerName: 'End Date',\r\n      width: 120,\r\n      valueGetter: (params) => new Date(params.value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Created At',\r\n      width: 160,\r\n      valueGetter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      renderCell: renderActionsMenu\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i> Medicaments Manufactures\r\n        </Typography>\r\n\r\n        <Button\r\n          type=\"button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#addModal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n        >\r\n          <i className=\"fas fa-plus\"></i> Create\r\n        </Button>\r\n        <Button\r\n          type=\"button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#editModal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n        >\r\n          <i className=\"fas fa-edit\"></i> Edit\r\n        </Button>\r\n        <Button\r\n          onClick={e => removeMedicamentManufactureAction(e, updatedItemIds)}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i> Remove\r\n        </Button>\r\n        <Button\r\n          onClick={fetchData}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, fontWeight: 600 }}\r\n        >\r\n          <i className=\"fas fa-refresh\"></i> Reload\r\n        </Button>\r\n\r\n        <br /><br />\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n              rows={medicamentManufactures}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Modal */}\r\n        <div className=\"modal fade\" id=\"addModal\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">New Manufacture</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                  <span>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <AddMedicamentManufacture closeModal={closeModalAdd} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" ref={closeButtonAdd} className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Modal */}\r\n        <div className=\"modal fade\" id=\"editModal\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Manufacture</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                  <span>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <EditMedicamentManufacture medicamentManufacture={updatedItem} closeModal={closeModalEdit} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" ref={closeButtonEdit} className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* View Dialog */}\r\n        <Dialog open={viewOpen} onClose={() => setViewOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            <span style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n              <i className=\"fas fa-industry\" style={{ color: '#1976d2', fontSize: 22 }} />\r\n              Manufacture Details\r\n            </span>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {viewItem ? (\r\n              <Box\r\n                sx={{\r\n                  bgcolor: '#fafdff',\r\n                  borderRadius: 2,\r\n                  boxShadow: 1,\r\n                  p: { xs: 2, sm: 3 },\r\n                  minWidth: 320,\r\n                  minHeight: 200,\r\n                  mb: 2\r\n                }}\r\n              >\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip\r\n                    label={viewItem.status}\r\n                    color={viewItem.status === 'Active' ? 'success' : viewItem.status === 'Inactive' ? 'default' : 'warning'}\r\n                    icon={<i className=\"fas fa-check-circle\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`License: ${viewItem.licenseNumber || '-'}`}\r\n                    color=\"info\"\r\n                    icon={<i className=\"fas fa-id-card\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Phone: ${viewItem.phone || '-'}`}\r\n                    color=\"primary\"\r\n                    icon={<i className=\"fas fa-phone\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Email: ${viewItem.email || '-'}`}\r\n                    color=\"primary\"\r\n                    icon={<i className=\"fas fa-envelope\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle1\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  General Info:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip\r\n                    label={`Name: ${viewItem.name || '-'}`}\r\n                    color=\"default\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Website: ${viewItem.website || '-'}`}\r\n                    color=\"info\"\r\n                    icon={<i className=\"fas fa-globe\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    component=\"a\"\r\n                    href={viewItem.website}\r\n                    target=\"_blank\"\r\n                    clickable={!!viewItem.website}\r\n                  />\r\n                </Stack>\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Contact Person:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip\r\n                    label={viewItem.contactPerson?.fullName || '-'}\r\n                    color=\"primary\"\r\n                    icon={<i className=\"fas fa-user\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={viewItem.contactPerson?.email || '-'}\r\n                    color=\"info\"\r\n                    icon={<i className=\"fas fa-envelope\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={viewItem.contactPerson?.phone || '-'}\r\n                    color=\"success\"\r\n                    icon={<i className=\"fas fa-phone\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Address:\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n                  {viewItem.address\r\n                    ? `${viewItem.address.street}, ${viewItem.address.city}, ${viewItem.address.state}, ${viewItem.address.country} ${viewItem.address.postalCode}`\r\n                    : '-'}\r\n                </Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Certifications:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewItem.certifications || []).length > 0 ? (\r\n                    viewItem.certifications.map((cert, i) => (\r\n                      <Chip key={i} label={cert} color=\"warning\" variant=\"outlined\" sx={{ mb: 1 }} />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">No certifications listed.</Typography>\r\n                  )}\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Medicaments Supplied:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewItem.medicamentsSupplied || []).length > 0 ? (\r\n                    viewItem.medicamentsSupplied.map((med, i) => (\r\n                      <Chip key={i} label={`${med.name} (${med.batchNumber})`} color=\"success\" variant=\"outlined\" sx={{ mb: 1 }} />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">No medicaments listed.</Typography>\r\n                  )}\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip\r\n                    label={`Contract Start: ${viewItem.contractStartDate ? new Date(viewItem.contractStartDate).toLocaleDateString() : '-'}`}\r\n                    color=\"info\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Contract End: ${viewItem.contractEndDate ? new Date(viewItem.contractEndDate).toLocaleDateString() : '-'}`}\r\n                    color=\"warning\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Created: ${viewItem.createdAt ? new Date(viewItem.createdAt).toLocaleString() : '-'}`}\r\n                    color=\"default\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No manufacture selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"secondary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MedicamentManufacture;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, TextField, Stack } from '@mui/material';\r\nimport medicamentCategoryHTTPService from '../../main/services/medicamentCategoryHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst AddMedicamentCategory = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    description: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      name: form.name,\r\n      description: form.description,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await medicamentCategoryHTTPService.createMedicamentCayegory(data);\r\n      showMessage('Success', 'Category created successfully', 'success');\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } catch (e) {\r\n      showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2, minWidth: 350 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          value={form.name}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          value={form.description}\r\n          onChange={handleChange}\r\n          multiline\r\n          rows={3}\r\n          required\r\n          fullWidth\r\n        />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Category'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddMedicamentCategory;","\r\nimport PropTypes from 'prop-types';\r\nimport './EditMedicamentCategory.css';\r\nimport medicamentCategoryHTTPService from '../../main/services/medicamentCategoryHTTPService';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nconst EditMedicamentCategory = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [medicamentCategory, setMedicamentCategory] = useState(props.medicamentCategory);\r\n  const [typeSubs, setTypeSubs] = useState([]);\r\n  const [members, setMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMedicamentCategory(props.medicamentCategory)\r\n\r\n  }, [props.medicamentCategory]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //ActivityTestService.update(props.medicamentCategory, data)\r\n    medicamentCategoryHTTPService.editMedicamentCayegory(props.medicamentCategory.id, data).then(data => {\r\n      props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setMedicamentCategory({ ...medicamentCategory, [name]: value });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"EditActivity\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  >Medecine Category:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={medicamentCategory?.name} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\" col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nEditMedicamentCategory.propTypes = {};\r\n\r\nEditMedicamentCategory.defaultProps = {};\r\n\r\nexport default EditMedicamentCategory;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, LinearProgress, Typography, IconButton, Menu, MenuItem } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport useForceUpdate from 'use-force-update';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MedicamentCategory.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport medicamentCategoryHTTPService from '../../main/services/medicamentCategoryHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\n\r\nimport AddMedicamentCategory from './AddMedicamentCategory';\r\nimport EditMedicamentCategory from '../EditMedicamentCategory/EditMedicamentCategory';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\n\r\n\r\nconst MedicamentCategory = () => {\r\n  const [medicamentsCategories, setMedicamentsCategories] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    getAllIncomes();\r\n  }, []);\r\n\r\n  const getAllIncomes = () => {\r\n    setLoading(true);\r\n\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/medicaments-categories.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const formatted = data.map((item, index) => ({\r\n            ...item,\r\n            id: item.id || index + 1,\r\n          }));\r\n          setMedicamentsCategories(formatted);\r\n          setLoading(false);\r\n        })\r\n        .catch(() => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      medicamentCategoryHTTPService.getAllMedicamentCayegory()\r\n        .then(response => {\r\n          const formatted = response.data.map((item, index) => ({\r\n            ...item,\r\n            id: item.id || index + 1,\r\n          }));\r\n          setMedicamentsCategories(formatted);\r\n          setLoading(false);\r\n        })\r\n        .catch(() => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const resfreshComponent = () => {\r\n    getAllIncomes();\r\n    forceUpdate();\r\n  };\r\n\r\n  const removeMedicamentCategoryAction = (e, data) => {\r\n    e.preventDefault();\r\n    if (window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\")) {\r\n      showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success');\r\n      medicamentCategoryHTTPService.removeMedicamentCayegory(data)\r\n        .then(() => resfreshComponent())\r\n        .catch(() => showMessage('Error', CurrentUser.ERR_MSG, 'warning'));\r\n    }\r\n  };\r\n\r\n  const updateMedicamentCategoryAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data);\r\n    resfreshComponent();\r\n  };\r\n\r\n  const closeModalEdit = () => {\r\n    resfreshComponent();\r\n    closeButtonEdit.current.click();\r\n  };\r\n\r\n  const closeModalAdd = () => {\r\n    resfreshComponent();\r\n    closeButtonAdd.current.click();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      setUpdatedItemId(ids[0]);\r\n      const selectedItem = medicamentsCategories.find(item => item.id === ids[0]);\r\n      setUpdatedItem(selectedItem);\r\n    }\r\n    setUpdatedItemIds(ids);\r\n  };\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setUpdatedItem(actionRow);\r\n    setUpdatedItemId(actionRow.id);\r\n    document.querySelector('[data-target=\"#editPatient\"]').click();\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    removeMedicamentCategoryAction({ preventDefault: () => {} }, [actionRow.id]);\r\n    handleActionClose();\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 70 },\r\n    { field: 'name', headerName: 'Category', width: 150 },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n      width: 250\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 90,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"action-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleActionClick(event, params.row)}\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        {showChart && (\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {showFilter && (\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n          </div>\r\n        )}\r\n\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i> Medicaments Categories\r\n        </Typography>\r\n\r\n        <Button data-toggle=\"modal\" data-target=\"#addPayment\">\r\n          <i className=\"fas fa-plus\"></i> Create\r\n        </Button>\r\n        <Button onClick={(e) => updateMedicamentCategoryAction(e, updatedItemId)} data-toggle=\"modal\" data-target=\"#editPatient\">\r\n          <i className=\"fas fa-edit\"></i> Edit\r\n        </Button>\r\n        <Button onClick={(e) => removeMedicamentCategoryAction(e, updatedItemIds)}>\r\n          <i className=\"fas fa-trash-alt\"></i> Remove\r\n        </Button>\r\n        <Button onClick={getAllIncomes}>\r\n          <i className=\"fas fa-refresh\"></i> Reload\r\n        </Button>\r\n\r\n        <br /><br />\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={medicamentsCategories}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              id=\"action-menu\"\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleEdit}>Edit</MenuItem>\r\n              <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Modal */}\r\n        <div className=\"modal fade\" id=\"addPayment\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Nouveau</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <AddMedicamentCategory closeModal={closeModalAdd} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" onClick={resfreshComponent} ref={closeButtonAdd} className=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                  Fermer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Modal */}\r\n        <div className=\"modal fade\" id=\"editPatient\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <EditMedicamentCategory closeModal={closeModalEdit} medicamentCategory={updatedItem} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" onClick={resfreshComponent} ref={closeButtonEdit} className=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                  Fermer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMedicamentCategory.propTypes = {};\r\nMedicamentCategory.defaultProps = {};\r\n\r\nexport default MedicamentCategory;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllTestLab = () => {\r\n    return http.get(`${BASE_URL}/labtests`)\r\n}\r\nconst createTestLab = data => {\r\n    return http.post(`${BASE_URL}/labtests`, data);\r\n};\r\n\r\nconst editTestLab = (id, data) => {\r\n    return http.put(`${BASE_URL}/labtests/${id}`, data);\r\n};\r\n\r\nconst removeTestLab = id => {\r\n    return http.delete(`${BASE_URL}/labtests/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllTestLab,\r\n    createTestLab,\r\n    editTestLab,\r\n    removeTestLab\r\n};","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['Pending', 'In Progress', 'Completed', 'Cancelled'];\r\nconst insuranceOptions = ['Yes', 'No'];\r\nconst paymentStatuses = ['Paid', 'Unpaid', 'Pending'];\r\n\r\nconst AddLabTest = ({ closeModal, patients = [], doctors = [], clinics = [], laboratories = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicId: '',\r\n    testName: '',\r\n    testCategory: '',\r\n    testDescription: '',\r\n    sampleType: '',\r\n    sampleCollectionDate: '',\r\n    sampleCollectedBy: '',\r\n    testStatus: 'Pending',\r\n    result: {},\r\n    laboratoryId: '',\r\n    testCost: 0,\r\n    insuranceCovered: '',\r\n    paymentStatus: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const labTestData = {\r\n      ...form,\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/labtests`, labTestData);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(p => (\r\n          <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(d => (\r\n          <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic\"\r\n        name=\"clinicId\"\r\n        value={form.clinicId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {clinics.map(c => (\r\n          <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Test Name\"\r\n        name=\"testName\"\r\n        value={form.testName}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Test Category\"\r\n        name=\"testCategory\"\r\n        value={form.testCategory}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Test Description\"\r\n        name=\"testDescription\"\r\n        value={form.testDescription}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <TextField\r\n        label=\"Sample Type\"\r\n        name=\"sampleType\"\r\n        value={form.sampleType}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Sample Collection Date\"\r\n        name=\"sampleCollectionDate\"\r\n        type=\"datetime-local\"\r\n        value={form.sampleCollectionDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Sample Collected By\"\r\n        name=\"sampleCollectedBy\"\r\n        value={form.sampleCollectedBy}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Test Status\"\r\n        name=\"testStatus\"\r\n        value={form.testStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {statuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Laboratory\"\r\n        name=\"laboratoryId\"\r\n        value={form.laboratoryId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {laboratories.map(l => (\r\n          <MenuItem key={l.id} value={l.id}>{l.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Test Cost\"\r\n        name=\"testCost\"\r\n        type=\"number\"\r\n        value={form.testCost}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Insurance Covered\"\r\n        name=\"insuranceCovered\"\r\n        value={form.insuranceCovered}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {insuranceOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Payment Status\"\r\n        name=\"paymentStatus\"\r\n        value={form.paymentStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {paymentStatuses.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Create Lab Test'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddLabTest;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['Pending', 'In Progress', 'Completed', 'Cancelled'];\r\nconst insuranceOptions = ['Yes', 'No'];\r\nconst paymentStatuses = ['Paid', 'Unpaid', 'Pending'];\r\nconst sampleConditions = ['Normal', 'Hemolyzed', 'Lipemic', 'Icteric', 'Clotted'];\r\nconst urgencyLevels = ['Routine', 'Urgent', 'Stat'];\r\nconst resultDeliveryMethods = ['Email', 'Phone', 'In Person', 'Portal'];\r\n\r\nconst EditLabTest = ({ closeModal, testLab = {}, patients = [], doctors = [], clinics = [], laboratories = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicId: '',\r\n    testName: '',\r\n    testCategory: '',\r\n    testDescription: '',\r\n    sampleType: '',\r\n    sampleCondition: '',\r\n    sampleCollectionDate: '',\r\n    sampleCollectedBy: '',\r\n    urgencyLevel: '',\r\n    testStatus: 'Pending',\r\n    result: {},\r\n    laboratoryId: '',\r\n    testCost: 0,\r\n    insuranceCovered: '',\r\n    paymentStatus: '',\r\n    resultDeliveryMethod: '',\r\n    resultDeliveryDate: '',\r\n    comments: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (testLab) {\r\n      setForm({\r\n        patientId: testLab.patientId || '',\r\n        doctorId: testLab.doctorId || '',\r\n        clinicId: testLab.clinicId || '',\r\n        testName: testLab.testName || '',\r\n        testCategory: testLab.testCategory || '',\r\n        testDescription: testLab.testDescription || '',\r\n        sampleType: testLab.sampleType || '',\r\n        sampleCondition: testLab.sampleCondition || '',\r\n        sampleCollectionDate: testLab.sampleCollectionDate ? testLab.sampleCollectionDate.slice(0, 16) : '',\r\n        sampleCollectedBy: testLab.sampleCollectedBy || '',\r\n        urgencyLevel: testLab.urgencyLevel || '',\r\n        testStatus: testLab.testStatus || 'Pending',\r\n        result: testLab.result || {},\r\n        laboratoryId: testLab.laboratoryId || '',\r\n        testCost: testLab.testCost || 0,\r\n        insuranceCovered: testLab.insuranceCovered || '',\r\n        paymentStatus: testLab.paymentStatus || '',\r\n        resultDeliveryMethod: testLab.resultDeliveryMethod || '',\r\n        resultDeliveryDate: testLab.resultDeliveryDate ? testLab.resultDeliveryDate.slice(0, 16) : '',\r\n        comments: testLab.comments || '',\r\n      });\r\n    }\r\n  }, [testLab]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const labTestData = {\r\n      ...form,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/labtests/${testLab.id}`, labTestData);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(p => (\r\n          <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(d => (\r\n          <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic\"\r\n        name=\"clinicId\"\r\n        value={form.clinicId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {clinics.map(c => (\r\n          <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Test Name\"\r\n        name=\"testName\"\r\n        value={form.testName}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Test Category\"\r\n        name=\"testCategory\"\r\n        value={form.testCategory}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Test Description\"\r\n        name=\"testDescription\"\r\n        value={form.testDescription}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <TextField\r\n        label=\"Sample Type\"\r\n        name=\"sampleType\"\r\n        value={form.sampleType}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Sample Collection Date\"\r\n        name=\"sampleCollectionDate\"\r\n        type=\"datetime-local\"\r\n        value={form.sampleCollectionDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Sample Collected By\"\r\n        name=\"sampleCollectedBy\"\r\n        value={form.sampleCollectedBy}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Test Status\"\r\n        name=\"testStatus\"\r\n        value={form.testStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {statuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Laboratory\"\r\n        name=\"laboratoryId\"\r\n        value={form.laboratoryId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {laboratories.map(l => (\r\n          <MenuItem key={l.id} value={l.id}>{l.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Test Cost\"\r\n        name=\"testCost\"\r\n        type=\"number\"\r\n        value={form.testCost}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Insurance Covered\"\r\n        name=\"insuranceCovered\"\r\n        value={form.insuranceCovered}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {insuranceOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Payment Status\"\r\n        name=\"paymentStatus\"\r\n        value={form.paymentStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {paymentStatuses.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Sample Condition\"\r\n        name=\"sampleCondition\"\r\n        value={form.sampleCondition}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {sampleConditions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Urgency Level\"\r\n        name=\"urgencyLevel\"\r\n        value={form.urgencyLevel}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {urgencyLevels.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Result Delivery Method\"\r\n        name=\"resultDeliveryMethod\"\r\n        value={form.resultDeliveryMethod}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {resultDeliveryMethods.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Result Delivery Date\"\r\n        name=\"resultDeliveryDate\"\r\n        type=\"datetime-local\"\r\n        value={form.resultDeliveryDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Comments\"\r\n        name=\"comments\"\r\n        value={form.comments}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Save Changes'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditLabTest;","import React, { useRef, useState } from 'react';\r\nimport {\r\n  Dialog, DialogTitle, DialogContent, DialogActions, Button,\r\n  Grid, Typography, Chip, Divider, Box, Paper, Stack, Tooltip\r\n} from '@mui/material';\r\n\r\nconst ViewLabTest = ({\r\n  open,\r\n  onClose,\r\n  testLab,\r\n  getPatientName,\r\n  getDoctorName\r\n}) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadedFile, setUploadedFile] = useState(testLab?.document || null);\r\n  const fileInputRef = useRef();\r\n\r\n  if (!testLab) return null;\r\n\r\n  // Handle file upload\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    setUploading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      await fetch(`/api/labtests/${testLab.id}/upload`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      // Optionally update UI or fetch new document info here\r\n      setUploadedFile({ name: file.name, url: `/labtest/${file.name}` });\r\n    } catch (err) {\r\n      alert('Upload failed');\r\n    }\r\n    setUploading(false);\r\n  };\r\n\r\n  // Handle download\r\n  const handleDownload = () => {\r\n    if (uploadedFile && uploadedFile.url) {\r\n      const link = document.createElement('a');\r\n      link.href = uploadedFile.url;\r\n      link.download = uploadedFile.name;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n      <DialogTitle sx={{ background: '#e3f2fd', fontWeight: 700, fontSize: 22 }}>\r\n        <i className=\"fas fa-vials\" style={{ color: '#1976d2', marginRight: 10 }} />\r\n        Lab Test Details\r\n      </DialogTitle>\r\n      <DialogContent dividers sx={{ background: '#f8fafc' }}>\r\n        <Paper elevation={0} sx={{ p: 2, mb: 2, bgcolor: '#fff', borderRadius: 2 }}>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Tooltip title=\"Patient\">\r\n              <i className=\"fas fa-user\" style={{ color: '#1976d2', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle1\" fontWeight={600}>\r\n              {getPatientName ? getPatientName(testLab.patientId) : testLab.patientId}\r\n            </Typography>\r\n            <Chip\r\n              label={testLab.testStatus}\r\n              color={\r\n                testLab.testStatus === 'Completed'\r\n                  ? 'success'\r\n                  : testLab.testStatus === 'Pending'\r\n                  ? 'warning'\r\n                  : 'default'\r\n              }\r\n              size=\"small\"\r\n              sx={{ ml: 2 }}\r\n            />\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Tooltip title=\"Doctor\">\r\n              <i className=\"fas fa-user-md\" style={{ color: '#388e3c', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle2\">{getDoctorName ? getDoctorName(testLab.doctorId) : testLab.doctorId}</Typography>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Tooltip title=\"Test Name\">\r\n              <i className=\"fas fa-flask\" style={{ color: '#d32f2f', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle2\">{testLab.testName}</Typography>\r\n          </Stack>\r\n        </Paper>\r\n        <Divider sx={{ mb: 2 }} />\r\n\r\n        {/* Upload/Download Document Section */}\r\n        <Box sx={{ mb: 2, p: 2, bgcolor: '#f5f5f5', borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            <i className=\"fas fa-file-upload\" style={{ marginRight: 8, color: '#1976d2' }} />\r\n            Lab Test Document\r\n          </Typography>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n              style={{ display: 'none' }}\r\n              ref={fileInputRef}\r\n              onChange={handleFileUpload}\r\n            />\r\n            <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => fileInputRef.current.click()}\r\n                disabled={uploading}\r\n                startIcon={<i className=\"fas fa-upload\"></i>}\r\n              >\r\n                {uploading ? 'Uploading...' : 'Upload Document'}\r\n              </Button>\r\n              {uploadedFile && (\r\n                <>\r\n                  <Typography variant=\"body2\" sx={{ ml: 1 }}>\r\n                    {uploadedFile.name}\r\n                  </Typography>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={handleDownload}\r\n                    startIcon={<i className=\"fas fa-download\"></i>}\r\n                  >\r\n                    Download\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Stack>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Category:</strong> {testLab.testCategory}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Status:</strong>{' '}\r\n              <Chip\r\n                label={testLab.testStatus}\r\n                color={\r\n                  testLab.testStatus === 'Completed'\r\n                    ? 'success'\r\n                    : testLab.testStatus === 'Pending'\r\n                    ? 'warning'\r\n                    : 'default'\r\n                }\r\n                size=\"small\"\r\n              />\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Sample Type:</strong> {testLab.sampleType}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Sample Date:</strong> {testLab.sampleCollectionDate ? new Date(testLab.sampleCollectionDate).toLocaleString() : '-'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Collected By:</strong> {testLab.sampleCollectedBy}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Laboratory:</strong> {testLab.laboratoryId}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Test Cost:</strong> {testLab.testCost}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Insurance Covered:</strong> {testLab.insuranceCovered}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Payment Status:</strong> {testLab.paymentStatus}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Description:</strong>\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 2, color: '#1976d2' }}>\r\n              {testLab.testDescription || '-'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Result:</strong>\r\n            </Typography>\r\n            <Box sx={{\r\n              background: '#f1f8e9',\r\n              borderRadius: 1,\r\n              p: 1,\r\n              fontFamily: 'monospace',\r\n              fontSize: 14,\r\n              color: '#388e3c',\r\n              mb: 2,\r\n              minHeight: 32\r\n            }}>\r\n              {testLab.result && Object.keys(testLab.result).length > 0\r\n                ? <pre style={{ margin: 0, background: 'none', fontFamily: 'inherit' }}>{JSON.stringify(testLab.result, null, 2)}</pre>\r\n                : 'No result yet'}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider sx={{ my: 2 }} />\r\n        <Box sx={{ mt: 2, textAlign: 'right' }}>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            <i className=\"fas fa-clock\" style={{ marginRight: 4 }} />\r\n            Created: {testLab.createdAt ? new Date(testLab.createdAt).toLocaleString() : '-'}\r\n            <br />\r\n            <i className=\"fas fa-sync-alt\" style={{ marginRight: 4 }} />\r\n            Updated: {testLab.updatedAt ? new Date(testLab.updatedAt).toLocaleString() : '-'}\r\n          </Typography>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions sx={{ background: '#f8fafc' }}>\r\n        <Button onClick={onClose} color=\"primary\" variant=\"contained\" sx={{ minWidth: 100 }}>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ViewLabTest;","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './LabTest.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LoadJSFiles } from '../init';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport labTestHTTPService from '../../main/services/labTestHTTPService';\r\n\r\n\r\nimport testlabHTTPService from '../../main/services/testlabHTTPService';\r\nimport { Button, Chip, LinearProgress, Link, Typography, Menu, MenuItem, IconButton, Box, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\n\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport CurrentUser from '../../main/config/user';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport AddLabTest from './AddLabTest';\r\nimport EditLabTest from './EditLabTest';\r\nimport ViewLabTest from './ViewLabTest';\r\nimport jsPDF from 'jspdf';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst LabTest = () => {\r\n\r\n  const [labTests, setLabTests] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [viewModalOpen, setViewModalOpen] = useState(false);\r\n  const [viewedItem, setViewedItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    fetchAllLabTests();\r\n    // Fetch patients and doctors using demo mode if enabled\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/patients.json')\r\n        .then(res => res.json())\r\n        .then(data => setPatients(data));\r\n      fetch('/demo/doctors.json')\r\n        .then(res => res.json())\r\n        .then(data => setDoctors(data));\r\n    } else {\r\n      fetch(`${BASE_URL}/patients`)\r\n        .then(res => res.json())\r\n        .then(data => setPatients(data));\r\n      fetch(`${BASE_URL}/doctors`)\r\n        .then(res => res.json())\r\n        .then(data => setDoctors(data));\r\n    }\r\n  }, []);\r\n\r\n\r\n  const fetchAllLabTests = () => {\r\n    setLoading(true);\r\n\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/labtests.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setLabTests(data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      testlabHTTPService.getAllTestLab()\r\n        .then(response => {\r\n          setLabTests(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    fetchAllLabTests()\r\n    //forceUpdate()\r\n  }\r\n\r\n  const removeLabTestAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      testlabHTTPService.removeTestLab(data).then(data => {\r\n        fetchAllLabTests()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateLabTestAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //  resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n    fetchAllLabTests()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    fetchAllLabTests()\r\n  }\r\n\r\n  // Helper functions to get full names\r\n  const getPatientName = (id) => {\r\n    const pat = patients.find(p => p.id === id);\r\n    return pat ? pat.fullName : `ID: ${id}`;\r\n  };\r\n  const getDoctorName = (id) => {\r\n    const doc = doctors.find(d => d.id === id);\r\n    return doc ? doc.fullName : `ID: ${id}`;\r\n  };\r\n\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={(event) => handleMenuOpen(event, params.row)}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleMenuClose}\r\n      >\r\n        <MenuItem onClick={() => handleMenuAction('view')}>View</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('edit')}>Edit</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('delete')}>Delete</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('download')}>Download</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('download-pdf')}>Download PDF</MenuItem>\r\n        <MenuItem>\r\n          <label style={{ cursor: 'pointer', margin: 0 }}>\r\n            Upload Lab Report\r\n            <input\r\n              type=\"file\"\r\n              hidden\r\n              onChange={handleUploadReport}\r\n            />\r\n          </label>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n   const columns = [\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 250,\r\n      renderCell: (params) => (\r\n        <span>{getPatientName(params.value)}</span>\r\n      )\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor',\r\n      width: 250,\r\n      renderCell: (params) => (\r\n        <span>{getDoctorName(params.value)}</span>\r\n      )\r\n    },\r\n    { field: 'testName', headerName: 'Test Name', width: 180 },\r\n    {\r\n      field: 'testCategory',\r\n      headerName: 'Category',\r\n      width: 130,\r\n      renderCell: ({ value }) => (\r\n        <Chip\r\n          label={value}\r\n          color={\r\n            value === 'Blood'\r\n              ? 'primary'\r\n              : value === 'Urine'\r\n              ? 'success'\r\n              : value === 'Radiology'\r\n              ? 'info'\r\n              : value === 'Biopsy'\r\n              ? 'secondary'\r\n              : 'default'\r\n          }\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'sampleCollectionDate',\r\n      headerName: 'Sample Date',\r\n      width: 140,\r\n      valueFormatter: ({ value }) => new Date(value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'testStatus',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: ({ value }) => (\r\n        <Chip\r\n          label={value || 'Unknown'}\r\n          color={\r\n            value === 'Completed'\r\n              ? 'success'\r\n              : value === 'Pending'\r\n              ? 'warning'\r\n              : value === 'In Progress'\r\n              ? 'info'\r\n              : value === 'Cancelled'\r\n              ? 'error'\r\n              : 'default'\r\n          }\r\n          size=\"small\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 300,\r\n      renderCell: renderActionsMenu\r\n    }\r\n  ];\r\n\r\n  const handleMenuOpen = (event, row) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedRow(row);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  const handleMenuAction = (action) => {\r\n    if (action === 'view') {\r\n      setViewedItem(selectedRow);\r\n      handleMenuClose();\r\n      setViewModalOpen(true);\r\n    }\r\n    if (action === 'edit') {\r\n      setUpdatedItem(selectedRow);\r\n      handleMenuClose();\r\n      setEditModalOpen(true);\r\n    }\r\n    if (action === 'delete') {\r\n      // ...your delete logic...\r\n      handleMenuClose();\r\n    }\r\n    if (action === 'download') {\r\n      // Download lab test as JSON file\r\n      const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(selectedRow, null, 2));\r\n      const downloadAnchorNode = document.createElement('a');\r\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n      downloadAnchorNode.setAttribute(\"download\", `labtest_${selectedRow.id || 'data'}.json`);\r\n      document.body.appendChild(downloadAnchorNode);\r\n      downloadAnchorNode.click();\r\n      downloadAnchorNode.remove();\r\n      handleMenuClose();\r\n    }\r\n    if (action === 'download-pdf') {\r\n      // Download lab test as a nicely formatted PDF\r\n      const doc = new jsPDF();\r\n      doc.setFontSize(20);\r\n      doc.setTextColor('#1976d2');\r\n      doc.text('Lab Test Report', 105, 18, { align: 'center' });\r\n\r\n      doc.setFontSize(12);\r\n      doc.setTextColor('#333');\r\n      let y = 32;\r\n\r\n      // Add patient and doctor info at the top\r\n      doc.setFont(undefined, 'bold');\r\n      doc.text('Patient:', 14, y);\r\n      doc.setFont(undefined, 'normal');\r\n      doc.text(getPatientName(selectedRow.patientId), 40, y);\r\n      y += 8;\r\n      doc.setFont(undefined, 'bold');\r\n      doc.text('Doctor:', 14, y);\r\n      doc.setFont(undefined, 'normal');\r\n      doc.text(getDoctorName(selectedRow.doctorId), 40, y);\r\n      y += 10;\r\n\r\n      // Draw a line\r\n      doc.setDrawColor(200, 200, 200);\r\n      doc.line(14, y, 196, y);\r\n      y += 8;\r\n\r\n      // Add main test info as key-value pairs\r\n      const fields = [\r\n        { label: 'Test Name', value: selectedRow.testName },\r\n        { label: 'Category', value: selectedRow.testCategory },\r\n        { label: 'Sample Date', value: selectedRow.sampleCollectionDate ? new Date(selectedRow.sampleCollectionDate).toLocaleDateString() : '' },\r\n        { label: 'Status', value: selectedRow.testStatus },\r\n        { label: 'Result', value: selectedRow.result ? (typeof selectedRow.result === 'object' ? JSON.stringify(selectedRow.result, null, 2) : selectedRow.result) : '' },\r\n        { label: 'Notes', value: selectedRow.notes || '' }\r\n      ];\r\n\r\n      fields.forEach(f => {\r\n        if (f.value) {\r\n          doc.setFont(undefined, 'bold');\r\n          doc.text(`${f.label}:`, 14, y);\r\n          doc.setFont(undefined, 'normal');\r\n          // Handle long text wrapping\r\n          const splitText = doc.splitTextToSize(String(f.value), 160);\r\n          doc.text(splitText, 40, y);\r\n          y += 8 + (splitText.length - 1) * 6;\r\n          if (y > 270) { doc.addPage(); y = 20; }\r\n        }\r\n      });\r\n\r\n      // Footer\r\n      doc.setFontSize(10);\r\n      doc.setTextColor('#888');\r\n      doc.text(`Generated on ${new Date().toLocaleString()}`, 14, 290);\r\n\r\n      doc.save(`labtest_${selectedRow.id || 'data'}.pdf`);\r\n      handleMenuClose();\r\n    }\r\n    handleMenuClose();\r\n  };\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length === 1) {\r\n      setUpdatedItemId(e[0]);\r\n      const selectedItem = labTests.find(item => item.id === e[0]);\r\n      setUpdatedItem(selectedItem);\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e);\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const bulkDelete = () => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete the selected items?\");\r\n    if (confirmDelete) {\r\n      console.log('Deleting selected items:', updatedItemIds);\r\n      // Add logic to delete selected items\r\n    }\r\n  };\r\n\r\n  const exportSelected = () => {\r\n    console.log('Exporting selected items:', updatedItemIds);\r\n    // Add logic to export selected items to CSV or Excel\r\n  };\r\n\r\n  const handleUploadReport = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      console.log('Uploaded file:', file);\r\n      // Add logic to upload and analyze the report\r\n    }\r\n  };\r\n\r\n  const analyzeRadiograph = (image) => {\r\n    console.log('Analyzing radiograph:', image);\r\n    // Placeholder for AI analysis logic\r\n    // Call AI API or model to analyze the image\r\n  };\r\n\r\n  const matchDiagnosisCode = (description) => {\r\n    console.log('Matching diagnosis code for:', description);\r\n    // Placeholder for ICD10 integration logic\r\n    // Call API or use dataset to find matching codes\r\n  };\r\n\r\n  // Example widget summary data\r\n  const totalLabTests = labTests.length;\r\n  const completedTests = labTests.filter(t => t.testStatus === 'Completed').length;\r\n  const pendingTests = labTests.filter(t => t.testStatus === 'Pending').length;\r\n  const categories = {};\r\n  labTests.forEach(t => {\r\n    categories[t.testCategory] = (categories[t.testCategory] || 0) + 1;\r\n  });\r\n\r\n  // Example chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [{\r\n      data: Object.values(categories),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [{\r\n      label: 'Tests per Category',\r\n      data: Object.values(categories),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [\r\n      {\r\n        label: 'Completed',\r\n        data: Object.keys(categories).map(cat => labTests.filter(t => t.testCategory === cat && t.testStatus === 'Completed').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Pending',\r\n        data: Object.keys(categories).map(cat => labTests.filter(t => t.testCategory === cat && t.testStatus === 'Pending').length),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      {/* Page Title */}\r\n      <Box sx={{ p: 2 }}>\r\n        <Typography variant=\"h4\" fontWeight={700} color=\"primary\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <i className=\"fas fa-vials\" style={{ marginRight: 10 }} />\r\n          Quick Test\r\n        </Typography>\r\n      </Box>\r\n      {/* Widgets row */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Lab Tests</Typography>\r\n          <Typography variant=\"h6\">{totalLabTests}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Completed</Typography>\r\n          <Typography variant=\"h6\">{completedTests}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Pending</Typography>\r\n          <Typography variant=\"h6\">{pendingTests}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts row */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Lab Tests by Category</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Tests per Category</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Status Trends by Category</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            gap: 2,\r\n            mb: 2,\r\n            justifyContent: 'flex-start', // or 'center' to center the buttons\r\n          }}\r\n        >\r\n          <Button\r\n            type=\"button\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#addPayment\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            sx={{ minWidth: 150 }}\r\n            startIcon={<i className=\"fas fa-plus\"></i>}\r\n          >\r\n            Create Lab Test\r\n          </Button>\r\n          <Button\r\n            onClick={e => updateLabTestAction(e, updatedItem)}\r\n            type=\"button\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#edit\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            sx={{ minWidth: 120 }}\r\n            startIcon={<i className=\"fas fa-edit\"></i>}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            onClick={e => removeLabTestAction(e, updatedItemId)}\r\n            type=\"button\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            sx={{ minWidth: 120 }}\r\n            startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n          >\r\n            Remove\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => fetchAllLabTests()}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            sx={{ minWidth: 120 }}\r\n            startIcon={<i className=\"fas fa-refresh\"></i>}\r\n          >\r\n            Reload\r\n          </Button>\r\n          <Button\r\n            onClick={bulkDelete}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            sx={{ minWidth: 150 }}\r\n          >\r\n            Delete Selected\r\n          </Button>\r\n          <Button\r\n            onClick={exportSelected}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            sx={{ minWidth: 150 }}\r\n          >\r\n            Export Selected\r\n          </Button>\r\n        </Box>\r\n        <br /><br />\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ width: '100%' }}>\r\n            <DataGrid\r\n              rows={labTests}\r\n              columns={columns}\r\n              pageSize={10} // Show 10 rows visible\r\n              rowsPerPageOptions={[10, 15, 20]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n              autoHeight // Remove vertical scroll, fit to 10 rows\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <Dialog open={editModalOpen} onClose={() => setEditModalOpen(false)} maxWidth=\"lg\" fullWidth>\r\n          <DialogTitle>Edit Lab Test</DialogTitle>\r\n          <DialogContent>\r\n            <EditLabTest\r\n              closeModal={() => setEditModalOpen(false)}\r\n              testLab={updatedItem}\r\n              patients={patients}\r\n              doctors={doctors}\r\n              // pass clinics, laboratories if needed\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditModalOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <ViewLabTest\r\n          open={viewModalOpen}\r\n          onClose={() => setViewModalOpen(false)}\r\n          testLab={viewedItem}\r\n          getPatientName={getPatientName}\r\n          getDoctorName={getDoctorName}\r\n        />\r\n\r\n        <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddLabTest closeModal={closeModalAdd} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button onClick={closeModalAdd} ref={closeButtonAdd} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"edit\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <EditLabTest closeModal={closeButtonEdit} testLab={updatedItem} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" ref={closeButtonEdit} onClick={closeModalEdit} class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nLabTest.propTypes = {};\r\n\r\nLabTest.defaultProps = {};\r\n\r\nexport default LabTest;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllInvoice = () => {\r\n    return http.get(`${BASE_URL}/api/invoice`)\r\n}\r\nconst createInvoice = data => {\r\n    return http.post(`${BASE_URL}/api/invoice`, data);\r\n};\r\n\r\nconst editInvoice = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/invoice/${id}`, data);\r\n};\r\n\r\nconst removeInvoice = id => {\r\n    return http.delete(`${BASE_URL}/api/invoice/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllInvoice,\r\n    createInvoice,\r\n    editInvoice,\r\n    removeInvoice\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddInvoice.css';\r\nimport medicamentValidation from '../../main/validations/medicamentValidation';\r\nimport { useForm } from 'react-hook-form';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nconst AddInvoice = () => {\r\n  const initialState = {\r\n    date: '',\r\n    patient: '',\r\n    result: '',\r\n    name: '',\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [testLab, setTestLab] = useState(initialState);\r\n  const [patients, setPatients] = useState([]);\r\n  const onSubmit = (data) => {\r\n    //saveAppointement(data)\r\n    // AppointementTestService.create(data)\r\n    setTestLab(initialState)\r\n    // showMessage('Confirmation', appointementMessage.add, 'success')\r\n  }\r\n\r\n  const saveAppointement = (data) => {\r\n\r\n    /*appointementHTTPService.create(data)\r\n      .then(response => {\r\n        setTestLab(initialState)\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });*/\r\n\r\n  };\r\n\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setTestLab({ ...testLab, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //LoadJSFiles()\r\n    getAllPatients()\r\n  }, []);\r\n\r\n  const getAllPatients = () => {\r\n\r\n    patientHTTPService.getAllPatients()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n\r\n      })\r\n      .catch(e => {\r\n        //showMessage('Confirmation', e, 'info')\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"AddMedicament\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" role=\"form\" enctype=\"multipart/form-data\" method=\"post\" accept-charset=\"utf-8\">\r\n\r\n        <div class=\"form-body\">\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Invoice:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={testLab.name}\r\n                ref={register({ required: true })}\r\n                type=\"text\" data-toggle=\"tooltip\"\r\n                name=\"name\" class=\"form-control test\"\r\n              />\r\n\r\n              <div className=\"error text-danger\">\r\n                {errors.name && medicamentValidation.name}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Amount:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={testLab.result} ref={register({ required: true })}\r\n                type=\"text\" class=\"form-control\" autocomplete=\"off\" id=\"search-box\"\r\n                data-toggle=\"tooltip\" title=\"Nom de la compagnie\"\r\n                name=\"result\" required=\"\" >\r\n              </textarea>\r\n              <div className=\"error text-danger\">\r\n                {errors.result && medicamentValidation.result}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Tax:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={testLab.date} ref={register({ required: true })}\r\n                type=\"date\" name=\"date\" autocomplete=\"off\" id=\"search-group\" class=\"form-control\"\r\n                data-toggle=\"tooltip\" title=\"Nom de groupe \" required=\"\" />\r\n\r\n              <div className=\"error text-danger\">\r\n                {errors.date && medicamentValidation.date}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Date:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={testLab.patient} ref={register({ required: true })}\r\n                name=\"patient\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\">\r\n                {patients.map(response =>\r\n                  <option value={response?.id}>{response?.namepatient}</option>\r\n                )}\r\n              </select>\r\n\r\n              <div className=\"error text-danger\">\r\n                {errors.patient && medicamentValidation.patient}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Customer:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={testLab.patient} ref={register({ required: true })}\r\n                name=\"patient\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\">\r\n                {patients.map(response =>\r\n                  <option value={response?.id}>{response?.namepatient}</option>\r\n                )}\r\n              </select>\r\n\r\n              <div className=\"error text-danger\">\r\n                {errors.patient && medicamentValidation.patient}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n              <i className=\"fa fa-check\"></i>  Sauvegarder</button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nAddInvoice.propTypes = {};\r\n\r\nAddInvoice.defaultProps = {};\r\n\r\nexport default AddInvoice;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Invoice.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LoadJSFiles } from '../init';\r\nimport invoiceHTTPService from '../../main/services/invoiceHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport AddInvoice from '../AddInvoice/AddInvoice';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport CurrentUser from '../../main/config/user';\r\nconst Invoice = () => {\r\n\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllInvoices()\r\n  }, []);\r\n\r\n\r\n  const getAllInvoices = () => {\r\n    setLoading(true);\r\n    invoiceHTTPService.getAllInvoice()\r\n      .then(response => {\r\n        setInvoices(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllInvoices()\r\n    forceUpdate()\r\n  }\r\n\r\n  const removeInvoiceAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success')\r\n      invoiceHTTPService.removeInvoice(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateInvoiceAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 200 },\r\n    { field: 'template', headerName: 'Certificate Template', width: 200 },\r\n    { field: 'patient', headerName: 'Patient Name', width: 200 },\r\n    { field: 'date', headerName: 'Issue Date', width: 200 },\r\n  ];\r\n\r\n\r\n\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n  const addProcedureToBill = (procedure) => {\r\n    console.log('Adding procedure:', procedure);\r\n    // Placeholder for adding a procedure to the bill\r\n  };\r\n\r\n  const applyDiscountOrInsurance = (discount, insurance) => {\r\n    console.log('Applying discount or insurance:', { discount, insurance });\r\n    // Placeholder for applying discounts or insurance\r\n  };\r\n\r\n  const updatePaymentStatus = (status) => {\r\n    console.log('Updating payment status to:', status);\r\n    // Placeholder for updating payment status\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Invoices\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addPayment\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n        <Button onClick={e => updateInvoiceAction(e, updatedItemId)} type=\"button\" data-toggle=\"modal\" data-target=\"#editMedicament\"><i class=\"fas fa-edit\"></i> Edit</Button>\r\n        <Button onClick={e => removeInvoiceAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n        <Button type=\"button\" onClick={() => setShowFilter(!showFilter)} ><i class=\"fas fa-bar-chart\"></i> Show/Hide Summary</Button>\r\n        <Button type=\"button\" onClick={() => setShowChart(!showChart)} ><i class=\"fas fa-pie-chart\"></i> Show/Hide Analytics</Button>\r\n        <Button type=\"button\" onClick={() => getAllInvoices()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n        <Button type=\"button\" onClick={e => removeAll(e)} ><i class=\"fas fa-eraser\"></i> Remove All</Button>\r\n        <br /><br />\r\n        <table id=\"example1\" className=\"table table-striped table-bordered\">\r\n          <thead class=\" text-primary\">\r\n\r\n            <tr>\r\n              <th>Invoice</th>\r\n              <th>Amount</th>\r\n              <th> Tax</th>\r\n              <th>Date </th>\r\n              <th>Customer</th>\r\n\r\n              <th>Status</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {loading ? \"loading...\" :\r\n              invoices.map(item =>\r\n                <tr>\r\n                  <td>INV002</td>\r\n                  <td>1000$</td>\r\n                  <td>110$</td>\r\n                  <td>11/11/2022</td>\r\n                  <td> {item.client}</td>\r\n                  <td>UNPAID</td>\r\n                  <td>\r\n                    <button type=\"button\" data-toggle=\"modal\" data-target=\"#viewPatient\" class=\"btn btn-warning btn-sm\"><i class=\"fas fa-eye\"></i></button>\r\n                    <button onClick={e => updateInvoiceAction(e, item)} type=\"button\" data-toggle=\"modal\" data-target=\"#editPatient\" class=\"btn btn-warning btn-sm\"><i class=\"fas fa-edit\"></i>view</button>\r\n                    <button onClick={e => removeInvoiceAction(e, item.id)} type=\"button\" class=\"btn btn-danger btn-sm\"><i class=\"fas fa-trash-alt\"></i></button>\r\n                  </td>\r\n\r\n                </tr>\r\n              )}\r\n\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddInvoice />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nInvoice.propTypes = {};\r\n\r\nInvoice.defaultProps = {};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem, Stack\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst certificateTypes = [\r\n  'Medical Fitness', 'Dental Clearance', 'Vaccination', 'Other'\r\n];\r\n\r\nconst AddCertificate = ({ closeModal }) => {\r\n  const [form, setForm] = useState({\r\n    certificateNumber: '',\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicId: '',\r\n    certificateType: '',\r\n    issueDate: '',\r\n    validUntil: '',\r\n    diagnosis: '',\r\n    treatmentDetails: '',\r\n    recommendations: '',\r\n    attachments: '',\r\n    signature: '',\r\n    status: 'Issued',\r\n    notes: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Add state for select box data\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${BASE_URL}/patients`).then(res => setPatients(res.data)).catch(() => setPatients([]));\r\n    axios.get(`${BASE_URL}/doctors`).then(res => setDoctors(res.data)).catch(() => setDoctors([]));\r\n    axios.get(`${BASE_URL}/clinics`).then(res => setClinics(res.data)).catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    // Validation\r\n    if (\r\n      !form.patientId ||\r\n      !form.doctorId ||\r\n      !form.clinicId ||\r\n      !form.certificateType ||\r\n      !form.diagnosis ||\r\n      !form.treatmentDetails ||\r\n      !form.signature\r\n    ) {\r\n      alert('Please fill all required fields.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      certificateNumber: form.certificateNumber,\r\n      patientId: Number(form.patientId),\r\n      doctorId: Number(form.doctorId),\r\n      clinicId: Number(form.clinicId),\r\n      certificateType: form.certificateType,\r\n      issueDate: new Date(form.issueDate),\r\n      validUntil: new Date(form.validUntil),\r\n      diagnosis: form.diagnosis,\r\n      treatmentDetails: form.treatmentDetails,\r\n      recommendations: form.recommendations,\r\n      attachments: form.attachments ? [form.attachments] : [],\r\n      signature: form.signature,\r\n      status: form.status,\r\n      notes: form.notes\r\n    };\r\n\r\n    console.log('Sent object:', data);\r\n\r\n    try {\r\n      await axios.post(`${BASE_URL}/certificates`, data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        label=\"Certificate Number\"\r\n        name=\"certificateNumber\"\r\n        value={form.certificateNumber}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(patient => (\r\n          <MenuItem key={patient.id} value={patient.id}>\r\n            {patient.fullName || patient.name || patient.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(doctor => (\r\n          <MenuItem key={doctor.id} value={doctor.id}>\r\n            {doctor.fullName || doctor.name || doctor.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic\"\r\n        name=\"clinicId\"\r\n        value={form.clinicId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {clinics.map(clinic => (\r\n          <MenuItem key={clinic.id} value={clinic.id}>\r\n            {clinic.name || clinic.clinicName || clinic.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Certificate Type\"\r\n        name=\"certificateType\"\r\n        value={form.certificateType}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {certificateTypes.map(type => (\r\n          <MenuItem key={type} value={type}>{type}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Issue Date\"\r\n        name=\"issueDate\"\r\n        type=\"date\"\r\n        value={form.issueDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Valid Until\"\r\n        name=\"validUntil\"\r\n        type=\"date\"\r\n        value={form.validUntil}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Diagnosis\"\r\n        name=\"diagnosis\"\r\n        value={form.diagnosis}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Treatment Details\"\r\n        name=\"treatmentDetails\"\r\n        value={form.treatmentDetails}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Recommendations\"\r\n        name=\"recommendations\"\r\n        value={form.recommendations}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Attachment URL\"\r\n        name=\"attachments\"\r\n        value={form.attachments}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Signature\"\r\n        name=\"signature\"\r\n        value={form.signature}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Status\"\r\n        name=\"status\"\r\n        value={form.status}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        <MenuItem value=\"Issued\">Issued</MenuItem>\r\n        <MenuItem value=\"Active\">Active</MenuItem>\r\n        <MenuItem value=\"Expired\">Expired</MenuItem>\r\n      </TextField>\r\n      <TextField\r\n        label=\"Notes\"\r\n        name=\"notes\"\r\n        value={form.notes}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Create Certificate'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddCertificate;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditCertificate.css';\r\nimport certificateHTTPService from '../../main/services/certificateHTTPService';\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditCertificate = (props) => {\r\n\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [certificate, setCertificate] = useState(props.certificate);\r\n  const [patients, setPatients] = useState([]);\r\n  useEffect(() => {\r\n    setCertificate(props.certificate)\r\n    patientHTTPService.getAllPatients()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', CurrentUser.ERR_MSG, 'success')\r\n      });\r\n  }, [props.certificate]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //GroupeTestService.update(props.certificate, data)\r\n    certificateHTTPService.editCertificate(props.certificate.id, data).then(data => {\r\n      props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCertificate({ ...certificate, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"EditCertificate\">\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Date:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={certificate?.date} ref={register({ required: true })}\r\n                type=\"date\" id=\"date\" name=\"date\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Patient:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={certificate?.patient} ref={register({ required: true })}\r\n                name=\"patient\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\">\r\n                {patients.map(response =>\r\n                  <option value={response?.id}>{response?.namepatient}</option>\r\n                )}\r\n              </select>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Template:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={certificate?.template} ref={register({ required: true })}\r\n                name=\"template\" class=\"form-control\" rows=\"3\">\r\n                <option value=\"1\">template</option>\r\n              </select>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Content:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={certificate?.content} placeholder=\"Content\" ref={register({ required: true })}\r\n                name=\"content\" class=\"form-control\" rows=\"3\"></textarea>\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <div >\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n\r\n    </div>)\r\n};\r\n\r\nEditCertificate.propTypes = {};\r\n\r\nEditCertificate.defaultProps = {};\r\n\r\nexport default EditCertificate;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Certificates.css';\r\nimport AddCertificate from './AddCertificate';\r\nimport EditCertificate from '../EditCertificate/EditCertificate';\r\nimport certificateHTTPService from '../../main/services/certificateHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport { LoadJSFiles } from './../init';\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport {\r\n  Button, CircularProgress, LinearProgress, Typography, Chip, Menu, MenuItem, IconButton, Box, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Stack, Drawer, Snackbar, Alert, Skeleton, Tooltip as MuiTooltip\r\n} from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport TemplateIcon from '@mui/icons-material/Description';\r\nimport SignatureIcon from '@mui/icons-material/BorderColor';\r\nimport jsPDF from 'jspdf';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst Certificates = () => {\r\n  // State\r\n  const [loading, setLoading] = useState(true);\r\n  const [skeleton, setSkeleton] = useState(true);\r\n  const [certificates, setCertificates] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [drawerCertificate, setDrawerCertificate] = useState(null);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [bulkSelection, setBulkSelection] = useState([]);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'info' });\r\n  const [editRowsModel, setEditRowsModel] = useState({});\r\n  const [filter, setFilter] = useState({\r\n    type: '', status: '', patient: '', doctor: '', clinic: '', from: '', to: ''\r\n  });\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const userRole = 'admin'; // Simulate role\r\n\r\n  // Fetch data\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    getAllCertificates();\r\n    fetch(`${BASE_URL}/patients`).then(res => res.json()).then(setPatients);\r\n    fetch(`${BASE_URL}/doctors`).then(res => res.json()).then(setDoctors);\r\n    fetch(`${BASE_URL}/clinics`).then(res => res.json()).then(setClinics);\r\n  }, []);\r\n\r\n  const getAllCertificates = () => {\r\n    setLoading(true);\r\n    setSkeleton(true);\r\n\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/certificates.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setCertificates(data);\r\n          setTimeout(() => setSkeleton(false), 800);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', 'Failed to load certificates', 'warning');\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      certificateHTTPService.getAllCertificate()\r\n        .then(response => {\r\n          setCertificates(response.data);\r\n          setTimeout(() => setSkeleton(false), 800);\r\n          setLoading(false);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', 'Failed to load certificates', 'warning');\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  // Filtering\r\n  const filteredCertificates = certificates.filter(c => {\r\n    const matchesType = filter.type ? c.certificateType === filter.type : true;\r\n    const matchesStatus = filter.status ? c.status === filter.status : true;\r\n    const matchesPatient = filter.patient ? c.patientId === filter.patient : true;\r\n    const matchesDoctor = filter.doctor ? c.doctorId === filter.doctor : true;\r\n    const matchesClinic = filter.clinic ? c.clinicId === filter.clinic : true;\r\n    const matchesFrom = filter.from ? new Date(c.issueDate) >= new Date(filter.from) : true;\r\n    const matchesTo = filter.to ? new Date(c.issueDate) <= new Date(filter.to) : true;\r\n    return matchesType && matchesStatus && matchesPatient && matchesDoctor && matchesClinic && matchesFrom && matchesTo;\r\n  });\r\n\r\n  // Helper functions\r\n  const getPatientName = id => patients.find(p => p.id === id)?.fullName || 'Patient not found';\r\n  const getDoctorName = id => doctors.find(d => d.id === id)?.fullName || 'Doctor not found';\r\n  const getClinicName = id => clinics.find(c => c.id === id)?.name || 'Clinic not found';\r\n\r\n  // Inline editing\r\n  const handleEditRowsModelChange = (model) => setEditRowsModel(model);\r\n  const handleRowEditCommit = async (id) => {\r\n    const changes = editRowsModel[id];\r\n    if (changes) {\r\n      const updated = { ...certificates.find(c => c.id === id), ...Object.fromEntries(Object.entries(changes).map(([k, v]) => [k, v.value])) };\r\n      await certificateHTTPService.updateCertificate(id, updated);\r\n      setSnackbar({ open: true, message: 'Certificate updated', severity: 'success' });\r\n      getAllCertificates();\r\n    }\r\n  };\r\n\r\n  // Bulk actions\r\n  const handleBulkDelete = async () => {\r\n    await Promise.all(bulkSelection.map(id => certificateHTTPService.removeCertificate(id)));\r\n    setSnackbar({ open: true, message: 'Certificates deleted', severity: 'success' });\r\n    getAllCertificates();\r\n  };\r\n  const handleBulkStatus = async (status) => {\r\n    await Promise.all(bulkSelection.map(id => certificateHTTPService.updateCertificate(id, { status })));\r\n    setSnackbar({ open: true, message: `Marked selected as ${status}`, severity: 'success' });\r\n    getAllCertificates();\r\n  };\r\n\r\n  // Export\r\n  const exportToExcel = () => {\r\n    const csvContent = [\r\n      Object.keys(certificates[0] || {}).join(','),\r\n      ...certificates.map(c => Object.values(c).join(','))\r\n    ].join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'application/vnd.ms-excel' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'certificates.xlsx';\r\n    a.click();\r\n    setSnackbar({ open: true, message: 'Exported to Excel', severity: 'success' });\r\n  };\r\n  const exportToPDF = () => {\r\n    window.print();\r\n    setSnackbar({ open: true, message: 'Print dialog opened for PDF export', severity: 'info' });\r\n  };\r\n\r\n  // Actions menu for each row\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton onClick={(event) => { setAnchorEl(event.currentTarget); setSelectedRow(params.row); }}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\r\n        <MenuItem onClick={() => { setDrawerCertificate(selectedRow); setDrawerOpen(true); setAnchorEl(null); }}>View</MenuItem>\r\n        {userRole === 'admin' && (\r\n          <MenuItem onClick={async () => { await certificateHTTPService.removeCertificate(selectedRow.id); setSnackbar({ open: true, message: 'Deleted', severity: 'success' }); getAllCertificates(); setAnchorEl(null); }}>Delete</MenuItem>\r\n        )}\r\n        <MenuItem\r\n          onClick={() => {\r\n            exportCertificateToPDF(selectedRow);\r\n            setAnchorEl(null);\r\n          }}\r\n        >\r\n          Download\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  // Columns for Certificates table\r\n  const columns = [\r\n    { field: 'certificateNumber', headerName: 'Certificate #', width: 150, editable: false },\r\n    {\r\n      field: 'certificateType',\r\n      headerName: 'Type',\r\n      width: 150,\r\n      editable: false,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 220,\r\n      renderCell: (params) => (<span>{getPatientName(params.value)}</span>)\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor',\r\n      width: 220,\r\n      renderCell: (params) => (<span>{getDoctorName(params.value)}</span>)\r\n    },\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: 220,\r\n      renderCell: (params) => (<span>{getClinicName(params.value)}</span>)\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      editable: userRole === 'admin',\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Active'\r\n              ? 'success'\r\n              : params.value === 'Expired'\r\n                ? 'error'\r\n                : 'default'\r\n          }\r\n          size=\"small\"\r\n          variant=\"filled\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'issueDate',\r\n      headerName: 'Issued On',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={new Date(params.value).toLocaleDateString()}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'validUntil',\r\n      headerName: 'Valid Until',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={new Date(params.value).toLocaleDateString()}\r\n          color=\"info\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'recommendations',\r\n      headerName: 'Recommendations',\r\n      width: 200,\r\n      renderCell: (params) =>\r\n        params.value ? (\r\n          <Chip\r\n            label={params.value}\r\n            color=\"warning\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            sx={{ fontWeight: 600 }}\r\n          />\r\n        ) : (\r\n          <span>-</span>\r\n        )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      renderCell: renderActionsMenu\r\n    }\r\n  ];\r\n\r\n  // Chart data\r\n  const types = certificates.reduce((acc, c) => {\r\n    acc[c.certificateType] = (acc[c.certificateType] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const doughnutData = {\r\n    labels: Object.keys(types),\r\n    datasets: [{\r\n      data: Object.values(types),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n  const barData = {\r\n    labels: Object.keys(types),\r\n    datasets: [{\r\n      label: 'Certificates per Type',\r\n      data: Object.values(types),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n  const lineData = {\r\n    labels: Object.keys(types),\r\n    datasets: [\r\n      {\r\n        label: 'Active',\r\n        data: Object.keys(types).map(type => certificates.filter(c => c.certificateType === type && c.status === 'Active').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Expired',\r\n        data: Object.keys(types).map(type => certificates.filter(c => c.certificateType === type && c.status === 'Expired').length),\r\n        borderColor: '#e53935',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  // Loading skeletons\r\n  if (skeleton) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={60} sx={{ mb: 2 }} />\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={300} sx={{ mb: 2 }} />\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={500} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Add this function inside the Certificates component, before the return statement:\r\n  const handleCreateCertificate = async (certificateData) => {\r\n    try {\r\n      await certificateHTTPService.createCertificate(certificateData);\r\n      setSnackbar({ open: true, message: 'Certificate created successfully', severity: 'success' });\r\n      getAllCertificates();\r\n    } catch (error) {\r\n      setSnackbar({ open: true, message: 'Failed to create certificate', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  // Add this function inside the Certificates component, before the return statement:\r\n  const exportCertificateToPDF = (certificate) => {\r\n    const doc = new jsPDF({\r\n      orientation: 'portrait',\r\n      unit: 'pt',\r\n      format: 'A4'\r\n    });\r\n\r\n    // Header\r\n    doc.setFillColor('#1976d2');\r\n    doc.rect(0, 0, 595, 80, 'F');\r\n    doc.setFontSize(28);\r\n    doc.setTextColor('#fff');\r\n    doc.setFont('times', 'bold');\r\n    doc.text('Dentic Clinic', 40, 50);\r\n\r\n    // Certificate Title\r\n    doc.setFontSize(22);\r\n    doc.setTextColor('#1976d2');\r\n    doc.setFont('times', 'bold');\r\n    doc.text('Medical Certificate', 200, 120);\r\n\r\n    // Decorative line\r\n    doc.setDrawColor('#1976d2');\r\n    doc.setLineWidth(2);\r\n    doc.line(40, 130, 555, 130);\r\n\r\n    // Paragraph content\r\n    doc.setFontSize(13);\r\n    doc.setTextColor('#222');\r\n    let y = 170;\r\n    const leftMargin = 40;\r\n    const maxWidth = 515;\r\n\r\n    const patientName = getPatientName(certificate.patientId);\r\n    const doctorName = getDoctorName(certificate.doctorId);\r\n    const clinicName = getClinicName(certificate.clinicId);\r\n    const issueDate = new Date(certificate.issueDate).toLocaleDateString();\r\n    const validUntil = new Date(certificate.validUntil).toLocaleDateString();\r\n\r\n    // Compose the certificate paragraph with bold for important info\r\n    const paragraph =\r\n      `This is to certify that ${patientName} has been examined and treated at ${clinicName} by Dr. ${doctorName} on ${issueDate}. Diagnosis: ${certificate.diagnosis}. Treatment provided: ${certificate.treatmentDetails}.` +\r\n      (certificate.recommendations ? ` Recommendations: ${certificate.recommendations}.` : '') +\r\n      ` This certificate is valid until ${validUntil}.`;\r\n\r\n    // Split the paragraph into lines that fit the page width\r\n    const lines = doc.splitTextToSize(paragraph, maxWidth);\r\n\r\n    // Print the paragraph (all normal font)\r\n    doc.setFont('times', 'normal');\r\n    doc.text(lines, leftMargin, y, { maxWidth });\r\n\r\n    // Optionally, highlight important info in bold by overprinting (simple approach)\r\n    // You can bold the patient, doctor, clinic, diagnosis, treatment, and dates by calculating their positions in the lines array if needed.\r\n\r\n    // Notes\r\n    if (certificate.notes) {\r\n      y += lines.length * 18 + 15;\r\n      doc.setFont('times', 'bold');\r\n      doc.text('Notes:', leftMargin, y);\r\n      doc.setFont('times', 'normal');\r\n      const notesLines = doc.splitTextToSize(certificate.notes, maxWidth - 60);\r\n      doc.text(notesLines, leftMargin + 60, y);\r\n    }\r\n\r\n    // Signature area\r\n    y = 500;\r\n    doc.setDrawColor('#1976d2');\r\n    doc.line(400, y, 555, y);\r\n    doc.setFontSize(16);\r\n    doc.setTextColor('#1976d2');\r\n    doc.setFont('times', 'italic');\r\n    doc.text(doctorName, 420, y + 18);\r\n\r\n    // Label under signature\r\n    doc.setFont('times', 'normal');\r\n    doc.setFontSize(12);\r\n    doc.setTextColor('#222');\r\n    doc.text('Doctor Signature', 420, y + 36);\r\n\r\n    // Footer\r\n    doc.setFontSize(10);\r\n    doc.setTextColor('#888');\r\n    doc.setFont('times', 'normal');\r\n    doc.text('This certificate was generated electronically by Dentic Clinic.', 40, 800);\r\n\r\n    doc.save(`certificate_${certificate.certificateNumber}.pdf`);\r\n    setSnackbar({ open: true, message: 'Certificate exported as PDF', severity: 'success' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Certificates\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          {/* Page Title */}\r\n          <Typography variant=\"h4\" gutterBottom sx={{ mb: 3, mt: 2, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <AssignmentIcon sx={{ mr: 1 }} /> Manage Certificates\r\n          </Typography>\r\n\r\n          {/* Widgets row */}\r\n          <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2, flexWrap: 'wrap' }}>\r\n            <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n              <Typography variant=\"subtitle2\" color=\"primary\">Total Certificates</Typography>\r\n              <Typography variant=\"h6\">{certificates.length}</Typography>\r\n            </Box>\r\n            <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n              <Typography variant=\"subtitle2\" color=\"success.main\">Active</Typography>\r\n              <Typography variant=\"h6\">{certificates.filter(c => c.status === 'Active').length}</Typography>\r\n            </Box>\r\n            <Box sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n              <Typography variant=\"subtitle2\" color=\"error.main\">Expired</Typography>\r\n              <Typography variant=\"h6\">{certificates.filter(c => c.status === 'Expired').length}</Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Charts row */}\r\n          <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n            <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n              <Typography variant=\"subtitle1\" align=\"center\">Certificates by Type</Typography>\r\n              <Doughnut data={doughnutData} />\r\n            </Box>\r\n            <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n              <Typography variant=\"subtitle1\" align=\"center\">Certificates per Type</Typography>\r\n              <Bar data={barData} />\r\n            </Box>\r\n            <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n              <Typography variant=\"subtitle1\" align=\"center\">Status Trends by Type</Typography>\r\n              <Line data={lineData} />\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Action Buttons */}\r\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2 }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<TemplateIcon />}\r\n              onClick={() => setAddDialogOpen(true)}\r\n            >\r\n              Create Certificate\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<DownloadIcon />}\r\n              onClick={exportToExcel}\r\n            >\r\n              Export Excel\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<PrintIcon />}\r\n              onClick={exportToPDF}\r\n            >\r\n              Export PDF\r\n            </Button>\r\n          </Stack>\r\n\r\n          {/* Advanced Filters */}\r\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2 }}>\r\n            <TextField\r\n              label=\"Type\"\r\n              select\r\n              value={filter.type}\r\n              onChange={e => setFilter(f => ({ ...f, type: e.target.value }))}\r\n              size=\"small\"\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">All Types</MenuItem>\r\n              {Object.keys(types).map(type => (\r\n                <MenuItem key={type} value={type}>{type}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              label=\"Status\"\r\n              select\r\n              value={filter.status}\r\n              onChange={e => setFilter(f => ({ ...f, status: e.target.value }))}\r\n              size=\"small\"\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">All Statuses</MenuItem>\r\n              <MenuItem value=\"Active\">Active</MenuItem>\r\n              <MenuItem value=\"Expired\">Expired</MenuItem>\r\n            </TextField>\r\n            <TextField\r\n              label=\"Patient\"\r\n              select\r\n              value={filter.patient}\r\n              onChange={e => setFilter(f => ({ ...f, patient: e.target.value }))}\r\n              size=\"small\"\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">All Patients</MenuItem>\r\n              {patients.map(p => (\r\n                <MenuItem key={p.id} value={p.id}>{p.fullName}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              label=\"Doctor\"\r\n              select\r\n              value={filter.doctor}\r\n              onChange={e => setFilter(f => ({ ...f, doctor: e.target.value }))}\r\n              size=\"small\"\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">All Doctors</MenuItem>\r\n              {doctors.map(d => (\r\n                <MenuItem key={d.id} value={d.id}>{d.fullName}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              label=\"Clinic\"\r\n              select\r\n              value={filter.clinic}\r\n              onChange={e => setFilter(f => ({ ...f, clinic: e.target.value }))}\r\n              size=\"small\"\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">All Clinics</MenuItem>\r\n              {clinics.map(c => (\r\n                <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              label=\"From\"\r\n              type=\"date\"\r\n              value={filter.from}\r\n              onChange={e => setFilter(f => ({ ...f, from: e.target.value }))}\r\n              size=\"small\"\r\n              InputLabelProps={{ shrink: true }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"To\"\r\n              type=\"date\"\r\n              value={filter.to}\r\n              onChange={e => setFilter(f => ({ ...f, to: e.target.value }))}\r\n              size=\"small\"\r\n              InputLabelProps={{ shrink: true }}\r\n              fullWidth\r\n            />\r\n          </Stack>\r\n\r\n          {/* DataGrid */}\r\n          {loading ? <LinearProgress /> : (\r\n            <div style={{ width: '100%' }}>\r\n              <DataGrid\r\n                rows={filteredCertificates}\r\n                columns={columns}\r\n                pageSize={10}\r\n                rowsPerPageOptions={[10, 15, 20]}\r\n                checkboxSelection\r\n                onRowSelectionModelChange={setBulkSelection}\r\n                components={{ Toolbar: GridToolbar }}\r\n                autoHeight\r\n                editMode=\"row\"\r\n                onRowEditCommit={handleRowEditCommit}\r\n                onEditRowsModelChange={handleEditRowsModelChange}\r\n                aria-label=\"Certificates Table\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {/* Add Certificate Dialog */}\r\n          <Dialog open={addDialogOpen} onClose={() => setAddDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n            <DialogTitle>\r\n              <TemplateIcon sx={{ mr: 1 }} /> Create Certificate\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <AddCertificate\r\n                closeModal={() => setAddDialogOpen(false)}\r\n                onCreate={handleCreateCertificate}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => setAddDialogOpen(false)} color=\"secondary\">Close</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          {/* Edit Certificate Dialog */}\r\n          <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n            <DialogTitle>\r\n              <TemplateIcon sx={{ mr: 1 }} /> Edit Certificate\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <EditCertificate closeModal={() => { setEditDialogOpen(false); getAllCertificates(); }} certificate={selectedRow} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => setEditDialogOpen(false)} color=\"secondary\">Close</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          {/* Certificate Preview Drawer */}\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={drawerOpen}\r\n            onClose={() => setDrawerOpen(false)}\r\n            PaperProps={{ sx: { width: { xs: 320, sm: 480 } } }}\r\n          >\r\n            <Box sx={{ p: 3, maxWidth: 480 }}>\r\n              {drawerCertificate && (\r\n                <>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Certificate Preview\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\">Type: {drawerCertificate.certificateType}</Typography>\r\n                  <Typography variant=\"subtitle2\">Patient: {getPatientName(drawerCertificate.patientId)}</Typography>\r\n                  <Typography variant=\"subtitle2\">Doctor: {getDoctorName(drawerCertificate.doctorId)}</Typography>\r\n                  <Typography variant=\"subtitle2\">Clinic: {getClinicName(drawerCertificate.clinicId)}</Typography>\r\n                  <Typography variant=\"subtitle2\">Diagnosis: {drawerCertificate.diagnosis}</Typography>\r\n                  <Typography variant=\"subtitle2\">Treatment: {drawerCertificate.treatmentDetails}</Typography>\r\n                  <Typography variant=\"subtitle2\">Recommendations: {drawerCertificate.recommendations}</Typography>\r\n                  <Typography variant=\"subtitle2\">Status: {drawerCertificate.status}</Typography>\r\n                  <Typography variant=\"subtitle2\">Issued: {new Date(drawerCertificate.issueDate).toLocaleDateString()}</Typography>\r\n                  <Typography variant=\"subtitle2\">Valid Until: {new Date(drawerCertificate.validUntil).toLocaleDateString()}</Typography>\r\n                  <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Notes:</Typography>\r\n                  <Typography variant=\"body2\">{drawerCertificate.notes}</Typography>\r\n                  <Stack direction=\"row\" spacing={2} sx={{ mt: 3 }}>\r\n                    <Button variant=\"outlined\" startIcon={<PrintIcon />} onClick={() => exportCertificateToPDF(drawerCertificate)}>Export PDF</Button>\r\n                    <Button variant=\"outlined\" startIcon={<DownloadIcon />} onClick={exportToExcel}>Download Excel</Button>\r\n                    <Button variant=\"outlined\" startIcon={<ShareIcon />} onClick={() => setSnackbar({ open: true, message: 'Share not implemented', severity: 'info' })}>Share</Button>\r\n                  </Stack>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Drawer>\r\n\r\n          {/* Snackbar Notifications */}\r\n          <Snackbar\r\n            open={snackbar.open}\r\n            autoHideDuration={3000}\r\n            onClose={() => setSnackbar(s => ({ ...s, open: false }))}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n          >\r\n            <Alert onClose={() => setSnackbar(s => ({ ...s, open: false }))} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n              {snackbar.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCertificates.propTypes = {};\r\nCertificates.defaultProps = {};\r\nexport default Certificates;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport useForceUpdate from 'use-force-update';\r\n\r\nimport AddConsultation from './AddConsultation';\r\nimport EditConsultation from './EditConsultation';\r\nimport { LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport CurrentUser from '../../main/config/user';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst Consultations = () => {\r\n  const [consultations, setConsultations] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  const retrieveConsultations = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/consultations`)\r\n      .then(response => setConsultations(response.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const refresh = () => {\r\n    retrieveConsultations();\r\n    forceUpdate();\r\n  };\r\n\r\n  const closeModalEdit = () => {\r\n    refresh();\r\n    closeButtonEdit.current.click();\r\n  };\r\n\r\n  const closeModalAdd = () => {\r\n    refresh();\r\n    closeButtonAdd.current.click();\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveConsultations();\r\n  }, []);\r\n\r\n  const update = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data);\r\n    refresh();\r\n  };\r\n\r\n  const remove = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(CurrentUser.DELETE_MSG)) {\r\n      axios.delete(`${BASE_URL}/consultations/${id}`).then(() => refresh());\r\n    }\r\n  };\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length === 1) {\r\n      setUpdatedItemId(e[0]);\r\n      const selected = consultations.find(item => item.id === e[0]);\r\n      setUpdatedItem(selected);\r\n    }\r\n    setUpdatedItemIds(e);\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'appointmentId', headerName: 'Appointment ID', width: 220 },\r\n    { field: 'patientId', headerName: 'Patient ID', width: 220 },\r\n    { field: 'doctorId', headerName: 'Doctor ID', width: 220 },\r\n    { field: 'clinicId', headerName: 'Clinic ID', width: 220 },\r\n    {\r\n      field: 'consultationDate',\r\n      headerName: 'Date',\r\n      width: 160,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    { field: 'consultationType', headerName: 'Type', width: 130 },\r\n    { field: 'reasonForVisit', headerName: 'Reason', width: 200 },\r\n    {\r\n      field: 'symptoms',\r\n      headerName: 'Symptoms',\r\n      width: 180,\r\n      renderCell: (params) => params.value?.join(', ')\r\n    },\r\n    {\r\n      field: 'diagnosis',\r\n      headerName: 'Diagnosis',\r\n      width: 180,\r\n      renderCell: (params) => params.value?.diagnosisName\r\n    },\r\n    {\r\n      field: 'prescribedMedications',\r\n      headerName: 'Medications',\r\n      width: 200,\r\n      renderCell: (params) => params.value?.map(m => `${m.medicamentName} (${m.dosage})`).join(', ')\r\n    },\r\n    {\r\n      field: 'recommendedTreatments',\r\n      headerName: 'Treatments',\r\n      width: 180,\r\n      renderCell: (params) => params.value?.map(t => t.treatmentName).join(', ')\r\n    },\r\n    {\r\n      field: 'labTestsOrdered',\r\n      headerName: 'Lab Tests',\r\n      width: 150,\r\n      renderCell: (params) => params.value?.map(l => l.testName).join(', ')\r\n    },\r\n    { field: 'consultationNotes', headerName: 'Notes', width: 250 },\r\n    { field: 'followUpRequired', headerName: 'Follow-up', width: 120 },\r\n    {\r\n      field: 'followUpDate',\r\n      headerName: 'Follow-up Date',\r\n      width: 160,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleString() : 'N/A'\r\n    },\r\n    { field: 'consultationFee', headerName: 'Fee ($)', width: 100 },\r\n    { field: 'paymentStatus', headerName: 'Payment', width: 120 },\r\n    {\r\n      field: 'attachments',\r\n      headerName: 'Attachments',\r\n      width: 150,\r\n      renderCell: (params) => params.value?.length ? (\r\n        <a href={params.value[0]} target=\"_blank\" rel=\"noopener noreferrer\">View</a>\r\n      ) : \"None\"\r\n    },\r\n    { field: 'status', headerName: 'Status', width: 130 },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Created At',\r\n      width: 160,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'updatedAt',\r\n      headerName: 'Updated At',\r\n      width: 160,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-stethoscope\"></i> Consultations</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <button type=\"button\" className=\"btn btn-success btn-sm\" data-toggle=\"modal\" data-target=\"#addConsultation\">\r\n          <i className=\"far fa-plus-square\"></i> Create\r\n        </button>\r\n        <button onClick={e => update(e, updatedItem)} type=\"button\" data-toggle=\"modal\" data-target=\"#editConsultation\" className=\"btn btn-warning btn-sm\">\r\n          <i className=\"fas fa-edit\"></i> Edit\r\n        </button>\r\n        <button onClick={e => remove(e, updatedItemId)} type=\"button\" className=\"btn btn-danger btn-sm\">\r\n          <i className=\"fas fa-trash-alt\"></i> Remove\r\n        </button>\r\n\r\n        {loading ? <LinearProgress /> : (\r\n          <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n              rows={consultations}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Consultation Modal */}\r\n        <div className=\"modal fade\" id=\"addConsultation\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">New Consultation</h5>\r\n                <button onClick={refresh} type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* <AddConsultation closeModal={closeModalAdd} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button onClick={refresh} ref={closeButtonAdd} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Consultation Modal */}\r\n        <div className=\"modal fade\" id=\"editConsultation\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Consultation</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* <EditConsultation consultation={updatedItem} closeModal={closeModalEdit} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button onClick={refresh} ref={closeButtonEdit} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Consultations;\r\n","\r\nconst certificateTemplateValidation = {\r\n    name: 'Sequelize.STRING',\r\n    content: 'Sequelize.STRING'\r\n}\r\nexport default certificateTemplateValidation;","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllCertificationTemplate = () => {\r\n    return http.get(`${BASE_URL}/certificate-templates`)\r\n}\r\nconst createCertificationTemplate = data => {\r\n    return http.post(`${BASE_URL}/certificate-templates`, data);\r\n};\r\n\r\nconst editCertificationTemplate = (id, data) => {\r\n    return http.put(`${BASE_URL}/certificate-templates/${id}`, data);\r\n};\r\n\r\nconst removeCertificationTemplate = id => {\r\n    return http.delete(`${BASE_URL}/certificate-templates/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllCertificationTemplate,\r\n    createCertificationTemplate,\r\n    editCertificationTemplate,\r\n    removeCertificationTemplate\r\n};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddCertificateTemplate.css';\r\nimport appointementValidation from '../../main/validations/appointementValidation';\r\nimport { useForm } from 'react-hook-form';\r\nimport certificateTemplateValidation from '../../main/validations/certificationtemplateValidation';\r\nimport certificationtemplatetHTTPServiceCopy from '../../main/services/certificationtemplatetHTTPService copy';\r\n\r\n\r\nconst AddCertificateTemplate = (props) => {\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [certificateTemplate, setCertificateTemplate] = useState();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data)\r\n    certificationtemplatetHTTPServiceCopy.createCertificationTemplate(data).then(data => {\r\n      setCertificateTemplate(initialState)\r\n      props.closeModal()\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCertificateTemplate({ ...certificateTemplate, [name]: value });\r\n  };\r\n\r\n  const initialState = {\r\n    name: '',\r\n    content: ''\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddCertificateTemplate\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Title:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={certificateTemplate?.name} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n              <div className=\"error text-danger\">\r\n                {errors.date && certificateTemplateValidation.name}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Content:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={certificateTemplate?.content} ref={register({ required: true })}\r\n                type=\"text\" name=\"content\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n              </textarea>\r\n              <div className=\"error text-danger\">\r\n                {errors.content && certificateTemplateValidation.content}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <div >\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nAddCertificateTemplate.propTypes = {};\r\n\r\nAddCertificateTemplate.defaultProps = {};\r\n\r\nexport default AddCertificateTemplate;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditCertificateTemplate.css';\r\nimport certificationtemplatetHTTPServiceCopy from '../../main/services/certificationtemplatetHTTPService copy';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditCertificateTemplate = (props) => {\r\n\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [certificateTemplate, setCertificate] = useState(props.certificateTemplate);\r\n  const [patients, setPatients] = useState([]);\r\n  useEffect(() => {\r\n    setCertificate(props.certificateTemplate)\r\n    patientHTTPService.getAllPatients()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n\r\n      })\r\n      .catch(e => {\r\n        // showMessage('Confirmation', e, 'info')\r\n      });\r\n  }, [props.certificateTemplate]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //GroupeTestService.update(props.certificateTemplate, data)\r\n    certificationtemplatetHTTPServiceCopy.editCertificationTemplate(props.certificateTemplate.id, data).then(data => {\r\n      props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCertificate({ ...certificateTemplate, [name]: value });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"EditCertificateTemplate\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Title:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={certificateTemplate?.name} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Content:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={certificateTemplate?.content} ref={register({ required: true })}\r\n                type=\"text\" name=\"content\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n              </textarea>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <div >\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\nEditCertificateTemplate.propTypes = {};\r\n\r\nEditCertificateTemplate.defaultProps = {};\r\n\r\nexport default EditCertificateTemplate;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CertificateTemplates.css';\r\nimport AddCertificateTemplate from '../AddCertificateTemplate/AddCertificateTemplate'\r\nimport EditCertificationTemplate from '../EditCertificateTemplate/EditCertificateTemplate'\r\nimport certificateTemplateValidation from '../../main/validations/certificationtemplateValidation';\r\nimport certificationtemplatetHTTPServiceCopy from '../../main/services/certificationtemplatetHTTPService copy';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport certificateHTTPService from '../../main/services/certificateHTTPService';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport CurrentUser from '../../main/config/user';\r\nconst CertificateTemplates = () => {\r\n\r\n  const [certificateTemplate, setCertificateTemplate] = useState([]);\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    //LoadJSFiles()\r\n    getAllPatient()\r\n  }, []);\r\n\r\n\r\n  const getAllPatient = () => {\r\n    setLoading(true);\r\n    certificationtemplatetHTTPServiceCopy.getAllCertificationTemplate()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        setCertificateTemplate(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n  };\r\n\r\n\r\n  const removeActivityAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      certificationtemplatetHTTPServiceCopy.removeCertificationTemplate(data).then(data => {\r\n        getAllPatient()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateActivityAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    getAllPatient()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    getAllPatient()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 200 },\r\n    { field: 'name', headerName: 'Certificate Template Name', width: 200 },\r\n    { field: 'description', headerName: 'Description', width: 200 },\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length === 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = certificateTemplate.find(item => item.id === e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n  const createTemplate = (templateDetails) => {\r\n    console.log('Creating template:', templateDetails);\r\n    // Placeholder for creating a reusable certificate template\r\n  };\r\n\r\n  const designCertificateLayout = (layoutDetails) => {\r\n    console.log('Designing certificate layout:', layoutDetails);\r\n    // Placeholder for designing certificate layout\r\n  };\r\n\r\n  const applyTemplateToGenerateCertificate = (templateId, data) => {\r\n    console.log('Applying template to generate certificate:', { templateId, data });\r\n    // Placeholder for applying template to generate certificates dynamically\r\n  };\r\n\r\n  return (\r\n    <div className=\"CertificateTemplates\">\r\n      <div className=\"card\">\r\n\r\n        <div className=\"card-body\">\r\n\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            <i className=\"menu-icon fa fa-bars\"></i>   Manage Certificate Templates\r\n          </Typography>\r\n          <br />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => createTemplate({\r\n              name: 'Template 1',\r\n              format: 'PDF',\r\n            })}\r\n          >\r\n            Create Template\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => designCertificateLayout({\r\n              text: 'Certificate of Achievement',\r\n              logo: 'logo.png',\r\n              signatures: ['signature1.png', 'signature2.png'],\r\n            })}\r\n            style={{ marginLeft: '10px' }}\r\n          >\r\n            Design Layout\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"info\"\r\n            onClick={() => applyTemplateToGenerateCertificate('template1', { name: 'John Doe', date: '2025-07-13' })}\r\n            style={{ marginLeft: '10px' }}\r\n          >\r\n            Generate Certificate\r\n          </Button>\r\n          <br /><br />\r\n\r\n          {loading ?\r\n            <LinearProgress />\r\n            : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n              rows={certificateTemplate}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[6]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            /></div>}\r\n\r\n\r\n          <div class=\"modal fade\" id=\"addMedicament\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">New</h5>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <AddCertificateTemplate closeModal={closeModalAdd} />\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" ref={closeButtonAdd} class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"modal fade\" id=\"edit\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <EditCertificationTemplate closeModal={closeModalEdit} certificateTemplate={updatedItem} />\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" ref={closeButtonEdit} class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nCertificateTemplates.propTypes = {};\r\n\r\nCertificateTemplates.defaultProps = {};\r\n\r\nexport default CertificateTemplates;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  PointElement,\r\n  LineElement,\r\n  RadialLinearScale\r\n} from 'chart.js';\r\nimport { Bar, Pie, Doughnut, Line, PolarArea, Radar, Scatter, Bubble } from 'react-chartjs-2';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  PointElement,\r\n  LineElement,\r\n  RadialLinearScale\r\n);\r\n\r\nconst MedicamentAnalytics = () => {\r\n  const [medicaments, setMedicaments] = useState([]);\r\n  const [charts, setCharts] = useState({\r\n    bar: { labels: [], datasets: [] },\r\n    pie: { labels: [], datasets: [] },\r\n    doughnut: { labels: [], datasets: [] },\r\n    line: { labels: [], datasets: [] },\r\n    polar: { labels: [], datasets: [] },\r\n    radar: { labels: [], datasets: [] },\r\n    scatter: { datasets: [] },\r\n    bubble: { datasets: [] },\r\n    typePie: { labels: [], datasets: [] }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/medicaments.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setMedicaments(data);\r\n          prepareCharts(data);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', \"HTTP_ERR_MESSAGE\", 'warning');\r\n        });\r\n    } else {\r\n      fetch(`${BASE_URL}/medicaments`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setMedicaments(data);\r\n          prepareCharts(data);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', \"HTTP_ERR_MESSAGE\", 'warning');\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const prepareCharts = (data) => {\r\n    // 1. Bar: Count by Category\r\n    const categoryCounts = {};\r\n    data.forEach(m => {\r\n      categoryCounts[m.category || 'Unknown'] = (categoryCounts[m.category || 'Unknown'] || 0) + 1;\r\n    });\r\n    // 2. Pie: Manufacturer\r\n    const manufacturerCounts = {};\r\n    data.forEach(m => {\r\n      manufacturerCounts[m.manufacturerName || 'Unknown'] = (manufacturerCounts[m.manufacturerName || 'Unknown'] || 0) + 1;\r\n    });\r\n    // 3. Doughnut: Type\r\n    const typeCounts = {};\r\n    data.forEach(m => {\r\n      typeCounts[m.type || 'Unknown'] = (typeCounts[m.type || 'Unknown'] || 0) + 1;\r\n    });\r\n    // 4. Line: Added per Month\r\n    const monthCounts = {};\r\n    data.forEach(m => {\r\n      const month = new Date(m.createdAt).toLocaleString('default', { month: 'short', year: 'numeric' });\r\n      monthCounts[month] = (monthCounts[month] || 0) + 1;\r\n    });\r\n    const months = Object.keys(monthCounts);\r\n\r\n    // 5. PolarArea: Stock Status\r\n    const stockCounts = {};\r\n    data.forEach(m => {\r\n      stockCounts[m.stockStatus || 'Unknown'] = (stockCounts[m.stockStatus || 'Unknown'] || 0) + 1;\r\n    });\r\n\r\n    // 6. Radar: Active Ingredient\r\n    const ingredientCounts = {};\r\n    data.forEach(m => {\r\n      (m.activeIngredients || []).forEach(a => {\r\n        ingredientCounts[a] = (ingredientCounts[a] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    // 7. Scatter: Price vs. Stock\r\n    const scatterData = data.map(m => ({\r\n      x: m.price || Math.floor(Math.random() * 100),\r\n      y: m.stock || Math.floor(Math.random() * 500)\r\n    }));\r\n\r\n    // 8. Bubble: Price by Category\r\n    const bubbleData = Object.keys(categoryCounts).map(cat => ({\r\n      x: cat,\r\n      y: categoryCounts[cat],\r\n      r: categoryCounts[cat] * 2\r\n    }));\r\n\r\n    // 9. Pie: Type\r\n    setCharts({\r\n      bar: {\r\n        labels: Object.keys(categoryCounts),\r\n        datasets: [{\r\n          label: 'Category',\r\n          data: Object.values(categoryCounts),\r\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        }]\r\n      },\r\n      pie: {\r\n        labels: Object.keys(manufacturerCounts),\r\n        datasets: [{\r\n          label: 'Manufacturer',\r\n          data: Object.values(manufacturerCounts),\r\n          backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f', '#7b1fa2', '#0288d1'],\r\n        }]\r\n      },\r\n      doughnut: {\r\n        labels: Object.keys(typeCounts),\r\n        datasets: [{\r\n          label: 'Type',\r\n          data: Object.values(typeCounts),\r\n          backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#009688', '#8bc34a'],\r\n        }]\r\n      },\r\n      line: {\r\n        labels: months,\r\n        datasets: [{\r\n          label: 'Added',\r\n          data: months.map(m => monthCounts[m]),\r\n          borderColor: '#1976d2',\r\n          backgroundColor: 'rgba(25, 118, 210, 0.2)',\r\n          fill: true,\r\n        }]\r\n      },\r\n      polar: {\r\n        labels: Object.keys(stockCounts),\r\n        datasets: [{\r\n          label: 'Stock Status',\r\n          data: Object.values(stockCounts),\r\n          backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f', '#7b1fa2', '#0288d1'],\r\n        }]\r\n      },\r\n      radar: {\r\n        labels: Object.keys(ingredientCounts),\r\n        datasets: [{\r\n          label: 'Active Ingredients',\r\n          data: Object.values(ingredientCounts),\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n        }]\r\n      },\r\n      scatter: {\r\n        datasets: [{\r\n          label: 'Price vs Stock',\r\n          data: scatterData,\r\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        }]\r\n      },\r\n      bubble: {\r\n        datasets: [{\r\n          label: 'Price by Category',\r\n          data: bubbleData,\r\n          backgroundColor: 'rgba(255, 206, 86, 0.5)',\r\n        }]\r\n      },\r\n      typePie: {\r\n        labels: Object.keys(typeCounts),\r\n        datasets: [{\r\n          label: 'Type',\r\n          data: Object.values(typeCounts),\r\n          backgroundColor: ['#1976d2', '#d32f2f', '#7b1fa2', '#388e3c'],\r\n        }]\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"MedicamentAnalytics\">\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '32px',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\r\n          margin: '24px 0'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gap: '30px'\r\n          }}\r\n        >\r\n          <div>\r\n            <h5>Medicaments by Category (Bar)</h5>\r\n            <Bar options={chartBarOption} data={charts.bar} />\r\n          </div>\r\n          <div>\r\n            <h5>Medicaments by Manufacturer (Pie)</h5>\r\n            <Pie data={charts.pie} />\r\n          </div>\r\n          <div>\r\n            <h5>Medicaments by Type (Doughnut)</h5>\r\n            <Doughnut data={charts.doughnut} />\r\n          </div>\r\n          <div>\r\n            <h5>Added per Month (Line)</h5>\r\n            <Line data={charts.line} />\r\n          </div>\r\n          <div>\r\n            <h5>Stock Status (PolarArea)</h5>\r\n            <PolarArea data={charts.polar} />\r\n          </div>\r\n          <div>\r\n            <h5>Active Ingredients (Radar)</h5>\r\n            <Radar data={charts.radar} />\r\n          </div>\r\n          <div>\r\n            <h5>Price vs Stock (Scatter)</h5>\r\n            <Scatter data={charts.scatter} />\r\n          </div>\r\n          <div>\r\n            <h5>Price by Category (Bubble)</h5>\r\n            <Bubble data={charts.bubble} />\r\n          </div>\r\n          <div>\r\n            <h5>Medicaments by Type (Pie)</h5>\r\n            <Pie data={charts.typePie} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicamentAnalytics;","import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  PointElement,\r\n  LineElement,\r\n  RadialLinearScale // <-- Add this import\r\n} from 'chart.js';\r\nimport { Bar, Pie, Doughnut, Line, PolarArea, Radar, Scatter, Bubble } from 'react-chartjs-2';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\n// Register RadialLinearScale for PolarArea and Radar charts\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  PointElement,\r\n  LineElement,\r\n  RadialLinearScale // <-- Register here\r\n);\r\n\r\nconst PatientAnalytics = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [charts, setCharts] = useState({\r\n    bar: { labels: [], datasets: [] },\r\n    pie: { labels: [], datasets: [] },\r\n    doughnut: { labels: [], datasets: [] },\r\n    line: { labels: [], datasets: [] },\r\n    polar: { labels: [], datasets: [] },\r\n    radar: { labels: [], datasets: [] },\r\n    scatter: { datasets: [] },\r\n    bubble: { datasets: [] },\r\n    genderPie: { labels: [], datasets: [] }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/patients.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setPatients(data);\r\n          prepareCharts(data);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', \"HTTP_ERR_MESSAGE\", 'warning');\r\n        });\r\n    } else {\r\n      fetch(`${BASE_URL}/patients`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setPatients(data);\r\n          prepareCharts(data);\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', \"HTTP_ERR_MESSAGE\", 'warning');\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  // Helper to get full name by id\r\n  const getPatientName = (id) => {\r\n    const pat = patients.find(p => p.id === id);\r\n    return pat ? pat.fullName : id;\r\n  };\r\n\r\n  const prepareCharts = (data) => {\r\n    // 1. Bar: Insurance (show fullName in tooltip)\r\n    const insuranceCounts = {};\r\n    data.forEach(p => {\r\n      insuranceCounts[p.insuranceId] = (insuranceCounts[p.insuranceId] || 0) + 1;\r\n    });\r\n    // 2. Pie: Blood Type\r\n    const bloodTypeCounts = {};\r\n    data.forEach(p => {\r\n      bloodTypeCounts[p.bloodType] = (bloodTypeCounts[p.bloodType] || 0) + 1;\r\n    });\r\n    // 3. Doughnut: City\r\n    const cityCounts = {};\r\n    data.forEach(p => {\r\n      const city = p.address?.city || 'Unknown';\r\n      cityCounts[city] = (cityCounts[city] || 0) + 1;\r\n    });\r\n    // 4. Line: Registrations per Month\r\n    const monthCounts = {};\r\n    data.forEach(p => {\r\n      const month = new Date(p.createdAt).toLocaleString('default', { month: 'short', year: 'numeric' });\r\n      monthCounts[month] = (monthCounts[month] || 0) + 1;\r\n    });\r\n    const months = Object.keys(monthCounts);\r\n\r\n    // 5. PolarArea: Payment Status\r\n    const paymentStatusCounts = {};\r\n    data.forEach(p => {\r\n      paymentStatusCounts[p.paymentStatus || 'Unknown'] = (paymentStatusCounts[p.paymentStatus || 'Unknown'] || 0) + 1;\r\n    });\r\n\r\n    // 6. Radar: Allergies\r\n    const allergyCounts = {};\r\n    data.forEach(p => {\r\n      (p.allergies || []).forEach(a => {\r\n        allergyCounts[a] = (allergyCounts[a] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    // 7. Scatter: Age vs. Amount (if available)\r\n    const scatterData = data.map(p => ({\r\n      x: p.age || Math.floor(Math.random() * 60) + 18,\r\n      y: p.amount || Math.floor(Math.random() * 1000)\r\n    }));\r\n\r\n    // 8. Bubble: Amount by Blood Type\r\n    const bubbleData = Object.keys(bloodTypeCounts).map(bt => ({\r\n      x: bt,\r\n      y: bloodTypeCounts[bt],\r\n      r: bloodTypeCounts[bt] * 2\r\n    }));\r\n\r\n    // 9. Pie: Gender\r\n    const genderCounts = {};\r\n    data.forEach(p => {\r\n      genderCounts[p.gender || 'Unknown'] = (genderCounts[p.gender || 'Unknown'] || 0) + 1;\r\n    });\r\n\r\n    setCharts({\r\n      bar: {\r\n        labels: Object.keys(insuranceCounts),\r\n        datasets: [{\r\n          label: 'Insurance',\r\n          data: Object.values(insuranceCounts),\r\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        }]\r\n      },\r\n      pie: {\r\n        labels: Object.keys(bloodTypeCounts),\r\n        datasets: [{\r\n          label: 'Blood Type',\r\n          data: Object.values(bloodTypeCounts),\r\n          backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f', '#7b1fa2', '#0288d1'],\r\n        }]\r\n      },\r\n      doughnut: {\r\n        labels: Object.keys(cityCounts),\r\n        datasets: [{\r\n          label: 'City',\r\n          data: Object.values(cityCounts),\r\n          backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#009688', '#8bc34a'],\r\n        }]\r\n      },\r\n      line: {\r\n        labels: months,\r\n        datasets: [{\r\n          label: 'Registrations',\r\n          data: months.map(m => monthCounts[m]),\r\n          borderColor: '#1976d2',\r\n          backgroundColor: 'rgba(25, 118, 210, 0.2)',\r\n          fill: true,\r\n        }]\r\n      },\r\n      polar: {\r\n        labels: Object.keys(paymentStatusCounts),\r\n        datasets: [{\r\n          label: 'Payment Status',\r\n          data: Object.values(paymentStatusCounts),\r\n          backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f', '#7b1fa2', '#0288d1'],\r\n        }]\r\n      },\r\n      radar: {\r\n        labels: Object.keys(allergyCounts),\r\n        datasets: [{\r\n          label: 'Allergies',\r\n          data: Object.values(allergyCounts),\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n        }]\r\n      },\r\n      scatter: {\r\n        datasets: [{\r\n          label: 'Age vs Amount',\r\n          data: scatterData,\r\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        }]\r\n      },\r\n      bubble: {\r\n        datasets: [{\r\n          label: 'Amount by Blood Type',\r\n          data: bubbleData,\r\n          backgroundColor: 'rgba(255, 206, 86, 0.5)',\r\n        }]\r\n      },\r\n      genderPie: {\r\n        labels: Object.keys(genderCounts),\r\n        datasets: [{\r\n          label: 'Gender',\r\n          data: Object.values(genderCounts),\r\n          backgroundColor: ['#1976d2', '#d32f2f', '#7b1fa2', '#388e3c'],\r\n        }]\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"PatientAnalytics\">\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '32px',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\r\n          margin: '24px 0'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gap: '30px'\r\n          }}\r\n        >\r\n          <div>\r\n            <h5>Patients by Insurance (Bar)</h5>\r\n            <Bar options={chartBarOption} data={charts.bar} />\r\n          </div>\r\n          <div>\r\n            <h5>Patients by Blood Type (Pie)</h5>\r\n            <Pie data={charts.pie} />\r\n          </div>\r\n          <div>\r\n            <h5>Patients by City (Doughnut)</h5>\r\n            <Doughnut data={charts.doughnut} />\r\n          </div>\r\n          <div>\r\n            <h5>Registrations per Month (Line)</h5>\r\n            <Line data={charts.line} />\r\n          </div>\r\n          <div>\r\n            <h5>Payment Status (PolarArea)</h5>\r\n            <PolarArea data={charts.polar} />\r\n          </div>\r\n          <div>\r\n            <h5>Allergies (Radar)</h5>\r\n            <Radar data={charts.radar} />\r\n          </div>\r\n          <div>\r\n            <h5>Age vs Amount (Scatter)</h5>\r\n            <Scatter data={charts.scatter} />\r\n          </div>\r\n          <div>\r\n            <h5>Amount by Blood Type (Bubble)</h5>\r\n            <Bubble data={charts.bubble} />\r\n          </div>\r\n          <div>\r\n            <h5>Patients by Gender (Pie)</h5>\r\n            <Pie data={charts.genderPie} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientAnalytics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SaleAnalytics.css';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: 'Chart.js Bar Chart',\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\nexport const data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: [1, 2, 3, 4],\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n    },\r\n    {\r\n      label: 'Dataset 2',\r\n      data: [1, 2, 3, 4],\r\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n    },\r\n  ],\r\n};\r\nconst SaleAnalytics = () => (\r\n  <div className=\"SaleAnalytics\">\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <strong className=\"card-title\">Sales Analytics</strong>\r\n      </div>\r\n      <div className=\"card-body\">\r\n\r\n        <Bar options={options} data={data} />\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nSaleAnalytics.propTypes = {};\r\n\r\nSaleAnalytics.defaultProps = {};\r\n\r\nexport default SaleAnalytics;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllService = () => {\r\n    return http.get(`${BASE_URL}/api/service`)\r\n}\r\nconst createService = (filename, data) => {\r\n    return http.post(`${BASE_URL}/api/service/${filename}`, data);\r\n};\r\n\r\nconst uploadFile = (data) => {\r\n    return http.post(`${BASE_URL}/api/service/image/uploadfile`, data);\r\n};\r\n\r\nconst editService = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/service/${id}`, data);\r\n};\r\n\r\nconst removeService = id => {\r\n    return http.delete(`${BASE_URL}/api/service/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllService,\r\n    createService,\r\n    editService,\r\n    removeService,\r\n    uploadFile\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddService.css';\r\nimport appointementValidation from '../../main/validations/appointementValidation';\r\nimport { useForm } from 'react-hook-form';\r\nimport serviceHTTPService from '../../main/services/serviceHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport appointementMessage from '../../main/messages/appointementMessage';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst AddService = (props) => {\r\n\r\n  const initialState = {\r\n    name: '',\r\n    description: '',\r\n    status: '',\r\n    file: null,\r\n    fileName: ''\r\n  };\r\n\r\n  useEffect(() => {\r\n    setService({ 'file': null });\r\n    setService(initialState)\r\n  }, []);\r\n\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [service, setService] = useState(initialState);\r\n\r\n  const onSubmit = (data) => {\r\n    const formData = new FormData(document.getElementById(\"addService\"));\r\n\r\n    // Update the formData object \r\n    /* formData.append(\r\n      \"file\",\r\n      service.file,\r\n      'file'\r\n    ); */\r\n\r\n\r\n    //setService({ 'fileName': formData.get('file').name })\r\n\r\n    console.log(formData.get('file').name)\r\n\r\n    serviceHTTPService.uploadFile(formData).then(data => { })\r\n    serviceHTTPService.createService(formData.get('file').name, data).then(data => {\r\n      setService(initialState)\r\n      showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success')\r\n      props.closeModal()\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const handleFileChange = event => {\r\n\r\n    setService({ 'file': event.target.files[0] });\r\n    // setService({ 'fileName': event.target.files[0].name });\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setService({ ...service, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"AddService\">\r\n      <form id=\"addService\" onSubmit={handleSubmit(onSubmit)} enctype=\"multipart/form-data\" class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Image:</font></font></label>\r\n          <div class=\"col-md-12\">\r\n            <input ref={register({ required: true })} name=\"file\" type=\"file\" onChange={handleFileChange} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Service Name:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input value={service.name} onChange={handleInputChange} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n              <div className=\"error text-danger\">\r\n                {errors.date && appointementValidation.date}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Description:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea value={service.description} onChange={handleInputChange} ref={register({ required: false })}\r\n                type=\"text\" name=\"description\" id=\"service_id\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Status:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select value={service.status} onChange={handleInputChange} ref={register({ required: true })}\r\n                name=\"status\" class=\"form-control\" rows=\"3\">\r\n                <option>Active</option>\r\n                <option>Inactive</option>\r\n              </select>\r\n              <div className=\"error text-danger\">\r\n                {errors.status && appointementValidation.status}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\" col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nAddService.propTypes = {};\r\n\r\nAddService.defaultProps = {};\r\n\r\nexport default AddService;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './EditService.css';\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport showMessage from '../../libraries/messages/messages'\r\nimport { useForm } from 'react-hook-form';\r\nconst EditService = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [groupe, setGroupe] = useState(props.service);\r\n\r\n  useEffect(() => {\r\n    setGroupe(props.service)\r\n  }, [props.service]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    // GroupeTestService.update(props.service, data)\r\n    // showMessage('Confirmation', 'groupeMessage.edit', 'success')\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setGroupe({ ...groupe, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditGroupe\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Nom du groupe</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={groupe.groupe_name} ref={register({ required: true })}\r\n              id=\"text\" name=\"groupe_name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\"><i class=\"far fa-save\"></i>Sauvegarder</button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nEditService.propTypes = {};\r\n\r\nEditService.defaultProps = {};\r\n\r\nexport default EditService;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Services.css';\r\nimport AddService from '../AddService/AddService';\r\nimport EditService from '../EditService/EditService'\r\nimport { LoadJSFiles } from '../init';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport serviceHTTPService from '../../main/services/serviceHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nconst Services = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllPatient()\r\n  }, []);\r\n\r\n\r\n  const getAllPatient = () => {\r\n    // setLoading(true);\r\n    serviceHTTPService.getAllService()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n        // setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n  const removePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      serviceHTTPService.removeService(data).then(data => {\r\n        resfreshComponent()\r\n        showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success')\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updatePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n    getAllPatient()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    getAllPatient()\r\n  }\r\n  const resfreshComponent = () => {\r\n    getAllPatient()\r\n    //forceUpdate()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 20 },\r\n    { field: 'name', headerName: 'Service Name', width: 200 },\r\n    { field: 'status', headerName: 'Status', width: 200 }]\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = patients.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Services\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addPatient\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n\r\n        <Button onClick={e => removePatientAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n        <Button type=\"button\" onClick={() => getAllPatient()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n\r\n        <br /><br />\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={patients}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n          /></div>}\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button onClick={resfreshComponent} type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddService closeModal={closeModalAdd} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button onClick={resfreshComponent} ref={closeButtonAdd} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"modal fade\" id=\"editPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonEdit} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nServices.propTypes = {};\r\n\r\nServices.defaultProps = {};\r\n\r\nexport default Services;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getOpeningHourPage = () => {\r\n    return http.get(`${BASE_URL}/api/frontoffice/openinghours`)\r\n}\r\n\r\nconst editOpeningHourPage = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/frontoffice/openinghours/${id}`, data);\r\n};\r\n\r\n\r\nconst getBlogPage = () => {\r\n    return http.get(`${BASE_URL}/api/frontoffice/blogs`)\r\n}\r\n\r\nconst editBlogPage = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/frontoffice/blogs/${id}`, data);\r\n};\r\n\r\n\r\nconst getHomePage = () => {\r\n    return http.get(`${BASE_URL}/api/frontoffice/homepage`)\r\n}\r\n\r\nconst editHomePage = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/frontoffice/homepage/${id}`, data);\r\n};\r\n\r\n\r\nconst getServicePage = () => {\r\n    return http.get(`${BASE_URL}/api/frontoffice/services`)\r\n}\r\n\r\nconst editServicePage = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/frontoffice/services/${id}`, data);\r\n};\r\n\r\n\r\nconst getContactPage = () => {\r\n    return http.get(`${BASE_URL}/api/frontoffice`)\r\n}\r\n\r\nconst editContactPage = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/frontoffice/${id}`, data);\r\n};\r\n\r\n\r\n\r\nexport default {\r\n    getOpeningHourPage,\r\n    editContactPage,\r\n    getContactPage,\r\n    editServicePage,\r\n    getServicePage,\r\n    editOpeningHourPage,\r\n    editBlogPage,\r\n    getHomePage,\r\n    editHomePage,\r\n    getBlogPage\r\n};","\r\nimport PropTypes from 'prop-types';\r\nimport './EditOpeningHourPage.css';\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport React, { useEffect, useState } from 'react';\r\nimport showMessage from '../../libraries/messages/messages'\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport CurrentUser from '../../main/config/user';\r\nconst EditOpeningHourPage = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [frontOffice, setFrontOffice] = useState(props.frontOffice);\r\n\r\n  useEffect(() => {\r\n    setFrontOffice(props.frontOffice)\r\n  }, [props.frontOffice]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //GroupeTestService.update(props.frontOffice, data)\r\n    frontOfficeHTTPService.editOpeningHourPage(props.frontOffice.id, data).then(data => {\r\n      // props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setFrontOffice({ ...frontOffice, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditGroupe\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Title</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.title} ref={register({ required: true })}\r\n              id=\"text\" name=\"title\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Sub title</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.subtitle} ref={register({ required: true })}\r\n              id=\"text\" name=\"subtitle\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\"><i class=\"far fa-save\"></i>Save </button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nEditOpeningHourPage.propTypes = {};\r\n\r\nEditOpeningHourPage.defaultProps = {};\r\n\r\nexport default EditOpeningHourPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './OpeningHourPage.css';\r\nimport EditOpeningHourPage from '../EditOpeningHourPage/EditOpeningHourPage'\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport { Button, Typography } from '@mui/material';\r\nconst OpeningHourPage = () => {\r\n  const [frontOffice, setFrontOffice] = useState({});\r\n\r\n  useEffect(() => {\r\n    retrieveEvents()\r\n  }, []);\r\n\r\n\r\n  const retrieveEvents = () => {\r\n    frontOfficeHTTPService.getOpeningHourPage()\r\n      .then(response => {\r\n\r\n        setFrontOffice(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n\r\n  const update = (e, data) => {\r\n    e.preventDefault();\r\n    setFrontOffice(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n  return (\r\n    <div className=\"FrontOffice\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n\r\n            <div className=\"card-body\">\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                <i className=\"menu-icon fa fa-bars\"></i>   Opening Hours\r\n              </Typography>\r\n              <div className=\"table-responsive\">\r\n\r\n                <Button onClick={e => update(e, frontOffice)} type=\"button\" data-toggle=\"modal\" data-target=\"#editFrontOffice\" ><i class=\"fas fa-edit\"></i> Edit </Button>\r\n\r\n\r\n                <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item\">Title : {frontOffice?.title}</li>\r\n                  <li class=\"list-group-item\">Sub Title : {frontOffice?.subtitle} </li>\r\n\r\n\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal fade\" id=\"editFrontOffice\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <EditOpeningHourPage frontOffice={frontOffice} />\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"modal fade\" id=\"preview\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Preview</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <iframe src=\"https://dentic-client.herokuapp.com/opening\" height=\"420\" width=\"750\" title=\"Iframe Example\"></iframe>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nOpeningHourPage.propTypes = {};\r\n\r\nOpeningHourPage.defaultProps = {};\r\n\r\nexport default OpeningHourPage;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './EditContactPage.css';\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport React, { useEffect, useState } from 'react';\r\nimport showMessage from '../../libraries/messages/messages'\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport CurrentUser from '../../main/config/user';\r\nconst EditContactPage = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [frontOffice, setfrontOffice] = useState(props.frontOffice);\r\n\r\n  useEffect(() => {\r\n    setfrontOffice(props.frontOffice)\r\n  }, [props.frontOffice]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //GroupeTestService.update(props.frontOffice, data)\r\n    frontOfficeHTTPService.editContactPage(props.frontOffice.id, data).then(data => {\r\n      props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setfrontOffice({ ...frontOffice, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditGroupe\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Email</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.email} ref={register({ required: true })}\r\n              id=\"text\" name=\"name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Subject</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.subject} ref={register({ required: true })}\r\n              id=\"text\" name=\"name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Message</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.message} ref={register({ required: true })}\r\n              id=\"text\" name=\"name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">send</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.sendButton} ref={register({ required: true })}\r\n              id=\"text\" name=\"name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Name</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.name} ref={register({ required: true })}\r\n              id=\"text\" name=\"name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\"><i class=\"far fa-save\"></i>Save </button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nEditContactPage.propTypes = {};\r\n\r\nEditContactPage.defaultProps = {};\r\n\r\nexport default EditContactPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactPage.css';\r\nimport EditContactPage from '../EditContactPage/EditContactPage'\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport { Button, Typography } from '@mui/material';\r\nconst ContactPage = () => {\r\n  const [frontOffice, setFrontOffice] = useState({});\r\n\r\n  useEffect(() => {\r\n    retrieveEvents()\r\n  }, []);\r\n\r\n\r\n  const retrieveEvents = () => {\r\n    frontOfficeHTTPService.getContactPage()\r\n      .then(response => {\r\n\r\n        setFrontOffice(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"FrontOffice\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n\r\n            <div className=\"card-body\">\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                <i className=\"menu-icon fa fa-bars\"></i>   Contact\r\n              </Typography>\r\n              <div className=\"table-responsive\">\r\n\r\n                <Button type=\"button\" data-toggle=\"modal\" data-target=\"#editFrontOffice\" ><i class=\"fas fa-edit\"></i> Edit </Button>\r\n                <Button type=\"button\" data-toggle=\"modal\" data-target=\"#preview\" ><i class=\"fas fa-eye\"></i> Preview </Button>\r\n\r\n\r\n\r\n                <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item\">Email Label: {frontOffice?.email}</li>\r\n                  <li class=\"list-group-item\">Subject Label: {frontOffice?.subject} </li>\r\n                  <li class=\"list-group-item\">Message Label: {frontOffice?.message} </li>\r\n                  <li class=\"list-group-item\">Button Label :  {frontOffice?.sendButton} Title </li>\r\n                  <li class=\"list-group-item\">Name Label : {frontOffice?.name}  </li>\r\n\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal fade\" id=\"editFrontOffice\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <EditContactPage frontOffice={frontOffice} />\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"modal fade\" id=\"preview\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Preview</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <iframe src=\"https://dentic-client.herokuapp.com/contact\" height=\"420\" width=\"750\" title=\"Iframe Example\"></iframe>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nContactPage.propTypes = {};\r\n\r\nContactPage.defaultProps = {};\r\n\r\nexport default ContactPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './ServicePage.css';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { Button, Typography, TextField, Paper, Stack, Alert } from '@mui/material';\r\n\r\nconst ServicePage = () => {\r\n  const [services, setServices] = useState([]);\r\n  const [textarea, setTextarea] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [success, setSuccess] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch services on mount\r\n  useEffect(() => {\r\n    fetchServices();\r\n  }, []);\r\n\r\n  const fetchServices = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const res = await axios.get(BASE_URL + '/services');\r\n      setServices(res.data.services || []);\r\n      setTextarea((res.data.services || []).join('\\n'));\r\n    } catch (e) {\r\n      setError('Failed to load services.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditMode(true);\r\n    setSuccess('');\r\n    setError('');\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditMode(false);\r\n    setTextarea(services.join('\\n'));\r\n    setSuccess('');\r\n    setError('');\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setTextarea(e.target.value);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n    try {\r\n      const updatedServices = textarea\r\n        .split('\\n')\r\n        .map(s => s.trim())\r\n        .filter(Boolean);\r\n      await axios.post(BASE_URL + '/services', { services: updatedServices });\r\n      setServices(updatedServices);\r\n      setEditMode(false);\r\n      setSuccess('Services updated successfully.');\r\n    } catch (e) {\r\n      setError('Failed to update services.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ maxWidth: 700, mx: 'auto', mt: 6, p: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        <i className=\"menu-icon fa fa-bars\"></i> Services\r\n      </Typography>\r\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n      {success && <Alert severity=\"success\" sx={{ mb: 2 }}>{success}</Alert>}\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Services List\"\r\n          multiline\r\n          minRows={8}\r\n          value={textarea}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          disabled={!editMode || loading}\r\n          helperText=\"One service per line\"\r\n        />\r\n        {!editMode ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleEdit}\r\n            disabled={loading}\r\n            sx={{ width: 120 }}\r\n          >\r\n            Edit\r\n          </Button>\r\n        ) : (\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              onClick={handleSave}\r\n              disabled={loading}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={handleCancel}\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        )}\r\n      </Stack>\r\n      {!editMode && (\r\n        <ul className=\"list-group list-group-flush\" style={{ marginTop: 24 }}>\r\n          {services.map((s, idx) => (\r\n            <li className=\"list-group-item\" key={idx}>\r\n              {s}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ServicePage;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './EditBlogPage.css';\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport React, { useEffect, useState } from 'react';\r\nimport showMessage from '../../libraries/messages/messages'\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport CurrentUser from '../../main/config/user';\r\nconst EditBlogPage = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [frontOffice, setFrontOffice] = useState(props.frontOffice);\r\n\r\n  useEffect(() => {\r\n    setFrontOffice(props.frontOffice)\r\n  }, [props.frontOffice]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //GroupeTestService.update(props.frontOffice, data)\r\n    frontOfficeHTTPService.editBlogPage(props.frontOffice.id, data).then(data => {\r\n      //props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setFrontOffice({ ...frontOffice, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditGroupe\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Title</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.title} ref={register({ required: true })}\r\n              id=\"text\" name=\"title\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Sub title</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.subtitle} ref={register({ required: true })}\r\n              id=\"text\" name=\"subtitle\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\"><i class=\"far fa-save\"></i>Save </button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nEditBlogPage.propTypes = {};\r\n\r\nEditBlogPage.defaultProps = {};\r\n\r\nexport default EditBlogPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BlogPage.css';\r\nimport EditBlogPage from '../EditBlogPage/EditBlogPage'\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport { Button, Typography } from '@mui/material';\r\nconst BlogPage = () => {\r\n  const [frontOffice, setFrontOffice] = useState({});\r\n\r\n  useEffect(() => {\r\n    retrieveEvents()\r\n  }, []);\r\n\r\n\r\n  const retrieveEvents = () => {\r\n    frontOfficeHTTPService.getBlogPage()\r\n      .then(response => {\r\n\r\n        setFrontOffice(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const update = (e, data) => {\r\n    e.preventDefault();\r\n    setFrontOffice(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"FrontOffice\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n\r\n            <div className=\"card-body\">\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                <i className=\"menu-icon fa fa-bars\"></i>   Blog Page\r\n              </Typography>\r\n              <div className=\"table-responsive\">\r\n                <Button onClick={e => update(e, frontOffice)} type=\"button\" data-toggle=\"modal\" data-target=\"#editFrontOffice\" ><i class=\"fas fa-edit\"></i> Edit </Button>\r\n\r\n\r\n                <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item\"> Title : {frontOffice?.title}</li>\r\n                  <li class=\"list-group-item\">sub Title : {frontOffice?.subtitle} </li>\r\n\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal fade\" id=\"editFrontOffice\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <EditBlogPage frontOffice={frontOffice} />\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"modal fade\" id=\"preview\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Preview</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <iframe src=\"https://dentic-client.herokuapp.com/blog\" height=\"420\" width=\"750\" title=\"Iframe Example\"></iframe>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nBlogPage.propTypes = {};\r\n\r\nBlogPage.defaultProps = {};\r\n\r\nexport default BlogPage;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddTestimonial.css';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst AddTestimonial = () => {\r\n\r\n  const initialState = {\r\n    name: '',\r\n    date: '',\r\n    status: ''\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [service, setService] = useState(initialState);\r\n\r\n  const onSubmit = (data) => {\r\n    /* serviceHTTPService.createService(data).then(data => {\r\n\r\n    }) */\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setService({ ...service, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"AddService\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Service Name:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={service?.name} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Description:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={service?.description} ref={register({ required: false })}\r\n                type=\"text\" name=\"description\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Status:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={service?.status} ref={register({ required: true })}\r\n                name=\"status\" class=\"form-control\" rows=\"3\">\r\n                <option>Active</option>\r\n                <option>Inactive</option>\r\n              </select>\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\"offset-4 col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nAddTestimonial.propTypes = {};\r\n\r\nAddTestimonial.defaultProps = {};\r\n\r\nexport default AddTestimonial;\r\n","import React, { useEffect, useState } from 'react';\r\nimport showMessage from '../../libraries/messages/messages'\r\nimport { useForm } from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\nimport './EditTestimonial.css';\r\n\r\nconst EditTestimonial = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [groupe, setGroupe] = useState(props.testimonial);\r\n\r\n  useEffect(() => {\r\n    setGroupe(props.testimonial)\r\n  }, [props.testimonial]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    // GroupeTestService.update(props.testimonial, data)\r\n    // showMessage('Confirmation', 'groupeMessage.edit', 'success')\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setGroupe({ ...groupe, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditGroupe\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Nom du groupe</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={groupe?.groupe_name} ref={register({ required: true })}\r\n              id=\"text\" name=\"groupe_name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\"><i class=\"far fa-save\"></i>Sauvegarder</button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nEditTestimonial.propTypes = {};\r\n\r\nEditTestimonial.defaultProps = {};\r\n\r\nexport default EditTestimonial;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllTestimonials = () => {\r\n    return http.get(`${BASE_URL}/api/testimonials`)\r\n}\r\nconst createTestimonials = data => {\r\n    return http.post(`${BASE_URL}/api/testimonials`, data);\r\n};\r\n\r\nconst editTestimonials = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/testimonials/${id}`, data);\r\n};\r\n\r\nconst removeTestimonials = id => {\r\n    return http.delete(`${BASE_URL}/api/testimonials/${id}`);\r\n};\r\n\r\nconst removeAllTestimonialss = id => {\r\n    return http.delete(`${BASE_URL}/api/testimonials`);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    getAllTestimonials,\r\n    createTestimonials,\r\n    editTestimonials,\r\n    removeTestimonials,\r\n    removeAllTestimonialss\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Testimonial.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport AddTestimonial from '../AddTestimonial/AddTestimonial';\r\nimport EditTestimonial from '../EditTestimonial/EditTestimonial';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport testimonialsHTTPService from '../../main/services/testimonialsHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst Testimonial = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllPatient()\r\n  }, []);\r\n\r\n\r\n  const getAllPatient = () => {\r\n    // setLoading(true);\r\n    testimonialsHTTPService.getAllTestimonials()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n        // setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n  const removePatientAction = (e, data) => {\r\n\r\n  }\r\n\r\n  const updatePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n    getAllPatient()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    getAllPatient()\r\n  }\r\n  const resfreshComponent = () => {\r\n    getAllPatient()\r\n    //forceUpdate()\r\n  }\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = patients.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n    { field: 'name', headerName: 'Fullname', width: 200 },\r\n    { field: 'image', headerName: 'Email', width: 200 },\r\n    { field: 'quote', headerName: 'Birth date', width: 200 },\r\n    { field: 'telephone', headerName: 'Telephone', width: 200 },\r\n  ];\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Testimonials\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addPatient\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={patients}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar, showQuickFilter: true }}\r\n          /></div>}\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button onClick={resfreshComponent} type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddTestimonial />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button onClick={resfreshComponent} ref={closeButtonAdd} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"modal fade\" id=\"editPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <EditTestimonial />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonEdit} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nTestimonial.propTypes = {};\r\n\r\nTestimonial.defaultProps = {};\r\n\r\nexport default Testimonial;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Schedule.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport { Typography, Button, LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\n\r\nconst Schedule = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllPatient()\r\n  }, []);\r\n\r\n\r\n  const getAllPatient = () => {\r\n    // setLoading(true);\r\n    /* patientHTTPService.getAllPatient()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n        // setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      }); */\r\n  };\r\n\r\n\r\n\r\n\r\n  const removePatientAction = (e, data) => {\r\n    /*  e.preventDefault();\r\n     var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n     if (r) {\r\n       showMessage('Confirmation', patientMessage.delete, 'success')\r\n       patientHTTPService.removePatient(data).then(data => {\r\n         resfreshComponent()\r\n       }).catch(e => {\r\n         showMessage('Confirmation', e, 'warning')\r\n       });\r\n     } */\r\n  }\r\n\r\n  const updatePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n    getAllPatient()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    getAllPatient()\r\n  }\r\n  const resfreshComponent = () => {\r\n    getAllPatient()\r\n    //forceUpdate()\r\n  }\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = patients.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n    { field: 'namepatient', headerName: 'Fullname', width: 200 },\r\n    { field: 'emailpatient', headerName: 'Email', width: 200 },\r\n    { field: 'birth', headerName: 'Birth date', width: 200 },\r\n    { field: 'telephone', headerName: 'Telephone', width: 200 },\r\n  ];\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Schedule\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addPatient\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={patients}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar, showQuickFilter: true }}\r\n          /></div>}\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button onClick={resfreshComponent} type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button onClick={resfreshComponent} ref={closeButtonAdd} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"modal fade\" id=\"editPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonEdit} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSchedule.propTypes = {};\r\n\r\nSchedule.defaultProps = {};\r\n\r\nexport default Schedule;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './NewsLetter.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport { Typography, Button, LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\n\r\nconst NewsLetter = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllPatient()\r\n  }, []);\r\n\r\n\r\n  const getAllPatient = () => {\r\n    // setLoading(true);\r\n    /* patientHTTPService.getAllPatient()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n        // setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      }); */\r\n  };\r\n\r\n\r\n\r\n\r\n  const removePatientAction = (e, data) => {\r\n    /*  e.preventDefault();\r\n     var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n     if (r) {\r\n       showMessage('Confirmation', patientMessage.delete, 'success')\r\n       patientHTTPService.removePatient(data).then(data => {\r\n         resfreshComponent()\r\n       }).catch(e => {\r\n         showMessage('Confirmation', e, 'warning')\r\n       });\r\n     } */\r\n  }\r\n\r\n  const updatePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n    getAllPatient()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    getAllPatient()\r\n  }\r\n  const resfreshComponent = () => {\r\n    getAllPatient()\r\n    //forceUpdate()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n    { field: 'namepatient', headerName: 'Fullname', width: 200 },\r\n    { field: 'emailpatient', headerName: 'Email', width: 200 },\r\n    { field: 'birth', headerName: 'Birth date', width: 200 },\r\n    { field: 'telephone', headerName: 'Telephone', width: 200 },\r\n  ];\r\n\r\n  const handleRowSelection = (e) => {\r\n    /* if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = patients.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e) */\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bats\"></i>   Newsletters\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addMedicament\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={patients}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar, showQuickFilter: true }}\r\n          /></div>}\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button onClick={resfreshComponent} type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button onClick={resfreshComponent} ref={closeButtonAdd} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"modal fade\" id=\"editPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonEdit} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nNewsLetter.propTypes = {};\r\n\r\nNewsLetter.defaultProps = {};\r\n\r\nexport default NewsLetter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\n\r\nconst SearchPatient = (props) => {\r\n    const [projects, setProjects] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        searchProject(props.match.params.input)\r\n    }, []);\r\n    const columns = [\r\n        {\r\n            field: 'id', headerName: '#', description: 'The identification used by the person with access to the online service.', width: 20\r\n        },\r\n        { field: 'namepatient', headerName: 'Full Name', width: 200 },\r\n        { field: 'emailpatient', headerName: 'Email', width: 200 },\r\n        { field: 'birth', headerName: 'Date of Birth', width: 200 },\r\n        { field: 'telephone', headerName: 'Telephone', width: 200 },\r\n        { field: 'address', headerName: 'Address', width: 200 },\r\n    ];\r\n\r\n\r\n    const searchProject = (title) => {\r\n        setLoading(true)\r\n        patientHTTPService.searchPatient(title).then(data => {\r\n            console.log(data.data)\r\n            setProjects(data.data);\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"card\">\r\n\r\n            <div className=\"card-header\">\r\n                <h4><i class=\"menu-icon fa fa-search\"></i> Search Results</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                {loading ?\r\n                    <LinearProgress />\r\n                    : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n                        rows={projects}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                        rowsPerPageOptions={[6]}\r\n                        checkboxSelection\r\n\r\n                        components={{ Toolbar: GridToolbar }}\r\n                    /></div>}\r\n\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n};\r\n\r\nSearchPatient.propTypes = {};\r\n\r\nSearchPatient.defaultProps = {};\r\n\r\nexport default SearchPatient;","import React from 'react';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst Profile = () => {\r\n  const user = CurrentUser.USER_DETAIL;\r\n\r\n  return (\r\n    <div\r\n      className=\"Profile\"\r\n      style={{\r\n        width: 100 + '%', // Full width of parent/container\r\n        maxWidth: 520,    // Increased max width for better layout\r\n        minWidth: 320,    // Minimum width for mobile\r\n        margin: '40px auto',\r\n        padding: 0,\r\n        background: 'linear-gradient(135deg, #e3f2fd 0%, #fff 100%)',\r\n        borderRadius: 24,\r\n        boxShadow: '0 8px 32px rgba(25, 118, 210, 0.10)',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: 24,\r\n          boxShadow: '0 2px 12px rgba(25, 118, 210, 0.08)',\r\n          padding: 36,\r\n          textAlign: 'center',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: 24,\r\n            right: 24,\r\n            background: '#e3f2fd',\r\n            borderRadius: '50%',\r\n            width: 38,\r\n            height: 38,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            boxShadow: '0 1px 4px rgba(25,118,210,0.08)',\r\n            cursor: 'pointer',\r\n          }}\r\n          title=\"Edit Profile\"\r\n        >\r\n          <i className=\"fas fa-user-edit\" style={{ color: '#1976d2', fontSize: 18 }}></i>\r\n        </div>\r\n        <div style={{ marginBottom: 18 }}>\r\n          <img\r\n            className=\"rounded-circle\"\r\n            alt=\"Profile\"\r\n            src=\"images/admin.png\"\r\n            style={{\r\n              width: 120,\r\n              height: 120,\r\n              objectFit: 'cover',\r\n              borderRadius: '50%',\r\n              border: '5px solid #1976d2',\r\n              boxShadow: '0 4px 16px rgba(25,118,210,0.12)',\r\n              marginBottom: 8,\r\n            }}\r\n          />\r\n        </div>\r\n        <h2 style={{ margin: '10px 0 2px', color: '#1976d2', fontWeight: 800, letterSpacing: 0.5 }}>\r\n          {user.name}\r\n        </h2>\r\n        <div\r\n          style={{\r\n            color: '#fff',\r\n            background: '#1976d2',\r\n            display: 'inline-block',\r\n            borderRadius: 8,\r\n            padding: '2px 16px',\r\n            fontSize: 15,\r\n            fontWeight: 600,\r\n            marginBottom: 18,\r\n            marginTop: 4,\r\n            letterSpacing: 0.2,\r\n          }}\r\n        >\r\n          {user.role}\r\n        </div>\r\n        <div\r\n          style={{\r\n            textAlign: 'left',\r\n            margin: '0 auto',\r\n            maxWidth: 320,\r\n            marginTop: 18,\r\n            fontSize: 16,\r\n          }}\r\n        >\r\n          <div style={{ marginBottom: 14, display: 'flex', alignItems: 'center' }}>\r\n            <i className=\"fas fa-birthday-cake\" style={{ color: '#1976d2', marginRight: 10 }}></i>\r\n            <span style={{ fontWeight: 600, color: '#1976d2', minWidth: 90 }}>Birth date:</span>\r\n            <span style={{ marginLeft: 8 }}>{user.birthday?.substring(0, 10) || '-'}</span>\r\n          </div>\r\n          <div style={{ marginBottom: 14, display: 'flex', alignItems: 'center' }}>\r\n            <i className=\"fas fa-envelope\" style={{ color: '#1976d2', marginRight: 10 }}></i>\r\n            <span style={{ fontWeight: 600, color: '#1976d2', minWidth: 90 }}>Email:</span>\r\n            <span style={{ marginLeft: 8 }}>{user.email}</span>\r\n          </div>\r\n          <div style={{ marginBottom: 14, display: 'flex', alignItems: 'center' }}>\r\n            <i className=\"fas fa-phone\" style={{ color: '#1976d2', marginRight: 10 }}></i>\r\n            <span style={{ fontWeight: 600, color: '#1976d2', minWidth: 90 }}>Telephone:</span>\r\n            <span style={{ marginLeft: 8 }}>{user.telephone}</span>\r\n          </div>\r\n          <div style={{ marginBottom: 14, display: 'flex', alignItems: 'center' }}>\r\n            <i className=\"fas fa-map-marker-alt\" style={{ color: '#1976d2', marginRight: 10 }}></i>\r\n            <span style={{ fontWeight: 600, color: '#1976d2', minWidth: 90 }}>Address:</span>\r\n            <span style={{ marginLeft: 8 }}>{user.address}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack, FormControlLabel, Checkbox } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['Pending', 'Confirmed', 'Completed', 'No-show', 'Cancelled'];\r\nconst types = ['Consultation', 'Follow-up', 'Emergency', 'Routine', 'Other'];\r\n\r\nconst AddAppointment = ({ closeModal, doctors = [], patients = [], clinics = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicLocationId: '',\r\n    appointmentDate: '',\r\n    startTime: '',\r\n    endTime: '',\r\n    status: 'Pending',\r\n    appointmentType: '',\r\n    reasonForVisit: '',\r\n    notes: '',\r\n    roomNumber: '',\r\n    isFirstVisit: false,\r\n    followUpDate: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value, type, checked } = e.target;\r\n    setForm(f => ({\r\n      ...f,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      await axios.post(`${BASE_URL}/appointments`, form);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(p => (\r\n          <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(d => (\r\n          <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic Location\"\r\n        name=\"clinicLocationId\"\r\n        value={form.clinicLocationId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {clinics.map(c => (\r\n          <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Appointment Date\"\r\n        name=\"appointmentDate\"\r\n        type=\"date\"\r\n        value={form.appointmentDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <TextField\r\n          label=\"Start Time\"\r\n          name=\"startTime\"\r\n          type=\"time\"\r\n          value={form.startTime}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"End Time\"\r\n          name=\"endTime\"\r\n          type=\"time\"\r\n          value={form.endTime}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n      </Stack>\r\n      <TextField\r\n        select\r\n        label=\"Status\"\r\n        name=\"status\"\r\n        value={form.status}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {statuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Appointment Type\"\r\n        name=\"appointmentType\"\r\n        value={form.appointmentType}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {types.map(t => (\r\n          <MenuItem key={t} value={t}>{t}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Reason for Visit\"\r\n        name=\"reasonForVisit\"\r\n        value={form.reasonForVisit}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Notes\"\r\n        name=\"notes\"\r\n        value={form.notes}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <TextField\r\n        label=\"Room Number\"\r\n        name=\"roomNumber\"\r\n        value={form.roomNumber}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={form.isFirstVisit}\r\n            onChange={handleChange}\r\n            name=\"isFirstVisit\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Is First Visit\"\r\n      />\r\n      <TextField\r\n        label=\"Follow Up Date\"\r\n        name=\"followUpDate\"\r\n        type=\"date\"\r\n        value={form.followUpDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Add Appointment'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddAppointment;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack, FormControlLabel, Checkbox } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['Pending', 'Confirmed', 'Completed', 'No-show', 'Cancelled'];\r\nconst types = ['Consultation', 'Follow-up', 'Emergency', 'Routine', 'Other'];\r\nconst paymentStatuses = ['Unpaid', 'Paid', 'Pending', 'Partial'];\r\n\r\nconst EditAppointment = ({ appointment, closeModal, doctors = [], patients = [], clinics = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicLocationId: '',\r\n    appointmentDate: '',\r\n    startTime: '',\r\n    endTime: '',\r\n    status: 'Pending',\r\n    appointmentType: '',\r\n    reasonForVisit: '',\r\n    notes: '',\r\n    roomNumber: '',\r\n    isFirstVisit: false,\r\n    followUpDate: '',\r\n    paymentStatus: 'Unpaid',\r\n    paymentAmount: '',\r\n    insuranceProvider: '',\r\n    insuranceNumber: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (appointment) {\r\n      setForm({\r\n        patientId: appointment.patientId || '',\r\n        doctorId: appointment.doctorId || '',\r\n        clinicLocationId: appointment.clinicLocationId || '',\r\n        appointmentDate: appointment.appointmentDate || '',\r\n        startTime: appointment.startTime || '',\r\n        endTime: appointment.endTime || '',\r\n        status: appointment.status || 'Pending',\r\n        appointmentType: appointment.appointmentType || '',\r\n        reasonForVisit: appointment.reasonForVisit || '',\r\n        notes: appointment.notes || '',\r\n        roomNumber: appointment.roomNumber || '',\r\n        isFirstVisit: !!appointment.isFirstVisit,\r\n        followUpDate: appointment.followUpDate || '',\r\n        paymentStatus: appointment.paymentStatus || 'Unpaid',\r\n        paymentAmount: appointment.paymentAmount || '',\r\n        insuranceProvider: appointment.insuranceProvider || '',\r\n        insuranceNumber: appointment.insuranceNumber || '',\r\n      });\r\n    }\r\n  }, [appointment]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value, type, checked } = e.target;\r\n    setForm(f => ({\r\n      ...f,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      await axios.put(`${BASE_URL}/appointments/${appointment.id}`, form);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(p => (\r\n          <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(d => (\r\n          <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic Location\"\r\n        name=\"clinicLocationId\"\r\n        value={form.clinicLocationId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {clinics.map(c => (\r\n          <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Appointment Date\"\r\n        name=\"appointmentDate\"\r\n        type=\"date\"\r\n        value={form.appointmentDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <TextField\r\n          label=\"Start Time\"\r\n          name=\"startTime\"\r\n          type=\"time\"\r\n          value={form.startTime}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"End Time\"\r\n          name=\"endTime\"\r\n          type=\"time\"\r\n          value={form.endTime}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n      </Stack>\r\n      <TextField\r\n        select\r\n        label=\"Status\"\r\n        name=\"status\"\r\n        value={form.status}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {statuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Appointment Type\"\r\n        name=\"appointmentType\"\r\n        value={form.appointmentType}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {types.map(t => (\r\n          <MenuItem key={t} value={t}>{t}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Reason for Visit\"\r\n        name=\"reasonForVisit\"\r\n        value={form.reasonForVisit}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Notes\"\r\n        name=\"notes\"\r\n        value={form.notes}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <TextField\r\n        label=\"Room Number\"\r\n        name=\"roomNumber\"\r\n        value={form.roomNumber}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={form.isFirstVisit}\r\n            onChange={handleChange}\r\n            name=\"isFirstVisit\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Is First Visit\"\r\n      />\r\n      <TextField\r\n        label=\"Follow Up Date\"\r\n        name=\"followUpDate\"\r\n        type=\"date\"\r\n        value={form.followUpDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Payment Status\"\r\n        name=\"paymentStatus\"\r\n        value={form.paymentStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {paymentStatuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Payment Amount\"\r\n        name=\"paymentAmount\"\r\n        type=\"number\"\r\n        value={form.paymentAmount}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Insurance Provider\"\r\n        name=\"insuranceProvider\"\r\n        value={form.insuranceProvider}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Insurance Number\"\r\n        name=\"insuranceNumber\"\r\n        value={form.insuranceNumber}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Save Changes'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditAppointment;","import React from 'react';\r\nimport {\r\n  Dialog, DialogTitle, DialogContent, DialogActions, Button,\r\n  Grid, Typography, Chip, Divider, Box, Paper, Tooltip, Stack\r\n} from '@mui/material';\r\n\r\nconst ViewAppointment = ({\r\n  open,\r\n  onClose,\r\n  appointment,\r\n  getPatientName,\r\n  getDoctorName,\r\n  getClinicName\r\n}) => {\r\n  if (!appointment) return null;\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle sx={{ background: '#e3f2fd', fontWeight: 700, fontSize: 22 }}>\r\n        <i className=\"fas fa-calendar-check\" style={{ color: '#1976d2', marginRight: 10 }} />\r\n        Appointment Details\r\n      </DialogTitle>\r\n      <DialogContent dividers sx={{ background: '#f8fafc' }}>\r\n        <Paper elevation={0} sx={{ p: 2, mb: 2, bgcolor: '#fff', borderRadius: 2 }}>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Tooltip title=\"Patient\">\r\n              <i className=\"fas fa-user\" style={{ color: '#1976d2', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle1\" fontWeight={600}>\r\n              {getPatientName(appointment.patientId)}\r\n            </Typography>\r\n            <Chip\r\n              label={appointment.status}\r\n              color={\r\n                appointment.status === 'Completed'\r\n                  ? 'success'\r\n                  : appointment.status === 'Confirmed'\r\n                  ? 'primary'\r\n                  : appointment.status === 'Pending'\r\n                  ? 'warning'\r\n                  : appointment.status === 'No-show'\r\n                  ? 'error'\r\n                  : 'default'\r\n              }\r\n              size=\"small\"\r\n              sx={{ ml: 2 }}\r\n            />\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Tooltip title=\"Doctor\">\r\n              <i className=\"fas fa-user-md\" style={{ color: '#388e3c', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle2\">{getDoctorName(appointment.doctorId)}</Typography>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Tooltip title=\"Clinic\">\r\n              <i className=\"fas fa-hospital\" style={{ color: '#d32f2f', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle2\">{getClinicName(appointment.clinicLocationId)}</Typography>\r\n          </Stack>\r\n        </Paper>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Date:</strong> {appointment.appointmentDate}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Time:</strong> {appointment.startTime} - {appointment.endTime}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Room:</strong> {appointment.roomNumber || '-'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Type:</strong> {appointment.appointmentType}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>First Visit:</strong> {appointment.isFirstVisit ? 'Yes' : 'No'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Follow Up Date:</strong> {appointment.followUpDate || '-'}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Reason for Visit:</strong>\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 2, color: '#1976d2' }}>\r\n              {appointment.reasonForVisit || '-'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Notes:</strong>\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ color: '#555' }}>\r\n              {appointment.notes || '-'}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider sx={{ my: 2 }} />\r\n        <Box sx={{ mt: 2, textAlign: 'right' }}>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            <i className=\"fas fa-clock\" style={{ marginRight: 4 }} />\r\n            Created: {appointment.createdAt ? new Date(appointment.createdAt).toLocaleString() : '-'}\r\n            <br />\r\n            <i className=\"fas fa-sync-alt\" style={{ marginRight: 4 }} />\r\n            Updated: {appointment.updatedAt ? new Date(appointment.updatedAt).toLocaleString() : '-'}\r\n          </Typography>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions sx={{ background: '#f8fafc' }}>\r\n        <Button onClick={onClose} color=\"primary\" variant=\"contained\" sx={{ minWidth: 100 }}>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ViewAppointment;","/**\r\n * Appointments Component\r\n * \r\n * This component manages the appointments list and provides features such as:\r\n * - Viewing, editing, deleting, and archiving appointments.\r\n * - Searching and filtering appointments.\r\n * - Exporting appointments to a CSV file.\r\n * - Bulk actions like delete and archive.\r\n * - Dark mode toggle for better user experience.\r\n * - Dynamic menu actions for each appointment.\r\n * \r\n * Props: None\r\n * State:\r\n * - appointmentsList: Array of appointments fetched from the server.\r\n * - updatedItem: The currently selected appointment for editing.\r\n * - loading: Boolean indicating whether data is being loaded.\r\n * - searchQuery: String for filtering appointments.\r\n * - isDarkMode: Boolean for toggling dark mode.\r\n * - anchorEl: DOM element for the menu anchor.\r\n * - selectedRow: The currently selected appointment row.\r\n * - updatedItemIds: Array of selected appointment IDs for bulk actions.\r\n * \r\n * Functions:\r\n * - retrieveAppointments: Fetches the list of appointments from the server.\r\n * - handleSearch: Filters appointments based on the search query.\r\n * - handleExport: Exports the appointments list to a CSV file.\r\n * - handleBulkDelete: Deletes selected appointments.\r\n * - handleBulkArchive: Archives selected appointments.\r\n * - handleMenuAction: Handles actions like view, edit, delete, etc., from the menu.\r\n * - handleRowSelection: Tracks selected rows in the DataGrid.\r\n * \r\n * Dependencies:\r\n * - Material-UI for UI components.\r\n * - Axios for HTTP requests.\r\n * - FileSaver for exporting CSV files.\r\n */\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Appointments.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { TextField, Button, Switch, FormControlLabel, Select, MenuItem, FormControl, Chip, Card, CardContent, Typography, Grid, Paper, List, ListItem, ListItemText, Divider, Box, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\nimport { LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport CurrentUser from '../../main/config/user';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { Menu, MenuItem as MuiMenuItem, IconButton } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { saveAs } from 'file-saver';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport AddAppointment from './AddAppointment';\r\nimport EditAppointment from './EditAppointment';\r\nimport ViewAppointment from './ViewAppointment';\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\n\r\n\r\nexport const Appointments = () => {\r\n  const [appointmentsList, setAppointments] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const [loading, setLoading] = useState(false);\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [viewMode, setViewMode] = useState('table'); // 'table' or 'cards'\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [viewModalOpen, setViewModalOpen] = useState(false);\r\n  const [viewedItem, setViewedItem] = useState(null);\r\n\r\n  const retrieveAppointments = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/appointments`)\r\n      .then(response => {\r\n        setAppointments(response.data);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const resfresh = () => {\r\n    retrieveAppointments();\r\n    forceUpdate();\r\n  };\r\n\r\n  const closeModalEdit = () => {\r\n    resfresh();\r\n    closeButtonEdit.current.click();\r\n  };\r\n\r\n  const closeModalAdd = () => {\r\n    resfresh();\r\n    closeButtonAdd.current.click();\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveAppointments();\r\n    axios.get(`${BASE_URL}/doctors`).then(res => setDoctors(res.data));\r\n    axios.get(`${BASE_URL}/patients`).then(res => setPatients(res.data));\r\n    axios.get(`${BASE_URL}/clinics`).then(res => setClinics(res.data));\r\n  }, []);\r\n\r\n  // Helper functions to get names\r\n  const getDoctorName = (id) => {\r\n    const doc = doctors.find(d => d.id === id);\r\n    return doc ? doc.fullName : 'Doctor not found';\r\n  };\r\n  const getPatientName = (id) => {\r\n    const pat = patients.find(p => p.id === id);\r\n    return pat ? pat.fullName : 'Patient not found';\r\n  };\r\n  const getClinicName = (id) => {\r\n    const clinic = clinics.find(c => c.id === id);\r\n    return clinic && clinic.name ? clinic.name : 'Clinic not found';\r\n  };\r\n\r\n  const update = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data);\r\n    resfresh();\r\n  };\r\n\r\n  const remove = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(CurrentUser.DELETE_MSG)) {\r\n      axios.delete(`${BASE_URL}/events/${id}`).then(() => resfresh());\r\n    }\r\n  };\r\n\r\n  const handleMenuOpen = (event, row) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedRow(row);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  // Update handleMenuAction to implement all features\r\n  const handleMenuAction = (action) => {\r\n    if (action === 'view') {\r\n      setViewedItem(selectedRow);\r\n      handleMenuClose();\r\n      setViewModalOpen(true);\r\n    }\r\n    if (action === 'edit') {\r\n      setUpdatedItem(selectedRow);\r\n      handleMenuClose();\r\n      setEditModalOpen(true);\r\n    }\r\n    if (action === 'delete') {\r\n      handleMenuClose();\r\n      if (window.confirm('Are you sure you want to delete this appointment?')) {\r\n        axios.delete(`${BASE_URL}/appointments/${selectedRow.id}`)\r\n          .then(() => {\r\n            resfresh();\r\n            alert('Appointment deleted.');\r\n          })\r\n          .catch(() => alert('Failed to delete appointment.'));\r\n      }\r\n    }\r\n    if (action === 'archive') {\r\n      handleMenuClose();\r\n      axios.put(`${BASE_URL}/appointments/${selectedRow.id}/archive`)\r\n        .then(() => {\r\n          resfresh();\r\n          alert('Appointment archived.');\r\n        })\r\n        .catch(() => alert('Failed to archive appointment.'));\r\n    }\r\n    if (action === 'reschedule') {\r\n      handleMenuClose();\r\n      setUpdatedItem(selectedRow);\r\n      setEditModalOpen(true);\r\n    }\r\n    if (action === 'complete') {\r\n      handleMenuClose();\r\n      // Mark as Completed feature\r\n      axios.put(`${BASE_URL}/appointments/${selectedRow.id}/completed`, { status: 'Completed' })\r\n        .then(() => {\r\n          resfresh();\r\n          alert('Appointment marked as completed.');\r\n        })\r\n        .catch(() => alert('Failed to update status.'));\r\n    }\r\n    if (action === 'export') {\r\n      handleMenuClose();\r\n      handleExport();\r\n    }\r\n    if (action === 'sync') {\r\n      handleMenuClose();\r\n      syncWithGoogleCalendar();\r\n    }\r\n    if (action === 'reminder') {\r\n      handleMenuClose();\r\n      sendReminder(selectedRow.id, 'Email');\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    const csvContent = [\r\n      ['ID', 'Patient ID', 'Doctor ID', 'Clinic Location', 'Date', 'Start Time', 'End Time', 'Status', 'Type', 'Reason', 'Notes'],\r\n      ...appointmentsList.map(a => [\r\n        a.id, a.patientId, a.doctorId, a.clinicLocationId, a.appointmentDate, a.startTime, a.endTime, a.status, a.appointmentType, a.reasonForVisit, a.notes\r\n      ])\r\n    ].map(e => e.join(\",\")).join(\"\\n\");\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    saveAs(blob, 'appointments.csv');\r\n  };\r\n\r\n  const handleBulkDelete = () => {\r\n    if (window.confirm('Are you sure you want to delete the selected appointments?')) {\r\n      updatedItemIds.forEach(id => {\r\n        axios.delete(`${BASE_URL}/appointments/${id}`)\r\n          .then(() => resfresh())\r\n          .catch(e => console.error(e));\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkArchive = () => {\r\n    if (window.confirm('Are you sure you want to archive the selected appointments?')) {\r\n      updatedItemIds.forEach(id => {\r\n        console.log(`Archiving appointment with ID: ${id}`);\r\n        // Add logic to archive appointments\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendReminder = (id, type) => {\r\n    axios.post(`${BASE_URL}/appointments/${id}/reminder`, { type }).then(() => {\r\n      alert(`Reminder sent via ${type}`);\r\n    });\r\n  };\r\n\r\n  const updateStatus = (id, status) => {\r\n    axios.put(`${BASE_URL}/appointments/${id}/status`, { status }).then(() => resfresh());\r\n  };\r\n\r\n  const syncWithGoogleCalendar = () => {\r\n    alert('Syncing with Google Calendar...');\r\n    // Add logic to integrate with Google Calendar API\r\n  };\r\n\r\n  const checkAvailability = (doctorId, date, time) => {\r\n    axios.post(`${BASE_URL}/availability`, { doctorId, date, time }).then((response) => {\r\n      alert(response.data.available ? 'Time slot is available' : 'Time slot is not available');\r\n    });\r\n  };\r\n\r\n  const predictNoShow = (appointmentId) => {\r\n    axios.get(`${BASE_URL}/appointments/${appointmentId}/predict-no-show`).then((response) => {\r\n      alert(`No-show probability: ${response.data.probability}%`);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <span>{getPatientName(params.value)}</span>\r\n      )\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <span>{getDoctorName(params.value)}</span>\r\n      )\r\n    },\r\n    {\r\n      field: 'clinicLocationId',\r\n      headerName: 'Clinic',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <span>{getClinicName(params.value)}</span>\r\n      )\r\n    },\r\n    {\r\n      field: 'appointmentDate',\r\n      headerName: 'Date',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"info\" variant=\"outlined\" />\r\n      )\r\n    },\r\n    {\r\n      field: 'startTime',\r\n      headerName: 'Start Time',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"primary\" variant=\"outlined\" />\r\n      )\r\n    },\r\n    {\r\n      field: 'endTime',\r\n      headerName: 'End Time',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"primary\" variant=\"outlined\" />\r\n      )\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Completed'\r\n              ? 'success'\r\n              : params.value === 'Confirmed'\r\n              ? 'primary'\r\n              : params.value === 'Pending'\r\n              ? 'warning'\r\n              : params.value === 'No-show'\r\n              ? 'error'\r\n              : params.value === 'Archived'\r\n              ? 'secondary'\r\n              : 'default'\r\n          }\r\n          variant=\"filled\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 220,\r\n      renderCell: (params) => (\r\n        <div>\r\n          <IconButton\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleMenuOpen(event, params.row)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}\r\n          >\r\n            <MuiMenuItem onClick={() => handleMenuAction('view')}>View</MuiMenuItem>\r\n            <MuiMenuItem onClick={() => handleMenuAction('delete')}>Delete</MuiMenuItem>\r\n            <MuiMenuItem onClick={() => handleMenuAction('archive')}>Archive</MuiMenuItem>\r\n            <MuiMenuItem onClick={() => handleMenuAction('reschedule')}>Reschedule</MuiMenuItem>\r\n            <MuiMenuItem onClick={() => handleMenuAction('complete')}>Mark as Completed</MuiMenuItem>\r\n          </Menu>\r\n        </div>\r\n      )\r\n    },\r\n  ];\r\n\r\n  // Card view for appointments\r\n  const renderCardView = () => (\r\n    <Grid container spacing={2}>\r\n      {appointmentsList.map((appt) => (\r\n        <Grid item xs={12} sm={6} md={4} key={appt.id}>\r\n          <Card variant=\"outlined\" style={{ marginBottom: 16 }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                {getPatientName(appt.patientId)}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Doctor:</strong> {getDoctorName(appt.doctorId)}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Clinic:</strong> {getClinicName(appt.clinicLocationId)}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Date:</strong> {appt.appointmentDate}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Time:</strong> {appt.startTime} - {appt.endTime}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Status:</strong> {appt.status}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Type:</strong> {appt.appointmentType}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Reason:</strong> {appt.reasonForVisit}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Notes:</strong> {appt.notes}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n\r\n  // Calendar view for appointments\r\n  const renderCalendarView = () => {\r\n    // Group appointments by date\r\n    const grouped = {};\r\n    appointmentsList.forEach(appt => {\r\n      if (!grouped[appt.appointmentDate]) grouped[appt.appointmentDate] = [];\r\n      grouped[appt.appointmentDate].push(appt);\r\n    });\r\n\r\n    const dates = Object.keys(grouped).sort();\r\n\r\n    return (\r\n      <div style={{ marginTop: 24 }}>\r\n        <Typography variant=\"h5\" gutterBottom>Calendar View</Typography>\r\n        <Grid container spacing={2}>\r\n          {dates.map(date => (\r\n            <Grid item xs={12} sm={6} md={4} key={date}>\r\n              <Paper elevation={3} style={{ padding: 16 }}>\r\n                <Typography variant=\"subtitle1\" color=\"primary\" gutterBottom>\r\n                  {date}\r\n                </Typography>\r\n                {grouped[date].map(appt => (\r\n                  <Card key={appt.id} variant=\"outlined\" style={{ marginBottom: 8 }}>\r\n                    <CardContent>\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Patient:</strong> {getPatientName(appt.patientId)}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Doctor:</strong> {getDoctorName(appt.doctorId)}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Time:</strong> {appt.startTime} - {appt.endTime}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Status:</strong> {appt.status}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // List view for appointments\r\n  const renderListView = () => (\r\n    <Box sx={{ marginTop: 2 }}>\r\n      <Typography variant=\"h5\" gutterBottom>List View</Typography>\r\n      <List>\r\n        {appointmentsList.map((appt, idx) => (\r\n          <React.Fragment key={appt.id}>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary={`${getPatientName(appt.patientId)} with ${getDoctorName(appt.doctorId)}`}\r\n                secondary={\r\n                  <>\r\n                    <span><strong>Date:</strong> {appt.appointmentDate}</span><br />\r\n                    <span><strong>Time:</strong> {appt.startTime} - {appt.endTime}</span><br />\r\n                    <span><strong>Status:</strong> {appt.status}</span><br />\r\n                    <span><strong>Clinic:</strong> {getClinicName(appt.clinicLocationId)}</span>\r\n                  </>\r\n                }\r\n              />\r\n            </ListItem>\r\n            {idx < appointmentsList.length - 1 && <Divider />}\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  // Timeline view for appointments (simple vertical timeline)\r\n  const renderTimelineView = () => {\r\n    // Create a copy before sorting to avoid mutating state\r\n    const sortedAppointments = [...appointmentsList].sort(\r\n      (a, b) =>\r\n        new Date(a.appointmentDate + ' ' + a.startTime) -\r\n        new Date(b.appointmentDate + ' ' + b.startTime)\r\n    );\r\n\r\n    return (\r\n      <Box sx={{ marginTop: 2 }}>\r\n        <Typography variant=\"h5\" gutterBottom>Timeline View</Typography>\r\n        <div style={{ borderLeft: '2px solid #1976d2', paddingLeft: 24 }}>\r\n          {sortedAppointments.map(appt => (\r\n            <div key={appt.id} style={{ marginBottom: 32, position: 'relative' }}>\r\n              <div style={{\r\n                position: 'absolute',\r\n                left: -32,\r\n                top: 0,\r\n                background: '#1976d2',\r\n                color: '#fff',\r\n                borderRadius: '50%',\r\n                width: 24,\r\n                height: 24,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                fontSize: 14\r\n              }}>\r\n                {appt.appointmentDate.split('-')[2]}\r\n              </div>\r\n              <Typography variant=\"subtitle1\" color=\"primary\">\r\n                {appt.appointmentDate} {appt.startTime} - {appt.endTime}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Patient:</strong> {getPatientName(appt.patientId)}<br />\r\n                <strong>Doctor:</strong> {getDoctorName(appt.doctorId)}<br />\r\n                <strong>Status:</strong> {appt.status}\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Widget summary data\r\n  const totalAppointments = appointmentsList.length;\r\n  const completed = appointmentsList.filter(a => a.status === 'Completed').length;\r\n  const pending = appointmentsList.filter(a => a.status === 'Pending').length;\r\n  const confirmed = appointmentsList.filter(a => a.status === 'Confirmed').length;\r\n  const noShow = appointmentsList.filter(a => a.status === 'No-show').length;\r\n\r\n  // Prepare chart data\r\n  const doughnutData = {\r\n    labels: ['Completed', 'Pending', 'Confirmed', 'No-show'],\r\n    datasets: [{\r\n      data: [completed, pending, confirmed, noShow],\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(\r\n      appointmentsList.reduce((acc, appt) => {\r\n        acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n        acc[appt.appointmentDate]++;\r\n        return acc;\r\n      }, {})\r\n    ),\r\n    datasets: [{\r\n      label: 'Appointments per Day',\r\n      data: Object.values(\r\n        appointmentsList.reduce((acc, appt) => {\r\n          acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n          acc[appt.appointmentDate]++;\r\n          return acc;\r\n        }, {})\r\n      ),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(\r\n      appointmentsList.reduce((acc, appt) => {\r\n        acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n        acc[appt.appointmentDate]++;\r\n        return acc;\r\n      }, {})\r\n    ),\r\n    datasets: [\r\n      {\r\n        label: 'Completed',\r\n        data: Object.keys(\r\n          appointmentsList.reduce((acc, appt) => {\r\n            acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n            return acc;\r\n          }, {})\r\n        ).map(date => appointmentsList.filter(a => a.appointmentDate === date && a.status === 'Completed').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Pending',\r\n        data: Object.keys(\r\n          appointmentsList.reduce((acc, appt) => {\r\n            acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n            return acc;\r\n          }, {})\r\n        ).map(date => appointmentsList.filter(a => a.appointmentDate === date && a.status === 'Pending').length),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Confirmed',\r\n        data: Object.keys(\r\n          appointmentsList.reduce((acc, appt) => {\r\n            acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n            return acc;\r\n          }, {})\r\n        ).map(date => appointmentsList.filter(a => a.appointmentDate === date && a.status === 'Confirmed').length),\r\n        borderColor: '#1976d2',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'No-show',\r\n        data: Object.keys(\r\n          appointmentsList.reduce((acc, appt) => {\r\n            acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n            return acc;\r\n          }, {})\r\n        ).map(date => appointmentsList.filter(a => a.appointmentDate === date && a.status === 'No-show').length),\r\n        borderColor: '#e53935',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const filteredAppointments = appointmentsList.filter(appt => {\r\n    const q = searchQuery.trim().toLowerCase();\r\n    if (!q) return true;\r\n    // You can add more fields as needed for filtering\r\n    return (\r\n      getPatientName(appt.patientId).toLowerCase().includes(q) ||\r\n      getDoctorName(appt.doctorId).toLowerCase().includes(q) ||\r\n      getClinicName(appt.clinicLocationId).toLowerCase().includes(q) ||\r\n      (appt.appointmentType && appt.appointmentType.toLowerCase().includes(q)) ||\r\n      (appt.reasonForVisit && appt.reasonForVisit.toLowerCase().includes(q)) ||\r\n      (appt.status && appt.status.toLowerCase().includes(q)) ||\r\n      (appt.appointmentDate && appt.appointmentDate.toLowerCase().includes(q)) ||\r\n      (appt.startTime && appt.startTime.toLowerCase().includes(q)) ||\r\n      (appt.endTime && appt.endTime.toLowerCase().includes(q))\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={`card ${isDarkMode ? 'dark-mode' : ''}`}>\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"menu-icon fas fa-calendar-check\"></i> Appointments</h4>\r\n      </div>\r\n\r\n      {/* Widget summary */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total</Typography>\r\n          <Typography variant=\"h6\">{totalAppointments}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Completed</Typography>\r\n          <Typography variant=\"h6\">{completed}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Pending</Typography>\r\n          <Typography variant=\"h6\">{pending}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#f3e5f5', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Confirmed</Typography>\r\n          <Typography variant=\"h6\">{confirmed}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"error.main\">No-show</Typography>\r\n          <Typography variant=\"h6\">{noShow}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Appointments by Status</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Appointments per Day</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Status Trends Over Time</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', mb: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<i className=\"fas fa-plus\"></i>}\r\n            data-toggle=\"modal\"\r\n            data-target=\"#addAppointment\"\r\n            style={{ minWidth: 150 }}\r\n          >\r\n            Add Appointment\r\n          </Button>\r\n          <Button\r\n            onClick={handleExport}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ minWidth: 120 }}\r\n          >\r\n            Export\r\n          </Button>\r\n          <Button\r\n            onClick={handleBulkArchive}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ minWidth: 160 }}\r\n          >\r\n            Archive Selected\r\n          </Button>\r\n          <Button\r\n            onClick={resfresh}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ minWidth: 120 }}\r\n            startIcon={<i className=\"fas fa-sync-alt\"></i>}\r\n          >\r\n            Reload\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* View Mode Buttons */}\r\n        <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\r\n          <Button\r\n            variant={viewMode === 'table' ? 'contained' : 'outlined'}\r\n            color=\"primary\"\r\n            onClick={() => setViewMode('table')}\r\n            size=\"small\"\r\n          >\r\n            Table View\r\n          </Button>\r\n          <Button\r\n            variant={viewMode === 'cards' ? 'contained' : 'outlined'}\r\n            color=\"primary\"\r\n            onClick={() => setViewMode('cards')}\r\n            size=\"small\"\r\n          >\r\n            Card View\r\n          </Button>\r\n          <Button\r\n            variant={viewMode === 'calendar' ? 'contained' : 'outlined'}\r\n            color=\"primary\"\r\n            onClick={() => setViewMode('calendar')}\r\n            size=\"small\"\r\n          >\r\n            Calendar View\r\n          </Button>\r\n          <Button\r\n            variant={viewMode === 'list' ? 'contained' : 'outlined'}\r\n            color=\"primary\"\r\n            onClick={() => setViewMode('list')}\r\n            size=\"small\"\r\n          >\r\n            List View\r\n          </Button>\r\n          <Button\r\n            variant={viewMode === 'timeline' ? 'contained' : 'outlined'}\r\n            color=\"primary\"\r\n            onClick={() => setViewMode('timeline')}\r\n            size=\"small\"\r\n          >\r\n            Timeline View\r\n          </Button>\r\n        </Box>\r\n\r\n        <TextField\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={searchQuery}\r\n          onChange={handleSearch}\r\n        />\r\n\r\n        \r\n\r\n        {loading ? <LinearProgress /> : (\r\n          <div style={{ width: '100%' }}>\r\n            {viewMode === 'table' ? (\r\n              <DataGrid\r\n                rows={filteredAppointments}\r\n                getRowId={(row) => row.id}\r\n                columns={columns}\r\n                pageSize={10}\r\n                rowsPerPageOptions={[10, 15, 20]}\r\n                checkboxSelection\r\n                autoHeight\r\n                components={{ Toolbar: GridToolbar }}\r\n              />\r\n            ) : viewMode === 'cards' ? (\r\n              renderCardView()\r\n            ) : viewMode === 'calendar' ? (\r\n              renderCalendarView()\r\n            ) : viewMode === 'list' ? (\r\n              renderListView()\r\n            ) : (\r\n              renderTimelineView()\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Appointment Modal */}\r\n        <div className=\"modal fade\" id=\"addAppointment\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">New Appointment</h5>\r\n                <button onClick={resfresh} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n               <AddAppointment closeModal={closeModalAdd} doctors={doctors} patients={patients} clinics={clinics} onSuccess={resfresh} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button onClick={resfresh} ref={closeButtonAdd} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Appointment Modal */}\r\n        <Dialog open={editModalOpen} onClose={() => setEditModalOpen(false)} maxWidth=\"lg\" fullWidth>\r\n          <DialogTitle>Edit Appointment</DialogTitle>\r\n          <DialogContent>\r\n            <EditAppointment\r\n              appointment={updatedItem}\r\n              closeModal={() => setEditModalOpen(false)}\r\n              doctors={doctors}\r\n              patients={patients}\r\n              clinics={clinics}\r\n              onSuccess={() => {\r\n                resfresh();\r\n                setEditModalOpen(false);\r\n              }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditModalOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* View Appointment Modal */}\r\n        <ViewAppointment\r\n          open={viewModalOpen}\r\n          onClose={() => setViewModalOpen(false)}\r\n          appointment={viewedItem}\r\n          getPatientName={getPatientName}\r\n          getDoctorName={getDoctorName}\r\n          getClinicName={getClinicName}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './CaseStudies.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LinearProgress, Tooltip, Button, TextField } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport CurrentUser from '../../main/config/user';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { saveAs } from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport const CaseStudies = () => {\r\n  const [caseStudies, setCaseStudies] = useState([]);\r\n  const [filteredCaseStudies, setFilteredCaseStudies] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const forceUpdate = useForceUpdate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const retrieveCaseStudies = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/casestudies`)\r\n      .then(response => {\r\n        setCaseStudies(response.data);\r\n        setFilteredCaseStudies(response.data);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const resfresh = () => {\r\n    retrieveCaseStudies();\r\n    forceUpdate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveCaseStudies();\r\n  }, []);\r\n\r\n  const update = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data);\r\n    resfresh();\r\n  };\r\n\r\n  const remove = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(CurrentUser.DELETE_MSG)) {\r\n      axios.delete(`${BASE_URL}/casestudies/${id}`).then(() => resfresh());\r\n    }\r\n  };\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length === 1) {\r\n      setUpdatedItemId(e[0]);\r\n      const selected = caseStudies.find(item => item.id === e[0]);\r\n      setUpdatedItem(selected);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const query = e.target.value.toLowerCase();\r\n    setSearchQuery(query);\r\n    const filtered = caseStudies.filter(cs =>\r\n      cs.title.toLowerCase().includes(query) ||\r\n      cs.description.toLowerCase().includes(query)\r\n    );\r\n    setFilteredCaseStudies(filtered);\r\n  };\r\n\r\n  const exportToCSV = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(filteredCaseStudies);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'CaseStudies');\r\n    const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], { type: 'application/octet-stream' });\r\n    saveAs(data, 'CaseStudies.xlsx');\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 90 },\r\n    { field: 'patientId', headerName: 'Patient ID', width: 200 },\r\n    { field: 'doctorId', headerName: 'Doctor ID', width: 200 },\r\n    { field: 'title', headerName: 'Title', width: 200 },\r\n    { field: 'description', headerName: 'Description', width: 250 },\r\n    {\r\n      field: 'proceduresPerformed',\r\n      headerName: 'Procedures',\r\n      width: 200,\r\n      renderCell: (params) => params.value.join(', ')\r\n    },\r\n    { field: 'outcome', headerName: 'Outcome', width: 250 },\r\n    {\r\n      field: 'researchFiles',\r\n      headerName: 'Files',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Tooltip title=\"View Research File\">\r\n          <Button href={params.value[0]} target=\"_blank\" rel=\"noopener noreferrer\" variant=\"contained\" color=\"primary\">\r\n            View PDF\r\n          </Button>\r\n        </Tooltip>\r\n      )\r\n    },\r\n    { field: 'status', headerName: 'Status', width: 130 },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Created At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'updatedAt',\r\n      headerName: 'Updated At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"menu-icon fas fa-file-medical-alt\"></i> Case Studies</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <div style={{ marginBottom: '20px', display: 'flex', justifyContent: 'space-between' }}>\r\n          <TextField\r\n            label=\"Search Case Studies\"\r\n            variant=\"outlined\"\r\n            value={searchQuery}\r\n            onChange={handleSearch}\r\n            style={{ width: '300px' }}\r\n          />\r\n          <Button onClick={exportToCSV} variant=\"contained\" color=\"primary\">\r\n            Export to CSV\r\n          </Button>\r\n        </div>\r\n\r\n        <Tooltip title=\"Create New Case Study\">\r\n          <Button type=\"button\" variant=\"contained\" color=\"success\" data-toggle=\"modal\" data-target=\"#addCaseStudy\">\r\n            <i className=\"far fa-plus-square\"></i> Create\r\n          </Button>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit Selected Case Study\">\r\n          <Button onClick={e => update(e, updatedItem)} type=\"button\" variant=\"contained\" color=\"warning\" data-toggle=\"modal\" data-target=\"#editCaseStudy\">\r\n            <i className=\"fas fa-edit\"></i> Edit\r\n          </Button>\r\n        </Tooltip>\r\n        <Tooltip title=\"Remove Selected Case Study\">\r\n          <Button onClick={e => remove(e, updatedItemId)} type=\"button\" variant=\"contained\" color=\"error\">\r\n            <i className=\"fas fa-trash-alt\"></i> Remove\r\n          </Button>\r\n        </Tooltip>\r\n\r\n        {loading ? <LinearProgress /> : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredCaseStudies}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[6]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Case Study Modal */}\r\n        <div className=\"modal fade\" id=\"addCaseStudy\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">New Case Study</h5>\r\n                <button onClick={resfresh} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* AddCaseStudy component can be added here */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <Button onClick={resfresh} ref={closeButtonAdd} type=\"button\" variant=\"contained\" color=\"secondary\" data-dismiss=\"modal\">Close</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Case Study Modal */}\r\n        <div className=\"modal fade\" id=\"editCaseStudy\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Case Study</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* EditCaseStudy component can be added here */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <Button onClick={resfresh} ref={closeButtonEdit} type=\"button\" variant=\"contained\" color=\"secondary\" data-dismiss=\"modal\">Close</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseStudies;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Chip, Stack, Box } from '@mui/material';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst plans = ['Basic', 'Standard', 'Premium'];\r\nconst statuses = ['Active', 'Inactive', 'Expired', 'Cancelled'];\r\nconst defaultBenefits = [\r\n  \"Free Cleanings\",\r\n  \"Discounted Treatments\",\r\n  \"Priority Booking\",\r\n  \"Emergency Support\"\r\n];\r\n\r\n // Adjust as needed\r\n\r\nconst CreateMembership = ({ onSuccess, onCancel }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '', // Add patientId to form state\r\n    membershipPlan: 'Basic',\r\n    benefits: [],\r\n    validityPeriod: {\r\n      startDate: '',\r\n      endDate: ''\r\n    },\r\n    paymentStatus: 'Active',\r\n    renewalDate: '',\r\n    lastPaymentAmount: 0,\r\n    lastPaymentDate: '',\r\n  });\r\n  const [benefitInput, setBenefitInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    if (name.startsWith('validityPeriod.')) {\r\n      setForm(f => ({\r\n        ...f,\r\n        validityPeriod: {\r\n          ...f.validityPeriod,\r\n          [name.split('.')[1]]: value\r\n        }\r\n      }));\r\n    } else {\r\n      setForm(f => ({ ...f, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleAddBenefit = () => {\r\n    if (benefitInput && !form.benefits.includes(benefitInput)) {\r\n      setForm(f => ({ ...f, benefits: [...f.benefits, benefitInput] }));\r\n      setBenefitInput('');\r\n    }\r\n  };\r\n\r\n  const handleRemoveBenefit = (benefit) => {\r\n    setForm(f => ({ ...f, benefits: f.benefits.filter(b => b !== benefit) }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const objToSend = {\r\n      membershipPlan: form.membershipPlan,\r\n      benefits: form.benefits,\r\n      validityPeriod: {\r\n        startDate: form.validityPeriod.startDate,\r\n        endDate: form.validityPeriod.endDate\r\n      },\r\n      paymentStatus: form.paymentStatus,\r\n      renewalDate: form.renewalDate,\r\n      lastPaymentAmount: form.lastPaymentAmount,\r\n      lastPaymentDate: form.lastPaymentDate,\r\n    };\r\n    console.log('Membership object to send:', objToSend); // Show object before sending\r\n    try {\r\n      await axios.post(`${BASE_URL}/memberships`, objToSend);\r\n      if (onSuccess) onSuccess();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Membership Plan\"\r\n        name=\"membershipPlan\"\r\n        value={form.membershipPlan}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {plans.map(plan => (\r\n          <MenuItem key={plan} value={plan}>{plan}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <Box sx={{ my: 2 }}>\r\n        <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\">\r\n          {form.benefits.map(b => (\r\n            <Chip\r\n              key={b}\r\n              label={b}\r\n              onDelete={() => handleRemoveBenefit(b)}\r\n              sx={{ mb: 1 }}\r\n            />\r\n          ))}\r\n        </Stack>\r\n        <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mt: 1 }}>\r\n          <TextField\r\n            label=\"Add Benefit\"\r\n            value={benefitInput}\r\n            onChange={e => setBenefitInput(e.target.value)}\r\n            size=\"small\"\r\n            onKeyDown={e => { if (e.key === 'Enter') { e.preventDefault(); handleAddBenefit(); } }}\r\n          />\r\n          <Button variant=\"outlined\" onClick={handleAddBenefit} size=\"small\">Add</Button>\r\n          <Button\r\n            variant=\"text\"\r\n            size=\"small\"\r\n            onClick={() => setForm(f => ({ ...f, benefits: [...f.benefits, ...defaultBenefits.filter(db => !f.benefits.includes(db)) ] }))}\r\n          >\r\n            Add Defaults\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <TextField\r\n          label=\"Start Date\"\r\n          name=\"validityPeriod.startDate\"\r\n          type=\"date\"\r\n          value={form.validityPeriod.startDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"End Date\"\r\n          name=\"validityPeriod.endDate\"\r\n          type=\"date\"\r\n          value={form.validityPeriod.endDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n      </Stack>\r\n      <TextField\r\n        select\r\n        label=\"Payment Status\"\r\n        name=\"paymentStatus\"\r\n        value={form.paymentStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {statuses.map(status => (\r\n          <MenuItem key={status} value={status}>{status}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Renewal Date\"\r\n        name=\"renewalDate\"\r\n        type=\"date\"\r\n        value={form.renewalDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        margin=\"normal\"\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        label=\"Last Payment Amount\"\r\n        name=\"lastPaymentAmount\"\r\n        type=\"number\"\r\n        value={form.lastPaymentAmount}\r\n        onChange={handleChange}\r\n        margin=\"normal\"\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        label=\"Last Payment Date\"\r\n        name=\"lastPaymentDate\"\r\n        type=\"date\"\r\n        value={form.lastPaymentDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        margin=\"normal\"\r\n        fullWidth\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Create'}\r\n        </Button>\r\n        {onCancel && (\r\n          <Button variant=\"outlined\" onClick={onCancel} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateMembership;","import React, { useState, useEffect } from 'react';\r\nimport { TextField, MenuItem, Stack, Button } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n // Replace with your API URL\r\n\r\nconst planOptions = ['Premium', 'Standard', 'Basic'];\r\nconst statusOptions = ['Active', 'Inactive', 'Expired', 'Cancelled'];\r\n\r\nconst EditMembership = ({ membership, closeModal, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    membershipPlan: '',\r\n    paymentStatus: '',\r\n    benefits: [],\r\n    validityPeriod: { startDate: '', endDate: '' },\r\n    renewalDate: '',\r\n    lastPaymentAmount: '',\r\n    lastPaymentDate: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (membership) {\r\n      setForm({\r\n        membershipPlan: membership.membershipPlan || '',\r\n        paymentStatus: membership.paymentStatus || '',\r\n        benefits: membership.benefits || [],\r\n        validityPeriod: {\r\n          startDate: membership.validityPeriod?.startDate || '',\r\n          endDate: membership.validityPeriod?.endDate || ''\r\n        },\r\n        renewalDate: membership.renewalDate || '',\r\n        lastPaymentAmount: membership.lastPaymentAmount || '',\r\n        lastPaymentDate: membership.lastPaymentDate || ''\r\n      });\r\n    }\r\n  }, [membership]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    if (name === 'startDate' || name === 'endDate') {\r\n      setForm(f => ({\r\n        ...f,\r\n        validityPeriod: { ...f.validityPeriod, [name]: value }\r\n      }));\r\n    } else if (name === 'benefits') {\r\n      setForm(f => ({\r\n        ...f,\r\n        benefits: value.split(',').map(b => b.trim())\r\n      }));\r\n    } else {\r\n      setForm(f => ({ ...f, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      ...form,\r\n      id: membership.id,\r\n      validityPeriod: {\r\n        startDate: form.validityPeriod.startDate,\r\n        endDate: form.validityPeriod.endDate\r\n      }\r\n    };\r\n    await axios.put(`${BASE_URL}/memberships/${membership.id}`, data);\r\n    if (onSuccess) onSuccess();\r\n    if (closeModal) closeModal();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Membership Plan\"\r\n        name=\"membershipPlan\"\r\n        value={form.membershipPlan}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {planOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Payment Status\"\r\n        name=\"paymentStatus\"\r\n        value={form.paymentStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {statusOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Benefits (comma separated)\"\r\n        name=\"benefits\"\r\n        value={form.benefits.join(', ')}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n        <TextField\r\n          label=\"Start Date\"\r\n          name=\"startDate\"\r\n          type=\"date\"\r\n          value={form.validityPeriod.startDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"End Date\"\r\n          name=\"endDate\"\r\n          type=\"date\"\r\n          value={form.validityPeriod.endDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n        />\r\n      </Stack>\r\n      <TextField\r\n        label=\"Renewal Date\"\r\n        name=\"renewalDate\"\r\n        type=\"date\"\r\n        value={form.renewalDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Last Payment Amount\"\r\n        name=\"lastPaymentAmount\"\r\n        type=\"number\"\r\n        value={form.lastPaymentAmount}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Last Payment Date\"\r\n        name=\"lastPaymentDate\"\r\n        type=\"date\"\r\n        value={form.lastPaymentDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Save Changes\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditMembership;","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, IconButton, Menu, MenuItem, Chip, Stack, Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Divider, Box } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport CreateMembership from './CreateMembership';\r\nimport EditMembership from './EditMembership';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n\r\nconst planColors = {\r\n  Premium: 'success',\r\n  Standard: 'primary',\r\n  Basic: 'default'\r\n};\r\n\r\nconst statusColors = {\r\n  Active: 'success',\r\n  Inactive: 'default',\r\n  Expired: 'warning',\r\n  Cancelled: 'error'\r\n};\r\n\r\nconst Memberships = () => {\r\n  const [memberships, setMemberships] = useState([]);\r\n  const [selectedMembership, setSelectedMembership] = useState(null);\r\n  const [selectedMembershipId, setSelectedMembershipId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // For actions menu\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Add state for view dialog\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\r\n  const [viewMembership, setViewMembership] = useState(null);\r\n\r\n  const closeButtonAdd = useRef(null);\r\n  const closeButtonEdit = useRef(null);\r\n\r\n  // Fetch memberships from /memberships endpoint\r\n  const fetchMemberships = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/memberships`)\r\n      .then(res => setMemberships(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMemberships();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchMemberships();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const membership = memberships.find(m => m.id === ids[0]);\r\n      setSelectedMembership(membership);\r\n      setSelectedMembershipId(ids[0]);\r\n    } else {\r\n      setSelectedMembership(null);\r\n      setSelectedMembershipId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedMembershipId && window.confirm('Are you sure you want to delete this membership?')) {\r\n      axios.delete(`${BASE_URL}/memberships/${selectedMembershipId}`)\r\n        .then(() => refresh());\r\n    }\r\n  };\r\n\r\n  // Actions menu handlers\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  // Edit from actions menu\r\n  const handleEditMenu = () => {\r\n    setSelectedMembership(actionRow);\r\n    setSelectedMembershipId(actionRow.id);\r\n    document.querySelector('[data-target=\"#editMembershipModal\"]').click();\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleDeleteRow = () => {\r\n    if (actionRow && window.confirm('Are you sure you want to delete this membership?')) {\r\n      axios.delete(`${BASE_URL}/memberships/${actionRow.id}`)\r\n        .then(() => refresh());\r\n    }\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleSuccess = () => {\r\n    setOpen(false);\r\n    // Optionally refresh memberships list here\r\n  };\r\n\r\n  // Add handler for view action\r\n  const handleViewMenu = () => {\r\n    setViewMembership(actionRow);\r\n    setViewDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'membershipPlan',\r\n      headerName: 'Plan',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={planColors[params.value] || 'default'}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentStatus',\r\n      headerName: 'Payment Status',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={statusColors[params.value] || 'default'}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n        />\r\n      )\r\n    },\r\n    { \r\n      field: 'benefits', \r\n      headerName: 'Benefits', \r\n      width: 300,\r\n      renderCell: (params) => (\r\n        <Stack direction=\"row\" spacing={0.5} flexWrap=\"wrap\">\r\n          {params.value?.map((b, i) => (\r\n            <Chip key={i} label={b} size=\"small\" variant=\"outlined\" />\r\n          ))}\r\n        </Stack>\r\n      )\r\n    },\r\n    {\r\n      field: 'validityStart',\r\n      headerName: 'Start Date',\r\n      width: 140,\r\n      valueGetter: (params) => params.row.validityPeriod?.startDate,\r\n      renderCell: (params) =>\r\n        params.value ? (\r\n          <Chip\r\n            label={new Date(params.value).toLocaleDateString()}\r\n            color=\"info\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          />\r\n        ) : ''\r\n    },\r\n    {\r\n      field: 'validityEnd',\r\n      headerName: 'End Date',\r\n      width: 140,\r\n      valueGetter: (params) => params.row.validityPeriod?.endDate,\r\n      renderCell: (params) =>\r\n        params.value ? (\r\n          <Chip\r\n            label={new Date(params.value).toLocaleDateString()}\r\n            color=\"warning\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          />\r\n        ) : ''\r\n    },\r\n    {\r\n      field: 'renewalDate',\r\n      headerName: 'Renewal Date',\r\n      width: 140,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleDateString() : ''\r\n    },\r\n    {\r\n      field: 'lastPaymentAmount',\r\n      headerName: 'Last Payment ($)',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value ? `$${params.value}` : '$0'}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'lastPaymentDate',\r\n      headerName: 'Last Payment Date',\r\n      width: 160,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleDateString() : ''\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 90,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"action-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleActionClick(event, params.row)}\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-id-card-alt\"></i> Memberships</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            startIcon={<i className=\"far fa-plus-square\"></i>}\r\n            onClick={() => setOpen(true)}\r\n          >\r\n            Add Membership\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            startIcon={<i className=\"fas fa-edit\"></i>}\r\n            data-toggle=\"modal\"\r\n            data-target=\"#editMembershipModal\"\r\n            disabled={!selectedMembership}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n            onClick={handleDelete}\r\n            disabled={!selectedMembershipId}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Stack>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={memberships}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              id=\"action-menu\"\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleViewMenu}>View</MenuItem>\r\n              <MenuItem onClick={handleEditMenu}>Edit</MenuItem>\r\n              <MenuItem onClick={handleDeleteRow}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Edit Membership Modal */}\r\n        <div className=\"modal fade\" id=\"editMembershipModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Membership</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <EditMembership\r\n                  membership={selectedMembership}\r\n                  closeModal={() => closeButtonEdit.current.click()}\r\n                  onSuccess={refresh}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonEdit}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Dialog open={open} onClose={() => setOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Create Membership</DialogTitle>\r\n          <DialogContent>\r\n            <CreateMembership onSuccess={handleSuccess} onCancel={() => setOpen(false)} />\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* View Membership Dialog */}\r\n        <Dialog open={viewDialogOpen} onClose={() => setViewDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n              <i className=\"fas fa-id-card-alt\" style={{ color: '#1976d2', fontSize: 22 }} />\r\n              <span>Membership Details</span>\r\n            </Stack>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {viewMembership ? (\r\n              <Box\r\n                sx={{\r\n                  bgcolor: '#fafdff',\r\n                  borderRadius: 2,\r\n                  boxShadow: 1,\r\n                  p: { xs: 2, sm: 3 },\r\n                  minWidth: 320,\r\n                  minHeight: 200\r\n                }}\r\n              >\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip\r\n                    label={viewMembership.membershipPlan}\r\n                    color={planColors[viewMembership.membershipPlan] || 'default'}\r\n                    icon={<i className=\"fas fa-crown\" />}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={viewMembership.paymentStatus}\r\n                    color={statusColors[viewMembership.paymentStatus] || 'default'}\r\n                    icon={<i className=\"fas fa-credit-card\" />}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Status: ${viewMembership.status || '-'}`}\r\n                    color={statusColors[viewMembership.status] || 'default'}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle1\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Benefits:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewMembership.benefits || []).map((b, i) => (\r\n                    <Chip key={i} label={b} color=\"info\" variant=\"outlined\" size=\"small\" sx={{ mb: 1 }} />\r\n                  ))}\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2 }}>\r\n                  <Chip\r\n                    label={`Start: ${viewMembership.validityPeriod?.startDate ? new Date(viewMembership.validityPeriod.startDate).toLocaleDateString() : '-'}`}\r\n                    color=\"info\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`End: ${viewMembership.validityPeriod?.endDate ? new Date(viewMembership.validityPeriod.endDate).toLocaleDateString() : '-'}`}\r\n                    color=\"warning\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Renewal: ${viewMembership.renewalDate ? new Date(viewMembership.renewalDate).toLocaleDateString() : '-'}`}\r\n                    color=\"primary\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2 }}>\r\n                  <Chip\r\n                    label={`Last Payment: ${viewMembership.lastPaymentAmount ? `$${viewMembership.lastPaymentAmount}` : '-'}`}\r\n                    color=\"success\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Last Payment Date: ${viewMembership.lastPaymentDate ? new Date(viewMembership.lastPaymentDate).toLocaleDateString() : '-'}`}\r\n                    color=\"default\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No membership selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewDialogOpen(false)} color=\"secondary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Memberships;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst operationTypes = ['Surgical', 'Non-Surgical', 'Diagnostic', 'Other'];\r\nconst anesthesiaTypes = ['Local', 'General', 'Sedation', 'None'];\r\nconst followUpOptions = ['Yes', 'No'];\r\nconst statusOptions = ['Scheduled', 'Completed', 'Cancelled'];\r\n\r\nconst AddOperation = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    operationType: '',\r\n    procedureName: '',\r\n    operationDate: '',\r\n    duration: '',\r\n    anesthesiaType: '',\r\n    complications: '',\r\n    postOperationInstructions: '',\r\n    followUpRequired: 'No',\r\n    followUpDate: '',\r\n    status: 'Scheduled'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      operationType: form.operationType,\r\n      procedureName: form.procedureName,\r\n      operationDate: new Date(form.operationDate).toISOString(),\r\n      duration: Number(form.duration),\r\n      anesthesiaType: form.anesthesiaType,\r\n      complications: form.complications,\r\n      postOperationInstructions: form.postOperationInstructions,\r\n      followUpRequired: form.followUpRequired,\r\n      followUpDate: form.followUpDate ? new Date(form.followUpDate).toISOString() : null,\r\n      status: form.status,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/operations`, data);\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          select\r\n          label=\"Operation Type\"\r\n          name=\"operationType\"\r\n          value={form.operationType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {operationTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Procedure Name\"\r\n          name=\"procedureName\"\r\n          value={form.procedureName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Operation Date & Time\"\r\n          name=\"operationDate\"\r\n          type=\"datetime-local\"\r\n          value={form.operationDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Duration (minutes)\"\r\n          name=\"duration\"\r\n          type=\"number\"\r\n          value={form.duration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Anesthesia Type\"\r\n          name=\"anesthesiaType\"\r\n          value={form.anesthesiaType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {anesthesiaTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Complications\"\r\n          name=\"complications\"\r\n          value={form.complications}\r\n          onChange={handleChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Post-Operation Instructions\"\r\n          name=\"postOperationInstructions\"\r\n          value={form.postOperationInstructions}\r\n          onChange={handleChange}\r\n          multiline\r\n          rows={2}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Follow-Up Required\"\r\n          name=\"followUpRequired\"\r\n          value={form.followUpRequired}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {followUpOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        {form.followUpRequired === 'Yes' && (\r\n          <TextField\r\n            label=\"Follow-Up Date & Time\"\r\n            name=\"followUpDate\"\r\n            type=\"datetime-local\"\r\n            value={form.followUpDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            required\r\n            fullWidth\r\n          />\r\n        )}\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Operation'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddOperation;","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst operationTypes = ['Surgical', 'Non-Surgical', 'Diagnostic', 'Other'];\r\nconst anesthesiaTypes = ['Local', 'General', 'Sedation', 'None'];\r\nconst followUpOptions = ['Yes', 'No'];\r\nconst statusOptions = ['Scheduled', 'Completed', 'Cancelled'];\r\n\r\nconst EditOperation = ({ operation, closeModal, onEdit }) => {\r\n  const [form, setForm] = useState({\r\n    operationType: '',\r\n    procedureName: '',\r\n    operationDate: '',\r\n    duration: '',\r\n    anesthesiaType: '',\r\n    complications: '',\r\n    postOperationInstructions: '',\r\n    followUpRequired: 'No',\r\n    followUpDate: '',\r\n    status: 'Scheduled'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (operation) {\r\n      setForm({\r\n        operationType: operation.operationType || '',\r\n        procedureName: operation.procedureName || '',\r\n        operationDate: operation.operationDate ? operation.operationDate.slice(0, 16) : '',\r\n        duration: operation.duration || '',\r\n        anesthesiaType: operation.anesthesiaType || '',\r\n        complications: operation.complications || '',\r\n        postOperationInstructions: operation.postOperationInstructions || '',\r\n        followUpRequired: operation.followUpRequired || 'No',\r\n        followUpDate: operation.followUpDate ? operation.followUpDate.slice(0, 16) : '',\r\n        status: operation.status || 'Scheduled'\r\n      });\r\n    }\r\n  }, [operation]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      operationType: form.operationType,\r\n      procedureName: form.procedureName,\r\n      operationDate: new Date(form.operationDate).toISOString(),\r\n      duration: Number(form.duration),\r\n      anesthesiaType: form.anesthesiaType,\r\n      complications: form.complications,\r\n      postOperationInstructions: form.postOperationInstructions,\r\n      followUpRequired: form.followUpRequired,\r\n      followUpDate: form.followUpDate ? new Date(form.followUpDate).toISOString() : null,\r\n      status: form.status,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/operations/${operation.id}`, data);\r\n      if (onEdit) onEdit(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          select\r\n          label=\"Operation Type\"\r\n          name=\"operationType\"\r\n          value={form.operationType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {operationTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Procedure Name\"\r\n          name=\"procedureName\"\r\n          value={form.procedureName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Operation Date & Time\"\r\n          name=\"operationDate\"\r\n          type=\"datetime-local\"\r\n          value={form.operationDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Duration (minutes)\"\r\n          name=\"duration\"\r\n          type=\"number\"\r\n          value={form.duration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Anesthesia Type\"\r\n          name=\"anesthesiaType\"\r\n          value={form.anesthesiaType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {anesthesiaTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Complications\"\r\n          name=\"complications\"\r\n          value={form.complications}\r\n          onChange={handleChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Post-Operation Instructions\"\r\n          name=\"postOperationInstructions\"\r\n          value={form.postOperationInstructions}\r\n          onChange={handleChange}\r\n          multiline\r\n          rows={2}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Follow-Up Required\"\r\n          name=\"followUpRequired\"\r\n          value={form.followUpRequired}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {followUpOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        {form.followUpRequired === 'Yes' && (\r\n          <TextField\r\n            label=\"Follow-Up Date & Time\"\r\n            name=\"followUpDate\"\r\n            type=\"datetime-local\"\r\n            value={form.followUpDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            required\r\n            fullWidth\r\n          />\r\n        )}\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditOperation;","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, Chip, IconButton, Menu, MenuItem, Button, Dialog, DialogTitle, DialogContent, DialogActions, Box } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddOperation from './AddOperation'; // Make sure this path is correct\r\nimport EditOperation from './EditOperation'; // <-- Import your EditOperation component\r\n\r\nconst Operations = () => {\r\n  const [operations, setOperations] = useState([]);\r\n  const [selectedOperation, setSelectedOperation] = useState(null);\r\n  const [selectedOperationId, setSelectedOperationId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // For actions menu\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Material-UI modal state\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false); // <-- Add edit modal state\r\n\r\n  const fetchOperations = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/operations`)\r\n      .then(res => setOperations(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOperations();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchOperations();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const op = operations.find(op => op.id === ids[0]);\r\n      setSelectedOperation(op);\r\n      setSelectedOperationId(ids[0]);\r\n    } else {\r\n      setSelectedOperation(null);\r\n      setSelectedOperationId(null);\r\n    }\r\n  };\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleActionEdit = () => {\r\n    setSelectedOperation(actionRow);\r\n    setSelectedOperationId(actionRow.id);\r\n    setEditOpen(true); // <-- Open edit modal\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionDelete = () => {\r\n    setSelectedOperation(actionRow);\r\n    setSelectedOperationId(actionRow.id);\r\n    if (actionRow?.id && window.confirm('Are you sure you want to delete this operation?')) {\r\n      axios.delete(`${BASE_URL}/operations/${actionRow.id}`)\r\n        .then(() => refresh());\r\n    }\r\n    handleActionClose();\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'operationType', headerName: 'Type', width: 150 },\r\n    { field: 'procedureName', headerName: 'Procedure', width: 200 },\r\n    {\r\n      field: 'operationDate',\r\n      headerName: 'Date',\r\n      width: 180,\r\n      valueFormatter: params => new Date(params.value).toLocaleString()\r\n    },\r\n    { field: 'duration', headerName: 'Duration (min)', width: 150 },\r\n    { field: 'anesthesiaType', headerName: 'Anesthesia', width: 150 },\r\n    { field: 'complications', headerName: 'Complications', width: 200 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Completed'\r\n              ? 'success'\r\n              : params.value === 'Scheduled'\r\n              ? 'primary'\r\n              : params.value === 'Cancelled'\r\n              ? 'error'\r\n              : 'default'\r\n          }\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'followUpRequired',\r\n      headerName: 'Follow-Up Required',\r\n      width: 170\r\n    },\r\n    {\r\n      field: 'followUpDate',\r\n      headerName: 'Follow-Up Date',\r\n      width: 180,\r\n      valueFormatter: params => params.value ? new Date(params.value).toLocaleString() : ''\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-procedures\"></i> Operations</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        {/* Material-UI Add Operation Button */}\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"success\"\r\n          sx={{ mb: 2, mr: 2 }}\r\n          onClick={() => setAddOpen(true)}\r\n          startIcon={<i className=\"far fa-plus-square\"></i>}\r\n        >\r\n          Add Operation\r\n        </Button>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={operations}\r\n              getRowId={row => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleActionEdit}>Edit</MenuItem>\r\n              <MenuItem onClick={handleActionDelete}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Material-UI Add Operation Dialog */}\r\n        <Dialog open={addOpen} onClose={() => setAddOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Add New Operation</DialogTitle>\r\n          <DialogContent>\r\n            <AddOperation\r\n              closeModal={() => setAddOpen(false)}\r\n              onCreate={refresh}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAddOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Material-UI Edit Operation Dialog */}\r\n        <Dialog open={editOpen} onClose={() => setEditOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Edit Operation</DialogTitle>\r\n          <DialogContent>\r\n            <EditOperation\r\n              operation={selectedOperation}\r\n              closeModal={() => setEditOpen(false)}\r\n              onEdit={refresh}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Operations;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, TextField, Button, Stack, Dialog, DialogTitle, DialogContent, DialogActions, Typography, Divider, IconButton, Menu, MenuItem, Box, Chip, Avatar } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst initialForm = {\r\n  name: '',\r\n  address: '',\r\n  city: '',\r\n  state: '',\r\n  zipCode: '',\r\n  country: '',\r\n  contactNumber: '',\r\n  email: '',\r\n  workingHours: {},\r\n  doctorsAvailable: [],\r\n};\r\n\r\nconst Clinic = () => {\r\n  const [clinics, setClinics] = useState([]);\r\n  const [selectedClinic, setSelectedClinic] = useState(null);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [form, setForm] = useState(initialForm);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [menuRowId, setMenuRowId] = useState(null);\r\n\r\n  const closeButtonAdd = useRef(null);\r\n  const closeButtonEdit = useRef(null);\r\n\r\n  const fetchClinics = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/clinics`)\r\n      .then(res => setClinics(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchClinics();\r\n  }, []);\r\n\r\n  const refresh = () => fetchClinics();\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const clinic = clinics.find(c => c.id === ids[0]);\r\n      setSelectedClinic(clinic);\r\n      setSelectedId(ids[0]);\r\n    } else {\r\n      setSelectedClinic(null);\r\n      setSelectedId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedId && window.confirm('Are you sure you want to delete this clinic?')) {\r\n      axios.delete(`${BASE_URL}/clinics/${selectedId}`).then(() => refresh());\r\n    }\r\n  };\r\n\r\n  // Create Clinic Feature\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleAddClinic = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    axios.post(`${BASE_URL}/clinics`, form)\r\n      .then(() => {\r\n        setAddOpen(false);\r\n        setForm(initialForm);\r\n        refresh();\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const handleViewClinic = (clinic) => {\r\n    setSelectedClinic(clinic);\r\n    setViewOpen(true);\r\n  };\r\n\r\n  const handleMenuOpen = (event, rowId) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setMenuRowId(rowId);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setMenuRowId(null);\r\n  };\r\n\r\n  const handleMenuEdit = () => {\r\n    const clinic = clinics.find(c => c.id === menuRowId);\r\n    setSelectedClinic(clinic);\r\n    setForm(clinic); // Pre-fill form with clinic data\r\n    setSelectedId(menuRowId);\r\n    setEditOpen(true);\r\n    handleMenuClose();\r\n  };\r\n\r\n  const handleMenuDelete = () => {\r\n    setSelectedId(menuRowId);\r\n    handleDelete();\r\n    handleMenuClose();\r\n  };\r\n\r\n  const handleMenuView = () => {\r\n    const clinic = clinics.find(c => c.id === menuRowId);\r\n    setSelectedClinic(clinic);\r\n    setViewOpen(true);\r\n    handleMenuClose();\r\n  };\r\n\r\n  // Edit Clinic handler\r\n  const handleEditClinic = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    axios.put(`${BASE_URL}/clinics/${selectedId}`, form)\r\n      .then(() => {\r\n        setEditOpen(false);\r\n        setForm(initialForm);\r\n        refresh();\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'name', headerName: 'Clinic Name', width: 220 },\r\n    { field: 'address', headerName: 'Address', width: 250 },\r\n    {\r\n      field: 'city',\r\n      headerName: 'City',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"primary\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'state',\r\n      headerName: 'State',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"info\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    { \r\n      field: 'zipCode', \r\n      headerName: 'Zip Code', \r\n      width: 110 \r\n    },\r\n    {\r\n      field: 'country',\r\n      headerName: 'Country',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"success\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'contactNumber',\r\n      headerName: 'Contact Number',\r\n      width: 160,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"secondary\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'email',\r\n      headerName: 'Email',\r\n      width: 220,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"default\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'workingHours',\r\n      headerName: 'Working Hours',\r\n      width: 400,\r\n      renderCell: (params) => {\r\n        const wh = params.value || {};\r\n        return (\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n            {Object.entries(wh).map(([day, hours]) => (\r\n              <Chip\r\n                key={day}\r\n                label={`${day.charAt(0).toUpperCase() + day.slice(1)}: ${hours}`}\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                sx={{ mb: 0.5 }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"clinic-row-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(e) => handleMenuOpen(e, params.row.id)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-clinic-medical\"></i> Clinics</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          startIcon={<i className=\"far fa-plus-square\"></i>}\r\n          onClick={() => setAddOpen(true)}\r\n          sx={{ mr: 1 }}\r\n        >\r\n          Add Clinic\r\n        </Button>\r\n\r\n       \r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 480, width: '100%', marginTop: 10 }}>\r\n            <DataGrid\r\n              rows={clinics}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Clinic Modal */}\r\n        {addOpen && (\r\n          <Dialog open={addOpen} onClose={() => setAddOpen(false)} maxWidth=\"md\" fullWidth>\r\n            <form onSubmit={handleAddClinic}>\r\n              <DialogTitle>Add Clinic</DialogTitle>\r\n              <DialogContent dividers>\r\n                <Stack spacing={2}>\r\n                  <TextField label=\"Clinic Name\" name=\"name\" value={form.name} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"Address\" name=\"address\" value={form.address} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"City\" name=\"city\" value={form.city} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"State\" name=\"state\" value={form.state} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"Zip Code\" name=\"zipCode\" value={form.zipCode} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"Country\" name=\"country\" value={form.country} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"Contact Number\" name=\"contactNumber\" value={form.contactNumber} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"Email\" name=\"email\" value={form.email} onChange={handleFormChange} required fullWidth />\r\n                  {/* Add more fields for workingHours and doctorsAvailable if needed */}\r\n                </Stack>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n                  {loading ? 'Saving...' : 'Create Clinic'}\r\n                </Button>\r\n                <Button variant=\"outlined\" onClick={() => setAddOpen(false)} disabled={loading}>\r\n                  Cancel\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n          </Dialog>\r\n        )}\r\n\r\n        {/* View Clinic Modal */}\r\n        <Dialog open={viewOpen} onClose={() => setViewOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n              <Avatar sx={{ bgcolor: \"#1976d2\", width: 48, height: 48 }}>\r\n                <i className=\"fas fa-clinic-medical\" style={{ fontSize: 28, color: \"#fff\" }}></i>\r\n              </Avatar>\r\n              <Typography variant=\"h5\" color=\"primary\">{selectedClinic?.name || \"Clinic Details\"}</Typography>\r\n            </Box>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            {selectedClinic ? (\r\n              <Box sx={{ p: 2 }}>\r\n                <Stack spacing={2}>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">General Info</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Typography><b>Address:</b> {selectedClinic.address}</Typography>\r\n                    <Typography><b>City:</b> {selectedClinic.city}</Typography>\r\n                    <Typography><b>State:</b> {selectedClinic.state}</Typography>\r\n                    <Typography><b>Zip Code:</b> {selectedClinic.zipCode}</Typography>\r\n                    <Typography><b>Country:</b> {selectedClinic.country}</Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">Contact</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Typography><b>Contact Number:</b> <Chip label={selectedClinic.contactNumber} color=\"info\" /></Typography>\r\n                    <Typography><b>Email:</b> <Chip label={selectedClinic.email} color=\"success\" /></Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">Working Hours</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Box component=\"ul\" sx={{ pl: 2, mb: 0 }}>\r\n                      {selectedClinic.workingHours && Object.entries(selectedClinic.workingHours).map(([day, hours]) => (\r\n                        <li key={day}>\r\n                          <Chip label={`${day.charAt(0).toUpperCase() + day.slice(1)}: ${hours}`} color=\"primary\" sx={{ mr: 1, mb: 1 }} />\r\n                        </li>\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      <b>Created At:</b> {selectedClinic.createdAt ? new Date(selectedClinic.createdAt).toLocaleString() : '-'}<br />\r\n                      <b>Updated At:</b> {selectedClinic.updatedAt ? new Date(selectedClinic.updatedAt).toLocaleString() : '-'}\r\n                    </Typography>\r\n                  </Box>\r\n                </Stack>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No clinic selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"primary\" variant=\"contained\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Edit Clinic Modal (MUI Dialog) */}\r\n        <Dialog open={editOpen} onClose={() => setEditOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <form onSubmit={handleEditClinic}>\r\n            <DialogTitle>Edit Clinic</DialogTitle>\r\n            <DialogContent dividers>\r\n              <Stack spacing={2}>\r\n                <TextField label=\"Clinic Name\" name=\"name\" value={form.name} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"Address\" name=\"address\" value={form.address} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"City\" name=\"city\" value={form.city} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"State\" name=\"state\" value={form.state} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"Zip Code\" name=\"zipCode\" value={form.zipCode} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"Country\" name=\"country\" value={form.country} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"Contact Number\" name=\"contactNumber\" value={form.contactNumber} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"Email\" name=\"email\" value={form.email} onChange={handleFormChange} required fullWidth />\r\n                {/* Add more fields for workingHours and doctorsAvailable if needed */}\r\n              </Stack>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"info\" disabled={loading}>\r\n                {loading ? 'Saving...' : 'Update Clinic'}\r\n              </Button>\r\n              <Button variant=\"outlined\" onClick={() => setEditOpen(false)} disabled={loading}>\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n\r\n        <Menu\r\n          id=\"clinic-row-menu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleMenuClose}\r\n        >\r\n          <MenuItem onClick={handleMenuView}>View</MenuItem>\r\n          <MenuItem onClick={handleMenuEdit}>Edit</MenuItem>\r\n          <MenuItem onClick={handleMenuDelete}>Delete</MenuItem>\r\n        </Menu>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clinic;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst severityOptions = ['Mild', 'Moderate', 'Severe'];\r\n\r\nconst CreateDiagnosis = ({ open, onClose, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    diagnosisDate: '',\r\n    condition: '',\r\n    severity: 'Mild',\r\n    notes: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch patients and doctors from backend\r\n    axios.get(`${BASE_URL}/patients`)\r\n      .then(res => setPatients(res.data))\r\n      .catch(() => setPatients([]));\r\n    axios.get(`${BASE_URL}/doctors`)\r\n      .then(res => setDoctors(res.data))\r\n      .catch(() => setDoctors([]));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...form,\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/diagnoses`, data);\r\n      if (onSuccess) onSuccess();\r\n      if (onClose) onClose();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Add Diagnosis</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField\r\n            select\r\n            label=\"Patient\"\r\n            name=\"patientId\"\r\n            value={form.patientId}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          >\r\n            {patients.map(p => (\r\n              <MenuItem key={p.id} value={p.id}>\r\n                {p.fullName || p.name || p.id}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Doctor\"\r\n            name=\"doctorId\"\r\n            value={form.doctorId}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          >\r\n            {doctors.map(d => (\r\n              <MenuItem key={d.id} value={d.id}>\r\n                {d.fullName || d.name || d.id}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Diagnosis Date\"\r\n            name=\"diagnosisDate\"\r\n            type=\"datetime-local\"\r\n            value={form.diagnosisDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Condition\"\r\n            name=\"condition\"\r\n            value={form.condition}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Severity\"\r\n            name=\"severity\"\r\n            value={form.severity}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {severityOptions.map(opt => (\r\n              <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Notes\"\r\n            name=\"notes\"\r\n            value={form.notes}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n              {loading ? 'Saving...' : 'Create Diagnosis'}\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={onClose} disabled={loading}>\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CreateDiagnosis;","import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport {\r\n  LinearProgress, Chip, Menu, MenuItem, Button, IconButton, Box, Typography, Drawer, Snackbar, Alert, TextField, Stack, Skeleton, Tooltip\r\n} from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport { saveAs } from 'file-saver';\r\nimport { Doughnut, Bar, Line, Pie } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport CreateDiagnosis from './CreateDiagnosis';\r\nimport BASE_URL from '../../main/urls/urls';\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\n\r\nconst Diagnoses = () => {\r\n  const [diagnoses, setDiagnoses] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [skeleton, setSkeleton] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [severityFilter, setSeverityFilter] = useState('');\r\n  const [conditionFilter, setConditionFilter] = useState('');\r\n  const [doctorFilter, setDoctorFilter] = useState('');\r\n  const [dateRange, setDateRange] = useState({ from: '', to: '' });\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [drawerDiagnosis, setDrawerDiagnosis] = useState(null);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'info' });\r\n  const [editRowsModel, setEditRowsModel] = useState({});\r\n  const [auditTrail, setAuditTrail] = useState({});\r\n  const [chartFilter, setChartFilter] = useState({ condition: '', severity: '' });\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n\r\n  // Simulate user role\r\n  const userRole = 'admin'; // or 'doctor', 'viewer', etc.\r\n\r\n  // Fetch diagnoses\r\n  const fetchDiagnoses = useCallback(() => {\r\n    setLoading(true);\r\n    setSkeleton(true);\r\n    axios.get(`${BASE_URL}/diagnoses`)\r\n      .then((res) => {\r\n        setDiagnoses(res.data);\r\n        setTimeout(() => setSkeleton(false), 800); // Simulate skeleton loading\r\n      })\r\n      .catch(() => setSnackbar({ open: true, message: 'Failed to load diagnoses', severity: 'error' }))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchDiagnoses();\r\n  }, [fetchDiagnoses]);\r\n\r\n  // Filtering logic\r\n  const filteredDiagnoses = diagnoses.filter(diagnosis => {\r\n    const matchesSeverity = severityFilter ? diagnosis.severity === severityFilter : true;\r\n    const matchesCondition = conditionFilter ? diagnosis.condition === conditionFilter : true;\r\n    const matchesDoctor = doctorFilter ? (diagnosis.doctorName || '').toLowerCase().includes(doctorFilter.toLowerCase()) : true;\r\n    const matchesSearch = Object.values(diagnosis).some(value =>\r\n      value?.toString().toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    const matchesDate =\r\n      (!dateRange.from || new Date(diagnosis.diagnosisDate) >= new Date(dateRange.from)) &&\r\n      (!dateRange.to || new Date(diagnosis.diagnosisDate) <= new Date(dateRange.to));\r\n    const matchesChart =\r\n      (!chartFilter.condition || diagnosis.condition === chartFilter.condition) &&\r\n      (!chartFilter.severity || diagnosis.severity === chartFilter.severity);\r\n    return matchesSeverity && matchesCondition && matchesDoctor && matchesSearch && matchesDate && matchesChart;\r\n  });\r\n\r\n  // Inline editing\r\n  const handleEditRowsModelChange = (model) => {\r\n    setEditRowsModel(model);\r\n  };\r\n  const handleRowEditCommit = async (id) => {\r\n    const changes = editRowsModel[id];\r\n    if (changes) {\r\n      const updated = { ...diagnoses.find(d => d.id === id), ...Object.fromEntries(Object.entries(changes).map(([k, v]) => [k, v.value])) };\r\n      await axios.put(`${BASE_URL}/diagnoses/${id}`, updated);\r\n      setAuditTrail(a => ({\r\n        ...a,\r\n        [id]: [...(a[id] || []), { date: new Date().toISOString(), user: 'CurrentUser', changes }]\r\n      }));\r\n      setSnackbar({ open: true, message: 'Diagnosis updated', severity: 'success' });\r\n      fetchDiagnoses();\r\n    }\r\n  };\r\n\r\n  // Bulk status update\r\n  const handleBulkStatusUpdate = async (status) => {\r\n    await Promise.all(selectedIds.map(id =>\r\n      axios.patch(`${BASE_URL}/diagnoses/${id}`, { severity: status })\r\n    ));\r\n    setSnackbar({ open: true, message: `Marked selected as ${status}`, severity: 'success' });\r\n    fetchDiagnoses();\r\n  };\r\n\r\n  // Export to Excel (simple CSV for demo)\r\n  const exportToExcel = () => {\r\n    const csvContent = [\r\n      Object.keys(diagnoses[0] || {}).join(','),\r\n      ...diagnoses.map(diagnosis => Object.values(diagnosis).join(','))\r\n    ].join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'application/vnd.ms-excel' });\r\n    saveAs(blob, 'diagnoses.xlsx');\r\n    setSnackbar({ open: true, message: 'Exported to Excel', severity: 'success' });\r\n  };\r\n\r\n  // Export to PDF (simple print for demo)\r\n  const exportToPDF = () => {\r\n    window.print();\r\n    setSnackbar({ open: true, message: 'Print dialog opened for PDF export', severity: 'info' });\r\n  };\r\n\r\n  // Chart interactivity\r\n  const handleChartClick = (elems, chart) => {\r\n    if (elems.length > 0) {\r\n      const idx = elems[0].index;\r\n      const label = chart.data.labels[idx];\r\n      setChartFilter({ ...chartFilter, condition: label });\r\n    }\r\n  };\r\n\r\n  // Columns with inline editing and role-based actions\r\n  const columns = [\r\n    {\r\n      field: 'diagnosisDate',\r\n      headerName: 'Date',\r\n      width: 160,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'condition',\r\n      headerName: 'Condition',\r\n      width: 200,\r\n      editable: userRole === 'admin',\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'severity',\r\n      headerName: 'Severity',\r\n      width: 120,\r\n      editable: userRole === 'admin' || userRole === 'doctor',\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Severe'\r\n              ? 'error'\r\n              : params.value === 'Moderate'\r\n              ? 'warning'\r\n              : 'success'\r\n          }\r\n          variant=\"outlined\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'doctorName',\r\n      headerName: 'Doctor',\r\n      width: 180\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <Tooltip title=\"View Details\">\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setDrawerDiagnosis(params.row);\r\n                setDrawerOpen(true);\r\n              }}\r\n              aria-label=\"View details\"\r\n            >\r\n              <i className=\"fas fa-eye\"></i>\r\n            </IconButton>\r\n          </Tooltip>\r\n          {(userRole === 'admin' || userRole === 'doctor') && (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={e => {\r\n                setActionAnchorEl(e.currentTarget);\r\n                setActionRow(params.row);\r\n              }}\r\n              aria-label=\"More actions\"\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Chart data calculations (place before your component return)\r\n  const conditionCounts = diagnoses.reduce((acc, d) => {\r\n    const cond = d.condition || 'Other';\r\n    acc[cond] = (acc[cond] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const severityCounts = diagnoses.reduce((acc, d) => {\r\n    const sev = d.severity || 'Other';\r\n    acc[sev] = (acc[sev] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const doctorCounts = diagnoses.reduce((acc, d) => {\r\n    const doc = d.doctorName || 'Unknown';\r\n    acc[doc] = (acc[doc] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const dateCounts = diagnoses.reduce((acc, d) => {\r\n    const date = d.diagnosisDate ? new Date(d.diagnosisDate).toLocaleDateString() : 'Unknown';\r\n    acc[date] = (acc[date] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const doughnutData = {\r\n    labels: Object.keys(conditionCounts),\r\n    datasets: [{\r\n      data: Object.values(conditionCounts),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n  const pieData = {\r\n    labels: Object.keys(severityCounts),\r\n    datasets: [{\r\n      data: Object.values(severityCounts),\r\n      backgroundColor: ['#43a047', '#ffa000', '#e53935', '#1976d2'],\r\n    }]\r\n  };\r\n  const barData = {\r\n    labels: Object.keys(doctorCounts),\r\n    datasets: [{\r\n      label: 'Diagnoses per Doctor',\r\n      data: Object.values(doctorCounts),\r\n      backgroundColor: '#1976d2',\r\n    }]\r\n  };\r\n  const lineData = {\r\n    labels: Object.keys(dateCounts),\r\n    datasets: [{\r\n      label: 'Diagnoses per Date',\r\n      data: Object.values(dateCounts),\r\n      borderColor: '#e53935',\r\n      backgroundColor: 'rgba(229,57,53,0.2)',\r\n      fill: true,\r\n      tension: 0.4,\r\n    }]\r\n  };\r\n\r\n  // Responsive skeletons\r\n  if (skeleton) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={60} sx={{ mb: 2 }} />\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={300} sx={{ mb: 2 }} />\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={500} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-notes-medical\"></i> Diagnoses</h4>\r\n      </div>\r\n\r\n      {/* Widgets row */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2, flexWrap: 'wrap' }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center', minWidth: 120 }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Diagnoses</Typography>\r\n          <Typography variant=\"h6\">{diagnoses.length}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center', minWidth: 120 }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Mild</Typography>\r\n          <Typography variant=\"h6\">{diagnoses.filter(d => d.severity === 'Mild').length}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center', minWidth: 120 }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Moderate</Typography>\r\n          <Typography variant=\"h6\">{diagnoses.filter(d => d.severity === 'Moderate').length}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center', minWidth: 120 }}>\r\n          <Typography variant=\"subtitle2\" color=\"error.main\">Severe</Typography>\r\n          <Typography variant=\"h6\">{diagnoses.filter(d => d.severity === 'Severe').length}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts Section - MOVE HERE, just below widgets and above filters/table */}\r\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 4, mb: 4, mt: 2, justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Diagnoses by Condition</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Diagnoses by Severity</Typography>\r\n          <Pie data={pieData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Diagnoses per Doctor</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fce4ec', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Diagnoses Over Time</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        {/* Create Diagnosis Button */}\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"success\"\r\n          sx={{ mb: 2 }}\r\n          onClick={() => setAddDialogOpen(true)}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create Diagnosis\r\n        </Button>\r\n\r\n        {/* Advanced Filters */}\r\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2 }}>\r\n          <TextField\r\n            label=\"Search\"\r\n            value={searchQuery}\r\n            onChange={e => setSearchQuery(e.target.value)}\r\n            size=\"small\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            label=\"Severity\"\r\n            select\r\n            value={severityFilter}\r\n            onChange={e => setSeverityFilter(e.target.value)}\r\n            size=\"small\"\r\n            fullWidth\r\n          >\r\n            <MenuItem value=\"\">All Severities</MenuItem>\r\n            <MenuItem value=\"Mild\">Mild</MenuItem>\r\n            <MenuItem value=\"Moderate\">Moderate</MenuItem>\r\n            <MenuItem value=\"Severe\">Severe</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            label=\"Condition\"\r\n            select\r\n            value={conditionFilter}\r\n            onChange={e => setConditionFilter(e.target.value)}\r\n            size=\"small\"\r\n            fullWidth\r\n          >\r\n            <MenuItem value=\"\">All Conditions</MenuItem>\r\n            {Object.keys(conditionCounts).map(cond => (\r\n              <MenuItem key={cond} value={cond}>{cond}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Doctor\"\r\n            value={doctorFilter}\r\n            onChange={e => setDoctorFilter(e.target.value)}\r\n            size=\"small\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            label=\"From\"\r\n            type=\"date\"\r\n            value={dateRange.from}\r\n            onChange={e => setDateRange(r => ({ ...r, from: e.target.value }))}\r\n            size=\"small\"\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            label=\"To\"\r\n            type=\"date\"\r\n            value={dateRange.to}\r\n            onChange={e => setDateRange(r => ({ ...r, to: e.target.value }))}\r\n            size=\"small\"\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n          />\r\n        </Stack>\r\n\r\n        {/* DataGrid with inline editing */}\r\n        {loading ? <LinearProgress /> : (\r\n          <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredDiagnoses}\r\n              getRowId={row => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5, 10, 20]}\r\n              checkboxSelection\r\n              onRowSelectionModelChange={ids => setSelectedIds(ids)}\r\n              components={{ Toolbar: GridToolbar }}\r\n              editMode=\"row\"\r\n              onRowEditCommit={handleRowEditCommit}\r\n              onEditRowsModelChange={handleEditRowsModelChange}\r\n              aria-label=\"Diagnoses Table\"\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={() => setActionAnchorEl(null)}\r\n            >\r\n              {(userRole === 'admin' || userRole === 'doctor') && (\r\n                <MenuItem onClick={() => {\r\n                  setDrawerDiagnosis(actionRow);\r\n                  setDrawerOpen(true);\r\n                  setActionAnchorEl(null);\r\n                }}>View</MenuItem>\r\n              )}\r\n              {userRole === 'admin' && (\r\n                <MenuItem onClick={async () => {\r\n                  await axios.delete(`${BASE_URL}/diagnoses/${actionRow.id}`);\r\n                  setSnackbar({ open: true, message: 'Diagnosis deleted', severity: 'success' });\r\n                  fetchDiagnoses();\r\n                  setActionAnchorEl(null);\r\n                }}>Delete</MenuItem>\r\n              )}\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Detailed Drawer View */}\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={drawerOpen}\r\n          onClose={() => setDrawerOpen(false)}\r\n          PaperProps={{ sx: { width: { xs: 320, sm: 480 } } }}\r\n        >\r\n          <Box sx={{ p: 3, maxWidth: 480 }}>\r\n            {drawerDiagnosis && (\r\n              <>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Diagnosis Details\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">Condition: {drawerDiagnosis.condition}</Typography>\r\n                <Typography variant=\"subtitle2\">Severity: {drawerDiagnosis.severity}</Typography>\r\n                <Typography variant=\"subtitle2\">Doctor: {drawerDiagnosis.doctorName}</Typography>\r\n                <Typography variant=\"subtitle2\">Date: {new Date(drawerDiagnosis.diagnosisDate).toLocaleString()}</Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Results:</Typography>\r\n                <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>{drawerDiagnosis.diagnosisResults}</Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Notes:</Typography>\r\n                <Typography variant=\"body2\">{drawerDiagnosis.notes}</Typography>\r\n                {/* Audit Trail */}\r\n                <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Audit Trail:</Typography>\r\n                <Box sx={{ maxHeight: 120, overflow: 'auto', bgcolor: '#f5f5f5', p: 1, borderRadius: 1 }}>\r\n                  {(auditTrail[drawerDiagnosis.id] || []).length === 0\r\n                    ? <Typography variant=\"caption\">No changes yet.</Typography>\r\n                    : auditTrail[drawerDiagnosis.id].map((entry, idx) => (\r\n                      <Typography key={idx} variant=\"caption\" sx={{ display: 'block' }}>\r\n                        {entry.date}: {entry.user} changed {Object.keys(entry.changes).join(', ')}\r\n                      </Typography>\r\n                    ))}\r\n                </Box>\r\n                <Stack direction=\"row\" spacing={2} sx={{ mt: 3 }}>\r\n                  <Button variant=\"outlined\" startIcon={<PrintIcon />} onClick={exportToPDF}>Print</Button>\r\n                  <Button variant=\"outlined\" startIcon={<DownloadIcon />} onClick={exportToExcel}>Download Excel</Button>\r\n                </Stack>\r\n              </>\r\n            )}\r\n          </Box>\r\n        </Drawer>\r\n\r\n        {/* Snackbar Notifications */}\r\n        <Snackbar\r\n          open={snackbar.open}\r\n          autoHideDuration={3000}\r\n          onClose={() => setSnackbar(s => ({ ...s, open: false }))}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n        >\r\n          <Alert onClose={() => setSnackbar(s => ({ ...s, open: false }))} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n            {snackbar.message}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {/* Add Diagnosis Dialog - NEW SECTION */}\r\n        <CreateDiagnosis\r\n          open={addDialogOpen}\r\n          onClose={() => setAddDialogOpen(false)}\r\n          onSuccess={() => {\r\n            setAddDialogOpen(false);\r\n            // Refresh diagnoses data\r\n            fetchDiagnoses();\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diagnoses;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['In Service', 'Out of Service', 'Maintenance Due', 'In Maintenance', 'Retired'];\r\n\r\nconst AddEquipmentMaintenance = ({ open, onClose, technicians = [], clinics = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    clinicId: '',\r\n    equipmentName: '',\r\n    modelNumber: '',\r\n    manufacturer: '',\r\n    purchaseDate: '',\r\n    lastServiceDate: '',\r\n    nextServiceDue: '',\r\n    status: 'In Service',\r\n    assignedTechnician: '',\r\n    maintenanceNotes: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...form,\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/equipments`, data);\r\n      if (onSuccess) onSuccess();\r\n      if (onClose) onClose();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Add Equipment Maintenance</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField\r\n            select\r\n            label=\"Clinic\"\r\n            name=\"clinicId\"\r\n            value={form.clinicId}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          >\r\n            {clinics.map(c => (\r\n              <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Equipment Name\"\r\n            name=\"equipmentName\"\r\n            value={form.equipmentName}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Model Number\"\r\n            name=\"modelNumber\"\r\n            value={form.modelNumber}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Manufacturer\"\r\n            name=\"manufacturer\"\r\n            value={form.manufacturer}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Purchase Date\"\r\n            name=\"purchaseDate\"\r\n            type=\"date\"\r\n            value={form.purchaseDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Last Service Date\"\r\n            name=\"lastServiceDate\"\r\n            type=\"date\"\r\n            value={form.lastServiceDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Next Service Due\"\r\n            name=\"nextServiceDue\"\r\n            type=\"date\"\r\n            value={form.nextServiceDue}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Status\"\r\n            name=\"status\"\r\n            value={form.status}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {statuses.map(s => (\r\n              <MenuItem key={s} value={s}>{s}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Assigned Technician\"\r\n            name=\"assignedTechnician\"\r\n            value={form.assignedTechnician}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {technicians.map(t => (\r\n              <MenuItem key={t.id} value={t.id}>{t.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Maintenance Notes\"\r\n            name=\"maintenanceNotes\"\r\n            value={form.maintenanceNotes}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n              {loading ? 'Saving...' : 'Create'}\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={onClose} disabled={loading}>\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddEquipmentMaintenance;","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['In Service', 'Out of Service', 'Maintenance Due', 'In Maintenance', 'Retired'];\r\n\r\nconst EditEquipmentMaintenance = ({ open, onClose, equipment = {}, technicians = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    clinicId: '',\r\n    equipmentName: '',\r\n    modelNumber: '',\r\n    manufacturer: '',\r\n    purchaseDate: '',\r\n    lastServiceDate: '',\r\n    nextServiceDue: '',\r\n    status: 'In Service',\r\n    assignedTechnician: '',\r\n    maintenanceNotes: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch clinics from /clinics endpoint\r\n    axios.get(`${BASE_URL}/clinics`)\r\n      .then(res => setClinics(res.data))\r\n      .catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (equipment) {\r\n      setForm({\r\n        clinicId: equipment.clinicId || '',\r\n        equipmentName: equipment.equipmentName || '',\r\n        modelNumber: equipment.modelNumber || '',\r\n        manufacturer: equipment.manufacturer || '',\r\n        purchaseDate: equipment.purchaseDate ? equipment.purchaseDate.slice(0, 10) : '',\r\n        lastServiceDate: equipment.lastServiceDate ? equipment.lastServiceDate.slice(0, 10) : '',\r\n        nextServiceDue: equipment.nextServiceDue ? equipment.nextServiceDue.slice(0, 10) : '',\r\n        status: equipment.status || 'In Service',\r\n        assignedTechnician: equipment.assignedTechnician || '',\r\n        maintenanceNotes: equipment.maintenanceNotes || '',\r\n      });\r\n    }\r\n  }, [equipment]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...form,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/equipments/${equipment.id}`, data);\r\n      if (onSuccess) onSuccess();\r\n      if (onClose) onClose();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Edit Equipment Maintenance</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField\r\n            select\r\n            label=\"Clinic\"\r\n            name=\"clinicId\"\r\n            value={form.clinicId}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          >\r\n            {clinics.map(c => (\r\n              <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Equipment Name\"\r\n            name=\"equipmentName\"\r\n            value={form.equipmentName}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Model Number\"\r\n            name=\"modelNumber\"\r\n            value={form.modelNumber}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Manufacturer\"\r\n            name=\"manufacturer\"\r\n            value={form.manufacturer}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Purchase Date\"\r\n            name=\"purchaseDate\"\r\n            type=\"date\"\r\n            value={form.purchaseDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Last Service Date\"\r\n            name=\"lastServiceDate\"\r\n            type=\"date\"\r\n            value={form.lastServiceDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Next Service Due\"\r\n            name=\"nextServiceDue\"\r\n            type=\"date\"\r\n            value={form.nextServiceDue}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Status\"\r\n            name=\"status\"\r\n            value={form.status}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {statuses.map(s => (\r\n              <MenuItem key={s} value={s}>{s}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Assigned Technician\"\r\n            name=\"assignedTechnician\"\r\n            value={form.assignedTechnician}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {technicians.map(t => (\r\n              <MenuItem key={t.id} value={t.id}>{t.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Maintenance Notes\"\r\n            name=\"maintenanceNotes\"\r\n            value={form.maintenanceNotes}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n              {loading ? 'Saving...' : 'Save Changes'}\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={onClose} disabled={loading}>\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditEquipmentMaintenance;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  DataGrid, GridToolbar\r\n} from '@mui/x-data-grid';\r\nimport {\r\n  LinearProgress, IconButton, Menu, MenuItem, Chip, Button, Dialog, DialogTitle, DialogContent, DialogActions,\r\n  Drawer, TextField, Select, InputLabel, FormControl, Box, Snackbar, Alert, Tooltip, useMediaQuery,\r\n  Typography\r\n} from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\r\nimport QrCodeIcon from '@mui/icons-material/QrCode';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport UploadIcon from '@mui/icons-material/Upload';\r\nimport AssignmentIndIcon from '@mui/icons-material/AssignmentInd';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddEquipmentMaintenance from './AddEquipmentMaintenance';\r\nimport EditEquipmentMaintenance from './EditEquipmentMaintenance';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst statusColors = {\r\n  'In Service': 'success',\r\n  'Out of Service': 'error',\r\n  'Maintenance Due': 'warning',\r\n  'In Maintenance': 'info',\r\n  'Retired': 'default',\r\n};\r\n\r\nconst EquipmentMaintenance = () => {\r\n  const [maintenanceData, setMaintenanceData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Feature states\r\n  const [scheduleDialogOpen, setScheduleDialogOpen] = useState(false);\r\n  const [historyDrawerOpen, setHistoryDrawerOpen] = useState(false);\r\n  const [selectedHistory, setSelectedHistory] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState('');\r\n  const [filterTechnician, setFilterTechnician] = useState('');\r\n  const [filterClinic, setFilterClinic] = useState('');\r\n  const [bulkSelection, setBulkSelection] = useState([]);\r\n  const [assignDialogOpen, setAssignDialogOpen] = useState(false);\r\n  const [fileDialogOpen, setFileDialogOpen] = useState(false);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n  const [qrDialogOpen, setQrDialogOpen] = useState(false);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [editEquipment, setEditEquipment] = useState(null);\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\r\n  const [viewEquipment, setViewEquipment] = useState(null);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [maintenanceDialogOpen, setMaintenanceDialogOpen] = useState(false);\r\n  const [selectedEquipment, setSelectedEquipment] = useState(null);\r\n  const [maintenanceDate, setMaintenanceDate] = useState('');\r\n  const [maintenanceType, setMaintenanceType] = useState('');\r\n  const [maintenanceNotes, setMaintenanceNotes] = useState('');\r\n  const isMobile = useMediaQuery('(max-width:600px)');\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // Fetch clinics for displaying full name\r\n    axios.get(`${BASE_URL}/clinics`)\r\n      .then(res => setClinics(res.data))\r\n      .catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    setLoading(true);\r\n\r\n    if (CurrentUser.DEMO_MODE) {\r\n      fetch('/demo/equipement.json')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setMaintenanceData(data);\r\n          setLoading(false);\r\n        })\r\n        .catch(() => {\r\n          setMaintenanceData([]);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      axios.get(`${BASE_URL}/equipments`)\r\n        .then((res) => setMaintenanceData(res.data))\r\n        .finally(() => setLoading(false));\r\n    }\r\n  };\r\n\r\n  const getClinicName = (id) => {\r\n    const c = clinics.find(cl => cl.id === id);\r\n    return c ? c.name : id;\r\n  };\r\n\r\n  // --- Actions ---\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditEquipment(actionRow);\r\n    setEditDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!actionRow) return;\r\n    if (!window.confirm(`Are you sure you want to delete equipment \"${actionRow.equipmentName}\"?`)) {\r\n      handleActionClose();\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      await axios.delete(`${BASE_URL}/equipments/${actionRow.id}`);\r\n      setNotification({ open: true, message: 'Equipment deleted successfully.', severity: 'success' });\r\n      fetchData();\r\n    } catch (err) {\r\n      setNotification({ open: true, message: 'Failed to delete equipment.', severity: 'error' });\r\n    } finally {\r\n      setLoading(false);\r\n      handleActionClose();\r\n    }\r\n  };\r\n\r\n  const handleViewHistory = () => {\r\n    setSelectedHistory(actionRow.maintenanceHistory || []);\r\n    setHistoryDrawerOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleScheduleMaintenance = () => {\r\n    setScheduleDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleAssignTechnician = () => {\r\n    setAssignDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleFileDialog = () => {\r\n    setFileDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleQrDialog = () => {\r\n    setQrDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleAddDialog = () => {\r\n    setAddDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleView = () => {\r\n    setViewEquipment(actionRow);\r\n    setViewDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  // --- Bulk Actions ---\r\n  const handleBulkDelete = () => {\r\n    setNotification({ open: true, message: `Deleted ${bulkSelection.length} items`, severity: 'success' });\r\n    // Implement backend call\r\n  };\r\n\r\n  const handleBulkStatusUpdate = (status) => {\r\n    setNotification({ open: true, message: `Updated status for ${bulkSelection.length} items`, severity: 'success' });\r\n    // Implement backend call\r\n  };\r\n\r\n  // --- Export/Import ---\r\n  const handleExport = () => {\r\n    setNotification({ open: true, message: 'Exported equipment data (CSV/Excel)', severity: 'success' });\r\n    // Implement export logic\r\n  };\r\n\r\n  const handleImport = (e) => {\r\n    setNotification({ open: true, message: 'Imported equipment data', severity: 'success' });\r\n    // Implement import logic\r\n  };\r\n\r\n  // --- Add Maintenance ---\r\n  const maintenanceTypes = [\r\n    'Routine Check',\r\n    'Repair',\r\n    'Calibration',\r\n    'Cleaning',\r\n    'Software Update',\r\n    'Other'\r\n  ];\r\n\r\n  const handleAddMaintenance = async () => {\r\n    if (!selectedEquipment) return;\r\n    setLoading(true);\r\n    try {\r\n      const newHistory = [\r\n        ...(selectedEquipment.maintenanceHistory || []),\r\n        {\r\n          date: maintenanceDate,\r\n          type: maintenanceType,\r\n          notes: maintenanceNotes\r\n        }\r\n      ];\r\n      await axios.put(`${BASE_URL}/equipments/${selectedEquipment.id}`, {\r\n        ...selectedEquipment,\r\n        maintenanceHistory: newHistory,\r\n        status: 'In Maintenance' // <-- Set status to \"In Maintenance\"\r\n      });\r\n      setNotification({ open: true, message: 'Maintenance record added.', severity: 'success' });\r\n      fetchData();\r\n    } catch (err) {\r\n      setNotification({ open: true, message: 'Failed to add maintenance record.', severity: 'error' });\r\n    } finally {\r\n      setLoading(false);\r\n      setMaintenanceDialogOpen(false);\r\n      setMaintenanceDate('');\r\n      setMaintenanceType('');\r\n      setMaintenanceNotes('');\r\n    }\r\n  };\r\n\r\n  const handleAddMaintenanceDialog = () => {\r\n    setSelectedEquipment(actionRow);\r\n    setMaintenanceDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  // --- Search/Filter ---\r\n  const filteredData = maintenanceData.filter(row =>\r\n    (!search || row.equipmentName?.toLowerCase().includes(search.toLowerCase()))\r\n    && (!filterStatus || row.status === filterStatus)\r\n    && (!filterTechnician || row.assignedTechnician === filterTechnician)\r\n    && (!filterClinic || row.clinicId === filterClinic)\r\n  );\r\n\r\n  // --- Status/Date Alerts ---\r\n  const isOverdue = (row) => {\r\n    if (!row.nextServiceDue) return false;\r\n    return new Date(row.nextServiceDue) < new Date() && row.status !== 'Retired';\r\n  };\r\n\r\n  // --- Columns ---\r\n  const columns = [\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: isMobile ? 120 : 230,\r\n      renderCell: (params) => getClinicName(params.value)\r\n    },\r\n    { field: 'equipmentName', headerName: 'Equipment', width: isMobile ? 100 : 180 },\r\n    { field: 'modelNumber', headerName: 'Model #', width: isMobile ? 80 : 130 },\r\n    { field: 'manufacturer', headerName: 'Manufacturer', width: isMobile ? 90 : 150 },\r\n    {\r\n      field: 'purchaseDate',\r\n      headerName: 'Purchased On',\r\n      width: isMobile ? 90 : 140,\r\n      renderCell: (params) => dateChip(params.value, 'info')\r\n    },\r\n    {\r\n      field: 'lastServiceDate',\r\n      headerName: 'Last Serviced',\r\n      width: isMobile ? 90 : 140,\r\n      renderCell: (params) => dateChip(params.value, 'success')\r\n    },\r\n    {\r\n      field: 'nextServiceDue',\r\n      headerName: 'Next Service Due',\r\n      width: isMobile ? 100 : 150,\r\n      renderCell: (params) => (\r\n        <Tooltip title={isOverdue(params.row) ? 'Overdue!' : ''}>\r\n          <span>\r\n            {dateChip(params.value, isOverdue(params.row) ? 'error' : 'warning')}\r\n            {isOverdue(params.row) && <Chip label=\"Overdue\" color=\"error\" size=\"small\" sx={{ ml: 1 }} />}\r\n          </span>\r\n        </Tooltip>\r\n      )\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: isMobile ? 90 : 140,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={statusColors[params.value] || 'default'}\r\n          size=\"small\"\r\n          variant={isOverdue(params.row) ? 'filled' : 'outlined'}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: isMobile ? 60 : 120,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"action-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleActionClick(event, params.row)}\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  function dateChip(value, color = 'default') {\r\n    return value ? (\r\n      <Chip\r\n        label={new Date(value).toLocaleDateString()}\r\n        color={color}\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n      />\r\n    ) : '';\r\n  }\r\n\r\n  // --- Responsive Box ---\r\n  const containerSx = isMobile\r\n    ? { p: 1, width: '100vw', maxWidth: '100vw', bgcolor: '#fff' } // <-- add bgcolor\r\n    : { p: 3, maxWidth: 1200, mx: 'auto', bgcolor: '#fff' };       // <-- add bgcolor\r\n\r\n  return (\r\n    <Box sx={containerSx}>\r\n      <div className=\"card-header\" style={{ marginBottom: 24 }}>\r\n        <h4><i className=\"fas fa-tools\"></i> Equipment Maintenance</h4>\r\n      </div>\r\n      <Box\r\n        sx={{\r\n          mb: 2,\r\n          mt: 2, // Add margin top between title and filters\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          gap: 2,\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Search Equipment\"\r\n          size=\"small\"\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n          sx={{ minWidth: 180 }}\r\n        />\r\n        <FormControl size=\"small\" sx={{ minWidth: 120 }}>\r\n          <InputLabel>Status</InputLabel>\r\n          <Select\r\n            value={filterStatus}\r\n            label=\"Status\"\r\n            onChange={e => setFilterStatus(e.target.value)}\r\n          >\r\n            <MenuItem value=\"\">All</MenuItem>\r\n            {Object.keys(statusColors).map(s => (\r\n              <MenuItem key={s} value={s}>{s}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl size=\"small\" sx={{ minWidth: 120 }}>\r\n          <InputLabel>Technician</InputLabel>\r\n          <Select\r\n            value={filterTechnician}\r\n            label=\"Technician\"\r\n            onChange={e => setFilterTechnician(e.target.value)}\r\n          >\r\n            <MenuItem value=\"\">All</MenuItem>\r\n            {/* {technicians.map(t => (\r\n              <MenuItem key={t.id} value={t.id}>{t.name}</MenuItem>\r\n            ))} */}\r\n          </Select>\r\n        </FormControl>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          startIcon={<DownloadIcon />}\r\n          sx={{ minWidth: 170, height: 40, fontWeight: 600 }}\r\n          onClick={handleExport}\r\n        >\r\n          Export\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ minWidth: 170, height: 40, fontWeight: 600 }}\r\n          onClick={handleBulkDelete}\r\n          disabled={bulkSelection.length === 0}\r\n        >\r\n          Delete Selected\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ minWidth: 170, height: 40, fontWeight: 600 }}\r\n          onClick={() => handleBulkStatusUpdate('Under Maintenance')}\r\n          disabled={bulkSelection.length === 0}\r\n        >\r\n          Mark as In Maintenance\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ minWidth: 170, height: 40, fontWeight: 600 }}\r\n          onClick={() => setAddDialogOpen(true)}\r\n        >\r\n          <i className=\"fas fa-plus\" style={{ marginRight: 8 }}></i> Create Equipment\r\n        </Button>\r\n      </Box>\r\n      <div className=\"card-body\">\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: isMobile ? 400 : 600, width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredData}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={isMobile ? 5 : 10}\r\n              rowsPerPageOptions={[5, 10, 20]}\r\n              checkboxSelection\r\n              components={{ Toolbar: GridToolbar }}\r\n              onSelectionModelChange={setBulkSelection}\r\n              sx={{\r\n                '& .MuiDataGrid-row': {\r\n                  bgcolor: (theme) => theme.palette.background.paper,\r\n                },\r\n                '& .MuiDataGrid-row.Mui-selected': {\r\n                  bgcolor: (theme) => theme.palette.action.selected,\r\n                },\r\n              }}\r\n            />\r\n            <Menu\r\n              id=\"action-menu\"\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleEdit}>Edit</MenuItem>\r\n              <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n              <MenuItem onClick={handleView}>View</MenuItem>\r\n              <MenuItem onClick={handleScheduleMaintenance}>Schedule Maintenance</MenuItem>\r\n              <MenuItem onClick={handleAddMaintenanceDialog}>Add Maintenance</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Schedule Maintenance Dialog */}\r\n      <Dialog open={scheduleDialogOpen} onClose={() => setScheduleDialogOpen(false)} maxWidth=\"xs\" fullWidth>\r\n        <DialogTitle>Schedule Maintenance</DialogTitle>\r\n        <DialogContent>\r\n          <TextField label=\"Date\" type=\"date\" fullWidth margin=\"normal\" InputLabelProps={{ shrink: true }} />\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Technician</InputLabel>\r\n            <Select label=\"Technician\">\r\n              {/* {technicians.map(t => (\r\n                <MenuItem key={t.id} value={t.id}>{t.name}</MenuItem>\r\n              ))} */}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField label=\"Notes\" fullWidth margin=\"normal\" multiline rows={2} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setScheduleDialogOpen(false)}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={() => { setScheduleDialogOpen(false); setNotification({ open: true, message: 'Maintenance scheduled', severity: 'success' }); }}>Schedule</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Maintenance History Drawer */}\r\n      <Drawer anchor=\"right\" open={historyDrawerOpen} onClose={() => setHistoryDrawerOpen(false)}>\r\n        <Box sx={{ width: isMobile ? 280 : 400, p: 2 }}>\r\n          <Typography variant=\"h6\" gutterBottom>Maintenance History</Typography>\r\n          {selectedHistory.length === 0 ? (\r\n            <Typography>No history available.</Typography>\r\n          ) : (\r\n            selectedHistory.map((h, idx) => (\r\n              <Box key={idx} sx={{ mb: 2, p: 1, border: '1px solid #eee', borderRadius: 1 }}>\r\n                <Typography variant=\"subtitle2\">{h.date ? new Date(h.date).toLocaleDateString() : '-'}</Typography>\r\n                <Typography variant=\"body2\">Technician: {h.technician || '-'}</Typography>\r\n                <Typography variant=\"body2\">Notes: {h.notes || '-'}</Typography>\r\n              </Box>\r\n            ))\r\n          )}\r\n        </Box>\r\n      </Drawer>\r\n\r\n      {/* Assign Technician Dialog */}\r\n      <Dialog open={assignDialogOpen} onClose={() => setAssignDialogOpen(false)} maxWidth=\"xs\" fullWidth>\r\n        <DialogTitle>Assign Technician</DialogTitle>\r\n        <DialogContent>\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Technician</InputLabel>\r\n            <Select label=\"Technician\">\r\n              {/* {technicians.map(t => (\r\n                <MenuItem key={t.id} value={t.id}>{t.name}</MenuItem>\r\n              ))} */}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setAssignDialogOpen(false)}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={() => { setAssignDialogOpen(false); setNotification({ open: true, message: 'Technician assigned', severity: 'success' }); }}>Assign</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* File Attachment Dialog */}\r\n      <Dialog open={fileDialogOpen} onClose={() => setFileDialogOpen(false)} maxWidth=\"xs\" fullWidth>\r\n        <DialogTitle>Attach File</DialogTitle>\r\n        <DialogContent>\r\n          <Button variant=\"contained\" component=\"label\" startIcon={<UploadFileIcon />}>\r\n            Upload File\r\n            <input type=\"file\" hidden />\r\n          </Button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setFileDialogOpen(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* QR Code Dialog */}\r\n      <Dialog open={qrDialogOpen} onClose={() => setQrDialogOpen(false)} maxWidth=\"xs\" fullWidth>\r\n        <DialogTitle>Equipment QR Code</DialogTitle>\r\n        <DialogContent>\r\n          {/* Replace with real QR code */}\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: 120 }}>\r\n            <QrCodeIcon sx={{ fontSize: 80 }} />\r\n          </Box>\r\n          <Typography align=\"center\" variant=\"caption\">Scan to identify equipment</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setQrDialogOpen(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Add Equipment Maintenance Dialog */}\r\n      <AddEquipmentMaintenance\r\n        open={addDialogOpen}\r\n        onClose={() => setAddDialogOpen(false)}\r\n        technicians={[]}\r\n        clinics={[]} // Pass your clinics array here\r\n        onSuccess={fetchData}\r\n      />\r\n\r\n      {/* Edit Equipment Dialog */}\r\n      <EditEquipmentMaintenance\r\n        open={editDialogOpen}\r\n        onClose={() => setEditDialogOpen(false)}\r\n        equipment={editEquipment}\r\n        technicians={[]}\r\n        clinics={[]} // Pass your clinics array here\r\n        onSuccess={fetchData}\r\n      />\r\n\r\n      {/* View Equipment Dialog */}\r\n      <Dialog open={viewDialogOpen} onClose={() => setViewDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <i className=\"fas fa-tools\" style={{ color: '#1976d2', fontSize: 24 }} />\r\n            <span>Equipment Details</span>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {viewEquipment ? (\r\n            <Box sx={{\r\n              display: 'flex',\r\n              flexDirection: { xs: 'column', md: 'row' },\r\n              gap: 4,\r\n              py: 2\r\n            }}>\r\n              {/* Left: Main Info */}\r\n              <Box sx={{ flex: 1, minWidth: 260 }}>\r\n                <Typography variant=\"h6\" sx={{ color: '#1976d2', mb: 2 }}>\r\n                  {viewEquipment.equipmentName}\r\n                </Typography>\r\n                <Box component=\"ul\" sx={{ listStyle: 'none', p: 0, m: 0 }}>\r\n                  <li>\r\n                    <b>Clinic:</b> {getClinicName(viewEquipment.clinicId)}\r\n                  </li>\r\n                  <li>\r\n                    <b>Model Number:</b> {viewEquipment.modelNumber || <span style={{ color: '#888' }}>-</span>}\r\n                  </li>\r\n                  <li>\r\n                    <b>Manufacturer:</b> {viewEquipment.manufacturer || <span style={{ color: '#888' }}>-</span>}\r\n                  </li>\r\n                  <li>\r\n                    <b>Purchase Date:</b> {viewEquipment.purchaseDate ? new Date(viewEquipment.purchaseDate).toLocaleDateString() : <span style={{ color: '#888' }}>-</span>}\r\n                  </li>\r\n                  <li>\r\n                    <b>Last Service Date:</b> {viewEquipment.lastServiceDate ? new Date(viewEquipment.lastServiceDate).toLocaleDateString() : <span style={{ color: '#888' }}>-</span>}\r\n                  </li>\r\n                  <li>\r\n                    <b>Next Service Due:</b> {viewEquipment.nextServiceDue ? new Date(viewEquipment.nextServiceDue).toLocaleDateString() : <span style={{ color: '#888' }}>-</span>}\r\n                  </li>\r\n                  <li>\r\n                    <b>Status:</b>{' '}\r\n                    <Chip\r\n                      label={viewEquipment.status}\r\n                      color={statusColors[viewEquipment.status] || 'default'}\r\n                      size=\"small\"\r\n                      sx={{ fontWeight: 600 }}\r\n                    />\r\n                  </li>\r\n                </Box>\r\n              </Box>\r\n              {/* Right: Visual/Extra Info */}\r\n              <Box sx={{\r\n                flex: 1,\r\n                minWidth: 260,\r\n                bgcolor: '#f5faff',\r\n                borderRadius: 2,\r\n                p: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: 1,\r\n                boxShadow: 1\r\n              }}>\r\n                <Typography variant=\"subtitle1\" sx={{ color: '#1976d2', mb: 1 }}>\r\n                  Additional Info\r\n                </Typography>\r\n                <Box>\r\n                  <b>Assigned Technician:</b> {viewEquipment.assignedTechnician || <span style={{ color: '#888' }}>-</span>}\r\n                </Box>\r\n                <Box>\r\n                  <b>Notes:</b>\r\n                  <Typography variant=\"body2\" sx={{ color: '#444', mt: 0.5 }}>\r\n                    {viewEquipment.maintenanceNotes || <span style={{ color: '#888' }}>No notes.</span>}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          ) : (\r\n            <Typography>No equipment selected.</Typography>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setViewDialogOpen(false)} color=\"secondary\" variant=\"outlined\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Add Maintenance Dialog */}\r\n      <Dialog open={maintenanceDialogOpen} onClose={() => setMaintenanceDialogOpen(false)} maxWidth=\"xs\" fullWidth>\r\n        <DialogTitle>Add Maintenance Record</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            label=\"Date\"\r\n            type=\"date\"\r\n            value={maintenanceDate}\r\n            onChange={e => setMaintenanceDate(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Type</InputLabel>\r\n            <Select\r\n              value={maintenanceType}\r\n              label=\"Type\"\r\n              onChange={e => setMaintenanceType(e.target.value)}\r\n            >\r\n              {maintenanceTypes.map(type => (\r\n                <MenuItem key={type} value={type}>{type}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            label=\"Notes\"\r\n            value={maintenanceNotes}\r\n            onChange={e => setMaintenanceNotes(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            multiline\r\n            rows={2}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setMaintenanceDialogOpen(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={handleAddMaintenance}\r\n            disabled={!maintenanceDate || !maintenanceType}\r\n            sx={{ fontWeight: 600, minWidth: 100 }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Snackbar Notifications */}\r\n      <Snackbar\r\n        open={notification.open}\r\n        autoHideDuration={3000}\r\n        onClose={() => setNotification({ ...notification, open: false })}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={() => setNotification({ ...notification, open: false })} severity={notification.severity} sx={{ width: '100%' }}>\r\n          {notification.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EquipmentMaintenance;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem, Stack, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statusOptions = ['Active', 'Expired', 'Pending'];\r\n\r\nconst AddInsurance = ({ open, onClose, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    providerName: '',\r\n    policyNumber: '',\r\n    coverageDetails: {\r\n      maxAnnualCoverage: '',\r\n      treatmentCoverage: '',\r\n      medicationCoverage: '',\r\n      consultationCoverage: ''\r\n    },\r\n    validFrom: '',\r\n    validUntil: '',\r\n    status: 'Active'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    if (name in form.coverageDetails) {\r\n      setForm(f => ({\r\n        ...f,\r\n        coverageDetails: { ...f.coverageDetails, [name]: value }\r\n      }));\r\n    } else {\r\n      setForm(f => ({ ...f, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...form,\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      coverageDetails: {\r\n        maxAnnualCoverage: Number(form.coverageDetails.maxAnnualCoverage),\r\n        treatmentCoverage: Number(form.coverageDetails.treatmentCoverage),\r\n        medicationCoverage: Number(form.coverageDetails.medicationCoverage),\r\n        consultationCoverage: Number(form.coverageDetails.consultationCoverage)\r\n      },\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/insurances`, data);\r\n      if (onSuccess) onSuccess();\r\n      if (onClose) onClose();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Add Insurance Policy</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField\r\n            label=\"Patient ID\"\r\n            name=\"patientId\"\r\n            value={form.patientId}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Provider Name\"\r\n            name=\"providerName\"\r\n            value={form.providerName}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Policy Number\"\r\n            name=\"policyNumber\"\r\n            value={form.policyNumber}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>Coverage Details</Typography>\r\n          <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n            <TextField\r\n              label=\"Max Annual Coverage\"\r\n              name=\"maxAnnualCoverage\"\r\n              type=\"number\"\r\n              value={form.coverageDetails.maxAnnualCoverage}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Treatment (%)\"\r\n              name=\"treatmentCoverage\"\r\n              type=\"number\"\r\n              value={form.coverageDetails.treatmentCoverage}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Medication (%)\"\r\n              name=\"medicationCoverage\"\r\n              type=\"number\"\r\n              value={form.coverageDetails.medicationCoverage}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Consultation (%)\"\r\n              name=\"consultationCoverage\"\r\n              type=\"number\"\r\n              value={form.coverageDetails.consultationCoverage}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </Stack>\r\n          <TextField\r\n            label=\"Valid From\"\r\n            name=\"validFrom\"\r\n            type=\"date\"\r\n            value={form.validFrom}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Valid Until\"\r\n            name=\"validUntil\"\r\n            type=\"date\"\r\n            value={form.validUntil}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Status\"\r\n            name=\"status\"\r\n            value={form.status}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {statusOptions.map(opt => (\r\n              <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n              {loading ? 'Saving...' : 'Create Insurance'}\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={onClose} disabled={loading}>\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddInsurance;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport {\r\n  LinearProgress, Chip, IconButton, Menu, MenuItem, Box, Typography, Button,\r\n  Dialog, DialogTitle, DialogContent, Paper, Stack, Tooltip, Divider\r\n} from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddInsurance from './AddInsurance';\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst InsuranceInfo = () => {\r\n  const [insuranceData, setInsuranceData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n\r\n  // For actions menu\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n  const [coverageModalOpen, setCoverageModalOpen] = useState(false);\r\n  const [coverageModalData, setCoverageModalData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/insurances`)\r\n      .then((res) => setInsuranceData(res.data))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  // Feature: Verify Coverage\r\n  const verifyCoverage = async (insuranceId, serviceType) => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/insurances/${insuranceId}/coverage/${serviceType}`);\r\n      setCoverageModalData({\r\n        title: `Coverage for ${serviceType}`,\r\n        content: res.data && typeof res.data.coverage !== 'undefined'\r\n          ? `${res.data.coverage}%`\r\n          : 'Coverage information not available.'\r\n      });\r\n      setCoverageModalOpen(true);\r\n    } catch (err) {\r\n      setCoverageModalData({\r\n        title: 'Error',\r\n        content: 'Failed to verify coverage.'\r\n      });\r\n      setCoverageModalOpen(true);\r\n    }\r\n  };\r\n\r\n  // Feature: Generate Claim\r\n  const generateClaim = async (insuranceId, claimDetails) => {\r\n    try {\r\n      await axios.post(`${BASE_URL}/insurances/${insuranceId}/claims`, claimDetails);\r\n      setCoverageModalData({\r\n        title: 'Claim',\r\n        content: 'Claim generated successfully!'\r\n      });\r\n      setCoverageModalOpen(true);\r\n    } catch (err) {\r\n      setCoverageModalData({\r\n        title: 'Error',\r\n        content: 'Failed to generate claim.'\r\n      });\r\n      setCoverageModalOpen(true);\r\n    }\r\n  };\r\n\r\n  // Feature: View Coverage (all details)\r\n  const viewCoverage = (coverageDetails) => {\r\n    if (!coverageDetails) {\r\n      setCoverageModalData({\r\n        title: 'Coverage Details',\r\n        content: 'No coverage details available.'\r\n      });\r\n    } else {\r\n      let content = '';\r\n      if (typeof coverageDetails === 'object') {\r\n        Object.entries(coverageDetails).forEach(([key, value]) => {\r\n          const label = key\r\n            .replace(/([A-Z])/g, ' $1')\r\n            .replace(/^./, str => str.toUpperCase())\r\n            .replace('Coverage', ' Coverage');\r\n          content += `${label}: ${value}%\\n`;\r\n        });\r\n      } else {\r\n        content = 'No coverage details available.';\r\n      }\r\n      setCoverageModalData({\r\n        title: 'Coverage Details',\r\n        content: content.trim()\r\n      });\r\n    }\r\n    setCoverageModalOpen(true);\r\n  };\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  // Widget summary data\r\n  const totalInsurances = insuranceData.length;\r\n  const activeInsurances = insuranceData.filter(i => i.status === 'Active').length;\r\n  const expiredInsurances = insuranceData.filter(i => i.status === 'Expired').length;\r\n  const providers = insuranceData.reduce((acc, i) => {\r\n    acc[i.providerName] = (acc[i.providerName] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(providers),\r\n    datasets: [{\r\n      data: Object.values(providers),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(providers),\r\n    datasets: [{\r\n      label: 'Policies per Provider',\r\n      data: Object.values(providers),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(providers),\r\n    datasets: [\r\n      {\r\n        label: 'Active',\r\n        data: Object.keys(providers).map(provider => insuranceData.filter(i => i.providerName === provider && i.status === 'Active').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Expired',\r\n        data: Object.keys(providers).map(provider => insuranceData.filter(i => i.providerName === provider && i.status === 'Expired').length),\r\n        borderColor: '#e53935',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'providerName', headerName: 'Provider', width: 160 },\r\n    { field: 'policyNumber', headerName: 'Policy No.', width: 180 },\r\n    {\r\n      field: 'validFrom',\r\n      headerName: 'Valid From',\r\n      width: 120,\r\n      valueFormatter: ({ value }) => new Date(value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'validUntil',\r\n      headerName: 'Valid Until',\r\n      width: 120,\r\n      valueFormatter: ({ value }) => new Date(value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: ({ value }) => (\r\n        <Chip\r\n          label={value}\r\n          color={value === 'Active' ? 'success' : 'default'}\r\n          size=\"small\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      renderCell: (params) => (\r\n        <Tooltip title=\"Actions\">\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n            color=\"primary\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )\r\n    }\r\n  ];\r\n\r\n  // Enhanced View Coverage Modal\r\n  const CoverageModalContent = ({ coverageDetails, insurance }) => {\r\n    if (!coverageDetails || typeof coverageDetails !== 'object') {\r\n      return (\r\n        <Box sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography color=\"error\" fontWeight={600} sx={{ mb: 2 }}>\r\n            <i className=\"fas fa-exclamation-circle\" style={{ marginRight: 8 }} />\r\n            No coverage details available.\r\n          </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    // Prepare main coverage chips\r\n    const mainChips = [\r\n      {\r\n        label: `Consultation: ${coverageDetails.consultationCoverage ?? 'N/A'}%`,\r\n        color: 'primary',\r\n        icon: <i className=\"fas fa-user-md\" />\r\n      },\r\n      {\r\n        label: `Treatment: ${coverageDetails.treatmentCoverage ?? 'N/A'}%`,\r\n        color: 'success',\r\n        icon: <i className=\"fas fa-stethoscope\" />\r\n      },\r\n      {\r\n        label: `Medication: ${coverageDetails.medicationCoverage ?? 'N/A'}%`,\r\n        color: 'info',\r\n        icon: <i className=\"fas fa-pills\" />\r\n      }\r\n    ];\r\n\r\n    // Prepare additional info\r\n    const additional = Object.entries(coverageDetails).filter(\r\n      ([key]) => !['consultationCoverage', 'treatmentCoverage', 'medicationCoverage'].includes(key)\r\n    );\r\n\r\n    return (\r\n      <Box sx={{\r\n        p: { xs: 1, sm: 3 },\r\n        bgcolor: '#fafdff',\r\n        borderRadius: 2,\r\n        boxShadow: 1,\r\n        minHeight: 200\r\n      }}>\r\n        <Typography variant=\"h5\" color=\"primary\" fontWeight={700} gutterBottom sx={{ mb: 2 }}>\r\n          <i className=\"fas fa-eye\" style={{ marginRight: 10 }} />\r\n          Coverage Details\r\n        </Typography>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n          <Chip label={`Provider: ${insurance?.providerName || 'N/A'}`} color=\"primary\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n          <Chip label={`Policy No: ${insurance?.policyNumber || 'N/A'}`} color=\"info\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n          <Chip label={`Patient: ${insurance?.patientFullName || 'N/A'}`} color=\"success\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n          <Chip label={`Status: ${insurance?.status || 'N/A'}`} color={insurance?.status === 'Active' ? 'success' : 'default'} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n        </Stack>\r\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n          <Chip label={`Valid From: ${insurance?.validFrom ? new Date(insurance.validFrom).toLocaleDateString() : 'N/A'}`} color=\"default\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n          <Chip label={`Valid Until: ${insurance?.validUntil ? new Date(insurance.validUntil).toLocaleDateString() : 'N/A'}`} color=\"default\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n        </Stack>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Typography variant=\"subtitle1\" fontWeight={600} sx={{ mb: 1 }}>\r\n          Coverage Percentages:\r\n        </Typography>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n          {mainChips.map((chip) => (\r\n            <Chip\r\n              key={chip.label}\r\n              label={chip.label}\r\n              color={chip.color}\r\n              icon={chip.icon}\r\n              sx={{ fontWeight: 600, fontSize: 16, minWidth: 170, mb: 1 }}\r\n            />\r\n          ))}\r\n        </Stack>\r\n        {additional.length > 0 && (\r\n          <>\r\n            <Divider sx={{ mb: 2 }} />\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1, fontWeight: 600 }}>\r\n              Additional Info:\r\n            </Typography>\r\n            <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n              {additional.map(([key, value]) => (\r\n                <Chip\r\n                  key={key}\r\n                  label={`${key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}: ${value}`}\r\n                  color=\"warning\"\r\n                  variant=\"outlined\"\r\n                  sx={{ fontWeight: 600, fontSize: 15, mb: 1, mr: 1 }}\r\n                />\r\n              ))}\r\n            </Stack>\r\n          </>\r\n        )}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={4} sx={{ p: 3, bgcolor: '#f5f7fa', minHeight: '100vh' }}>\r\n      <Box sx={{ mb: 3 }}>\r\n        <Typography variant=\"h4\" color=\"primary\" fontWeight={700} gutterBottom>\r\n          <i className=\"fas fa-shield-alt\" style={{ marginRight: 10 }} /> Insurance Records\r\n        </Typography>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 3 }}>\r\n          <Paper sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }} elevation={2}>\r\n            <Typography variant=\"subtitle2\" color=\"primary\">Total Policies</Typography>\r\n            <Typography variant=\"h6\">{totalInsurances}</Typography>\r\n          </Paper>\r\n          <Paper sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }} elevation={2}>\r\n            <Typography variant=\"subtitle2\" color=\"success.main\">Active</Typography>\r\n            <Typography variant=\"h6\">{activeInsurances}</Typography>\r\n          </Paper>\r\n          <Paper sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center' }} elevation={2}>\r\n            <Typography variant=\"subtitle2\" color=\"error.main\">Expired</Typography>\r\n            <Typography variant=\"h6\">{expiredInsurances}</Typography>\r\n          </Paper>\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Paper sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }} elevation={1}>\r\n          <Typography variant=\"subtitle1\" align=\"center\" fontWeight={600}>Policies by Provider</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Paper>\r\n        <Paper sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }} elevation={1}>\r\n          <Typography variant=\"subtitle1\" align=\"center\" fontWeight={600}>Policies per Provider</Typography>\r\n          <Bar data={barData} />\r\n        </Paper>\r\n        <Paper sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }} elevation={1}>\r\n          <Typography variant=\"subtitle1\" align=\"center\" fontWeight={600}>Status Trends by Provider</Typography>\r\n          <Line data={lineData} />\r\n        </Paper>\r\n      </Box>\r\n\r\n      <Box className=\"card-body\" sx={{ mt: 2 }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, fontWeight: 600, boxShadow: 2 }}\r\n          onClick={() => setAddDialogOpen(true)}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create Insurance\r\n        </Button>\r\n\r\n        {loading ? (\r\n          <LinearProgress sx={{ my: 3 }} />\r\n        ) : (\r\n          <Box sx={{ height: 550, width: '100%', bgcolor: '#fff', borderRadius: 2, boxShadow: 1 }}>\r\n            <DataGrid\r\n              rows={insuranceData}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5, 10]}\r\n              checkboxSelection\r\n              components={{ Toolbar: GridToolbar }}\r\n              sx={{\r\n                border: 0,\r\n                '& .MuiDataGrid-columnHeaders': { bgcolor: '#f5f5f5', fontWeight: 700 },\r\n                '& .MuiDataGrid-row': { bgcolor: '#f9f9f9' },\r\n                '& .MuiDataGrid-cell': { fontSize: 15 }\r\n              }}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={() => {\r\n                viewCoverage(actionRow.coverageDetails);\r\n                handleActionClose();\r\n              }}>\r\n                <i className=\"fas fa-eye\" style={{ marginRight: 8, color: '#ffa000' }} />\r\n                View Coverage\r\n              </MenuItem>\r\n              <MenuItem onClick={() => {\r\n                setCoverageModalData({\r\n                  title: 'Policy Details',\r\n                  content: `Policy Number: ${actionRow.policyNumber}`\r\n                });\r\n                setCoverageModalOpen(true);\r\n                handleActionClose();\r\n              }}>\r\n                <i className=\"fas fa-id-card\" style={{ marginRight: 8, color: '#8e24aa' }} />\r\n                View Policy Details\r\n              </MenuItem>\r\n              <MenuItem onClick={() => {\r\n                setCoverageModalData({\r\n                  title: 'Download',\r\n                  content: `Download for policy ${actionRow.policyNumber} started.`\r\n                });\r\n                setCoverageModalOpen(true);\r\n                handleActionClose();\r\n              }}>\r\n                <i className=\"fas fa-download\" style={{ marginRight: 8, color: '#00bcd4' }} />\r\n                Download Policy PDF\r\n              </MenuItem>\r\n              <MenuItem onClick={() => {\r\n                setCoverageModalData({\r\n                  title: 'Renewal Reminder',\r\n                  content: `Send renewal reminder to ${actionRow.patientFullName}`\r\n                });\r\n                setCoverageModalOpen(true);\r\n                handleActionClose();\r\n              }}>\r\n                <i className=\"fas fa-bell\" style={{ marginRight: 8, color: '#e53935' }} />\r\n                Send Renewal Reminder\r\n              </MenuItem>\r\n            </Menu>\r\n          </Box>\r\n        )}\r\n        <Dialog open={coverageModalOpen} onClose={() => setCoverageModalOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle sx={{ fontWeight: 700 }}>{coverageModalData?.title}</DialogTitle>\r\n          <DialogContent>\r\n            {coverageModalData?.title === 'Coverage Details' && actionRow ? (\r\n              <CoverageModalContent coverageDetails={actionRow.coverageDetails} insurance={actionRow} />\r\n            ) : (\r\n              <Typography sx={{ fontSize: 16, color: '#1976d2', fontWeight: 600 }}>\r\n                {coverageModalData?.content}\r\n              </Typography>\r\n            )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Box>\r\n\r\n      <AddInsurance\r\n        open={addDialogOpen}\r\n        onClose={() => setAddDialogOpen(false)}\r\n        onSuccess={() => {\r\n          setAddDialogOpen(false);\r\n          axios.get(`${BASE_URL}/insurances`)\r\n            .then((res) => setInsuranceData(res.data));\r\n        }}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default InsuranceInfo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport {\r\n  LinearProgress,\r\n  Chip,\r\n  Typography,\r\n  Link\r\n} from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst LegalCompliance = () => {\r\n  const [records, setRecords] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/legalcompliance`)\r\n      .then((res) => setRecords(res.data))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'patientId', headerName: 'Patient ID', width: 250 },\r\n    { field: 'documentType', headerName: 'Document Type', width: 150 },\r\n    {\r\n      field: 'signedDate',\r\n      headerName: 'Signed Date',\r\n      width: 140,\r\n      valueFormatter: ({ value }) => new Date(value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'expiryDate',\r\n      headerName: 'Expiry Date',\r\n      width: 140,\r\n      valueFormatter: ({ value }) =>\r\n        value ? new Date(value).toLocaleDateString() : 'N/A'\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: ({ value }) => (\r\n        <Chip\r\n          label={value}\r\n          color={value === 'Signed' ? 'success' : 'warning'}\r\n          size=\"small\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'documentUrl',\r\n      headerName: 'View Document',\r\n      width: 180,\r\n      renderCell: ({ value }) => (\r\n        <Link href={value} target=\"_blank\" rel=\"noopener\">\r\n          View PDF\r\n        </Link>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-file-signature\"></i> Legal Compliance Documents</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n              rows={records}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5, 10]}\r\n              checkboxSelection\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LegalCompliance;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n\r\nconst Loyalty = () => {\r\n  const [loyaltyData, setLoyaltyData] = useState([]);\r\n  const [selectedLoyalty, setSelectedLoyalty] = useState(null);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const closeButtonAdd = useRef(null);\r\n  const closeButtonEdit = useRef(null);\r\n\r\n  const fetchLoyalty = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/loyalty`)\r\n      .then(res => {\r\n        // Parse JSON strings inside data before setting state\r\n        const parsedData = res.data.map(item => ({\r\n          ...item,\r\n          earnedFrom: JSON.parse(item.earnedFrom),\r\n          redeemedRewards: JSON.parse(item.redeemedRewards),\r\n        }));\r\n        setLoyaltyData(parsedData);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLoyalty();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchLoyalty();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const item = loyaltyData.find(i => i.id === ids[0]);\r\n      setSelectedLoyalty(item);\r\n      setSelectedId(ids[0]);\r\n    } else {\r\n      setSelectedLoyalty(null);\r\n      setSelectedId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedId && window.confirm('Are you sure you want to delete this loyalty record?')) {\r\n      axios.delete(`${BASE_URL}/loyalty/${selectedId}`).then(() => refresh());\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'patientId', headerName: 'Patient ID', width: 220 },\r\n    { field: 'points', headerName: 'Total Points', width: 120 },\r\n    {\r\n      field: 'earnedFrom',\r\n      headerName: 'Points Earned From',\r\n      width: 400,\r\n      renderCell: (params) => {\r\n        return params.value.map((entry, index) => (\r\n          <div key={index}>\r\n            {entry.activity}: {entry.pointsEarned} pts ({new Date(entry.date).toLocaleDateString()})\r\n          </div>\r\n        ));\r\n      }\r\n    },\r\n    {\r\n      field: 'redeemedRewards',\r\n      headerName: 'Redeemed Rewards',\r\n      width: 400,\r\n      renderCell: (params) => {\r\n        return params.value.length > 0 ? (\r\n          params.value.map((reward, idx) => (\r\n            <div key={idx}>\r\n              {reward.rewardName}: {reward.pointsUsed} pts ({new Date(reward.redeemedDate).toLocaleDateString()})\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <span>No rewards redeemed</span>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Created At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'updatedAt',\r\n      headerName: 'Updated At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-gift\"></i> Loyalty Points</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#addLoyaltyModal\"\r\n        >\r\n          <i className=\"far fa-plus-square\"></i> Add Loyalty\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning btn-sm\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#editLoyaltyModal\"\r\n          disabled={!selectedLoyalty}\r\n        >\r\n          <i className=\"fas fa-edit\"></i> Edit\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm\"\r\n          onClick={handleDelete}\r\n          disabled={!selectedId}\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i> Remove\r\n        </button>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 480, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={loyaltyData}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Loyalty Modal */}\r\n        <div className=\"modal fade\" id=\"addLoyaltyModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Add Loyalty Points</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* <AddLoyaltyForm closeModal={() => closeButtonAdd.current.click()} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Loyalty Modal */}\r\n        <div className=\"modal fade\" id=\"editLoyaltyModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Loyalty Points</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* <EditLoyaltyForm loyalty={selectedLoyalty} closeModal={() => closeButtonEdit.current.click()} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonEdit}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loyalty;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\n\r\nconst BASE_URL = 'https://your-api-url.com'; // replace with your API base URL\r\n\r\nconst Marketing = () => {\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [selectedCampaign, setSelectedCampaign] = useState(null);\r\n  const [selectedCampaignId, setSelectedCampaignId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const closeButtonAdd = useRef(null);\r\n  const closeButtonEdit = useRef(null);\r\n\r\n  const fetchCampaigns = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/marketing`)\r\n      .then(res => setCampaigns(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCampaigns();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchCampaigns();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const campaign = campaigns.find(c => c.id === ids[0]);\r\n      setSelectedCampaign(campaign);\r\n      setSelectedCampaignId(ids[0]);\r\n    } else {\r\n      setSelectedCampaign(null);\r\n      setSelectedCampaignId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedCampaignId && window.confirm('Are you sure you want to delete this campaign?')) {\r\n      axios.delete(`${BASE_URL}/marketing/${selectedCampaignId}`)\r\n        .then(() => refresh());\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'campaignName', headerName: 'Campaign Name', width: 200 },\r\n    { field: 'campaignType', headerName: 'Type', width: 130 },\r\n    {\r\n      field: 'targetAudience',\r\n      headerName: 'Target Audience',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        const ta = params.value || {};\r\n        return `Age: ${ta.ageGroup || '-'}, Last Visit: ${ta.lastVisitDate || '-'}, Treatment: ${ta.treatmentHistory || '-'}`;\r\n      }\r\n    },\r\n    { field: 'messageTemplate', headerName: 'Message', width: 250 },\r\n    {\r\n      field: 'scheduleDate',\r\n      headerName: 'Scheduled Date',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    { field: 'status', headerName: 'Status', width: 130 },\r\n    {\r\n      field: 'performanceMetrics',\r\n      headerName: 'Performance',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        const metrics = params.value || {};\r\n        return `Open Rate: ${metrics.openRate ?? '-'}, Click-Through: ${metrics.clickThroughRate ?? '-'}, Conversion: ${metrics.conversionRate ?? '-'}`;\r\n      }\r\n    },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Created At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'updatedAt',\r\n      headerName: 'Updated At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-bullhorn\"></i> Marketing Campaigns</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#addCampaignModal\"\r\n        >\r\n          <i className=\"far fa-plus-square\"></i> Create Campaign\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning btn-sm\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#editCampaignModal\"\r\n          disabled={!selectedCampaign}\r\n        >\r\n          <i className=\"fas fa-edit\"></i> Edit\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm\"\r\n          onClick={handleDelete}\r\n          disabled={!selectedCampaignId}\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i> Delete\r\n        </button>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 480, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={campaigns}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Campaign Modal */}\r\n        <div className=\"modal fade\" id=\"addCampaignModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Create New Campaign</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* AddMarketingForm component here */}\r\n                {/* <AddMarketingForm closeModal={() => closeButtonAdd.current.click()} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Campaign Modal */}\r\n        <div className=\"modal fade\" id=\"editCampaignModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Campaign</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* EditMarketingForm component here */}\r\n                {/* <EditMarketingForm campaign={selectedCampaign} closeModal={() => closeButtonEdit.current.click()} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonEdit}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Marketing;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack, Box, Chip, Typography } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst roles = [\"Admin\", \"Dentist\", \"Assistant\", \"Receptionist\", \"Accountant\"];\r\nconst permissionsList = [\r\n  \"View Patients\", \"Edit Patients\", \"View Appointments\", \"Edit Appointments\",\r\n  \"View Billing\", \"Edit Billing\", \"Manage Inventory\", \"Manage Staff\"\r\n];\r\nconst daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\nconst statusOptions = [\"Active\", \"Inactive\"];\r\n\r\nconst AddStaff = ({ closeModal }) => {\r\n  const [form, setForm] = useState({\r\n    fullName: '',\r\n    role: '',\r\n    email: '',\r\n    phone: '',\r\n    shiftSchedule: {\r\n      Mon: { start: '', end: '' },\r\n      Tue: { start: '', end: '' },\r\n      Wed: { start: '', end: '' },\r\n      Thu: { start: '', end: '' },\r\n      Fri: { start: '', end: '' },\r\n      Sat: { start: '', end: '' },\r\n      Sun: { start: '', end: '' }\r\n    },\r\n    permissions: [],\r\n    status: 'Active'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleScheduleChange = (day, field, value) => {\r\n    setForm(f => ({\r\n      ...f,\r\n      shiftSchedule: {\r\n        ...f.shiftSchedule,\r\n        [day]: { ...f.shiftSchedule[day], [field]: value }\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handlePermissionToggle = perm => {\r\n    setForm(f => ({\r\n      ...f,\r\n      permissions: f.permissions.includes(perm)\r\n        ? f.permissions.filter(p => p !== perm)\r\n        : [...f.permissions, perm]\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const staffData = {\r\n      fullName: form.fullName,\r\n      role: form.role,\r\n      email: form.email,\r\n      phone: form.phone,\r\n      shiftSchedule: form.shiftSchedule,\r\n      permissions: form.permissions,\r\n      status: form.status,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/staff`, staffData);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} autoComplete=\"off\" sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Full Name\"\r\n          name=\"fullName\"\r\n          value={form.fullName}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Role\"\r\n          name=\"role\"\r\n          value={form.role}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        >\r\n          {roles.map(role => (\r\n            <MenuItem key={role} value={role}>{role}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          type=\"email\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Phone\"\r\n          name=\"phone\"\r\n          value={form.phone}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        />\r\n        <Box>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>Shift Schedule</Typography>\r\n          <Stack spacing={1}>\r\n            {daysOfWeek.map(day => (\r\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={day}>\r\n                <Typography sx={{ width: 40 }}>{day}</Typography>\r\n                <TextField\r\n                  label=\"Start\"\r\n                  type=\"time\"\r\n                  size=\"small\"\r\n                  value={form.shiftSchedule[day].start}\r\n                  onChange={e => handleScheduleChange(day, 'start', e.target.value)}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  sx={{ width: 120 }}\r\n                />\r\n                <TextField\r\n                  label=\"End\"\r\n                  type=\"time\"\r\n                  size=\"small\"\r\n                  value={form.shiftSchedule[day].end}\r\n                  onChange={e => handleScheduleChange(day, 'end', e.target.value)}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  sx={{ width: 120 }}\r\n                />\r\n              </Stack>\r\n            ))}\r\n          </Stack>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>Permissions</Typography>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n            {permissionsList.map(perm => (\r\n              <Chip\r\n                key={perm}\r\n                label={perm}\r\n                color={form.permissions.includes(perm) ? \"primary\" : \"default\"}\r\n                variant={form.permissions.includes(perm) ? \"filled\" : \"outlined\"}\r\n                onClick={() => handlePermissionToggle(perm)}\r\n                sx={{ cursor: 'pointer' }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Add Staff'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddStaff;","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Stack, Typography, Chip, Box } from '@mui/material';\r\n\r\nconst daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n\r\nconst ViewStaff = ({ staff, open, onClose }) => {\r\n  if (!staff) return null;\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>View Staff Member</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Stack spacing={2}>\r\n          <Typography><strong>Full Name:</strong> {staff.fullName}</Typography>\r\n          <Typography><strong>Role:</strong> {staff.role}</Typography>\r\n          <Typography><strong>Email:</strong> {staff.email}</Typography>\r\n          <Typography><strong>Phone:</strong> {staff.phone}</Typography>\r\n          <Typography><strong>Status:</strong> {staff.status}</Typography>\r\n          <Box>\r\n            <Typography sx={{ mb: 1 }}><strong>Shift Schedule:</strong></Typography>\r\n            <Stack spacing={0.5}>\r\n              {daysOfWeek.map(day => (\r\n                <Box key={day} sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                  <Typography sx={{ width: 40 }}>{day}</Typography>\r\n                  <Chip\r\n                    label={\r\n                      staff.shiftSchedule?.[day]?.start && staff.shiftSchedule?.[day]?.end\r\n                        ? `${staff.shiftSchedule[day].start} - ${staff.shiftSchedule[day].end}`\r\n                        : 'Off'\r\n                    }\r\n                    color={staff.shiftSchedule?.[day]?.start ? \"primary\" : \"default\"}\r\n                    size=\"small\"\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Stack>\r\n          </Box>\r\n          <Box>\r\n            <Typography sx={{ mb: 1 }}><strong>Permissions:</strong></Typography>\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n              {(staff.permissions || []).map(perm => (\r\n                <Chip key={perm} label={perm} color=\"success\" size=\"small\" />\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        </Stack>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant=\"outlined\" color=\"primary\">Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ViewStaff;","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack, Chip, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst roles = [\"Admin\", \"Dentist\", \"Assistant\", \"Receptionist\", \"Accountant\"];\r\nconst permissionsList = [\r\n  \"View Patients\", \"Edit Patients\", \"View Appointments\", \"Edit Appointments\",\r\n  \"View Billing\", \"Edit Billing\", \"Manage Inventory\", \"Manage Staff\"\r\n];\r\nconst daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\nconst statusOptions = [\"Active\", \"Inactive\", \"On Leave\"];\r\n\r\nconst EditStaff = ({ staff, closeModal }) => {\r\n  const [form, setForm] = useState({\r\n    fullName: '',\r\n    role: '',\r\n    email: '',\r\n    phone: '',\r\n    shiftSchedule: {\r\n      Mon: { start: '', end: '' },\r\n      Tue: { start: '', end: '' },\r\n      Wed: { start: '', end: '' },\r\n      Thu: { start: '', end: '' },\r\n      Fri: { start: '', end: '' },\r\n      Sat: { start: '', end: '' },\r\n      Sun: { start: '', end: '' }\r\n    },\r\n    permissions: [],\r\n    status: 'Active'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (staff) {\r\n      setForm({\r\n        fullName: staff.fullName || '',\r\n        role: staff.role || '',\r\n        email: staff.email || '',\r\n        phone: staff.phone || '',\r\n        shiftSchedule: staff.shiftSchedule || {\r\n          Mon: { start: '', end: '' },\r\n          Tue: { start: '', end: '' },\r\n          Wed: { start: '', end: '' },\r\n          Thu: { start: '', end: '' },\r\n          Fri: { start: '', end: '' },\r\n          Sat: { start: '', end: '' },\r\n          Sun: { start: '', end: '' }\r\n        },\r\n        permissions: staff.permissions || [],\r\n        status: staff.status || 'Active'\r\n      });\r\n    }\r\n  }, [staff]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleScheduleChange = (day, field, value) => {\r\n    setForm(f => ({\r\n      ...f,\r\n      shiftSchedule: {\r\n        ...f.shiftSchedule,\r\n        [day]: { ...f.shiftSchedule[day], [field]: value }\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handlePermissionToggle = perm => {\r\n    setForm(f => ({\r\n      ...f,\r\n      permissions: f.permissions.includes(perm)\r\n        ? f.permissions.filter(p => p !== perm)\r\n        : [...f.permissions, perm]\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const staffData = {\r\n      fullName: form.fullName,\r\n      role: form.role,\r\n      email: form.email,\r\n      phone: form.phone,\r\n      shiftSchedule: form.shiftSchedule,\r\n      permissions: form.permissions,\r\n      status: form.status,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/staff/${staff.id}`, staffData);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} autoComplete=\"off\" sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Full Name\"\r\n          name=\"fullName\"\r\n          value={form.fullName}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Role\"\r\n          name=\"role\"\r\n          value={form.role}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        >\r\n          {roles.map(role => (\r\n            <MenuItem key={role} value={role}>{role}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          type=\"email\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Phone\"\r\n          name=\"phone\"\r\n          value={form.phone}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        />\r\n        <Box>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>Shift Schedule</Typography>\r\n          <Stack spacing={1}>\r\n            {daysOfWeek.map(day => (\r\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={day}>\r\n                <Typography sx={{ width: 40 }}>{day}</Typography>\r\n                <TextField\r\n                  label=\"Start\"\r\n                  type=\"time\"\r\n                  size=\"small\"\r\n                  value={form.shiftSchedule[day].start}\r\n                  onChange={e => handleScheduleChange(day, 'start', e.target.value)}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  sx={{ width: 120 }}\r\n                />\r\n                <TextField\r\n                  label=\"End\"\r\n                  type=\"time\"\r\n                  size=\"small\"\r\n                  value={form.shiftSchedule[day].end}\r\n                  onChange={e => handleScheduleChange(day, 'end', e.target.value)}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  sx={{ width: 120 }}\r\n                />\r\n              </Stack>\r\n            ))}\r\n          </Stack>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>Permissions</Typography>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n            {permissionsList.map(perm => (\r\n              <Chip\r\n                key={perm}\r\n                label={perm}\r\n                color={form.permissions.includes(perm) ? \"primary\" : \"default\"}\r\n                variant={form.permissions.includes(perm) ? \"filled\" : \"outlined\"}\r\n                onClick={() => handlePermissionToggle(perm)}\r\n                sx={{ cursor: 'pointer' }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditStaff;","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, IconButton, Menu, MenuItem, Chip, Box, Typography, Button } from '@mui/material'; // <-- Add Chip import\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddStaff from './AddStaff';\r\nimport ViewStaff from './ViewStaff'; // Add this import at the top\r\nimport EditStaff from './EditStaff'; // Add this import at the top\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst Staff = () => {\r\n  const [staffList, setStaffList] = useState([]);\r\n  const [selectedStaff, setSelectedStaff] = useState(null);\r\n  const [selectedStaffId, setSelectedStaffId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n  const [viewOpen, setViewOpen] = useState(false); // Add this state\r\n\r\n  const closeButtonAdd = useRef(null);\r\n  const closeButtonEdit = useRef(null);\r\n\r\n  const fetchStaff = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/staff`)\r\n      .then(res => setStaffList(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStaff();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchStaff();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const staffMember = staffList.find(s => s.id === ids[0]);\r\n      setSelectedStaff(staffMember);\r\n      setSelectedStaffId(ids[0]);\r\n    } else {\r\n      setSelectedStaff(null);\r\n      setSelectedStaffId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedStaffId && window.confirm('Are you sure you want to delete this staff member?')) {\r\n      axios.delete(`${BASE_URL}/staff/${selectedStaffId}`)\r\n        .then(() => refresh());\r\n    }\r\n  };\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleActionEdit = () => {\r\n    setSelectedStaff(actionRow);\r\n    setSelectedStaffId(actionRow.id);\r\n    document.querySelector('[data-target=\"#editStaffModal\"]').click();\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionDelete = () => {\r\n    setSelectedStaff(actionRow);\r\n    setSelectedStaffId(actionRow.id);\r\n    handleDelete();\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionView = () => {\r\n    setSelectedStaff(actionRow);\r\n    setViewOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  // Widget summary data\r\n  const totalStaff = staffList.length;\r\n  const activeStaff = staffList.filter(s => s.status === 'Active').length;\r\n  const onLeaveStaff = staffList.filter(s => s.status === 'On Leave').length;\r\n  const inactiveStaff = staffList.filter(s => s.status === 'Inactive').length;\r\n\r\n  // Group by role\r\n  const roleCounts = staffList.reduce((acc, s) => {\r\n    const role = s.role || 'Other';\r\n    acc[role] = (acc[role] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(roleCounts),\r\n    datasets: [{\r\n      data: Object.values(roleCounts),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(roleCounts),\r\n    datasets: [{\r\n      label: 'Staff per Role',\r\n      data: Object.values(roleCounts),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(roleCounts),\r\n    datasets: [\r\n      {\r\n        label: 'Active',\r\n        data: Object.keys(roleCounts).map(role => staffList.filter(s => (s.role || 'Other') === role && s.status === 'Active').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'On Leave',\r\n        data: Object.keys(roleCounts).map(role => staffList.filter(s => (s.role || 'Other') === role && s.status === 'On Leave').length),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Inactive',\r\n        data: Object.keys(roleCounts).map(role => staffList.filter(s => (s.role || 'Other') === role && s.status === 'Inactive').length),\r\n        borderColor: '#e53935',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'fullName', headerName: 'Full Name', width: 200 },\r\n    { field: 'role', headerName: 'Role', width: 130 },\r\n    { field: 'email', headerName: 'Email', width: 230 },\r\n    { field: 'phone', headerName: 'Phone', width: 150 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Active'\r\n              ? 'success'\r\n              : params.value === 'Inactive'\r\n              ? 'default'\r\n              : params.value === 'On Leave'\r\n              ? 'warning'\r\n              : 'primary'\r\n          }\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-user-md\"></i> Staff</h4>\r\n      </div>\r\n\r\n      {/* Widgets row */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Staff</Typography>\r\n          <Typography variant=\"h6\">{totalStaff}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Active</Typography>\r\n          <Typography variant=\"h6\">{activeStaff}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">On Leave</Typography>\r\n          <Typography variant=\"h6\">{onLeaveStaff}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"error.main\">Inactive</Typography>\r\n          <Typography variant=\"h6\">{inactiveStaff}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts row */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Staff by Role</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Staff per Role</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Status Trends by Role</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<i className=\"far fa-plus-square\"></i>}\r\n            onClick={() => document.querySelector('[data-target=\"#addStaffModal\"]').click()}\r\n            sx={{ fontWeight: 600, minWidth: 120 }}\r\n          >\r\n            Add Staff\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<i className=\"fas fa-edit\"></i>}\r\n            onClick={() => document.querySelector('[data-target=\"#editStaffModal\"]').click()}\r\n            disabled={!selectedStaff}\r\n            sx={{ fontWeight: 600, minWidth: 120 }}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n            onClick={handleDelete}\r\n            disabled={!selectedStaffId}\r\n            sx={{ fontWeight: 600, minWidth: 120 }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Box>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 480, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={staffList}\r\n              getRowId={row => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleActionView}>View</MenuItem>\r\n              <MenuItem onClick={handleActionEdit}>Edit</MenuItem>\r\n              <MenuItem onClick={handleActionDelete}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Staff Modal */}\r\n        <div className=\"modal fade\" id=\"addStaffModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Add New Staff</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* AddStaff form component here */}\r\n                <AddStaff closeModal={() => closeButtonAdd.current.click()} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Staff Modal */}\r\n        <div className=\"modal fade\" id=\"editStaffModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Staff</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* EditStaff form component here */}\r\n                <EditStaff staff={selectedStaff} closeModal={() => closeButtonEdit.current.click()} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonEdit}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* View Staff Dialog */}\r\n        <ViewStaff\r\n          staff={selectedStaff}\r\n          open={viewOpen}\r\n          onClose={() => setViewOpen(false)}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Staff;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst anesthesiaTypes = ['Local', 'General', 'Sedation', 'None'];\r\nconst statusOptions = ['Scheduled', 'Completed', 'Cancelled'];\r\n\r\nconst AddProcedure = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    procedureName: '',\r\n    procedureDate: '',\r\n    duration: '',\r\n    anesthesiaType: '',\r\n    notes: '',\r\n    status: 'Scheduled'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      procedureName: form.procedureName,\r\n      procedureDate: new Date(form.procedureDate).toISOString(),\r\n      duration: Number(form.duration),\r\n      anesthesiaType: form.anesthesiaType,\r\n      notes: form.notes,\r\n      status: form.status,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    console.log('Procedure object to send:', data); // Show object before sending\r\n    try {\r\n      await axios.post(`${BASE_URL}/procedures`, data);\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Procedure Name\"\r\n          name=\"procedureName\"\r\n          value={form.procedureName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Procedure Date & Time\"\r\n          name=\"procedureDate\"\r\n          type=\"datetime-local\"\r\n          value={form.procedureDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Duration (minutes)\"\r\n          name=\"duration\"\r\n          type=\"number\"\r\n          value={form.duration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Anesthesia Type\"\r\n          name=\"anesthesiaType\"\r\n          value={form.anesthesiaType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {anesthesiaTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Notes\"\r\n          name=\"notes\"\r\n          value={form.notes}\r\n          onChange={handleChange}\r\n          multiline\r\n          rows={2}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Procedure'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddProcedure;","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst anesthesiaTypes = ['Local', 'General', 'Sedation', 'None'];\r\nconst statusOptions = ['Scheduled', 'Completed', 'Cancelled'];\r\n\r\nconst EditProcedure = ({ procedure, closeModal, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    procedureName: '',\r\n    procedureDate: '',\r\n    duration: '',\r\n    anesthesiaType: '',\r\n    notes: '',\r\n    status: 'Scheduled'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (procedure) {\r\n      setForm({\r\n        procedureName: procedure.procedureName || '',\r\n        procedureDate: procedure.procedureDate\r\n          ? new Date(procedure.procedureDate).toISOString().slice(0, 16)\r\n          : '',\r\n        duration: procedure.duration || '',\r\n        anesthesiaType: procedure.anesthesiaType || '',\r\n        notes: procedure.notes || '',\r\n        status: procedure.status || 'Scheduled'\r\n      });\r\n    }\r\n  }, [procedure]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      procedureName: form.procedureName,\r\n      procedureDate: new Date(form.procedureDate).toISOString(),\r\n      duration: Number(form.duration),\r\n      anesthesiaType: form.anesthesiaType,\r\n      notes: form.notes,\r\n      status: form.status,\r\n      updatedAt: now\r\n    };\r\n    console.log('Procedure object to update:', data); // Show object before sending\r\n    try {\r\n      await axios.put(`${BASE_URL}/procedures/${procedure.id}`, data);\r\n      if (onSuccess) onSuccess(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Procedure Name\"\r\n          name=\"procedureName\"\r\n          value={form.procedureName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Procedure Date & Time\"\r\n          name=\"procedureDate\"\r\n          type=\"datetime-local\"\r\n          value={form.procedureDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Duration (minutes)\"\r\n          name=\"duration\"\r\n          type=\"number\"\r\n          value={form.duration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Anesthesia Type\"\r\n          name=\"anesthesiaType\"\r\n          value={form.anesthesiaType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {anesthesiaTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Notes\"\r\n          name=\"notes\"\r\n          value={form.notes}\r\n          onChange={handleChange}\r\n          multiline\r\n          rows={2}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditProcedure;","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, Chip, IconButton, Menu, MenuItem, Button, Dialog, DialogTitle, DialogContent, DialogActions, Stack } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddProcedure from './AddProcedure';\r\nimport EditProcedure from './EditProcedure';\r\n\r\nconst ViewProcedure = ({ procedure, onClose }) => {\r\n  if (!procedure) return null;\r\n  return (\r\n    <Dialog open={!!procedure} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>View Procedure</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Stack spacing={2} sx={{ mt: 1 }}>\r\n          <div><strong>Name:</strong> {procedure.procedureName}</div>\r\n          <div><strong>Duration:</strong> {procedure.duration} mins</div>\r\n          <div><strong>Anesthesia:</strong> {procedure.anesthesiaType}</div>\r\n          <div><strong>Status:</strong> {procedure.status}</div>\r\n        </Stack>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant=\"outlined\" color=\"primary\">Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst Procedures = () => {\r\n  const [procedures, setProcedures] = useState([]);\r\n  const [selectedProcedure, setSelectedProcedure] = useState(null);\r\n  const [selectedProcedureId, setSelectedProcedureId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n\r\n  // For actions menu\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Material-UI modal state\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n\r\n  const fetchProcedures = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/procedures`)\r\n      .then(res => setProcedures(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProcedures();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchProcedures();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const proc = procedures.find(p => p.id === ids[0]);\r\n      setSelectedProcedure(proc);\r\n      setSelectedProcedureId(ids[0]);\r\n    } else {\r\n      setSelectedProcedure(null);\r\n      setSelectedProcedureId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedProcedureId && window.confirm('Delete selected procedure?')) {\r\n      axios.delete(`${BASE_URL}/procedures/${selectedProcedureId}`)\r\n        .then(() => refresh());\r\n    }\r\n  };\r\n\r\n  // Actions menu handlers\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleActionEdit = () => {\r\n    setSelectedProcedure(actionRow);\r\n    setSelectedProcedureId(actionRow.id);\r\n    setEditOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionDelete = () => {\r\n    setSelectedProcedure(actionRow);\r\n    setSelectedProcedureId(actionRow.id);\r\n    handleDelete();\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionView = () => {\r\n    setSelectedProcedure(actionRow);\r\n    setViewOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'procedureName', headerName: 'Procedure Name', width: 150 },\r\n    { field: 'duration', headerName: 'Duration (mins)', width: 130 },\r\n    { field: 'anesthesiaType', headerName: 'Anesthesia Type', width: 150 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Completed'\r\n              ? 'success'\r\n              : params.value === 'Scheduled'\r\n              ? 'primary'\r\n              : params.value === 'Cancelled'\r\n              ? 'error'\r\n              : 'default'\r\n          }\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-procedures\"></i> Procedures</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => setAddOpen(true)}\r\n            startIcon={<i className=\"far fa-plus-square\"></i>}\r\n          >\r\n            Add Procedure\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => setEditOpen(true)}\r\n            startIcon={<i className=\"fas fa-edit\"></i>}\r\n            disabled={!selectedProcedure}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={handleDelete}\r\n            startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n            disabled={!selectedProcedureId}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Stack>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={procedures}\r\n              getRowId={row => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleActionView}>\r\n                <i className=\"fas fa-eye\" style={{ marginRight: 8, color: '#1976d2' }} />\r\n                View Procedure\r\n              </MenuItem>\r\n              <MenuItem onClick={handleActionEdit}>\r\n                <i className=\"fas fa-edit\" style={{ marginRight: 8, color: '#ffa000' }} />\r\n                Edit Procedure\r\n              </MenuItem>\r\n              <MenuItem onClick={handleActionDelete}>\r\n                <i className=\"fas fa-trash-alt\" style={{ marginRight: 8, color: '#e53935' }} />\r\n                Delete Procedure\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Material-UI Add Procedure Dialog */}\r\n        <Dialog open={addOpen} onClose={() => setAddOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Add New Procedure</DialogTitle>\r\n          <DialogContent>\r\n            <AddProcedure\r\n              closeModal={() => setAddOpen(false)}\r\n              onCreate={refresh}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAddOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Material-UI Edit Procedure Dialog */}\r\n        <Dialog open={editOpen} onClose={() => setEditOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Edit Procedure</DialogTitle>\r\n          <DialogContent>\r\n            <EditProcedure\r\n              procedure={selectedProcedure}\r\n              closeModal={() => setEditOpen(false)}\r\n              onSuccess={refresh}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Material-UI View Procedure Dialog */}\r\n        <ViewProcedure\r\n          procedure={viewOpen ? selectedProcedure : null}\r\n          onClose={() => setViewOpen(false)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Procedures;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statusOptions = ['Planned', 'In Progress', 'Completed', 'Cancelled'];\r\n\r\nconst AddTreatmentPlan = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    description: '',\r\n    estimatedDuration: '',\r\n    status: 'Planned'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch patients\r\n    axios.get(`${BASE_URL}/patients`)\r\n      .then(res => setPatients(res.data))\r\n      .catch(() => setPatients([]));\r\n    // Fetch doctors\r\n    axios.get(`${BASE_URL}/doctors`)\r\n      .then(res => setDoctors(res.data))\r\n      .catch(() => setDoctors([]));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      patientId: form.patientId,\r\n      doctorId: form.doctorId,\r\n      description: form.description,\r\n      estimatedDuration: Number(form.estimatedDuration),\r\n      status: form.status,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/treatmentplans`, data);\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          select\r\n          label=\"Patient\"\r\n          name=\"patientId\"\r\n          value={form.patientId}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {patients.map(patient => (\r\n            <MenuItem key={patient.id} value={patient.id}>\r\n              {patient.fullName || patient.name || patient.id}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Doctor\"\r\n          name=\"doctorId\"\r\n          value={form.doctorId}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {doctors.map(doctor => (\r\n            <MenuItem key={doctor.id} value={doctor.id}>\r\n              {doctor.fullName || doctor.name || doctor.id}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          value={form.description}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Estimated Duration (days)\"\r\n          name=\"estimatedDuration\"\r\n          type=\"number\"\r\n          value={form.estimatedDuration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Treatment Plan'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddTreatmentPlan;","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, IconButton, Menu, MenuItem, Chip, Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddTreatmentPlan from './AddTreatmentPlan'; // Make sure this path is correct\r\n// import EditTreatmentPlan from './EditTreatmentPlan'; // Uncomment if you have this component\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst TreatmentPlans = () => {\r\n  const [treatmentPlans, setTreatmentPlans] = useState([]);\r\n  const [selectedPlan, setSelectedPlan] = useState(null);\r\n  const [selectedPlanId, setSelectedPlanId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Modal state\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  // const [editOpen, setEditOpen] = useState(false); // Uncomment if you implement edit\r\n\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  const fetchTreatmentPlans = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/treatmentplans`)\r\n      .then(res => setTreatmentPlans(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTreatmentPlans();\r\n    axios.get(`${BASE_URL}/patients`).then(res => setPatients(res.data)).catch(() => setPatients([]));\r\n    axios.get(`${BASE_URL}/doctors`).then(res => setDoctors(res.data)).catch(() => setDoctors([]));\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchTreatmentPlans();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const plan = treatmentPlans.find(p => p.id === ids[0]);\r\n      setSelectedPlan(plan);\r\n      setSelectedPlanId(ids[0]);\r\n    } else {\r\n      setSelectedPlan(null);\r\n      setSelectedPlanId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedPlanId && window.confirm('Are you sure you want to delete this treatment plan?')) {\r\n      axios.delete(`${BASE_URL}/treatmentplans/${selectedPlanId}`)\r\n        .then(() => refresh());\r\n    }\r\n  };\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  // Uncomment and implement if you have EditTreatmentPlan\r\n  // const handleActionEdit = () => {\r\n  //   setSelectedPlan(actionRow);\r\n  //   setSelectedPlanId(actionRow.id);\r\n  //   setEditOpen(true);\r\n  //   handleActionClose();\r\n  // };\r\n\r\n  const handleActionDelete = () => {\r\n    setSelectedPlan(actionRow);\r\n    setSelectedPlanId(actionRow.id);\r\n    handleDelete();\r\n    handleActionClose();\r\n  };\r\n\r\n  // Helper functions to get names by id\r\n  const getPatientName = (id) => {\r\n    const patient = patients.find(p => p.id === id);\r\n    return patient ? (patient.fullName || patient.name || patient.id) : 'Unknown';\r\n  };\r\n  const getDoctorName = (id) => {\r\n    const doctor = doctors.find(d => d.id === id);\r\n    return doctor ? (doctor.fullName || doctor.name || doctor.id) : 'Unknown';\r\n  };\r\n\r\n  // Widget summary data\r\n  const totalPlans = treatmentPlans.length;\r\n  const completedPlans = treatmentPlans.filter(p => p.status === 'Completed').length;\r\n  const inProgressPlans = treatmentPlans.filter(p => p.status === 'In Progress').length;\r\n  const pendingPlans = treatmentPlans.filter(p => p.status === 'Pending').length;\r\n\r\n  // Group by treatment type (if available)\r\n  const typeCounts = treatmentPlans.reduce((acc, p) => {\r\n    const type = p.treatmentType || 'Other';\r\n    acc[type] = (acc[type] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(typeCounts),\r\n    datasets: [{\r\n      data: Object.values(typeCounts),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(typeCounts),\r\n    datasets: [{\r\n      label: 'Plans per Treatment Type',\r\n      data: Object.values(typeCounts),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(typeCounts),\r\n    datasets: [\r\n      {\r\n        label: 'Completed',\r\n        data: Object.keys(typeCounts).map(type => treatmentPlans.filter(p => (p.treatmentType || 'Other') === type && p.status === 'Completed').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'In Progress',\r\n        data: Object.keys(typeCounts).map(type => treatmentPlans.filter(p => (p.treatmentType || 'Other') === type && p.status === 'In Progress').length),\r\n        borderColor: '#1976d2',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Pending',\r\n        data: Object.keys(typeCounts).map(type => treatmentPlans.filter(p => (p.treatmentType || 'Other') === type && p.status === 'Pending').length),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient Name',\r\n      width: 220,\r\n      valueGetter: (params) => getPatientName(params.row.patientId),\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor Name',\r\n      width: 220,\r\n      valueGetter: (params) => getDoctorName(params.row.doctorId),\r\n    },\r\n    { field: 'estimatedDuration', headerName: 'Est. Duration (days)', width: 160 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 140,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Completed'\r\n              ? 'success'\r\n              : params.value === 'In Progress'\r\n              ? 'primary'\r\n              : params.value === 'Pending'\r\n              ? 'warning'\r\n              : 'default'\r\n          }\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-notes-medical\"></i> Treatment Plans</h4>\r\n      </div>\r\n\r\n      {/* Widgets row */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Plans</Typography>\r\n          <Typography variant=\"h6\">{totalPlans}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Completed</Typography>\r\n          <Typography variant=\"h6\">{completedPlans}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#f3e5f5', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">In Progress</Typography>\r\n          <Typography variant=\"h6\">{inProgressPlans}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Pending</Typography>\r\n          <Typography variant=\"h6\">{pendingPlans}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts row */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Plans by Treatment Type</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Plans per Treatment Type</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Status Trends by Type</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        {/* Material-UI Add Button */}\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"success\"\r\n          sx={{ mb: 2, mr: 2 }}\r\n          onClick={() => setAddOpen(true)}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Add Treatment Plan\r\n        </Button>\r\n\r\n        {/* ...other buttons for edit/delete if needed... */}\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={treatmentPlans}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              {/* <MenuItem onClick={handleActionEdit}>Edit</MenuItem> */}\r\n              <MenuItem onClick={handleActionDelete}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Material-UI Add Treatment Plan Dialog */}\r\n        <Dialog open={addOpen} onClose={() => setAddOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Add New Treatment Plan</DialogTitle>\r\n          <DialogContent>\r\n            <AddTreatmentPlan\r\n              closeModal={() => setAddOpen(false)}\r\n              onCreate={fetchTreatmentPlans}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAddOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreatmentPlans;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack, Chip } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst specializations = [\r\n  'General Dentist', 'Orthodontist', 'Periodontist', 'Endodontist', 'Prosthodontist', 'Oral Surgeon', 'Pediatric Dentist', 'Other'\r\n];\r\nconst daysOfWeek = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n\r\nconst AddDoctor = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    fullName: '',\r\n    licenseNumber: '',\r\n    specialization: '',\r\n    experienceYears: '',\r\n    consultationFee: '',\r\n    availableDays: [],\r\n    availableTimeSlots: [],\r\n    rating: 0\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [timeSlot, setTimeSlot] = useState({ startTime: '', endTime: '' });\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleDaysChange = e => {\r\n    setForm(f => ({ ...f, availableDays: e.target.value }));\r\n  };\r\n\r\n  const handleAddTimeSlot = () => {\r\n    if (timeSlot.startTime && timeSlot.endTime) {\r\n      setForm(f => ({\r\n        ...f,\r\n        availableTimeSlots: [...f.availableTimeSlots, { ...timeSlot }]\r\n      }));\r\n      setTimeSlot({ startTime: '', endTime: '' });\r\n    }\r\n  };\r\n\r\n  const handleRemoveTimeSlot = idx => {\r\n    setForm(f => ({\r\n      ...f,\r\n      availableTimeSlots: f.availableTimeSlots.filter((_, i) => i !== idx)\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const data = {\r\n      ...form,\r\n      experienceYears: Number(form.experienceYears),\r\n      consultationFee: Number(form.consultationFee),\r\n      rating: Number(form.rating)\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/doctors`, data);\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Full Name\"\r\n          name=\"fullName\"\r\n          value={form.fullName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"License Number\"\r\n          name=\"licenseNumber\"\r\n          value={form.licenseNumber}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Specialization\"\r\n          name=\"specialization\"\r\n          value={form.specialization}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {specializations.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Experience (years)\"\r\n          name=\"experienceYears\"\r\n          type=\"number\"\r\n          value={form.experienceYears}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Consultation Fee ($)\"\r\n          name=\"consultationFee\"\r\n          type=\"number\"\r\n          value={form.consultationFee}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Available Days\"\r\n          name=\"availableDays\"\r\n          value={form.availableDays}\r\n          onChange={handleDaysChange}\r\n          SelectProps={{ multiple: true }}\r\n          required\r\n          fullWidth\r\n        >\r\n          {daysOfWeek.map(day => (\r\n            <MenuItem key={day} value={day}>{day}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Box>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <TextField\r\n              label=\"Start Time\"\r\n              name=\"startTime\"\r\n              type=\"time\"\r\n              value={timeSlot.startTime}\r\n              onChange={e => setTimeSlot(ts => ({ ...ts, startTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              sx={{ width: 140 }}\r\n            />\r\n            <TextField\r\n              label=\"End Time\"\r\n              name=\"endTime\"\r\n              type=\"time\"\r\n              value={timeSlot.endTime}\r\n              onChange={e => setTimeSlot(ts => ({ ...ts, endTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              sx={{ width: 140 }}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={handleAddTimeSlot}\r\n              disabled={!timeSlot.startTime || !timeSlot.endTime}\r\n            >\r\n              Add Slot\r\n            </Button>\r\n          </Stack>\r\n          <Box sx={{ mt: 1, display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n            {form.availableTimeSlots.map((slot, idx) => (\r\n              <Chip\r\n                key={idx}\r\n                label={`${slot.startTime} - ${slot.endTime}`}\r\n                onDelete={() => handleRemoveTimeSlot(idx)}\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n        <TextField\r\n          label=\"Rating\"\r\n          name=\"rating\"\r\n          type=\"number\"\r\n          inputProps={{ min: 0, max: 5, step: 0.1 }}\r\n          value={form.rating}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Doctor'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddDoctor;","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack, Chip } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst specializations = [\r\n  'General Dentist', 'Orthodontist', 'Periodontist', 'Endodontist', 'Prosthodontist', 'Oral Surgeon', 'Pediatric Dentist', 'Other'\r\n];\r\nconst daysOfWeek = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n\r\nconst EditDoctor = ({ doctor, closeModal, onEdit }) => {\r\n  const [form, setForm] = useState({\r\n    fullName: '',\r\n    licenseNumber: '',\r\n    specialization: '',\r\n    experienceYears: '',\r\n    consultationFee: '',\r\n    availableDays: [],\r\n    availableTimeSlots: [],\r\n    rating: 0\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [timeSlot, setTimeSlot] = useState({ startTime: '', endTime: '' });\r\n\r\n  useEffect(() => {\r\n    if (doctor) {\r\n      setForm({\r\n        fullName: doctor.fullName || '',\r\n        licenseNumber: doctor.licenseNumber || '',\r\n        specialization: doctor.specialization || '',\r\n        experienceYears: doctor.experienceYears || '',\r\n        consultationFee: doctor.consultationFee || '',\r\n        availableDays: doctor.availableDays || [],\r\n        availableTimeSlots: doctor.availableTimeSlots || [],\r\n        rating: doctor.rating || 0\r\n      });\r\n    }\r\n  }, [doctor]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleDaysChange = e => {\r\n    setForm(f => ({ ...f, availableDays: e.target.value }));\r\n  };\r\n\r\n  const handleAddTimeSlot = () => {\r\n    if (timeSlot.startTime && timeSlot.endTime) {\r\n      setForm(f => ({\r\n        ...f,\r\n        availableTimeSlots: [...f.availableTimeSlots, { ...timeSlot }]\r\n      }));\r\n      setTimeSlot({ startTime: '', endTime: '' });\r\n    }\r\n  };\r\n\r\n  const handleRemoveTimeSlot = idx => {\r\n    setForm(f => ({\r\n      ...f,\r\n      availableTimeSlots: f.availableTimeSlots.filter((_, i) => i !== idx)\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const data = {\r\n      ...form,\r\n      experienceYears: Number(form.experienceYears),\r\n      consultationFee: Number(form.consultationFee),\r\n      rating: Number(form.rating)\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/doctors/${doctor.id}`, data);\r\n      if (onEdit) onEdit(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Full Name\"\r\n          name=\"fullName\"\r\n          value={form.fullName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"License Number\"\r\n          name=\"licenseNumber\"\r\n          value={form.licenseNumber}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Specialization\"\r\n          name=\"specialization\"\r\n          value={form.specialization}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {specializations.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Experience (years)\"\r\n          name=\"experienceYears\"\r\n          type=\"number\"\r\n          value={form.experienceYears}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Consultation Fee ($)\"\r\n          name=\"consultationFee\"\r\n          type=\"number\"\r\n          value={form.consultationFee}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Available Days\"\r\n          name=\"availableDays\"\r\n          value={form.availableDays}\r\n          onChange={handleDaysChange}\r\n          SelectProps={{ multiple: true }}\r\n          required\r\n          fullWidth\r\n        >\r\n          {daysOfWeek.map(day => (\r\n            <MenuItem key={day} value={day}>{day}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Box>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <TextField\r\n              label=\"Start Time\"\r\n              name=\"startTime\"\r\n              type=\"time\"\r\n              value={timeSlot.startTime}\r\n              onChange={e => setTimeSlot(ts => ({ ...ts, startTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              sx={{ width: 140 }}\r\n            />\r\n            <TextField\r\n              label=\"End Time\"\r\n              name=\"endTime\"\r\n              type=\"time\"\r\n              value={timeSlot.endTime}\r\n              onChange={e => setTimeSlot(ts => ({ ...ts, endTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              sx={{ width: 140 }}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={handleAddTimeSlot}\r\n              disabled={!timeSlot.startTime || !timeSlot.endTime}\r\n            >\r\n              Add Slot\r\n            </Button>\r\n          </Stack>\r\n          <Box sx={{ mt: 1, display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n            {form.availableTimeSlots.map((slot, idx) => (\r\n              <Chip\r\n                key={idx}\r\n                label={`${slot.startTime} - ${slot.endTime}`}\r\n                onDelete={() => handleRemoveTimeSlot(idx)}\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n        <TextField\r\n          label=\"Rating\"\r\n          name=\"rating\"\r\n          type=\"number\"\r\n          inputProps={{ min: 0, max: 5, step: 0.1 }}\r\n          value={form.rating}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditDoctor;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { LinearProgress, Rating, Typography, IconButton, Menu, MenuItem, Box, Chip, Button, Dialog, DialogTitle, DialogContent, DialogActions, Avatar, Divider, Stack } from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddDoctor from './AddDoctor';\r\nimport EditDoctor from './EditDoctor';\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst Doctors = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/doctors`)\r\n      .then((res) => setDoctors(res.data))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleActionEdit = () => {\r\n    setEditOpen(true);\r\n    setSelectedDoctor(actionRow);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionView = () => {\r\n    setSelectedDoctor(actionRow); // <-- Make sure to set selectedDoctor!\r\n    setViewOpen(true);\r\n    setActionAnchorEl(null);\r\n  };\r\n\r\n  const handleActionDelete = () => {\r\n    // Implement your delete logic here\r\n    handleActionClose();\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'licenseNumber', headerName: 'License #', width: 150 },\r\n    {\r\n      field: 'specialization',\r\n      headerName: 'Specialization',\r\n      width: 180,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"primary\" variant=\"outlined\" />\r\n      ),\r\n    },\r\n    {\r\n      field: 'experienceYears',\r\n      headerName: 'Experience (years)',\r\n      width: 160,\r\n      type: 'number',\r\n      renderCell: (params) => (\r\n        <Chip label={`${params.value} yrs`} color=\"success\" variant=\"outlined\" />\r\n      ),\r\n    },\r\n    {\r\n      field: 'consultationFee',\r\n      headerName: 'Fee ($)',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip label={`$${parseFloat(params.value).toFixed(2)}`} color=\"info\" variant=\"outlined\" />\r\n      ),\r\n    },\r\n    {\r\n      field: 'availableDays',\r\n      headerName: 'Available Days',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {params.value.map((day, idx) => (\r\n            <Chip key={idx} label={day} color=\"default\" size=\"small\" variant=\"outlined\" />\r\n          ))}\r\n        </Box>\r\n      ),\r\n    },\r\n    {\r\n      field: 'availableTimeSlots',\r\n      headerName: 'Time Slots',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {params.value.map((slot, index) => (\r\n            <Chip\r\n              key={index}\r\n              label={`${slot.startTime} - ${slot.endTime}`}\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n            />\r\n          ))}\r\n        </Box>\r\n      ),\r\n    },\r\n    {\r\n      field: 'rating',\r\n      headerName: 'Rating',\r\n      width: 160,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Rating value={params.value} precision={0.1} readOnly />\r\n          <Chip label={params.value} color=\"warning\" variant=\"outlined\" />\r\n        </Box>\r\n      ),\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Widget summary data\r\n  const totalDoctors = doctors.length;\r\n  const specializations = doctors.reduce((acc, d) => {\r\n    acc[d.specialization] = (acc[d.specialization] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const avgRating = doctors.length ? (doctors.reduce((sum, d) => sum + (d.rating || 0), 0) / doctors.length).toFixed(2) : 0;\r\n  const avgExperience = doctors.length ? (doctors.reduce((sum, d) => sum + (d.experienceYears || 0), 0) / doctors.length).toFixed(1) : 0;\r\n\r\n  // Chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(specializations),\r\n    datasets: [{\r\n      data: Object.values(specializations),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(specializations),\r\n    datasets: [{\r\n      label: 'Doctors per Specialization',\r\n      data: Object.values(specializations),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(specializations),\r\n    datasets: [\r\n      {\r\n        label: 'Average Rating',\r\n        data: Object.keys(specializations).map(spec =>\r\n          doctors.filter(d => d.specialization === spec).reduce((sum, d) => sum + (d.rating || 0), 0) /\r\n          (doctors.filter(d => d.specialization === spec).length || 1)\r\n        ),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Average Experience',\r\n        data: Object.keys(specializations).map(spec =>\r\n          doctors.filter(d => d.specialization === spec).reduce((sum, d) => sum + (d.experienceYears || 0), 0) /\r\n          (doctors.filter(d => d.specialization === spec).length || 1)\r\n        ),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-user-md\"></i> Doctors</h4>\r\n      </div>\r\n\r\n      {/* Widgets row */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Doctors</Typography>\r\n          <Typography variant=\"h6\">{totalDoctors}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Avg. Rating</Typography>\r\n          <Typography variant=\"h6\">{avgRating}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Avg. Experience</Typography>\r\n          <Typography variant=\"h6\">{avgExperience} yrs</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts row */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Doctors by Specialization</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Doctors per Specialization</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Rating & Experience Trends</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, fontWeight: 600 }}\r\n          onClick={() => setAddOpen(true)}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create Doctor\r\n        </Button>\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 600, width: '100%' }}>\r\n            <DataGrid\r\n              rows={doctors}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5, 10]}\r\n              checkboxSelection\r\n              components={{ Toolbar: GridToolbar }}\r\n              rowHeight={110}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleActionView}>View</MenuItem>\r\n              <MenuItem onClick={() => {\r\n                setEditOpen(true);\r\n                setSelectedDoctor(actionRow);\r\n                handleActionClose();\r\n              }}>\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem onClick={handleActionDelete}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n        <Dialog open={addOpen} onClose={() => setAddOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Create Doctor</DialogTitle>\r\n          <DialogContent>\r\n            <AddDoctor\r\n              closeModal={() => setAddOpen(false)}\r\n              onCreate={() => {\r\n                setAddOpen(false);\r\n                setLoading(true);\r\n                axios.get(`${BASE_URL}/doctors`)\r\n                  .then((res) => setDoctors(res.data))\r\n                  .finally(() => setLoading(false));\r\n              }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAddOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Dialog open={editOpen} onClose={() => setEditOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Edit Doctor</DialogTitle>\r\n          <DialogContent>\r\n            <EditDoctor\r\n              doctor={selectedDoctor}\r\n              closeModal={() => setEditOpen(false)}\r\n              onEdit={() => {\r\n                setEditOpen(false);\r\n                setLoading(true);\r\n                axios.get(`${BASE_URL}/doctors`)\r\n                  .then((res) => setDoctors(res.data))\r\n                  .finally(() => setLoading(false));\r\n              }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Dialog open={viewOpen} onClose={() => setViewOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n              <Avatar sx={{ bgcolor: \"#1976d2\", width: 56, height: 56 }}>\r\n                <i className=\"fas fa-user-md\" style={{ fontSize: 32, color: \"#fff\" }}></i>\r\n              </Avatar>\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                {selectedDoctor?.fullName || \"Doctor Details\"}\r\n              </Typography>\r\n            </Box>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            {selectedDoctor ? (\r\n              <Box sx={{ p: 2 }}>\r\n                <Stack spacing={2}>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">General Info</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Typography><b>License #:</b> {selectedDoctor.licenseNumber}</Typography>\r\n                    <Typography><b>Specialization:</b> <Chip label={selectedDoctor.specialization} color=\"primary\" /></Typography>\r\n                    <Typography><b>Experience:</b> <Chip label={`${selectedDoctor.experienceYears} yrs`} color=\"success\" /></Typography>\r\n                    <Typography><b>Consultation Fee:</b> <Chip label={`$${selectedDoctor.consultationFee}`} color=\"info\" /></Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">Availability</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Typography><b>Available Days:</b></Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 1 }}>\r\n                      {(selectedDoctor.availableDays || []).map((day, idx) => (\r\n                        <Chip key={idx} label={day} variant=\"outlined\" />\r\n                      ))}\r\n                    </Box>\r\n                    <Typography><b>Time Slots:</b></Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {(selectedDoctor.availableTimeSlots || []).map((slot, idx) => (\r\n                        <Chip key={idx} label={`${slot.startTime} - ${slot.endTime}`} color=\"secondary\" variant=\"outlined\" />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">Rating</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <Rating value={selectedDoctor.rating} precision={0.1} readOnly />\r\n                      <Chip label={selectedDoctor.rating} color=\"warning\" />\r\n                    </Box>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      <b>Created At:</b> {selectedDoctor.createdAt ? new Date(selectedDoctor.createdAt).toLocaleString() : '-'}<br />\r\n                      <b>Updated At:</b> {selectedDoctor.updatedAt ? new Date(selectedDoctor.updatedAt).toLocaleString() : '-'}\r\n                    </Typography>\r\n                  </Box>\r\n                </Stack>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No doctor selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"primary\" variant=\"contained\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Doctors;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ProfessionalOdontogram.css';\r\nimport axios from 'axios';\r\nimport { FaUserMd, FaUser, FaClinicMedical, FaCalendarAlt, FaIdBadge } from \"react-icons/fa\";\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst TOOTH_STATUSES = ['healthy', 'decayed', 'missing', 'filled'];\r\nconst TOOTH_SURFACES = ['mesial', 'distal', 'occlusal', 'buccal', 'lingual'];\r\n\r\nconst TOOTH_TYPES = [\r\n  'Molar', 'Molar', 'Premolar', 'Premolar', 'Canine', 'Incisor', 'Incisor', 'Incisor',\r\n  'Incisor', 'Incisor', 'Canine', 'Premolar', 'Premolar', 'Molar', 'Molar', 'Molar',\r\n  'Molar', 'Molar', 'Premolar', 'Premolar', 'Canine', 'Incisor', 'Incisor', 'Incisor',\r\n  'Incisor', 'Incisor', 'Canine', 'Premolar', 'Premolar', 'Molar', 'Molar', 'Molar'\r\n];\r\n\r\nconst getInitialTeeth = () =>\r\n  Array.from({ length: 32 }, (_, i) => ({\r\n    id: i + 1,\r\n    status: 'healthy',\r\n    surfaces: {},\r\n    notes: '',\r\n    images: [],\r\n    history: [],\r\n    type: TOOTH_TYPES[i],\r\n    procedure: '',\r\n    operation: '',\r\n    diagnosis: '',\r\n    treatmentSummary: '',\r\n  }));\r\n\r\nconst statusColors = {\r\n  healthy: '#4caf50',\r\n  decayed: '#f44336',\r\n  filled: '#ffeb3b',\r\n  missing: '#e0e0e0'\r\n};\r\n\r\nconst ProfessionalOdontogram = () => {\r\n  const [teeth, setTeeth] = useState(getInitialTeeth());\r\n  const [selectedTooth, setSelectedTooth] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [procedures, setProcedures] = useState([]);\r\n  const [operations, setOperations] = useState([]);\r\n  const [diagnoses, setDiagnoses] = useState([]);\r\n\r\n  // NEW: State for select box data\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [selectedPatient, setSelectedPatient] = useState('');\r\n  const [selectedDoctor, setSelectedDoctor] = useState('');\r\n  const [selectedClinic, setSelectedClinic] = useState('');\r\n  const [selectedAppointment, setSelectedAppointment] = useState('');\r\n  const [selectedMembership, setSelectedMembership] = useState('');\r\n  const [sentFormData, setSentFormData] = useState(null);\r\n  const [backendTeethHistory, setBackendTeethHistory] = useState([]); // <-- New state for backend teeth history\r\n\r\n  // Fetch select box data and lists\r\n  useEffect(() => {\r\n    fetch(`${BASE_URL}/procedures`)\r\n      .then(res => res.json())\r\n      .then(data => setProcedures(data))\r\n      .catch(() => setProcedures([]));\r\n    fetch(`${BASE_URL}/operations`)\r\n      .then(res => res.json())\r\n      .then(data => setOperations(data))\r\n      .catch(() => setOperations([]));\r\n    fetch(`${BASE_URL}/diagnoses`)\r\n      .then(res => res.json())\r\n      .then(data => setDiagnoses(data))\r\n      .catch(() => setDiagnoses([]));\r\n    fetch(`${BASE_URL}/patients`)\r\n      .then(res => res.json())\r\n      .then(data => setPatients(data))\r\n      .catch(() => setPatients([]));\r\n    fetch(`${BASE_URL}/doctors`)\r\n      .then(res => res.json())\r\n      .then(data => setDoctors(data))\r\n      .catch(() => setDoctors([]));\r\n    fetch(`${BASE_URL}/clinics`)\r\n      .then(res => res.json())\r\n      .then(data => setClinics(data))\r\n      .catch(() => setClinics([]));\r\n    fetch(`${BASE_URL}/appointments`)\r\n      .then(res => res.json())\r\n      .then(data => setAppointments(data))\r\n      .catch(() => setAppointments([]));\r\n  }, []);\r\n\r\n  // Fetch teeth data from backend when all filters are selected\r\n  useEffect(() => {\r\n    if (\r\n      selectedPatient &&\r\n      selectedDoctor &&\r\n      selectedClinic &&\r\n      selectedAppointment &&\r\n      selectedMembership\r\n    ) {\r\n      axios\r\n        .post(`${BASE_URL}/ondotogram/teeth`, {\r\n          patient: parseInt(selectedPatient, 10),\r\n          doctor: parseInt(selectedDoctor, 10),\r\n          clinic: parseInt(selectedClinic, 10),\r\n          appointment: parseInt(selectedAppointment, 10),\r\n          membership: isNaN(selectedMembership)\r\n            ? selectedMembership\r\n            : parseInt(selectedMembership, 10)\r\n        })\r\n        .then((res) => {\r\n          const backendTeeth = res.data;\r\n          setBackendTeethHistory(backendTeeth); // <-- Save for history display\r\n          setTeeth((prevTeeth) =>\r\n            prevTeeth.map((tooth) => {\r\n              const found = backendTeeth.find(\r\n                (t) => t.toothNumber === tooth.id\r\n              );\r\n              return found\r\n                ? {\r\n                    ...tooth,\r\n                    status: found.status,\r\n                    notes: found.notes,\r\n                    procedure: found.procedure,\r\n                    operation: found.operation,\r\n                    diagnosis: found.diagnosis,\r\n                    treatmentSummary: found.treatmentSummary\r\n                  }\r\n                : { ...tooth, status: 'healthy', notes: '', procedure: '', operation: '', diagnosis: '', treatmentSummary: '' };\r\n            })\r\n          );\r\n        })\r\n        .catch(() => {\r\n          setTeeth(getInitialTeeth());\r\n          setBackendTeethHistory([]);\r\n        });\r\n    }\r\n  }, [selectedPatient, selectedDoctor, selectedClinic, selectedAppointment, selectedMembership]);\r\n\r\n  // Tooltip content for a tooth\r\n  const getToothTooltip = (tooth) => {\r\n    return `\r\nTooth ${tooth.id}\r\nStatus: ${tooth.status}\r\nNotes: ${tooth.notes || '-'}\r\nProcedure: ${tooth.procedure || '-'}\r\nOperation: ${tooth.operation || '-'}\r\nDiagnosis: ${tooth.diagnosis || '-'}\r\nTreatment: ${tooth.treatmentSummary || '-'}\r\n    `.trim();\r\n  };\r\n\r\n  // SVG for tooth with color and cross for missing\r\n  const toothSVG = (type, status, id, isSelected) => {\r\n    let fill =\r\n      status === 'healthy'\r\n        ? statusColors.healthy\r\n        : status === 'decayed'\r\n        ? statusColors.decayed\r\n        : status === 'filled'\r\n        ? statusColors.filled\r\n        : status === 'missing'\r\n        ? statusColors.missing\r\n        : '#fff';\r\n\r\n    let numberColor = '#ff3b3b';\r\n\r\n    // Cross for missing\r\n    const cross = (\r\n      <>\r\n        <line x1=\"8\" y1=\"8\" x2=\"32\" y2=\"32\" stroke=\"#f44336\" strokeWidth=\"3\" />\r\n        <line x1=\"32\" y1=\"8\" x2=\"8\" y2=\"32\" stroke=\"#f44336\" strokeWidth=\"3\" />\r\n      </>\r\n    );\r\n\r\n    if (type === 'Molar') {\r\n      return (\r\n        <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\r\n          <ellipse cx=\"20\" cy=\"20\" rx=\"15\" ry=\"12\" fill={fill} stroke=\"#000\" strokeWidth=\"2\"/>\r\n          {status === 'missing' && cross}\r\n          <title>{getToothTooltip({id, status, ...teeth[id-1]})}</title>\r\n          <text x=\"20\" y=\"36\" textAnchor=\"middle\" fontSize=\"10\" fill={numberColor} fontWeight=\"bold\">{id}</text>\r\n        </svg>\r\n      );\r\n    }\r\n    if (type === 'Premolar') {\r\n      return (\r\n        <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\r\n          <ellipse cx=\"20\" cy=\"20\" rx=\"10\" ry=\"13\" fill={fill} stroke=\"#000\" strokeWidth=\"2\"/>\r\n          {status === 'missing' && cross}\r\n          <title>{getToothTooltip({id, status, ...teeth[id-1]})}</title>\r\n          <text x=\"20\" y=\"36\" textAnchor=\"middle\" fontSize=\"10\" fill={numberColor} fontWeight=\"bold\">{id}</text>\r\n        </svg>\r\n      );\r\n    }\r\n    if (type === 'Canine') {\r\n      return (\r\n        <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\r\n          <path d=\"M20 8 Q25 20 20 32 Q15 20 20 8\" fill={fill} stroke=\"#000\" strokeWidth=\"2\"/>\r\n          {status === 'missing' && cross}\r\n          <title>{getToothTooltip({id, status, ...teeth[id-1]})}</title>\r\n          <text x=\"20\" y=\"36\" textAnchor=\"middle\" fontSize=\"10\" fill={numberColor} fontWeight=\"bold\">{id}</text>\r\n        </svg>\r\n      );\r\n    }\r\n    // Incisor\r\n    return (\r\n      <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\r\n        <rect x=\"13\" y=\"10\" width=\"14\" height=\"20\" rx=\"7\" fill={fill} stroke=\"#000\" strokeWidth=\"2\"/>\r\n        {status === 'missing' && cross}\r\n        <title>{getToothTooltip({id, status, ...teeth[id-1]})}</title>\r\n        <text x=\"20\" y=\"36\" textAnchor=\"middle\" fontSize=\"10\" fill={numberColor} fontWeight=\"bold\">{id}</text>\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  // Render arch with tooltip and color\r\n  const renderArch = (teethSlice, arch) => {\r\n    const archRadius = 200;\r\n    const archCenterX = 300;\r\n    const archCenterY = arch === 'upper' ? 320 : 260;\r\n    return (\r\n      <g>\r\n        {teethSlice.map((tooth, idx) => {\r\n          const angle =\r\n            arch === 'upper'\r\n              ? Math.PI * (1 - idx / 15)\r\n              : -Math.PI * (idx / 15);\r\n          const x = archCenterX + archRadius * Math.cos(angle);\r\n          const y = archCenterY + archRadius * Math.sin(angle);\r\n\r\n          const isSelected = selectedTooth && selectedTooth.id === tooth.id;\r\n\r\n          return (\r\n            <g\r\n              key={tooth.id}\r\n              transform={`translate(${x},${y})`}\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => handleToothDetails(tooth)}\r\n              onMouseEnter={e => {\r\n                // Optional: highlight on hover\r\n                e.currentTarget.querySelector('ellipse,rect,path').setAttribute('stroke', '#1976d2');\r\n                e.currentTarget.querySelector('ellipse,rect,path').setAttribute('stroke-width', '3');\r\n              }}\r\n              onMouseLeave={e => {\r\n                e.currentTarget.querySelector('ellipse,rect,path').setAttribute('stroke', '#000');\r\n                e.currentTarget.querySelector('ellipse,rect,path').setAttribute('stroke-width', '2');\r\n              }}\r\n            >\r\n              {toothSVG(tooth.type, tooth.status, tooth.id, isSelected)}\r\n            </g>\r\n          );\r\n        })}\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const handleToothClick = (id) => {\r\n    console.log('Tooth clicked:', id);\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === id\r\n          ? {\r\n              ...tooth,\r\n              status:\r\n                TOOTH_STATUSES[\r\n                  (TOOTH_STATUSES.indexOf(tooth.status) + 1) %\r\n                    TOOTH_STATUSES.length\r\n                ],\r\n              history: [\r\n                ...tooth.history,\r\n                {\r\n                  date: new Date().toISOString(),\r\n                  status: tooth.status,\r\n                },\r\n              ],\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n  };\r\n\r\n  // Open modal for details\r\n  const handleToothDetails = (tooth) => {\r\n    setSelectedTooth(tooth);\r\n  };\r\n\r\n  // Update notes, surfaces, images\r\n  const handleModalChange = (field, value) => {\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? { ...tooth, [field]: value }\r\n          : tooth\r\n      )\r\n    );\r\n    setSelectedTooth((prev) =>\r\n      prev ? { ...prev, [field]: value } : prev\r\n    );\r\n  };\r\n\r\n  // Surface selection\r\n  const handleSurfaceToggle = (surface) => {\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? {\r\n              ...tooth,\r\n              surfaces: {\r\n                ...tooth.surfaces,\r\n                [surface]: !tooth.surfaces[surface],\r\n              },\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n  };\r\n\r\n  // Image upload\r\n  const handleImageUpload = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? {\r\n              ...tooth,\r\n              images: [\r\n                ...tooth.images,\r\n                ...files.map((file) => URL.createObjectURL(file)),\r\n              ],\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n  };\r\n\r\n  // Export odontogram as image\r\n  const handleExport = () => {\r\n    const odontogramEl = document.querySelector('.odontogram');\r\n    if (!odontogramEl) return;\r\n    import('html2canvas').then((html2canvas) => {\r\n      html2canvas.default(odontogramEl).then((canvas) => {\r\n        const link = document.createElement('a');\r\n        link.download = 'odontogram.png';\r\n        link.href = canvas.toDataURL();\r\n        link.click();\r\n      });\r\n    });\r\n  };\r\n\r\n  // Update the save button handler to send data to backend\r\n  const handleSaveToothDetails = async () => {\r\n    if (!selectedTooth) return;\r\n    const newHistoryItem = {\r\n      date: new Date().toLocaleString(),\r\n      status: selectedTooth.status,\r\n      notes: selectedTooth.notes,\r\n      procedure: selectedTooth.procedure,\r\n      operation: selectedTooth.operation,\r\n      diagnosis: selectedTooth.diagnosis,\r\n      treatmentSummary: selectedTooth.treatmentSummary,\r\n    };\r\n    setTeeth(prev =>\r\n      prev.map(tooth =>\r\n        tooth.id === selectedTooth.id\r\n          ? { ...tooth, history: [...tooth.history, newHistoryItem] }\r\n          : tooth\r\n      )\r\n    );\r\n    setSentFormData(newHistoryItem);\r\n\r\n    // Ensure IDs are integers (or null if not selected)\r\n    const payload = {\r\n      patient: selectedPatient ? parseInt(selectedPatient, 10) : null,\r\n      doctor: selectedDoctor ? parseInt(selectedDoctor, 10) : null,\r\n      clinic: selectedClinic ? parseInt(selectedClinic, 10) : null,\r\n      appointment: selectedAppointment ? parseInt(selectedAppointment, 10) : null,\r\n      membership: selectedMembership && !isNaN(selectedMembership) ? parseInt(selectedMembership, 10) : selectedMembership,\r\n      teeth: [\r\n        {\r\n          toothNumber: selectedTooth.id,\r\n          status: selectedTooth.status,\r\n          notes: selectedTooth.notes,\r\n          procedure: selectedTooth.procedure,\r\n          operation: selectedTooth.operation,\r\n          diagnosis: selectedTooth.diagnosis,\r\n          treatmentSummary: selectedTooth.treatmentSummary,\r\n        }\r\n      ]\r\n    };\r\n    console.log('Sending data:', payload);\r\n    try {\r\n      await axios.post(`${BASE_URL}/ondotogram`, payload);\r\n      //alert('Data saved successfully!');\r\n    } catch (error) {\r\n      alert('Failed to save data.');\r\n    }\r\n  };\r\n\r\n  // Add this helper at the top (or near your imports)\r\n  const formatDate = (dateStr) => {\r\n    if (!dateStr) return '-';\r\n    const d = new Date(dateStr);\r\n    if (isNaN(d)) return dateStr;\r\n    return d.toLocaleString();\r\n  };\r\n\r\n  // Show all backend history for all teeth when a patient is selected\r\n  const renderAllTeethHistoryTable = () => {\r\n    if (!selectedPatient || backendTeethHistory.length === 0) return null;\r\n    return (\r\n      <div style={{\r\n        width: '100%',\r\n        margin: '32px 0 0 0',\r\n        padding: '24px',\r\n        background: '#fff',\r\n        borderRadius: '16px',\r\n        border: '1.5px solid #90caf9',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 4px 24px rgba(25, 118, 210, 0.07)'\r\n      }}>\r\n        <div style={{ fontWeight: 'bold', color: '#1976d2', marginBottom: 12, fontSize: 20 }}>\r\n          All Teeth Treatment History for Patient\r\n        </div>\r\n        <table style={{\r\n          width: '100%',\r\n          borderCollapse: 'collapse',\r\n          background: '#fafdff',\r\n          borderRadius: '8px',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.03)'\r\n        }}>\r\n          <thead style={{ background: '#e3f2fd' }}>\r\n            <tr>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Tooth Number</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Date</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Status</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Notes</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Procedure</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Operation</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Diagnosis</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Treatment Summary</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {backendTeethHistory.map((t, idx) => (\r\n              <tr key={idx}>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.toothNumber}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>\r\n                  {formatDate(t.date || t.createdAt)}\r\n                </td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.status}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.notes}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.procedure}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.operation}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.diagnosis}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.treatmentSummary}</td>\r\n              </tr>\r\n            ))}\r\n            {backendTeethHistory.length === 0 && (\r\n              <tr>\r\n                <td colSpan={8} style={{ color: '#888', textAlign: 'center', padding: 12 }}>\r\n                  No history yet.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // --- Filter Section ---\r\n  const renderFilterSection = () => (\r\n    <div\r\n      style={{\r\n        background: '#fff',\r\n        borderRadius: '16px',\r\n        border: '1px solid #1976d2',\r\n        boxShadow: '0 4px 24px rgba(25, 118, 210, 0.08)',\r\n        padding: '32px 24px',\r\n        margin: '0 auto 32px auto',\r\n        width: '100%',\r\n        maxWidth: 1200,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        gap: '32px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        boxSizing: 'border-box'\r\n      }}\r\n    >\r\n      <div style={{ minWidth: 200 }}>\r\n        <label style={{ fontWeight: 600, color: '#1976d2', display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          <FaUser style={{ color: '#1976d2' }} /> Patient\r\n        </label>\r\n        <select\r\n          value={selectedPatient}\r\n          onChange={e => setSelectedPatient(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginTop: '8px',\r\n            borderRadius: '8px',\r\n            border: '1.5px solid #90caf9',\r\n            background: '#f8fafd',\r\n            fontSize: 16\r\n          }}\r\n        >\r\n          <option value=\"\">Select Patient</option>\r\n          {patients.map((p) => (\r\n            <option key={p.id} value={p.id}>{p.fullName || p.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div style={{ minWidth: 200 }}>\r\n        <label style={{ fontWeight: 600, color: '#1976d2', display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          <FaUserMd style={{ color: '#1976d2' }} /> Doctor\r\n        </label>\r\n        <select\r\n          value={selectedDoctor}\r\n          onChange={e => setSelectedDoctor(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginTop: '8px',\r\n            borderRadius: '8px',\r\n            border: '1.5px solid #90caf9',\r\n            background: '#f8fafd',\r\n            fontSize: 16\r\n          }}\r\n        >\r\n          <option value=\"\">Select Doctor</option>\r\n          {doctors.map((d) => (\r\n            <option key={d.id} value={d.id}>{d.fullName || d.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div style={{ minWidth: 200 }}>\r\n        <label style={{ fontWeight: 600, color: '#1976d2', display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          <FaClinicMedical style={{ color: '#1976d2' }} /> Clinic\r\n        </label>\r\n        <select\r\n          value={selectedClinic}\r\n          onChange={e => setSelectedClinic(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginTop: '8px',\r\n            borderRadius: '8px',\r\n            border: '1.5px solid #90caf9',\r\n            background: '#f8fafd',\r\n            fontSize: 16\r\n          }}\r\n        >\r\n          <option value=\"\">Select Clinic</option>\r\n          {clinics.map((c) => (\r\n            <option key={c.id} value={c.id}>{c.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div style={{ minWidth: 200 }}>\r\n        <label style={{ fontWeight: 600, color: '#1976d2', display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          <FaCalendarAlt style={{ color: '#1976d2' }} /> Appointment\r\n        </label>\r\n        <select\r\n          value={selectedAppointment}\r\n          onChange={e => setSelectedAppointment(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginTop: '8px',\r\n            borderRadius: '8px',\r\n            border: '1.5px solid #90caf9',\r\n            background: '#f8fafd',\r\n            fontSize: 16\r\n          }}\r\n        >\r\n          <option value=\"\">Select Appointment</option>\r\n          {appointments.map((a) => (\r\n            <option key={a.id} value={a.id}>\r\n              {a.appointmentDate\r\n                ? `${a.appointmentDate} (${a.startTime} - ${a.endTime})`\r\n                : a.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div style={{ minWidth: 200 }}>\r\n        <label style={{ fontWeight: 600, color: '#1976d2', display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          <FaIdBadge style={{ color: '#1976d2' }} /> Membership\r\n        </label>\r\n        <select\r\n          value={selectedMembership}\r\n          onChange={e => setSelectedMembership(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginTop: '8px',\r\n            borderRadius: '8px',\r\n            border: '1.5px solid #90caf9',\r\n            background: '#f8fafd',\r\n            fontSize: 16\r\n          }}\r\n        >\r\n          <option value=\"\">Select Membership</option>\r\n          <option value=\"basic\">Basic</option>\r\n          <option value=\"premium\">Premium</option>\r\n          <option value=\"vip\">VIP</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // --- Tooth Details Section ---\r\n  const renderToothDetailsSection = () => (\r\n    <div style={{\r\n      minWidth: 350,\r\n      maxWidth: 420,\r\n      padding: '28px 24px',\r\n      border: 'none',\r\n      borderRadius: '18px',\r\n      background: '#fff',\r\n      marginLeft: 16,\r\n      boxShadow: '0 4px 24px rgba(25, 118, 210, 0.10)',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'flex-start'\r\n    }}>\r\n      {selectedTooth ? (\r\n        <>\r\n          <h2 style={{ color: '#1976d2', marginBottom: 18, fontWeight: 700 }}>\r\n            Tooth #{selectedTooth.id} Details\r\n          </h2>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Status</label>\r\n            <select\r\n              style={{\r\n                width: '100%',\r\n                marginBottom: 8,\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 16\r\n              }}\r\n              value={selectedTooth.status}\r\n              onChange={e => handleModalChange('status', e.target.value)}\r\n            >\r\n              <option value=\"\">Select Status</option>\r\n              {TOOTH_STATUSES.map(status => (\r\n                <option key={status} value={status}>{status.charAt(0).toUpperCase() + status.slice(1)}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Notes</label>\r\n            <textarea\r\n              style={{\r\n                width: '100%',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 15,\r\n                minHeight: 40,\r\n                marginTop: 4,\r\n                marginBottom: 8,\r\n                resize: 'vertical'\r\n              }}\r\n              value={selectedTooth.notes || ''}\r\n              onChange={e => handleModalChange('notes', e.target.value)}\r\n              placeholder=\"Enter notes...\"\r\n            />\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Procedure</label>\r\n            <select\r\n              style={{\r\n                width: '100%',\r\n                marginBottom: 8,\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 16\r\n              }}\r\n              value={selectedTooth.procedure}\r\n              onChange={e => handleModalChange('procedure', e.target.value)}\r\n            >\r\n              <option value=\"\">Select Procedure</option>\r\n              {procedures.map(p => (\r\n                <option key={p.id} value={p.procedureName}>{p.procedureName}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Operation</label>\r\n            <select\r\n              style={{\r\n                width: '100%',\r\n                marginBottom: 8,\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 16\r\n              }}\r\n              value={selectedTooth.operation}\r\n              onChange={e => handleModalChange('operation', e.target.value)}\r\n            >\r\n              <option value=\"\">Select Operation</option>\r\n              {operations.map(o => (\r\n                <option key={o.id} value={o.procedureName}>{o.procedureName}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Diagnosis</label>\r\n            <select\r\n              style={{\r\n                width: '100%',\r\n                marginBottom: 8,\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 16\r\n              }}\r\n              value={selectedTooth.diagnosis}\r\n              onChange={e => handleModalChange('diagnosis', e.target.value)}\r\n            >\r\n              <option value=\"\">Select Diagnosis</option>\r\n              {diagnoses.map(d => (\r\n                <option key={d.id} value={d.condition}>{d.condition}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Treatment Summary</label>\r\n            <textarea\r\n              style={{\r\n                width: '100%',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 15,\r\n                minHeight: 40,\r\n                marginTop: 4,\r\n                marginBottom: 8,\r\n                resize: 'vertical'\r\n              }}\r\n              value={selectedTooth.treatmentSummary || ''}\r\n              onChange={e => handleModalChange('treatmentSummary', e.target.value)}\r\n              placeholder=\"Add treatment summary...\"\r\n            />\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 16 }}>\r\n            <button\r\n              style={{\r\n                background: '#1976d2',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                padding: '10px 32px',\r\n                fontWeight: 'bold',\r\n                fontSize: 16,\r\n                cursor: 'pointer',\r\n                boxShadow: '0 2px 8px rgba(25, 118, 210, 0.08)'\r\n              }}\r\n              onClick={handleSaveToothDetails}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div style={{ color: '#888', marginTop: 40, fontSize: 18, textAlign: 'center' }}>\r\n          Select a tooth to see details\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // --- Tooth Treatment History Section ---\r\n  const renderToothTreatmentHistorySection = () => (\r\n    <div style={{\r\n      width: '100%',\r\n      margin: '32px 0 0 0',\r\n      padding: '24px',\r\n      background: '#fff',\r\n      borderRadius: '16px',\r\n      border: '1.5px solid #90caf9',\r\n      textAlign: 'left',\r\n      boxSizing: 'border-box',\r\n      boxShadow: '0 4px 24px rgba(25, 118, 210, 0.07)'\r\n    }}>\r\n      <div style={{ fontWeight: 'bold', color: '#1976d2', marginBottom: 12, fontSize: 20 }}>\r\n        Tooth Treatment History\r\n      </div>\r\n      {selectedTooth ? (\r\n        <table style={{\r\n          width: '100%',\r\n          borderCollapse: 'collapse',\r\n          background: '#fafdff',\r\n          borderRadius: '8px',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.03)'\r\n        }}>\r\n          <thead style={{ background: '#e3f2fd' }}>\r\n            <tr>\r\n              {/* <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Date</th> */}\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Created At</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Status</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Notes</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Procedure</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Operation</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Diagnosis</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Treatment Summary</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {backendTeethHistory\r\n              .filter((t) => t.toothNumber === selectedTooth.id)\r\n              .map((t, idx) => (\r\n                <tr key={'backend-' + idx}>\r\n                  {/* <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{formatDate(t.date)}</td> */}\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{formatDate(t.createdAt)}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.status}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.notes}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.procedure}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.operation}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.diagnosis}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.treatmentSummary}</td>\r\n                </tr>\r\n              ))}\r\n            {selectedTooth.history.map((h, idx) => (\r\n              <tr key={'local-' + idx}>\r\n                {/* <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{formatDate(h.date)}</td> */}\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>-</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.status}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.notes}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.procedure}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.operation}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.diagnosis}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.treatmentSummary}</td>\r\n              </tr>\r\n            ))}\r\n            {backendTeethHistory.filter((t) => t.toothNumber === selectedTooth.id).length === 0 &&\r\n              selectedTooth.history.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={7} style={{ color: '#888', textAlign: 'center', padding: 12 }}>\r\n                    No history yet.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div style={{ color: '#888', marginTop: 24, fontSize: 16 }}>Select a tooth to see history</div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // --- All Teeth Treatment History for Patient Section ---\r\n  // (leave your renderAllTeethHistoryTable as is, but you can update the style for consistency)\r\n  const renderAllTeethHistoryTableStyled = () => {\r\n    if (!selectedPatient || backendTeethHistory.length === 0) return null;\r\n    return (\r\n      <div style={{\r\n        width: '100%',\r\n        margin: '32px 0 0 0',\r\n        padding: '24px',\r\n        background: '#fff',\r\n        borderRadius: '16px',\r\n        border: '1.5px solid #90caf9',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 4px 24px rgba(25, 118, 210, 0.07)'\r\n      }}>\r\n        <div style={{ fontWeight: 'bold', color: '#1976d2', marginBottom: 12, fontSize: 20 }}>\r\n          All Teeth Treatment History for Patient\r\n        </div>\r\n        <table style={{\r\n          width: '100%',\r\n          borderCollapse: 'collapse',\r\n          background: '#fafdff',\r\n          borderRadius: '8px',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.03)'\r\n        }}>\r\n          <thead style={{ background: '#e3f2fd' }}>\r\n            <tr>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Tooth Number</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Date</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Status</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Notes</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Procedure</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Operation</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Diagnosis</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Treatment Summary</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {backendTeethHistory.map((t, idx) => (\r\n              <tr key={idx}>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.toothNumber}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{formatDate(t.date || t.createdAt)}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.status}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.notes}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.procedure}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.operation}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.diagnosis}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.treatmentSummary}</td>\r\n              </tr>\r\n            ))}\r\n            {backendTeethHistory.length === 0 && (\r\n              <tr>\r\n                <td colSpan={8} style={{ color: '#888', textAlign: 'center', padding: 12 }}>\r\n                  No history yet.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {renderFilterSection()}\r\n      <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-start',\r\n        gap: 32\r\n      }}>\r\n        {/* Odontogram Block */}\r\n        <div style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          width: '100%'\r\n        }}>\r\n          <div style={{ width: '100%', overflowX: 'auto', display: 'flex', justifyContent: 'center', textAlign: 'center' }}>\r\n            <svg\r\n              width=\"800\"\r\n              height=\"700\"\r\n              viewBox=\"-70 0 800 700\"\r\n              className=\"odontogram-svg odontogram\"\r\n              style={{ display: 'block', background: '#fff' }}\r\n            >\r\n              {/* Jaw labels */}\r\n              <text x=\"320\" y=\"50\" textAnchor=\"middle\" fontSize=\"22\" fill=\"#007bff\" fontWeight=\"bold\">Upper Jaw</text>\r\n              <text x=\"320\" y=\"610\" textAnchor=\"middle\" fontSize=\"22\" fill=\"#007bff\" fontWeight=\"bold\">Lower Jaw</text>\r\n              <text x=\"80\" y=\"370\" textAnchor=\"middle\" fontSize=\"18\" fill=\"#007bff\" fontWeight=\"bold\" transform=\"rotate(-90 80,370)\">Left</text>\r\n              <text x=\"720\" y=\"520\" textAnchor=\"middle\" fontSize=\"18\" fill=\"#007bff\" fontWeight=\"bold\" transform=\"rotate(90 720,370)\">Right</text>\r\n              {renderArch(teeth.slice(0, 16), 'upper')}\r\n              {renderArch(teeth.slice(16), 'lower')}\r\n            </svg>\r\n          </div>\r\n          <div style={{ width: '100%', textAlign: 'center', marginTop: '16px' }}>\r\n            <button\r\n              style={{\r\n                background: '#1976d2',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                padding: '10px 32px',\r\n                fontWeight: 'bold',\r\n                fontSize: 16,\r\n                cursor: 'pointer',\r\n                boxShadow: '0 2px 8px rgba(25, 118, 210, 0.08)'\r\n              }}\r\n              onClick={() => {\r\n                const odontogramEl = document.querySelector('.odontogram');\r\n                if (!odontogramEl) return;\r\n                import('html2canvas').then((html2canvas) => {\r\n                  html2canvas.default(odontogramEl.parentNode).then((canvas) => {\r\n                    const link = document.createElement('a');\r\n                    link.download = 'odontogram.png';\r\n                    link.href = canvas.toDataURL();\r\n                    link.click();\r\n                  });\r\n                });\r\n              }}\r\n            >\r\n              Download Odontogram Image\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {renderToothDetailsSection()}\r\n      </div>\r\n      {renderToothTreatmentHistorySection()}\r\n      {renderAllTeethHistoryTableStyled()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessionalOdontogram;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport {\r\n  Box, Button, Typography, IconButton, TextField, Paper, Avatar, List, ListItem, ListItemAvatar, ListItemText, Divider, Dialog, DialogTitle, DialogContent, DialogActions, MenuItem\r\n} from '@mui/material';\r\nimport VideocamIcon from '@mui/icons-material/Videocam';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport MicOffIcon from '@mui/icons-material/MicOff';\r\nimport VideocamOffIcon from '@mui/icons-material/VideocamOff';\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport HistoryIcon from '@mui/icons-material/History';\r\nimport VideoCallOutlinedIcon from '@mui/icons-material/VideoCallOutlined';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst dummyPatient = {\r\n  name: \"John Doe\",\r\n  avatar: \"\",\r\n  id: \"11111111-aaaa-bbbb-cccc-111111111111\"\r\n};\r\n\r\n// Dummy call history data\r\nconst dummyCallHistory = [\r\n  {\r\n    id: 1,\r\n    patientName: \"John Doe\",\r\n    patientAvatar: \"\",\r\n    date: \"2025-07-29T15:00:00.000Z\",\r\n    type: \"video\",\r\n    duration: \"12:34\",\r\n    status: \"Completed\"\r\n  },\r\n  {\r\n    id: 2,\r\n    patientName: \"Jane Smith\",\r\n    patientAvatar: \"\",\r\n    date: \"2025-07-28T10:30:00.000Z\",\r\n    type: \"audio\",\r\n    duration: \"08:21\",\r\n    status: \"Completed\"\r\n  },\r\n  {\r\n    id: 3,\r\n    patientName: \"John Doe\",\r\n    patientAvatar: \"\",\r\n    date: \"2025-07-27T09:15:00.000Z\",\r\n    type: \"video\",\r\n    duration: \"15:02\",\r\n    status: \"Missed\"\r\n  }\r\n];\r\n\r\n// Helper to generate a random Google Meet code (for demo, not official)\r\nfunction generateMeetCode() {\r\n  const chars = 'abcdefghijklmnopqrstuvwxyz';\r\n  const rand = () =>\r\n    Array.from({ length: 3 }, () => chars[Math.floor(Math.random() * chars.length)]).join('');\r\n  return `${rand()}-${rand()}-${rand()}`;\r\n}\r\n\r\n// Add this to your component\r\n\r\n// Replace with your Google OAuth2 client ID\r\nconst CLIENT_ID = \"373581238151-l5fft2cc1mlm0o5nrvins188im9uj4m7.apps.googleusercontent.com\";\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\r\n\r\nfunction loadScript(src) {\r\n  return new Promise((resolve) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = src;\r\n    script.onload = resolve;\r\n    document.body.appendChild(script);\r\n  });\r\n}\r\n\r\nconst Telemedicine = () => {\r\n  const [inCall, setInCall] = useState(false);\r\n  const [videoEnabled, setVideoEnabled] = useState(true);\r\n  const [audioEnabled, setAudioEnabled] = useState(true);\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatInput, setChatInput] = useState('');\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const [meetLink, setMeetLink] = useState('');\r\n  const [copied, setCopied] = useState(false);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [calendarLoading, setCalendarLoading] = useState(false);\r\n  const [patients, setPatients] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [newAppointment, setNewAppointment] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    sessionDuration: 30,\r\n    start: null,\r\n    end: null,\r\n    meetingLink: '',\r\n    status: 'Scheduled',\r\n    recordedSessionUrl: ''\r\n  });\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [showEventModal, setShowEventModal] = useState(false);\r\n  const localVideoRef = useRef(null);\r\n  const remoteVideoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadScript(\"https://accounts.google.com/gsi/client\");\r\n    loadScript(\"https://apis.google.com/js/api.js\");\r\n    fetchAppointments();\r\n    fetchPatients();\r\n    fetchDoctors();\r\n    fetchClinics();\r\n  }, []);\r\n\r\n  const fetchAppointments = async () => {\r\n    setCalendarLoading(true);\r\n    try {\r\n      const res = await axios.get(BASE_URL+'/telemedicines');\r\n      setAppointments(res.data);\r\n    } catch {\r\n      setAppointments([]);\r\n    }\r\n    setCalendarLoading(false);\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const res = await axios.get(BASE_URL+'/patients');\r\n      setPatients(res.data);\r\n    } catch {\r\n      setPatients([]);\r\n    }\r\n  };\r\n\r\n  const fetchClinics = async () => {\r\n    try {\r\n      const res = await axios.get(BASE_URL+'/clinics');\r\n      setClinics(res.data);\r\n    } catch {\r\n      setClinics([]);\r\n    }\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const res = await axios.get(BASE_URL+'/doctors');\r\n      setDoctors(res.data);\r\n    } catch {\r\n      setDoctors([]);\r\n    }\r\n  };\r\n\r\n  // Simulate starting a call (replace with real WebRTC logic)\r\n  const startCall = (type) => {\r\n    setInCall(true);\r\n    setVideoEnabled(type === 'video');\r\n    setAudioEnabled(true);\r\n    setShowHistory(false);\r\n    // Here you would initialize WebRTC and attach streams to refs\r\n  };\r\n\r\n  const endCall = () => {\r\n    setInCall(false);\r\n    setShowChat(false);\r\n    // Here you would close WebRTC connections\r\n  };\r\n\r\n  const toggleVideo = () => setVideoEnabled(v => !v);\r\n  const toggleAudio = () => setAudioEnabled(a => !a);\r\n\r\n  const handleSendMessage = () => {\r\n    if (chatInput.trim()) {\r\n      setMessages([...messages, { sender: 'doctor', text: chatInput }]);\r\n      setChatInput('');\r\n      // Here you would send the message to the patient via signaling server\r\n    }\r\n  };\r\n\r\n  // Authenticate and get access token\r\n  const authenticate = async () => {\r\n    return new Promise((resolve, reject) => {\r\n      window.google.accounts.oauth2.initTokenClient({\r\n        client_id: CLIENT_ID,\r\n        scope: SCOPES,\r\n        callback: (tokenResponse) => {\r\n          if (tokenResponse && tokenResponse.access_token) {\r\n            resolve(tokenResponse.access_token);\r\n          } else {\r\n            reject(\"No access token\");\r\n          }\r\n        },\r\n      }).requestAccessToken();\r\n    });\r\n  };\r\n\r\n  // Create Google Meet event\r\n  const createMeetEvent = async (start, end) => {\r\n    const accessToken = await authenticate();\r\n    return new Promise((resolve) => {\r\n      window.gapi.load(\"client\", async () => {\r\n        await window.gapi.client.init({\r\n          apiKey: \"\",\r\n          discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\r\n        });\r\n        window.gapi.client.setToken({ access_token: accessToken });\r\n        const event = {\r\n          summary: \"Telemedicine Appointment\",\r\n          start: { dateTime: start.toISOString() },\r\n          end: { dateTime: end.toISOString() },\r\n          conferenceData: {\r\n            createRequest: { requestId: String(Date.now()) }\r\n          }\r\n        };\r\n        const response = await window.gapi.client.calendar.events.insert({\r\n          calendarId: \"primary\",\r\n          resource: event,\r\n          conferenceDataVersion: 1,\r\n        });\r\n        resolve(response.result.hangoutLink);\r\n      });\r\n    });\r\n  };\r\n\r\n  // Calendar event mapping\r\n  const calendarEvents = appointments.map(a => ({\r\n    id: a.id,\r\n    title: `Patient: ${patients.find(p => p.id === a.patientId)?.fullName || a.patientId} | Doctor: ${doctors.find(d => d.id === a.doctorId)?.fullName || a.doctorId}`,\r\n    start: new Date(a.createdAt),\r\n    end: new Date(new Date(a.createdAt).getTime() + (a.sessionDuration || 30) * 60000),\r\n    meetingLink: a.meetingLink,\r\n    status: a.status\r\n  }));\r\n\r\n  // Handle new appointment modal open\r\n  const handleOpenModal = () => {\r\n    setNewAppointment({\r\n      patientId: '',\r\n      doctorId: '',\r\n      sessionDuration: 30,\r\n      start: null,\r\n      end: null,\r\n      meetingLink: '',\r\n      status: 'Scheduled',\r\n      recordedSessionUrl: ''\r\n    });\r\n    setOpenModal(true);\r\n  };\r\n\r\n  // Handle create appointment\r\n  const handleCreateAppointment = async () => {\r\n    if (!newAppointment.patientId || !newAppointment.doctorId || !newAppointment.start) return;\r\n    const start = new Date(newAppointment.start);\r\n    const end = new Date(start.getTime() + (newAppointment.sessionDuration || 30) * 60000);\r\n    let meetLink = '';\r\n    try {\r\n      meetLink = await createMeetEvent(start, end);\r\n    } catch {\r\n      meetLink = 'https://meet.google.com/' + Math.random().toString(36).substring(2, 12);\r\n    }\r\n    const payload = {\r\n      patientId: Number(newAppointment.patientId),\r\n      doctorId: Number(newAppointment.doctorId),\r\n      meetingLink: meetLink,\r\n      sessionDuration: newAppointment.sessionDuration,\r\n      status: newAppointment.status,\r\n      createdAt: start.toISOString(),\r\n      updatedAt: start.toISOString()\r\n    };\r\n    await axios.post(BASE_URL + '/telemedicines', payload);\r\n    setOpenModal(false);\r\n    fetchAppointments();\r\n  };\r\n\r\n  // Update handleSelectEvent to show modal with details\r\n  const handleSelectEvent = (event) => {\r\n    setSelectedEvent(event);\r\n    setShowEventModal(true);\r\n  };\r\n\r\n  const handleCopyLink = () => {\r\n    if (meetLink) {\r\n      navigator.clipboard.writeText(meetLink);\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 1500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 1100, mx: 'auto', mt: 4, p: 3 }}>\r\n     \r\n      <Paper sx={{ p: 2, mb: 3 }}>\r\n         <Typography variant=\"h4\" gutterBottom>\r\n        <VideocamIcon sx={{ mr: 1 }} /> Telemedicine Consultation\r\n      </Typography>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        startIcon={<AddIcon />}\r\n        sx={{ mb: 2 }}\r\n        onClick={handleOpenModal}\r\n      >\r\n        New Appointment\r\n      </Button>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Telemedicine Appointments Calendar\r\n        </Typography>\r\n        <div style={{ height: 500 }}>\r\n          <Calendar\r\n            localizer={localizer}\r\n            events={calendarEvents}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            titleAccessor=\"title\"\r\n            style={{ height: 480 }}\r\n            onSelectEvent={handleSelectEvent}\r\n            tooltipAccessor={event => event.meetingLink ? `Click to join: ${event.meetingLink}` : ''}\r\n            eventPropGetter={event => ({\r\n              style: {\r\n                backgroundColor: event.status === 'Scheduled' ? '#1976d2' : '#43a047',\r\n                color: '#fff',\r\n                borderRadius: 6,\r\n                border: 'none'\r\n              }\r\n            })}\r\n          />\r\n        </div>\r\n      </Paper>\r\n\r\n      {/* New Appointment Modal */}\r\n      <Dialog open={openModal} onClose={() => setOpenModal(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>New Telemedicine Appointment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            select\r\n            label=\"Patient\"\r\n            value={newAppointment.patientId}\r\n            onChange={e => setNewAppointment(a => ({ ...a, patientId: e.target.value }))}\r\n            fullWidth\r\n            sx={{ mb: 2, mt: 1 }}\r\n          >\r\n            {patients.map(p => (\r\n              <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Doctor\"\r\n            value={newAppointment.doctorId}\r\n            onChange={e => setNewAppointment(a => ({ ...a, doctorId: e.target.value }))}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          >\r\n            {doctors.map(d => (\r\n              <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Start Date & Time\"\r\n            type=\"datetime-local\"\r\n            value={newAppointment.start || ''}\r\n            onChange={e => setNewAppointment(a => ({ ...a, start: e.target.value }))}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <TextField\r\n            label=\"Session Duration (minutes)\"\r\n            type=\"number\"\r\n            value={newAppointment.sessionDuration}\r\n            onChange={e => setNewAppointment(a => ({ ...a, sessionDuration: Number(e.target.value) }))}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n            inputProps={{ min: 1 }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenModal(false)}>Cancel</Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleCreateAppointment}\r\n            disabled={\r\n              !newAppointment.patientId ||\r\n              !newAppointment.doctorId ||\r\n              !newAppointment.start\r\n            }\r\n          >\r\n            Create & Generate Meet Link\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Event Details Modal */}\r\n      <Dialog open={showEventModal} onClose={() => setShowEventModal(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle sx={{ bgcolor: '#1976d2', color: '#fff', fontWeight: 700 }}>\r\n          Telemedicine Appointment Details\r\n        </DialogTitle>\r\n        <DialogContent sx={{ py: 3 }}>\r\n          {selectedEvent && (\r\n            <Box>\r\n              <Typography variant=\"h6\" sx={{ mb: 2, color: '#1976d2', fontWeight: 600 }}>\r\n                <VideocamIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Video Consultation\r\n              </Typography>\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\" sx={{ fontWeight: 500 }}>\r\n                  <b>Patient:</b> {patients.find(p => p.id === selectedEvent.id || p.id === selectedEvent.patientId)?.fullName || selectedEvent.patientId}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" sx={{ fontWeight: 500 }}>\r\n                  <b>Doctor:</b> {doctors.find(d => d.id === selectedEvent.id || d.id === selectedEvent.doctorId)?.fullName || selectedEvent.doctorId}\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                  <b>Start:</b> {selectedEvent.start ? new Date(selectedEvent.start).toLocaleString() : '-'}\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                  <b>Duration:</b> {selectedEvent.sessionDuration || 30} minutes\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                  <b>Status:</b> <span style={{\r\n                    color: selectedEvent.status === 'Scheduled' ? '#1976d2' : '#43a047',\r\n                    fontWeight: 600\r\n                  }}>{selectedEvent.status}</span>\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                  <b>Meeting Link:</b>{' '}\r\n                  {selectedEvent.meetingLink ? (\r\n                    <a href={selectedEvent.meetingLink} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#1976d2', wordBreak: 'break-all' }}>\r\n                      {selectedEvent.meetingLink}\r\n                    </a>\r\n                  ) : (\r\n                    <span style={{ color: '#888' }}>-</span>\r\n                  )}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ justifyContent: 'center', pb: 3 }}>\r\n          <Button\r\n            onClick={() => setShowEventModal(false)}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            sx={{ minWidth: 120, fontWeight: 600, mr: 2 }}\r\n          >\r\n            Close\r\n          </Button>\r\n          {selectedEvent && selectedEvent.meetingLink && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              sx={{\r\n                minWidth: 220,\r\n                fontWeight: 700,\r\n                fontSize: 20,\r\n                py: 2,\r\n                bgcolor: '#1976d2',\r\n                boxShadow: '0 4px 16px rgba(25,118,210,0.12)',\r\n                '&:hover': { bgcolor: '#115293' }\r\n              }}\r\n              startIcon={<VideocamIcon sx={{ fontSize: 28 }} />}\r\n              onClick={() => window.open(selectedEvent.meetingLink, '_blank')}\r\n            >\r\n              Join Call\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    {/*   <Paper sx={{ p: 2, mb: 3, display: 'flex', alignItems: 'center', gap: 2 }}>\r\n        <Avatar src={dummyPatient.avatar}>{dummyPatient.name[0]}</Avatar>\r\n        <Box>\r\n          <Typography variant=\"subtitle1\">{dummyPatient.name}</Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">Patient ID: {dummyPatient.id}</Typography>\r\n        </Box>\r\n        {!inCall && (\r\n          <Box sx={{ ml: 'auto', display: 'flex', gap: 1 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<VideocamIcon />}\r\n              onClick={() => startCall('video')}\r\n            >\r\n              New Video Call\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              startIcon={<CallIcon />}\r\n              onClick={() => startCall('audio')}\r\n            >\r\n              New Audio Call\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"info\"\r\n              startIcon={<VideoCallOutlinedIcon />}\r\n              onClick={createMeetEvent}\r\n            >\r\n              Create Google Meet\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"info\"\r\n              startIcon={<HistoryIcon />}\r\n              onClick={() => setShowHistory(h => !h)}\r\n            >\r\n              {showHistory ? \"Hide\" : \"Show\"} Last Calls\r\n            </Button>\r\n          </Box>\r\n        )}\r\n        {inCall && (\r\n          <Box sx={{ ml: 'auto', display: 'flex', gap: 1 }}>\r\n            <IconButton color={videoEnabled ? \"primary\" : \"default\"} onClick={toggleVideo}>\r\n              {videoEnabled ? <VideocamIcon /> : <VideocamOffIcon />}\r\n            </IconButton>\r\n            <IconButton color={audioEnabled ? \"primary\" : \"default\"} onClick={toggleAudio}>\r\n              {audioEnabled ? <MicIcon /> : <MicOffIcon />}\r\n            </IconButton>\r\n            <IconButton color=\"error\" onClick={endCall}>\r\n              <CallEndIcon />\r\n            </IconButton>\r\n            <IconButton color={showChat ? \"primary\" : \"default\"} onClick={() => setShowChat(c => !c)}>\r\n              <ChatIcon />\r\n            </IconButton>\r\n          </Box>\r\n        )}\r\n      </Paper> */}\r\n\r\n      {/* Show Google Meet link and invitation actions */}\r\n      {!inCall && meetLink && (\r\n        <Paper sx={{ p: 2, mb: 3, display: 'flex', alignItems: 'center', gap: 2, bgcolor: '#e3f2fd' }}>\r\n          <Typography variant=\"body1\" sx={{ flex: 1 }}>\r\n            Google Meet Link: <a href={meetLink} target=\"_blank\" rel=\"noopener noreferrer\">{meetLink}</a>\r\n          </Typography>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={copied ? \"success\" : \"primary\"}\r\n            startIcon={<ContentCopyIcon />}\r\n            onClick={handleCopyLink}\r\n          >\r\n            {copied ? \"Copied!\" : \"Copy Link\"}\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n\r\n      {/* Last Video Calls List */}\r\n      {!inCall && showHistory && (\r\n        <Paper sx={{ mb: 3, p: 2 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            <HistoryIcon sx={{ mr: 1 }} /> Last Video/Audio Calls\r\n          </Typography>\r\n          <List>\r\n            {dummyCallHistory.map(call => (\r\n              <React.Fragment key={call.id}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar src={call.patientAvatar}>{call.patientName[0]}</Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={`${call.patientName} (${call.type === 'video' ? 'Video' : 'Audio'})`}\r\n                    secondary={\r\n                      <>\r\n                        {new Date(call.date).toLocaleString()} &nbsp;|&nbsp; Duration: {call.duration} &nbsp;|&nbsp; Status: {call.status}\r\n                      </>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <Divider />\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        </Paper>\r\n      )}\r\n\r\n      {inCall && (\r\n        <Box sx={{ display: 'flex', gap: 2 }}>\r\n          <Box sx={{ flex: 2, bgcolor: '#222', borderRadius: 2, p: 1, minHeight: 320, position: 'relative' }}>\r\n            <video\r\n              ref={remoteVideoRef}\r\n              autoPlay\r\n              playsInline\r\n              style={{ width: '100%', height: 300, background: '#111', borderRadius: 8 }}\r\n              poster=\"https://dummyimage.com/640x360/222/fff&text=Remote+Video\"\r\n            />\r\n            <video\r\n              ref={localVideoRef}\r\n              autoPlay\r\n              muted\r\n              playsInline\r\n              style={{\r\n                width: 120,\r\n                height: 90,\r\n                position: 'absolute',\r\n                bottom: 16,\r\n                right: 16,\r\n                border: '2px solid #fff',\r\n                borderRadius: 8,\r\n                background: '#333'\r\n              }}\r\n              poster=\"https://dummyimage.com/120x90/333/fff&text=You\"\r\n            />\r\n          </Box>\r\n          {showChat && (\r\n            <Box sx={{ flex: 1, bgcolor: '#fafafa', borderRadius: 2, p: 2, display: 'flex', flexDirection: 'column', height: 320 }}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>Chat</Typography>\r\n              <Box sx={{ flex: 1, overflowY: 'auto', mb: 1 }}>\r\n                {messages.map((msg, idx) => (\r\n                  <Box key={idx} sx={{ mb: 1, textAlign: msg.sender === 'doctor' ? 'right' : 'left' }}>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      sx={{\r\n                        display: 'inline-block',\r\n                        bgcolor: msg.sender === 'doctor' ? '#1976d2' : '#e0e0e0',\r\n                        color: msg.sender === 'doctor' ? '#fff' : '#222',\r\n                        px: 1.5, py: 0.5, borderRadius: 2\r\n                      }}\r\n                    >\r\n                      {msg.text}\r\n                    </Typography>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n              <Box sx={{ display: 'flex', gap: 1 }}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  placeholder=\"Type a message...\"\r\n                  value={chatInput}\r\n                  onChange={e => setChatInput(e.target.value)}\r\n                  onKeyDown={e => { if (e.key === 'Enter') handleSendMessage(); }}\r\n                />\r\n                <Button variant=\"contained\" onClick={handleSendMessage}>Send</Button>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n\r\n      {!inCall && !showHistory && (\r\n        <Box sx={{ mt: 4, textAlign: 'center', color: 'text.secondary' }}>\r\n          <Typography variant=\"body1\">\r\n            Select a patient and start a video or audio call.<br />\r\n            <span style={{ fontSize: 24 }}>📞</span>\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\nexport default Telemedicine;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box, Button, Typography, TextField, Paper, MenuItem, Table, TableBody, TableCell, TableContainer,\r\n  TableHead, TableRow, IconButton, Dialog, DialogTitle, DialogContent, DialogActions,\r\n  Stack\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst Billing = () => {\r\n  const [selectedPatient, setSelectedPatient] = useState('');\r\n  const [billItems, setBillItems] = useState([]);\r\n  const [service, setService] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  // Invoice DataTable states\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [loadingInvoices, setLoadingInvoices] = useState(true);\r\n  const [selectedInvoice, setSelectedInvoice] = useState(null);\r\n  const [viewInvoiceDialog, setViewInvoiceDialog] = useState(false);\r\n\r\n  // Add these states for more invoice fields\r\n  const [clinicId, setClinicId] = useState('');\r\n  const [discount, setDiscount] = useState({ amount: 0, percentage: 0, discountReason: '' });\r\n  const [taxAmount, setTaxAmount] = useState(0);\r\n  const [paymentMethod, setPaymentMethod] = useState('Cash');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const [notes, setNotes] = useState('');\r\n\r\n  // New states for patients and clinics\r\n  const [patients, setPatients] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  const services = [\r\n    { id: 's1', name: 'Consultation', price: 50 },\r\n    { id: 's2', name: 'X-Ray', price: 100 },\r\n    { id: 's3', name: 'Cleaning', price: 80 },\r\n    { id: 's4', name: 'Filling', price: 120 },\r\n    { id: 's5', name: 'Root Canal', price: 300 },\r\n    { id: 's6', name: 'Crown', price: 500 },\r\n    { id: 's7', name: 'Bridge', price: 700 },\r\n    { id: 's8', name: 'Extraction', price: 150 },\r\n    { id: 's9', name: 'Whitening', price: 200 },\r\n    { id: 's10', name: 'Implant', price: 1200 },\r\n    { id: 's11', name: 'Braces', price: 2500 },\r\n    { id: 's12', name: 'Veneers', price: 900 },\r\n    { id: 's13', name: 'Fluoride Treatment', price: 60 },\r\n    { id: 's14', name: 'Sealant', price: 75 },\r\n    { id: 's15', name: 'Periodontal Therapy', price: 350 }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchInvoices();\r\n    fetchPatients();\r\n    fetchClinics();\r\n  }, []);\r\n\r\n  const fetchInvoices = async () => {\r\n    setLoadingInvoices(true);\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/invoices`);\r\n      setInvoices(res.data);\r\n    } catch {\r\n      setInvoices([]);\r\n    }\r\n    setLoadingInvoices(false);\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/patients`);\r\n      setPatients(res.data);\r\n    } catch {\r\n      setPatients([]);\r\n    }\r\n  };\r\n\r\n  const fetchClinics = async () => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/clinics`);\r\n      setClinics(res.data);\r\n    } catch {\r\n      setClinics([]);\r\n    }\r\n  };\r\n\r\n  const handleAddItem = () => {\r\n    if (!service) return;\r\n    const selectedService = services.find(s => s.id === service);\r\n    setBillItems([\r\n      ...billItems,\r\n      {\r\n        id: Date.now(),\r\n        name: selectedService.name,\r\n        price: selectedService.price,\r\n        quantity: quantity,\r\n        total: selectedService.price * quantity\r\n      }\r\n    ]);\r\n    setService('');\r\n    setQuantity(1);\r\n  };\r\n\r\n  const handleRemoveItem = (id) => {\r\n    setBillItems(billItems.filter(item => item.id !== id));\r\n  };\r\n\r\n  const totalAmount = billItems.reduce((sum, item) => sum + item.total, 0);\r\n\r\n  const handleGenerateBill = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  // Invoice DataTable handlers\r\n  const handleViewInvoice = (invoice) => {\r\n    setSelectedInvoice(invoice);\r\n    setViewInvoiceDialog(true);\r\n  };\r\n\r\n  const handleCloseInvoiceDialog = () => {\r\n    setViewInvoiceDialog(false);\r\n    setSelectedInvoice(null);\r\n  };\r\n\r\n  const handleDownloadInvoicePDF = (invoice) => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(18);\r\n    doc.text('Invoice', 14, 20);\r\n    doc.setFontSize(12);\r\n    doc.text(`Invoice Number: ${invoice.invoiceNumber}`, 14, 35);\r\n    doc.text(`Patient ID: ${invoice.patientId}`, 14, 45);\r\n    doc.text(`Clinic ID: ${invoice.clinicId}`, 14, 55);\r\n    doc.text(`Invoice Date: ${new Date(invoice.invoiceDate).toLocaleDateString()}`, 14, 65);\r\n    doc.text(`Due Date: ${new Date(invoice.dueDate).toLocaleDateString()}`, 14, 75);\r\n    doc.text(`Payment Status: ${invoice.paymentStatus}`, 14, 85);\r\n    doc.text(`Payment Method: ${invoice.paymentMethod || '-'}`, 14, 95);\r\n\r\n    // Use autoTable as a function:\r\n    autoTable(doc, {\r\n      startY: 110,\r\n      head: [['Item', 'Description', 'Qty', 'Unit Price', 'Total']],\r\n      body: invoice.items.map(item => [\r\n        item.itemType,\r\n        item.itemDescription,\r\n        item.quantity,\r\n        item.unitPrice,\r\n        item.totalPrice\r\n      ]),\r\n    });\r\n\r\n    let y = doc.lastAutoTable ? doc.lastAutoTable.finalY + 10 : 130;\r\n    doc.text(`Subtotal: $${invoice.subTotal}`, 14, y);\r\n    y += 8;\r\n    doc.text(`Discount: $${invoice.discount?.amount || 0} (${invoice.discount?.percentage || 0}%)`, 14, y);\r\n    y += 8;\r\n    doc.text(`Tax: $${invoice.taxAmount}`, 14, y);\r\n    y += 8;\r\n    doc.text(`Grand Total: $${invoice.grandTotal}`, 14, y);\r\n    y += 8;\r\n    doc.text(`Notes: ${invoice.notes || '-'}`, 14, y);\r\n\r\n    doc.save(`invoice_${invoice.invoiceNumber}.pdf`);\r\n  };\r\n\r\n  // Helper functions to get names by id\r\n  const getPatientName = (id) => {\r\n    const p = patients.find(p => String(p.id) === String(id));\r\n    return p ? (p.fullName || p.name) : id;\r\n  };\r\n  const getClinicName = (id) => {\r\n    const c = clinics.find(c => String(c.id) === String(id));\r\n    return c ? c.name : id;\r\n  };\r\n\r\n  const invoiceColumns = [\r\n    { field: 'invoiceNumber', headerName: 'Invoice #', width: 140 },\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 180,\r\n      valueGetter: (params) => getPatientName(params.row.patientId)\r\n    },\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: 180,\r\n      valueGetter: (params) => getClinicName(params.row.clinicId)\r\n    },\r\n    {\r\n      field: 'grandTotal',\r\n      headerName: 'Total',\r\n      width: 100,\r\n      valueFormatter: (params) => `$${params.value}`\r\n    },\r\n    {\r\n      field: 'paymentStatus',\r\n      headerName: 'Status',\r\n      width: 110,\r\n      renderCell: (params) => (\r\n        <span style={{\r\n          color: params.value === 'Paid' ? '#388e3c' : '#d32f2f',\r\n          fontWeight: 'bold'\r\n        }}>\r\n          {params.value}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      field: 'invoiceDate',\r\n      headerName: 'Date',\r\n      width: 120,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton color=\"primary\" onClick={() => handleViewInvoice(params.row)}>\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n          <IconButton color=\"secondary\" onClick={() => handleDownloadInvoicePDF(params.row)}>\r\n            <PictureAsPdfIcon />\r\n          </IconButton>\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 1000, mx: 'auto', mt: 4, p: { xs: 1, sm: 3 } }}>\r\n      \r\n      <Paper sx={{ p: { xs: 2, sm: 3 }, mb: 4, boxShadow: 3, borderRadius: 3 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <PictureAsPdfIcon sx={{ color: '#1976d2', fontSize: 38, mr: 1 }} />\r\n        <Typography variant=\"h4\" sx={{ color: '#1976d2', fontWeight: 700 }}>\r\n          Patient Billing & Invoices\r\n        </Typography>\r\n      </Box>\r\n        <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', mb: 2 }}>\r\n          <TextField\r\n            select\r\n            label=\"Select Patient\"\r\n            value={selectedPatient}\r\n            onChange={e => setSelectedPatient(e.target.value)}\r\n            sx={{ minWidth: 220, flex: 1 }}\r\n          >\r\n            {patients.map(p => (\r\n              <MenuItem key={p.id} value={p.id}>\r\n                {p.fullName || p.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Select Clinic\"\r\n            value={clinicId}\r\n            onChange={e => setClinicId(e.target.value)}\r\n            sx={{ minWidth: 180, flex: 1 }}\r\n          >\r\n            {clinics.map(c => (\r\n              <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Service\"\r\n            value={service}\r\n            onChange={e => setService(e.target.value)}\r\n            sx={{ minWidth: 180, flex: 1 }}\r\n          >\r\n            {services.map(s => (\r\n              <MenuItem key={s.id} value={s.id}>{s.name} (${s.price})</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Quantity\"\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={e => setQuantity(Number(e.target.value))}\r\n            sx={{ width: 110 }}\r\n            inputProps={{ min: 1 }}\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleAddItem}\r\n            sx={{ height: 40, fontWeight: 600, minWidth: 120 }}\r\n            disabled={!service}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Box>\r\n        <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', mb: 2 }}>\r\n          <TextField\r\n            label=\"Discount Amount\"\r\n            type=\"number\"\r\n            value={discount.amount}\r\n            onChange={e => setDiscount({ ...discount, amount: Number(e.target.value) })}\r\n            sx={{ width: 140 }}\r\n            inputProps={{ min: 0 }}\r\n          />\r\n          <TextField\r\n            label=\"Discount %\"\r\n            type=\"number\"\r\n            value={discount.percentage}\r\n            onChange={e => setDiscount({ ...discount, percentage: Number(e.target.value) })}\r\n            sx={{ width: 120 }}\r\n            inputProps={{ min: 0, max: 100 }}\r\n          />\r\n          <TextField\r\n            label=\"Discount Reason\"\r\n            value={discount.discountReason}\r\n            onChange={e => setDiscount({ ...discount, discountReason: e.target.value })}\r\n            sx={{ minWidth: 180, flex: 1 }}\r\n          />\r\n          <TextField\r\n            label=\"Tax Amount\"\r\n            type=\"number\"\r\n            value={taxAmount}\r\n            onChange={e => setTaxAmount(Number(e.target.value))}\r\n            sx={{ width: 120 }}\r\n            inputProps={{ min: 0 }}\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Payment Method\"\r\n            value={paymentMethod}\r\n            onChange={e => setPaymentMethod(e.target.value)}\r\n            sx={{ width: 140 }}\r\n          >\r\n            <MenuItem value=\"Cash\">Cash</MenuItem>\r\n            <MenuItem value=\"Card\">Card</MenuItem>\r\n            <MenuItem value=\"Insurance\">Insurance</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            label=\"Due Date\"\r\n            type=\"date\"\r\n            value={dueDate}\r\n            onChange={e => setDueDate(e.target.value)}\r\n            sx={{ width: 150 }}\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n        </Box>\r\n        <TextField\r\n          label=\"Notes\"\r\n          value={notes}\r\n          onChange={e => setNotes(e.target.value)}\r\n          fullWidth\r\n          multiline\r\n          rows={2}\r\n          sx={{ mb: 2 }}\r\n        />\r\n        <TableContainer component={Paper} sx={{ mb: 2, boxShadow: 0 }}>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ fontWeight: 700 }}>Service</TableCell>\r\n                <TableCell sx={{ fontWeight: 700 }}>Price</TableCell>\r\n                <TableCell sx={{ fontWeight: 700 }}>Quantity</TableCell>\r\n                <TableCell sx={{ fontWeight: 700 }}>Total</TableCell>\r\n                <TableCell align=\"right\" sx={{ fontWeight: 700 }}>Remove</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {billItems.map(item => (\r\n                <TableRow key={item.id}>\r\n                  <TableCell>{item.name}</TableCell>\r\n                  <TableCell>${item.price}</TableCell>\r\n                  <TableCell>{item.quantity}</TableCell>\r\n                  <TableCell>${item.total}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <IconButton color=\"error\" onClick={() => handleRemoveItem(item.id)}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {billItems.length === 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align=\"center\">No services added</TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Typography variant=\"h6\" align=\"right\" sx={{ mb: 2, color: '#1976d2', fontWeight: 700 }}>\r\n          Total: ${totalAmount}\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          onClick={handleGenerateBill}\r\n          disabled={!selectedPatient || !clinicId || billItems.length === 0}\r\n          sx={{ fontWeight: 700, minWidth: 180, fontSize: 16 }}\r\n        >\r\n          Generate Bill\r\n        </Button>\r\n      </Paper>\r\n\r\n      {/* Invoice DataTable */}\r\n      \r\n      <Paper sx={{ p: 2, mb: 4, boxShadow: 2, borderRadius: 2 }}>\r\n        <Typography variant=\"h5\" gutterBottom sx={{ color: '#1976d2', fontWeight: 700 }}>\r\n        Invoices\r\n      </Typography>\r\n        <div style={{ height: 420, width: '100%' }}>\r\n          <DataGrid\r\n            rows={invoices}\r\n            columns={invoiceColumns}\r\n            pageSize={8}\r\n            rowsPerPageOptions={[8, 16, 32]}\r\n            loading={loadingInvoices}\r\n            getRowId={row => row.id}\r\n            disableSelectionOnClick\r\n            autoHeight={false}\r\n            sx={{\r\n              fontSize: 15,\r\n              '& .MuiDataGrid-columnHeaders': { bgcolor: '#e3f2fd', fontWeight: 700 },\r\n              '& .MuiDataGrid-row:hover': { bgcolor: '#f0f6ff' }\r\n            }}\r\n          />\r\n        </div>\r\n      </Paper>\r\n\r\n      {/* View Invoice Dialog */}\r\n      <Dialog open={viewInvoiceDialog} onClose={handleCloseInvoiceDialog} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <PictureAsPdfIcon sx={{ color: '#1976d2' }} />\r\n            <span>Invoice Details</span>\r\n          </Stack>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          {selectedInvoice && (\r\n            <Box sx={{ bgcolor: '#fafdff', borderRadius: 2, p: 2, mb: 2 }}>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ color: '#1976d2', fontWeight: 700 }}>\r\n                Invoice #{selectedInvoice.invoiceNumber}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Patient: {getPatientName(selectedInvoice.patientId)} | Clinic: {getClinicName(selectedInvoice.clinicId)}\r\n              </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                Date: {new Date(selectedInvoice.invoiceDate).toLocaleDateString()}<br />\r\n                Due: {new Date(selectedInvoice.dueDate).toLocaleDateString()}<br />\r\n                Status: <b>{selectedInvoice.paymentStatus}</b><br />\r\n                Payment Method: {selectedInvoice.paymentMethod || '-'}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" sx={{ mt: 2, fontWeight: 600 }}>Items:</Typography>\r\n              <TableContainer component={Paper} sx={{ mb: 2, boxShadow: 0 }}>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell sx={{ fontWeight: 700 }}>Type</TableCell>\r\n                      <TableCell sx={{ fontWeight: 700 }}>Description</TableCell>\r\n                      <TableCell sx={{ fontWeight: 700 }}>Qty</TableCell>\r\n                      <TableCell sx={{ fontWeight: 700 }}>Unit Price</TableCell>\r\n                      <TableCell sx={{ fontWeight: 700 }}>Total</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {selectedInvoice.items.map((item, idx) => (\r\n                      <TableRow key={idx}>\r\n                        <TableCell>{item.itemType}</TableCell>\r\n                        <TableCell>{item.itemDescription}</TableCell>\r\n                        <TableCell>{item.quantity}</TableCell>\r\n                        <TableCell>${item.unitPrice}</TableCell>\r\n                        <TableCell>${item.totalPrice}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <Typography variant=\"body2\">\r\n                Subtotal: <b>${selectedInvoice.subTotal}</b><br />\r\n                Discount: <b>${selectedInvoice.discount?.amount || 0} ({selectedInvoice.discount?.percentage || 0}%)</b><br />\r\n                Tax: <b>${selectedInvoice.taxAmount}</b><br />\r\n                <span style={{ fontSize: 18, fontWeight: 'bold' }}>Grand Total: ${selectedInvoice.grandTotal}</span>\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                Notes: {selectedInvoice.notes || '-'}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseInvoiceDialog} variant=\"outlined\" color=\"secondary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            startIcon={<PictureAsPdfIcon />}\r\n            onClick={() => handleDownloadInvoicePDF(selectedInvoice)}\r\n          >\r\n            Download PDF\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Bill Preview Dialog */}\r\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <AddIcon sx={{ color: '#1976d2' }} />\r\n            <span>Bill Preview</span>\r\n          </Stack>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ bgcolor: '#fafdff', borderRadius: 2, p: 2 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Patient: {getPatientName(selectedPatient)}\r\n            </Typography>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Service</TableCell>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Price</TableCell>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Quantity</TableCell>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Total</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {billItems.map(item => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>{item.name}</TableCell>\r\n                    <TableCell>${item.price}</TableCell>\r\n                    <TableCell>{item.quantity}</TableCell>\r\n                    <TableCell>${item.total}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Typography variant=\"h6\" align=\"right\" sx={{ mt: 2, color: '#1976d2', fontWeight: 700 }}>\r\n              Total: ${totalAmount}\r\n            </Typography>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} variant=\"outlined\" color=\"secondary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={async () => {\r\n              // Prepare invoice object\r\n              const now = new Date();\r\n              const invoiceObj = {\r\n                invoiceNumber: `INV-${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}${now.getTime()}`,\r\n                patientId: Number(selectedPatient),\r\n                clinicId: Number(clinicId),\r\n                items: billItems.map((item, idx) => ({\r\n                  itemId: idx + 1,\r\n                  itemType: item.name,\r\n                  quantity: item.quantity,\r\n                  unitPrice: item.price,\r\n                  totalPrice: item.total,\r\n                  itemDescription: item.name\r\n                })),\r\n                subTotal: totalAmount,\r\n                discount,\r\n                taxAmount,\r\n                grandTotal: totalAmount - (discount.amount || 0) + Number(taxAmount),\r\n                paymentStatus: 'Pending',\r\n                paymentMethod,\r\n                transactionId: null,\r\n                invoiceDate: now.toISOString(),\r\n                dueDate: dueDate ? new Date(dueDate).toISOString() : null,\r\n                notes,\r\n                createdAt: now.toISOString(),\r\n                updatedAt: now.toISOString()\r\n              };\r\n              try {\r\n                await axios.post(`${BASE_URL}/invoices`, invoiceObj);\r\n                setOpenDialog(false);\r\n                fetchInvoices();\r\n                setBillItems([]);\r\n              } catch (e) {\r\n                alert('Failed to save invoice');\r\n              }\r\n            }}\r\n            disabled={\r\n              !selectedPatient ||\r\n              !clinicId ||\r\n              billItems.length === 0\r\n            }\r\n            sx={{ fontWeight: 700, minWidth: 180, fontSize: 16 }}\r\n          >\r\n            Confirm & Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Billing;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box, Typography, Button, Paper, Dialog, DialogTitle, DialogContent, DialogActions,\r\n  TextField, MenuItem, Avatar, IconButton, Tooltip\r\n} from '@mui/material';\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst imagingTypes = [\r\n  { value: 'xray', label: 'X-Ray' },\r\n  { value: 'panoramic', label: 'Panoramic' },\r\n  { value: 'intraoral', label: 'Intraoral Camera' },\r\n  { value: 'cbct', label: 'CBCT' }\r\n];\r\nconst statusOptions = ['Pending', 'Reviewed', 'Flagged'];\r\n\r\nconst DentalImaging = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openView, setOpenView] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    type: '',\r\n    imageType: '',\r\n    date: '',\r\n    uploadDate: '',\r\n    notes: '',\r\n    diagnosisNotes: '',\r\n    imageUrl: '',\r\n    status: 'Pending'\r\n  });\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n    fetchPatients();\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  const fetchImages = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/dental-imaging`);\r\n      setImages(res.data);\r\n    } catch {\r\n      setImages([]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/patients`);\r\n      setPatients(res.data);\r\n    } catch {\r\n      setPatients([]);\r\n    }\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/doctors`);\r\n      setDoctors(res.data);\r\n    } catch {\r\n      setDoctors([]);\r\n    }\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setForm({\r\n      patientId: '', doctorId: '', type: '', imageType: '', date: '', uploadDate: '', notes: '', diagnosisNotes: '', imageUrl: '', status: 'Pending'\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setSelectedFile(null);\r\n  };\r\n\r\n  const handleFormChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAddImage = async () => {\r\n    if (!form.patientId || !form.type || !selectedFile) return;\r\n    const payload = {\r\n      patientId: form.patientId,\r\n      doctorId: form.doctorId,\r\n      imageType: imagingTypes.find(t => t.value === form.type)?.label || form.type,\r\n      type: form.type,\r\n      uploadDate: form.uploadDate || new Date().toISOString(),\r\n      notes: form.notes,\r\n      diagnosisNotes: form.diagnosisNotes,\r\n      status: form.status,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    const formData = new FormData();\r\n    Object.entries(payload).forEach(([key, value]) => formData.append(key, value));\r\n    formData.append('image', selectedFile); // <-- field name changed to 'image'\r\n\r\n    // Show cURL for debugging\r\n    const curlParts = [\r\n      `curl -X POST \"${BASE_URL}/dental-imaging\"`,\r\n      `-H \"Content-Type: multipart/form-data\"`,\r\n      ...Object.entries(payload).map(([key, value]) => `-F \"${key}=${value}\"`),\r\n      selectedFile ? `-F \"image=@${selectedFile.name}\"` : ''\r\n    ];\r\n    console.log('cURL:\\n' + curlParts.filter(Boolean).join(' \\\\\\n'));\r\n\r\n    await axios.post(`${BASE_URL}/dental-imaging`, formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' }\r\n    });\r\n    setOpenDialog(false);\r\n    setSelectedFile(null);\r\n    fetchImages();\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await axios.delete(`${BASE_URL}/dental-imaging/${id}`);\r\n    fetchImages();\r\n  };\r\n\r\n  const handleView = (img) => {\r\n    setSelectedImage(img);\r\n    setOpenView(true);\r\n  };\r\n\r\n  const handleCloseView = () => setOpenView(false);\r\n\r\n  // Drag and drop logic\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    setSelectedFile(file);\r\n    const reader = new FileReader();\r\n    reader.onload = (ev) => {\r\n      setForm(f => ({ ...f, imageUrl: ev.target.result }));\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const file = e.dataTransfer.files[0];\r\n    if (!file) return;\r\n    setSelectedFile(file);\r\n    const reader = new FileReader();\r\n    reader.onload = (ev) => {\r\n      setForm(f => ({ ...f, imageUrl: ev.target.result }));\r\n    };\r\n    reader.readAsDataURL(file);\r\n    setDragActive(false);\r\n  };\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(true);\r\n  };\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n  };\r\n\r\n  // Helper functions for names\r\n  const getPatientName = (id) => {\r\n    const p = patients.find(p => String(p.id) === String(id));\r\n    return p ? (p.fullName || p.name) : id;\r\n  };\r\n  const getDoctorName = (id) => {\r\n    const d = doctors.find(d => String(d.id) === String(id));\r\n    return d ? (d.fullName || d.name) : id;\r\n  };\r\n\r\n  // DataGrid columns\r\n  const columns = [\r\n    {\r\n      field: 'imageUrl',\r\n      headerName: 'Preview',\r\n      width: 90,\r\n      renderCell: (params) => {\r\n        let url = params.value;\r\n        // If the imageUrl contains 'uploads\\', extract the filename and build the full URL\r\n        if (url && url.startsWith('uploads\\\\')) {\r\n          const filename = url.replace('uploads\\\\', '').replace('uploads/', '');\r\n          url = `${BASE_URL}/dental-imaging/image/${filename}`;\r\n        }\r\n        return (\r\n          <Avatar\r\n            src={url}\r\n            variant=\"rounded\"\r\n            sx={{ width: 56, height: 40, bgcolor: '#e3f2fd' }}\r\n          />\r\n        );\r\n      }\r\n    },\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 150,\r\n      valueGetter: (params) => getPatientName(params.row.patientId)\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor',\r\n      width: 150,\r\n      valueGetter: (params) => getDoctorName(params.row.doctorId)\r\n    },\r\n    {\r\n      field: 'imageType',\r\n      headerName: 'Type',\r\n      width: 120\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 110,\r\n      renderCell: (params) => (\r\n        <span style={{\r\n          color: params.value === 'Reviewed' ? '#388e3c' : params.value === 'Flagged' ? '#d32f2f' : '#1976d2',\r\n          fontWeight: 'bold'\r\n        }}>\r\n          {params.value}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      field: 'uploadDate',\r\n      headerName: 'Upload Date',\r\n      width: 130,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleDateString() : '-'\r\n    },\r\n    {\r\n      field: 'diagnosisNotes',\r\n      headerName: 'Diagnosis Notes',\r\n      width: 220\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <Tooltip title=\"View\">\r\n            <IconButton color=\"primary\" onClick={() => handleView(params.row)}>\r\n              <VisibilityIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton color=\"error\" onClick={() => handleDelete(params.row.id)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 1100, mx: 'auto', mt: 4, p: 3 }}>\r\n      \r\n      <Paper sx={{ p: 3, mb: 3, boxShadow: '0 4px 24px rgba(25,118,210,0.08)' }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <AddPhotoAlternateIcon sx={{ color: '#1976d2', fontSize: 38, mr: 1 }} />\r\n        <Typography variant=\"h4\" sx={{ color: '#1976d2', fontWeight: 700 }}>\r\n          Dental Imaging\r\n        </Typography>\r\n      </Box>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<AddPhotoAlternateIcon />}\r\n          onClick={handleOpenDialog}\r\n          sx={{ mb: 2 }} // Add margin bottom to the button\r\n        >\r\n          Add New Image\r\n        </Button>\r\n        <div style={{ height: 480, width: '100%', background: '#fff', borderRadius: 8 }}>\r\n          <DataGrid\r\n            rows={images}\r\n            columns={columns}\r\n            pageSize={8}\r\n            rowsPerPageOptions={[8, 16, 32]}\r\n            loading={loading}\r\n            getRowId={row => row.id}\r\n            disableSelectionOnClick\r\n            autoHeight={false}\r\n            sx={{\r\n              fontSize: 15,\r\n              '& .MuiDataGrid-columnHeaders': { bgcolor: '#e3f2fd', fontWeight: 700 },\r\n              '& .MuiDataGrid-row:hover': { bgcolor: '#f0f6ff' }\r\n            }}\r\n          />\r\n        </div>\r\n      </Paper>\r\n\r\n      {/* Add Image Dialog */}\r\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Add Dental Image</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            select\r\n            label=\"Patient\"\r\n            name=\"patientId\"\r\n            value={form.patientId}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2, mt: 1 }}\r\n          >\r\n            {patients.map(p => (\r\n              <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Doctor\"\r\n            name=\"doctorId\"\r\n            value={form.doctorId}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          >\r\n            {doctors.map(d => (\r\n              <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Imaging Type\"\r\n            name=\"type\"\r\n            value={form.type}\r\n            onChange={e => {\r\n              handleFormChange(e);\r\n              setForm(f => ({ ...f, imageType: imagingTypes.find(t => t.value === e.target.value)?.label || '' }));\r\n            }}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          >\r\n            {imagingTypes.map(t => (\r\n              <MenuItem key={t.value} value={t.value}>{t.label}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Status\"\r\n            name=\"status\"\r\n            select\r\n            value={form.status}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          >\r\n            {statusOptions.map(opt => (\r\n              <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Upload Date\"\r\n            name=\"uploadDate\"\r\n            type=\"datetime-local\"\r\n            value={form.uploadDate}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <TextField\r\n            label=\"Notes\"\r\n            name=\"notes\"\r\n            value={form.notes}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <TextField\r\n            label=\"Diagnosis Notes\"\r\n            name=\"diagnosisNotes\"\r\n            value={form.diagnosisNotes}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <Box\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            onDragLeave={handleDragLeave}\r\n            sx={{\r\n              mb: 2,\r\n              p: 2,\r\n              border: '2px dashed #1976d2',\r\n              borderRadius: 2,\r\n              textAlign: 'center',\r\n              bgcolor: dragActive ? '#e3f2fd' : '#fafafa',\r\n              color: '#1976d2',\r\n              cursor: 'pointer',\r\n              transition: 'background 0.2s'\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              Drag &amp; drop image here, or click to select\r\n            </Typography>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              style={{ display: 'none' }}\r\n              id=\"dental-image-upload\"\r\n              onChange={handleImageUpload}\r\n            />\r\n            <label htmlFor=\"dental-image-upload\">\r\n              <Button variant=\"outlined\" component=\"span\" startIcon={<AddPhotoAlternateIcon />}>\r\n                Browse\r\n              </Button>\r\n            </label>\r\n          </Box>\r\n          {form.imageUrl && (\r\n            <Box sx={{ mb: 2 }}>\r\n              <img src={form.imageUrl} alt=\"Preview\" style={{ maxWidth: '100%', borderRadius: 8 }} />\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={handleAddImage} disabled={!form.patientId || !form.type || !selectedFile}>\r\n            Add Image\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* View Image Dialog */}\r\n      <Dialog open={openView} onClose={handleCloseView} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Image Preview</DialogTitle>\r\n        <DialogContent>\r\n          {selectedImage && (\r\n            <Box>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                {getPatientName(selectedImage.patientId)} - {selectedImage.imageType}\r\n              </Typography>\r\n              <Box sx={{ width: '100%', textAlign: 'center', mb: 2 }}>\r\n                <img\r\n                  src={\r\n                    selectedImage.imageUrl && selectedImage.imageUrl.startsWith('uploads\\\\')\r\n                      ? `${BASE_URL}/dental-imaging/image/${selectedImage.imageUrl.replace('uploads\\\\', '').replace('uploads/', '')}`\r\n                      : selectedImage.imageUrl\r\n                  }\r\n                  alt=\"Dental\"\r\n                  style={{ maxWidth: 500, maxHeight: 350, width: '100%', borderRadius: 8, objectFit: 'contain', background: '#fafafa' }}\r\n                />\r\n              </Box>\r\n              <Typography variant=\"body2\"><strong>Doctor:</strong> {getDoctorName(selectedImage.doctorId)}</Typography>\r\n              <Typography variant=\"body2\"><strong>Upload Date:</strong> {selectedImage.uploadDate ? new Date(selectedImage.uploadDate).toLocaleString() : '-'}</Typography>\r\n              <Typography variant=\"body2\"><strong>Status:</strong> {selectedImage.status || 'Pending'}</Typography>\r\n              <Typography variant=\"body2\"><strong>Notes:</strong> {selectedImage.notes}</Typography>\r\n              <Typography variant=\"body2\"><strong>Diagnosis Notes:</strong> {selectedImage.diagnosisNotes}</Typography>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseView}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DentalImaging;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst categories = ['Dental Tools', 'Consumables', 'Medicines', 'Equipment', 'Other'];\r\nconst statuses = ['In Stock', 'Low Stock', 'Out of Stock', 'Expired'];\r\nconst units = ['pcs', 'box', 'pack', 'bottle', 'tube', 'ml', 'g', 'kg', 'L', 'other'];\r\n\r\nconst AddInventoryItem = ({ closeModal, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    category: 'Dental Tools',\r\n    quantity: 0,\r\n    unit: 'pcs', // default value for select box\r\n    clinicId: '',\r\n    reorderLevel: 0,\r\n    expiryDate: '',\r\n    status: 'In Stock',\r\n    notes: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch clinics from /clinics endpoint\r\n    axios.get(`${BASE_URL}/clinics`)\r\n      .then(res => setClinics(res.data))\r\n      .catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    // Get clinic name from clinics array\r\n    const clinicObj = clinics.find(c => c.id === form.clinicId);\r\n    const clinicName = clinicObj ? clinicObj.name : '';\r\n\r\n    const itemData = {\r\n      ...form,\r\n      clinicId: Number(form.clinicId),\r\n      clinicName\r\n      // id is NOT included, let backend generate it\r\n    };\r\n    console.log('Submitting item:', itemData);\r\n    try {\r\n      await axios.post(`${BASE_URL}/inventory`, itemData);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        label=\"Name\"\r\n        name=\"name\"\r\n        value={form.name}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Category\"\r\n        name=\"category\"\r\n        value={form.category}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {categories.map(c => (\r\n          <MenuItem key={c} value={c}>{c}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Quantity\"\r\n        name=\"quantity\"\r\n        type=\"number\"\r\n        value={form.quantity}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Unit\"\r\n        name=\"unit\"\r\n        value={form.unit}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {units.map(u => (\r\n          <MenuItem key={u} value={u}>{u}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic\"\r\n        name=\"clinicId\"\r\n        value={form.clinicId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {clinics.map(c => (\r\n          <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      {form.clinicId && (\r\n        <div style={{ margin: '8px 0', color: '#007bff', fontWeight: 'bold' }}>\r\n          Selected Clinic: {clinics.find(c => c.id === form.clinicId)?.name || ''}\r\n        </div>\r\n      )}\r\n      <TextField\r\n        label=\"Reorder Level\"\r\n        name=\"reorderLevel\"\r\n        type=\"number\"\r\n        value={form.reorderLevel}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Expiry Date\"\r\n        name=\"expiryDate\"\r\n        type=\"date\"\r\n        value={form.expiryDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Status\"\r\n        name=\"status\"\r\n        value={form.status}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {statuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Notes\"\r\n        name=\"notes\"\r\n        value={form.notes}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Create Inventory Item'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddInventoryItem;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst categories = ['Dental Tools', 'Consumables', 'Medicines', 'Equipment', 'Other'];\r\nconst statuses = ['In Stock', 'Low Stock', 'Out of Stock', 'Expired'];\r\nconst units = ['pcs', 'box', 'pack', 'bottle', 'tube', 'ml', 'g', 'kg', 'L', 'other'];\r\n\r\nconst EditInventoryItem = ({ closeModal, item = {}, clinics = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    category: 'Dental Tools',\r\n    quantity: 0,\r\n    unit: 'pcs',\r\n    clinicId: '',\r\n    reorderLevel: 0,\r\n    expiryDate: '',\r\n    status: 'In Stock',\r\n    notes: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      setForm({\r\n        name: item.name || '',\r\n        category: item.category || 'Dental Tools',\r\n        quantity: item.quantity || 0,\r\n        unit: item.unit || 'pcs',\r\n        clinicId: item.clinicId || '',\r\n        reorderLevel: item.reorderLevel || 0,\r\n        expiryDate: item.expiryDate ? item.expiryDate.slice(0, 10) : '',\r\n        status: item.status || 'In Stock',\r\n        notes: item.notes || '',\r\n      });\r\n    }\r\n  }, [item]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    // Get clinic name from clinics array\r\n    const clinicObj = clinics.find(c => c.id === form.clinicId);\r\n\r\n    const itemData = {\r\n      ...form,\r\n      clinicId: Number(form.clinicId),\r\n      updatedAt: now\r\n      // id is NOT included, let backend handle it\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/inventory/${item.id}`, itemData);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <TextField\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          value={form.name}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Category\"\r\n          name=\"category\"\r\n          value={form.category}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          required\r\n        >\r\n          {categories.map(c => (\r\n            <MenuItem key={c} value={c}>{c}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Quantity\"\r\n          name=\"quantity\"\r\n          type=\"number\"\r\n          value={form.quantity}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Unit\"\r\n          name=\"unit\"\r\n          value={form.unit}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          required\r\n        >\r\n          {units.map(u => (\r\n            <MenuItem key={u} value={u}>{u}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Clinic\"\r\n          name=\"clinicId\"\r\n          value={form.clinicId}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        >\r\n          {clinics.map(c => (\r\n            <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        {form.clinicId && (\r\n          <div style={{ margin: '8px 0', color: '#007bff', fontWeight: 'bold' }}>\r\n            Selected Clinic: {clinics.find(c => c.id === form.clinicId)?.name || ''}\r\n          </div>\r\n        )}\r\n        <TextField\r\n          label=\"Reorder Level\"\r\n          name=\"reorderLevel\"\r\n          type=\"number\"\r\n          value={form.reorderLevel}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Expiry Date\"\r\n          name=\"expiryDate\"\r\n          type=\"date\"\r\n          value={form.expiryDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        >\r\n          {statuses.map(s => (\r\n            <MenuItem key={s} value={s}>{s}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Notes\"\r\n          name=\"notes\"\r\n          value={form.notes}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          multiline\r\n          rows={2}\r\n        />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditInventoryItem;","import React, { useEffect, useState } from 'react';\r\nimport { Box, Typography, IconButton, Menu, MenuItem, Paper, LinearProgress, Button, Dialog, DialogTitle, DialogContent, Chip } from '@mui/material'; // <-- Add Chip import\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport Inventory2OutlinedIcon from '@mui/icons-material/Inventory2Outlined';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport axios from 'axios';\r\nimport AddInventoryItem from './AddInventoryItem'; // Import at the top\r\nimport EditInventoryItem from './EditInventoryItem'; // Import EditInventoryItem\r\nimport CurrentUser from '../../main/config/user'; // Import DEMO_MODE\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n// Example demo data\r\nconst DEMO_ITEMS = [\r\n  {\r\n    id: 1,\r\n    name: \"Demo Item\",\r\n    category: \"Consumables\",\r\n    quantity: 10,\r\n    unit: \"pcs\",\r\n    reorderLevel: 5,\r\n    expiryDate: \"2025-12-31\",\r\n    status: \"In Stock\",\r\n    clinicId: 1,\r\n    notes: \"Demo notes\"\r\n  }\r\n  // Add more demo items if needed\r\n];\r\n\r\nconst DEMO_CLINICS = [\r\n  {\r\n    id: 1,\r\n    name: \"Demo Clinic\"\r\n  }\r\n  // Add more demo clinics if needed\r\n];\r\n\r\nconst InventoryItem = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n  const [addModalOpen, setAddModalOpen] = useState(false);\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [editItem, setEditItem] = useState(null);\r\n  const [viewModalOpen, setViewModalOpen] = useState(false);\r\n  const [viewItem, setViewItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (CurrentUser.DEMO_MODE) {\r\n      setItems(DEMO_ITEMS);\r\n      setLoading(false);\r\n    } else {\r\n      axios.get(`${BASE_URL}/inventory`)\r\n        .then(res => setItems(res.data))\r\n        .finally(() => setLoading(false));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (CurrentUser.DEMO_MODE) {\r\n      setClinics(DEMO_CLINICS);\r\n    } else {\r\n      axios.get(`${BASE_URL}/clinics`)\r\n        .then(res => setClinics(res.data))\r\n        .catch(() => setClinics([]));\r\n    }\r\n  }, []);\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditItem(actionRow);\r\n    setEditModalOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!actionRow) return;\r\n    if (window.confirm(`Are you sure you want to delete \"${actionRow.name}\"?`)) {\r\n      setLoading(true);\r\n      try {\r\n        await axios.delete(`${BASE_URL}/inventory/${actionRow.id}`);\r\n        setItems(prev => prev.filter(item => item.id !== actionRow.id));\r\n      } catch (err) {\r\n        alert('Failed to delete item.');\r\n      }\r\n      setLoading(false);\r\n    }\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleView = () => {\r\n    setViewItem(actionRow);\r\n    setViewModalOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  // Add/Update Inventory Item\r\n  const handleAddSuccess = async () => {\r\n    // Refetch items after add to ensure IDs are present\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/inventory`);\r\n      setItems(res.data);\r\n    } catch {\r\n      // fallback: do nothing or show error\r\n    }\r\n    setAddModalOpen(false);\r\n  };\r\n\r\n  // Fix for handleEditSuccess to avoid error if updatedItem is undefined/null\r\n  const handleEditSuccess = (updatedItem) => {\r\n    if (updatedItem && updatedItem.id !== undefined) {\r\n      setItems(prev => prev.map(item => item.id === updatedItem.id ? updatedItem : item));\r\n    }\r\n    setEditModalOpen(false);\r\n    setEditItem(null);\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'name', headerName: 'Name', width: 180 },\r\n    { field: 'category', headerName: 'Category', width: 140 },\r\n    {\r\n      field: 'quantity',\r\n      headerName: 'Quantity',\r\n      width: 100,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={params.value === 0 ? 'error' : params.value < 10 ? 'warning' : 'success'}\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    { field: 'unit', headerName: 'Unit', width: 90 },\r\n    { field: 'reorderLevel', headerName: 'Reorder Level', width: 120 },\r\n    {\r\n      field: 'expiryDate',\r\n      headerName: 'Expiry Date',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value ? new Date(params.value).toLocaleDateString() : '-'}\r\n          color={params.value && new Date(params.value) < new Date() ? 'error' : 'info'}\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 110,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'In Stock'\r\n              ? 'success'\r\n              : params.value === 'Low Stock'\r\n              ? 'warning'\r\n              : params.value === 'Out of Stock'\r\n              ? 'error'\r\n              : params.value === 'Expired'\r\n              ? 'default'\r\n              : 'primary'\r\n          }\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: 220,\r\n      valueGetter: (params) => {\r\n        const clinic = clinics.find(c => c.id === params.value);\r\n        return clinic ? clinic.name : params.value;\r\n      }\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 90,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"action-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleActionClick(event, params.row)}\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 1000, mx: 'auto', mt: 4, p: 3 }}>\r\n      <Paper sx={{ p: 2 }}>\r\n        <Typography variant=\"h5\" sx={{ mb: 2, display: 'flex', alignItems: 'center', fontWeight: 600 }}>\r\n          <Inventory2OutlinedIcon sx={{ mr: 1 }} />\r\n          Inventory Items\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => setAddModalOpen(true)}\r\n          sx={{ mb: 2 }}\r\n        >\r\n          <i className=\"fas fa-plus\"></i> Create Inventory Item\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          sx={{\r\n            color: \"#1976d2\",\r\n            borderColor: \"#1976d2\",\r\n            background: \"#fff\",\r\n            mb: 2,\r\n            ml: 2,\r\n            '&:hover': {\r\n              borderColor: \"#1565c0\",\r\n              background: \"#e3f2fd\",\r\n              color: \"#1565c0\"\r\n            }\r\n          }}\r\n          onClick={() => {\r\n            setLoading(true);\r\n            if (CurrentUser.DEMO_MODE) {\r\n              setItems(DEMO_ITEMS);\r\n              setLoading(false);\r\n            } else {\r\n              axios.get(`${BASE_URL}/inventory`)\r\n                .then(res => setItems(res.data))\r\n                .finally(() => setLoading(false));\r\n            }\r\n          }}\r\n        >\r\n          Refresh\r\n        </Button>\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={items}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              components={{ Toolbar: GridToolbar }}\r\n              getRowId={row => row.id}\r\n            />\r\n            <Menu\r\n              id=\"action-menu\"\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleView}>\r\n                <VisibilityIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n                View\r\n              </MenuItem>\r\n              <MenuItem onClick={handleEdit}>\r\n                <EditIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem onClick={handleDelete}>\r\n                <DeleteIcon fontSize=\"small\" sx={{ mr: 1, color: 'error.main' }} />\r\n                Delete\r\n              </MenuItem>\r\n            </Menu>\r\n            {/* Add Inventory Item Modal */}\r\n            <Dialog open={addModalOpen} onClose={() => setAddModalOpen(false)} maxWidth=\"sm\" fullWidth>\r\n              <DialogTitle>Create Inventory Item</DialogTitle>\r\n              <DialogContent>\r\n                <AddInventoryItem\r\n                  closeModal={() => setAddModalOpen(false)}\r\n                  onSuccess={handleAddSuccess}\r\n                />\r\n              </DialogContent>\r\n            </Dialog>\r\n            {/* Edit Inventory Item Modal */}\r\n            <Dialog open={editModalOpen} onClose={() => setEditModalOpen(false)} maxWidth=\"sm\" fullWidth>\r\n              <DialogTitle>Edit Inventory Item</DialogTitle>\r\n              <DialogContent>\r\n                <EditInventoryItem\r\n                  closeModal={() => setEditModalOpen(false)}\r\n                  item={editItem} // <-- Pass selected object here!\r\n                  clinics={clinics}\r\n                  onSuccess={handleEditSuccess}\r\n                />\r\n              </DialogContent>\r\n            </Dialog>\r\n            {/* View Inventory Item Modal */}\r\n            <Dialog open={viewModalOpen} onClose={() => setViewModalOpen(false)} maxWidth=\"sm\" fullWidth>\r\n              <DialogTitle>\r\n                <Inventory2OutlinedIcon sx={{ mr: 1, color: \"#1976d2\" }} />\r\n                <span style={{ color: \"#1976d2\", fontWeight: 700 }}>Inventory Item Details</span>\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                {viewItem && (\r\n                  <Box\r\n                    sx={{\r\n                      p: 2,\r\n                      background: \"#f5faff\",\r\n                      borderRadius: 2,\r\n                      boxShadow: 2,\r\n                      border: \"1px solid #90caf9\",\r\n                      mb: 2,\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"h6\" sx={{ color: \"#1976d2\", fontWeight: 600, mb: 2 }}>\r\n                      {viewItem.name}\r\n                    </Typography>\r\n                    <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 2 }}>\r\n                      <Chip label={`ID: ${viewItem.id}`} color=\"primary\" />\r\n                      <Chip label={`Category: ${viewItem.category}`} color=\"info\" />\r\n                      <Chip label={`Unit: ${viewItem.unit}`} color=\"default\" />\r\n                      <Chip label={`Status: ${viewItem.status}`} color={\r\n                        viewItem.status === 'In Stock'\r\n                          ? 'success'\r\n                          : viewItem.status === 'Low Stock'\r\n                          ? 'warning'\r\n                          : viewItem.status === 'Out of Stock'\r\n                          ? 'error'\r\n                          : viewItem.status === 'Expired'\r\n                          ? 'default'\r\n                          : 'primary'\r\n                      } />\r\n                    </Box>\r\n                    <Box sx={{ mt: 2 }}>\r\n                      <Typography><strong>Quantity:</strong> {viewItem.quantity}</Typography>\r\n                      <Typography><strong>Reorder Level:</strong> {viewItem.reorderLevel}</Typography>\r\n                      <Typography>\r\n                        <strong>Expiry Date:</strong> {viewItem.expiryDate ? new Date(viewItem.expiryDate).toLocaleDateString() : '-'}\r\n                      </Typography>\r\n                      <Typography>\r\n                        <strong>Clinic:</strong> {\r\n                          (() => {\r\n                            const clinic = clinics.find(c => c.id === viewItem.clinicId);\r\n                            return clinic ? clinic.name : viewItem.clinicId;\r\n                          })()\r\n                        }\r\n                      </Typography>\r\n                      <Typography sx={{ mt: 1 }}>\r\n                        <strong>Notes:</strong> {viewItem.notes || <span style={{ color: \"#aaa\" }}>No notes</span>}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </DialogContent>\r\n            </Dialog>\r\n          </div>\r\n        )}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default InventoryItem;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box, Button, Typography, Grid, Container, Card, CardContent, Divider, Avatar,\r\n  AppBar, Toolbar, IconButton, MenuItem, Menu, Chip, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Select, InputLabel, FormControl, Stack, Snackbar, Alert\r\n} from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport './HomePage.css';\r\nimport CurrentUser from '../../main/config/user';\r\n// Dentist theme images (royalty-free/unsplash)\r\nconst heroImg = \"images/1.jpg\";\r\nconst aboutImg = \"images/2.jpg\";\r\nconst servicesImg = \"images/3.jpg\";\r\nconst contactImg = \"images/4.jpg\";\r\n\r\nconst blogPosts = [\r\n  { title: \"5 Tips for Healthy Teeth\", date: \"2025-07-01\", excerpt: \"Discover essential tips to keep your teeth healthy and strong.\" },\r\n  { title: \"The Importance of Regular Checkups\", date: \"2025-06-15\", excerpt: \"Why you shouldn't skip your dental appointments.\" },\r\n];\r\n\r\nconst pricing = [\r\n  { service: \"Consultation\", price: \"$30\" },\r\n  { service: \"Teeth Cleaning\", price: \"$50\" },\r\n  { service: \"Whitening\", price: \"$120\" },\r\n  { service: \"Braces (per month)\", price: \"$80\" },\r\n];\r\n\r\nconst openingHours = [\r\n  { day: \"Monday - Friday\", hours: \"08:00 - 18:00\" },\r\n  { day: \"Saturday\", hours: \"09:00 - 14:00\" },\r\n  { day: \"Sunday\", hours: \"Closed\" },\r\n];\r\n\r\n// Replace menuLinks with updated menu (remove \"Blog\", replace \"Pricing\" with \"Memberships\")\r\nconst menuLinks = [\r\n  { label: \"Home\", href: \"#hero\" },\r\n  { label: \"About\", href: \"#about\" },\r\n  { label: \"Services\", href: \"#services\" },\r\n  { label: \"Doctors\", href: \"#doctors\" },\r\n  { label: \"Staff\", href: \"#staff\" },\r\n  { label: \"Memberships\", href: \"#memberships\" }, // was \"Pricing\"\r\n  // { label: \"Blog\", href: \"#blog\" }, // removed\r\n  { label: \"Contact\", href: \"#contact\" },\r\n  { label: \"Login\", href: \"/login\" },\r\n];\r\n\r\nconst HomePage = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const history = useHistory();\r\n\r\n  // Add state for services from backend\r\n  const [services, setServices] = useState([\r\n    \"General & Family Dentistry\",\r\n    \"Cosmetic Dentistry (Whitening, Veneers)\",\r\n    \"Dental Implants & Restorations\",\r\n    \"Orthodontics (Braces & Aligners)\",\r\n    \"Pediatric Dentistry\",\r\n    \"Emergency Dental Care\"\r\n  ]);\r\n  const [loadingServices, setLoadingServices] = useState(true);\r\n\r\n  // About Us state\r\n  const [aboutUs, setAboutUs] = useState({\r\n    description: '',\r\n    highlights: [],\r\n  });\r\n  const [loadingAbout, setLoadingAbout] = useState(true);\r\n\r\n  // Contact info state\r\n  const [clinicSettings, setClinicSettings] = useState({\r\n    system: {\r\n      address: '',\r\n      email: '',\r\n      appName: '',\r\n      showLogo: false,\r\n      phone: '',\r\n    },\r\n    openHours: [\r\n      { day: \"Monday\", hours: \"\" },\r\n      { day: \"Tuesday\", hours: \"\" },\r\n      { day: \"Wednesday\", hours: \"\" },\r\n      { day: \"Thursday\", hours: \"\" },\r\n      { day: \"Friday\", hours: \"\" },\r\n      { day: \"Saturday\", hours: \"\" },\r\n      { day: \"Sunday\", hours: \"\" },\r\n    ]\r\n  });\r\n  const [editingHours, setEditingHours] = useState(false);\r\n  const [openHoursDraft, setOpenHoursDraft] = useState([]);\r\n  const [savingHours, setSavingHours] = useState(false);\r\n\r\n  // Memberships state\r\n  const [memberships, setMemberships] = useState([]);\r\n  const [loadingMemberships, setLoadingMemberships] = useState(true);\r\n\r\n  // Remove static doctors and staffs arrays\r\n  // const doctors = [...]\r\n  // const staffs = [...]\r\n\r\n  // Add state for doctors and staffs from backend\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [staffs, setStaffs] = useState([]);\r\n  const [loadingDoctors, setLoadingDoctors] = useState(true);\r\n  const [loadingStaffs, setLoadingStaffs] = useState(true);\r\n\r\n  // Add these states at the top of HomePage component:\r\n  const [openPatientModal, setOpenPatientModal] = useState(false);\r\n  const [openAppointmentModal, setOpenAppointmentModal] = useState(false);\r\n  const [patientForm, setPatientForm] = useState({\r\n    fullName: '',\r\n    medicalRecordNumber: '',\r\n    insuranceId: '',\r\n    bloodType: '',\r\n    allergies: [],\r\n    medicalHistory: [],\r\n    currentMedications: [],\r\n    emergencyContact: { name: '', phone: '', relationship: '' }\r\n  });\r\n  const [savedPatient, setSavedPatient] = useState(null);\r\n  const [appointmentForm, setAppointmentForm] = useState({\r\n    doctorId: '',\r\n    clinicLocationId: '',\r\n    appointmentDate: '',\r\n    startTime: '',\r\n    endTime: '',\r\n    status: 'Scheduled',\r\n    appointmentType: 'In-Person',\r\n    reasonForVisit: '',\r\n    notes: ''\r\n  });\r\n  const [doctorsList, setDoctorsList] = useState([]);\r\n  const [clinicsList, setClinicsList] = useState([]);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n\r\n  useEffect(() => {\r\n    // Fetch services\r\n    const fetchServices = async () => {\r\n      setLoadingServices(true);\r\n      try {\r\n        const res = await axios.get(BASE_URL + '/services');\r\n        if (res.data && Array.isArray(res.data.services)) {\r\n          setServices(res.data.services);\r\n        }\r\n      } catch (e) {\r\n        // fallback to default or show error if needed\r\n      }\r\n      setLoadingServices(false);\r\n    };\r\n    fetchServices();\r\n\r\n    // Fetch about us\r\n    const fetchAboutUs = async () => {\r\n      setLoadingAbout(true);\r\n      try {\r\n        const res = await axios.get(BASE_URL + '/aboutus');\r\n        if (res.data && res.data.aboutUs) {\r\n          setAboutUs(res.data.aboutUs);\r\n        }\r\n      } catch (e) {\r\n        setAboutUs({\r\n          description: '',\r\n          highlights: [],\r\n        });\r\n      }\r\n      setLoadingAbout(false);\r\n    };\r\n    fetchAboutUs();\r\n\r\n    // Fetch clinic settings for contact info and open hours\r\n    const fetchClinicSettings = async () => {\r\n      try {\r\n        if (CurrentUser.DEMO_MODE) {\r\n          const res = await fetch('/demo/clinicssettings.json');\r\n          const data = await res.json();\r\n          if (data && data.system) {\r\n            setClinicSettings(data);\r\n            setOpenHoursDraft(data.openHours || []);\r\n          }\r\n        } else {\r\n          const res = await axios.get(BASE_URL + '/clinicsettings');\r\n          if (res.data && res.data.system) {\r\n            setClinicSettings(res.data);\r\n            setOpenHoursDraft(res.data.openHours || []);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        // fallback: keep empty/default\r\n      }\r\n    };\r\n    fetchClinicSettings();\r\n\r\n    // Fetch memberships\r\n    const fetchMemberships = async () => {\r\n      setLoadingMemberships(true);\r\n      try {\r\n        const res = await axios.get(BASE_URL + '/memberships');\r\n        if (Array.isArray(res.data)) {\r\n          setMemberships(res.data.slice(0, 4));\r\n        } else if (Array.isArray(res.data.memberships)) {\r\n          setMemberships(res.data.memberships.slice(0, 4));\r\n        }\r\n      } catch (e) {\r\n        setMemberships([]);\r\n      }\r\n      setLoadingMemberships(false);\r\n    };\r\n    fetchMemberships();\r\n\r\n    // Fetch doctors\r\n    const fetchDoctors = async () => {\r\n      setLoadingDoctors(true);\r\n      try {\r\n        const res = await axios.get(BASE_URL + '/doctors');\r\n        if (Array.isArray(res.data)) {\r\n          setDoctors(res.data.slice(0, 4));\r\n        } else if (Array.isArray(res.data.doctors)) {\r\n          setDoctors(res.data.doctors.slice(0, 4));\r\n        }\r\n      } catch (e) {\r\n        setDoctors([]);\r\n      }\r\n      setLoadingDoctors(false);\r\n    };\r\n    fetchDoctors();\r\n\r\n    // Fetch staffs\r\n    const fetchStaffs = async () => {\r\n      setLoadingStaffs(true);\r\n      try {\r\n        const res = await axios.get(BASE_URL + '/staff');\r\n        if (Array.isArray(res.data)) {\r\n          setStaffs(res.data.slice(0, 4));\r\n        } else if (Array.isArray(res.data.staffs)) {\r\n          setStaffs(res.data.staffs.slice(0, 4));\r\n        }\r\n      } catch (e) {\r\n        setStaffs([]);\r\n      }\r\n      setLoadingStaffs(false);\r\n    };\r\n    fetchStaffs();\r\n  }, []);\r\n\r\n  // Fetch doctors and clinics for selects\r\n  useEffect(() => {\r\n    if (openAppointmentModal) {\r\n      axios.get(BASE_URL + '/doctors').then(res => {\r\n        setDoctorsList(Array.isArray(res.data) ? res.data : res.data.doctors || []);\r\n      });\r\n      axios.get(BASE_URL + '/clinics').then(res => {\r\n        setClinicsList(Array.isArray(res.data) ? res.data : res.data.clinics || []);\r\n      });\r\n    }\r\n  }, [openAppointmentModal]);\r\n\r\n  const handleMenu = (event) => setAnchorEl(event.currentTarget);\r\n  const handleClose = () => setAnchorEl(null);\r\n\r\n  // Smooth scroll for menu\r\n  const handleMenuClick = (href) => {\r\n    handleClose();\r\n    const el = document.querySelector(href);\r\n    if (el) el.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Handle open hours edit\r\n  const handleEditOpenHours = () => {\r\n    setOpenHoursDraft(clinicSettings.openHours || []);\r\n    setEditingHours(true);\r\n  };\r\n\r\n  const handleOpenHourChange = (idx, value) => {\r\n    setOpenHoursDraft(prev =>\r\n      prev.map((item, i) => (i === idx ? { ...item, hours: value } : item))\r\n    );\r\n  };\r\n\r\n  const handleSaveOpenHours = async () => {\r\n    setSavingHours(true);\r\n    try {\r\n      const updatedSettings = { ...clinicSettings, openHours: openHoursDraft };\r\n      await axios.put(BASE_URL + '/clinicsettings', updatedSettings);\r\n      setClinicSettings(updatedSettings);\r\n      setEditingHours(false);\r\n    } catch (e) {\r\n      // Optionally show error\r\n    }\r\n    setSavingHours(false);\r\n  };\r\n\r\n  // Handler for Book Appointment button\r\n  const handleBookVisit = () => {\r\n    setOpenPatientModal(true);\r\n  };\r\n\r\n  // Save patient and go to appointment modal\r\n  const handleSavePatient = async () => {\r\n    try {\r\n      // Save patient to backend\r\n      const res = await axios.post(BASE_URL + '/patients', patientForm);\r\n      setSavedPatient(res.data);\r\n      setOpenPatientModal(false);\r\n      setOpenAppointmentModal(true);\r\n    } catch (e) {\r\n      setSnackbar({ open: true, message: 'Failed to save patient', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  // Save appointment and return to home\r\n  const handleSaveAppointment = async () => {\r\n    try {\r\n      const payload = {\r\n        ...appointmentForm,\r\n        patientId: savedPatient.id,\r\n      };\r\n      await axios.post(BASE_URL + '/appointments', payload);\r\n      setOpenAppointmentModal(false);\r\n      setSnackbar({ open: true, message: 'Appointment created successfully!', severity: 'success' });\r\n      setTimeout(() => {\r\n        window.location.href = '/';\r\n      }, 1200);\r\n    } catch (e) {\r\n      setSnackbar({ open: true, message: 'Failed to create appointment', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  // Add scroll handlers before return:\r\n  const handleContactScroll = () => {\r\n    const contactSection = document.getElementById('contact');\r\n    if (contactSection) {\r\n      contactSection.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className=\"home-page-root\" sx={{ bgcolor: '#fafdff', minHeight: '100vh', fontFamily: 'Roboto, Arial, sans-serif' }}>\r\n      {/* AppBar/Menu */}\r\n      <AppBar position=\"fixed\" color=\"primary\" elevation={0} sx={{ bgcolor: '#1976d2' }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1, fontWeight: 700, letterSpacing: 1 }}>\r\n            <span style={{ color: '#fff' }}>Dentic</span>\r\n            <span style={{ color: '#90caf9' }}>Clinic</span>\r\n          </Typography>\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' }, gap: 2 }}>\r\n            {menuLinks.map((link) =>\r\n              link.label === \"Login\" ? (\r\n                <Button\r\n                  key={link.label}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  sx={{ fontWeight: 600, fontSize: 16, textTransform: 'none', px: 3 }}\r\n                  onClick={() => {\r\n                    history.push(link.href);\r\n                  }}\r\n                >\r\n                  {link.label}\r\n                </Button>\r\n              ) : link.label === \"Contact\" ? (\r\n                <Button\r\n                  key={link.label}\r\n                  color=\"inherit\"\r\n                  sx={{ fontWeight: 500, fontSize: 16, textTransform: 'none' }}\r\n                  onClick={handleContactScroll}\r\n                >\r\n                  {link.label}\r\n                </Button>\r\n              ) : link.label === \"Memberships\" ? (\r\n                <Button\r\n                  key={link.label}\r\n                  color=\"inherit\"\r\n                  sx={{ fontWeight: 500, fontSize: 16, textTransform: 'none' }}\r\n                  onClick={() => handleMenuClick(\"#memberships\")}\r\n                >\r\n                  {link.label}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  key={link.label}\r\n                  color=\"inherit\"\r\n                  sx={{ fontWeight: 500, fontSize: 16, textTransform: 'none' }}\r\n                  onClick={() => {\r\n                    if (link.href.startsWith(\"#\")) {\r\n                      handleMenuClick(link.href);\r\n                    } else {\r\n                      window.location.href = link.href;\r\n                    }\r\n                  }}\r\n                >\r\n                  {link.label}\r\n                </Button>\r\n              )\r\n            )}\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton color=\"inherit\" onClick={handleMenu}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              anchorEl={anchorEl}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n              keepMounted\r\n            >\r\n              {menuLinks.map((link) =>\r\n                link.label === \"Login\" ? (\r\n                  <MenuItem\r\n                    key={link.label}\r\n                    onClick={() => {\r\n                      handleClose();\r\n                      history.push(link.href);\r\n                    }}\r\n                    sx={{\r\n                      fontWeight: 600,\r\n                      color: 'secondary.main',\r\n                      bgcolor: 'secondary.lighter',\r\n                      borderRadius: 1,\r\n                      my: 1,\r\n                    }}\r\n                  >\r\n                    {link.label}\r\n                  </MenuItem>\r\n                ) : link.label === \"Contact\" ? (\r\n                  <MenuItem\r\n                    key={link.label}\r\n                    onClick={() => {\r\n                      handleClose();\r\n                      handleContactScroll();\r\n                    }}\r\n                  >\r\n                    {link.label}\r\n                  </MenuItem>\r\n                ) : link.label === \"Memberships\" ? (\r\n                  <MenuItem\r\n                    key={link.label}\r\n                    onClick={() => {\r\n                      handleClose();\r\n                      handleMenuClick(\"#memberships\");\r\n                    }}\r\n                  >\r\n                    {link.label}\r\n                  </MenuItem>\r\n                ) : (\r\n                  <MenuItem\r\n                    key={link.label}\r\n                    onClick={() => {\r\n                      handleClose();\r\n                      if (link.href.startsWith(\"#\")) {\r\n                        handleMenuClick(link.href);\r\n                      } else {\r\n                        window.location.href = link.href;\r\n                      }\r\n                    }}\r\n                  >\r\n                    {link.label}\r\n                  </MenuItem>\r\n                )\r\n              )}\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleClose();\r\n                  handleBookVisit();\r\n                }}\r\n                sx={{ fontWeight: 600, color: 'secondary.main', mt: 1 }}\r\n              >\r\n                Book Visit\r\n              </MenuItem>\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Hero Section */}\r\n      <Box\r\n        id=\"hero\"\r\n        sx={{\r\n          pt: { xs: 10, md: 14 },\r\n          pb: { xs: 6, md: 10 },\r\n          minHeight: { xs: 400, md: 520 },\r\n          background: `linear-gradient(90deg, rgba(25,118,210,0.85) 60%, rgba(66,165,245,0.85) 100%), url(${heroImg}) center/cover no-repeat`,\r\n          color: '#fff',\r\n          textAlign: 'center',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography variant=\"h2\" fontWeight={700} gutterBottom sx={{ letterSpacing: 1 }}>\r\n            Dentic Dental Clinic\r\n          </Typography>\r\n          <Typography variant=\"h5\" sx={{ mb: 4, fontWeight: 400 }}>\r\n            Modern, gentle, and affordable dental care for your whole family.\r\n          </Typography>\r\n          <Box display=\"flex\" justifyContent=\"center\" gap={2} sx={{ mb: 2 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              sx={{ px: 4, fontWeight: 600 }}\r\n              onClick={handleBookVisit}\r\n            >\r\n              Book Appointment\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"inherit\"\r\n              size=\"large\"\r\n              sx={{ px: 4, fontWeight: 600 }}\r\n              onClick={handleContactScroll}\r\n            >\r\n              Contact Us\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* About Section */}\r\n      <Container id=\"about\" maxWidth=\"lg\" sx={{ mt: 12 }}>\r\n        <Grid container spacing={6} alignItems=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <img\r\n              src={aboutImg}\r\n              alt=\"Dentist at work\"\r\n              style={{ width: '100%', borderRadius: 16, boxShadow: '0 8px 32px rgba(25, 118, 210, 0.08)' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h4\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n              About Us\r\n            </Typography>\r\n            <Divider sx={{ mb: 2, width: 60, borderColor: '#1976d2' }} />\r\n            {loadingAbout ? (\r\n              <Typography>Loading...</Typography>\r\n            ) : (\r\n              <>\r\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                  {aboutUs.description}\r\n                </Typography>\r\n                <ul style={{ paddingLeft: 18, marginBottom: 0 }}>\r\n                  {aboutUs.highlights && aboutUs.highlights.map((item, idx) => (\r\n                    <li key={idx}>{item}</li>\r\n                  ))}\r\n                </ul>\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      {/* Services Section */}\r\n      <Container id=\"services\" maxWidth=\"lg\" sx={{ mt: 12 }}>\r\n        <Grid container spacing={6} alignItems=\"center\">\r\n          <Grid item xs={12} md={6} order={{ xs: 2, md: 1 }}>\r\n            <Typography variant=\"h4\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n              Our Services\r\n            </Typography>\r\n            <Divider sx={{ mb: 2, width: 60, borderColor: '#1976d2' }} />\r\n            {loadingServices ? (\r\n              <Typography>Loading services...</Typography>\r\n            ) : (\r\n              <ul style={{ paddingLeft: 18, marginBottom: 0, fontSize: 18 }}>\r\n                {services.map((service, idx) => (\r\n                  <li key={idx}>{service}</li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={6} order={{ xs: 1, md: 2 }}>\r\n            <img\r\n              src={servicesImg}\r\n              alt=\"Dental Services\"\r\n              style={{ width: '100%', borderRadius: 16, boxShadow: '0 8px 32px rgba(25, 118, 210, 0.08)' }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      {/* Opening Hours Section */}\r\n      <Container id=\"opening\" maxWidth=\"sm\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" align=\"center\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n          Opening Hours\r\n        </Typography>\r\n        <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2' }} />\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          {(clinicSettings.openHours || []).map((item, idx) => (\r\n            <Box key={item.day} sx={{ mb: 2, display: 'flex', justifyContent: 'center', alignItems: 'center', gap: 2 }}>\r\n              <Typography variant=\"subtitle1\" fontWeight={600} sx={{ minWidth: 140, textAlign: 'right' }}>\r\n                {item.day}\r\n              </Typography>\r\n              <Chip\r\n                label={item.hours}\r\n                color={item.hours === 'Closed' ? 'error' : 'primary'}\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  fontWeight: 600,\r\n                  fontSize: 16,\r\n                  px: 2,\r\n                  bgcolor: item.hours === 'Closed' ? '#ffebee' : '#e3f2fd',\r\n                  color: item.hours === 'Closed' ? 'error.main' : 'primary.main',\r\n                  borderColor: item.hours === 'Closed' ? '#ffcdd2' : '#90caf9',\r\n                }}\r\n              />\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Container>\r\n\r\n      {/* Memberships Section (replaces Pricing) */}\r\n      <Container id=\"memberships\" maxWidth=\"lg\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" align=\"center\" fontWeight={700} gutterBottom sx={{ color: '#1976d2', letterSpacing: 1 }}>\r\n          Memberships\r\n        </Typography>\r\n        <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2' }} />\r\n        {loadingMemberships ? (\r\n          <Typography align=\"center\">Loading memberships...</Typography>\r\n        ) : (\r\n          <Grid container spacing={4} justifyContent=\"center\">\r\n            {memberships.map((item, idx) => (\r\n              <Grid item xs={12} sm={6} md={3} key={item.id || idx}>\r\n                <Card\r\n                  elevation={8}\r\n                  sx={{\r\n                    textAlign: 'center',\r\n                    py: 6,\r\n                    px: { xs: 2, md: 3 },\r\n                    borderRadius: 5,\r\n                    minHeight: 420,\r\n                    width: '100%',\r\n                    background: `linear-gradient(135deg, #e3f2fd 60%, #fff 100%)`,\r\n                    boxShadow: '0 12px 40px rgba(25, 118, 210, 0.13)',\r\n                    position: 'relative',\r\n                    overflow: 'visible',\r\n                    transition: 'transform 0.2s',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    '&:hover': {\r\n                      transform: 'translateY(-10px) scale(1.025)',\r\n                      boxShadow: '0 20px 60px rgba(25, 118, 210, 0.20)',\r\n                    }\r\n                  }}\r\n                >\r\n                  <Box sx={{ width: '100%', display: 'flex', justifyContent: 'flex-end', position: 'absolute', top: 24, right: 24, zIndex: 2 }}>\r\n                    <Chip\r\n                      label={item.paymentStatus === \"Active\" ? \"Active\" : \"Inactive\"}\r\n                      color={item.paymentStatus === \"Active\" ? \"success\" : \"error\"}\r\n                      sx={{\r\n                        fontWeight: 700,\r\n                        fontSize: 16,\r\n                        px: 2.5,\r\n                        letterSpacing: 0.5,\r\n                        py: 1,\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                  <Avatar\r\n                    sx={{\r\n                      bgcolor: '#1976d2',\r\n                      width: 90,\r\n                      height: 90,\r\n                      mb: 2,\r\n                      fontSize: 40,\r\n                      fontWeight: 700,\r\n                      boxShadow: 3,\r\n                      zIndex: 1,\r\n                      mt: 6,\r\n                    }}\r\n                  >\r\n                    {item.membershipPlan?.[0] || 'M'}\r\n                  </Avatar>\r\n                  <Typography variant=\"h5\" fontWeight={700} sx={{ color: '#1976d2', mb: 1.5, letterSpacing: 1, mt: 1 }}>\r\n                    {item.membershipPlan}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                    <b>Valid:</b> {item.validityPeriod?.startDate ? new Date(item.validityPeriod.startDate).toLocaleDateString() : '-'}\r\n                    {\" \"}to{\" \"}\r\n                    {item.validityPeriod?.endDate ? new Date(item.validityPeriod.endDate).toLocaleDateString() : '-'}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                    <b>Renewal:</b> {item.renewalDate ? new Date(item.renewalDate).toLocaleDateString() : '-'}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                    <b>Last Payment:</b> {item.lastPaymentAmount ? (\r\n                      <span style={{ color: \"#388e3c\", fontWeight: 600 }}>${item.lastPaymentAmount}</span>\r\n                    ) : '-'}\r\n                  </Typography>\r\n                  <Divider sx={{ my: 2.5, borderColor: '#90caf9', width: '100%' }} />\r\n                  <Typography variant=\"body1\" fontWeight={600} sx={{ mb: 1.5, color: '#1976d2' }}>\r\n                    Benefits\r\n                  </Typography>\r\n                  <Box component=\"ul\" sx={{ listStyle: 'none', p: 0, m: 0, textAlign: 'left', width: '100%', maxWidth: 400, mx: 'auto' }}>\r\n                    {(item.benefits || []).map((b, i) => (\r\n                      <Box\r\n                        key={i}\r\n                        component=\"li\"\r\n                        sx={{\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          mb: 1.2,\r\n                          fontSize: 17,\r\n                          color: '#333',\r\n                        }}\r\n                      >\r\n                        <Box\r\n                          component=\"span\"\r\n                          sx={{\r\n                            display: 'inline-block',\r\n                            width: 10,\r\n                            height: 10,\r\n                            borderRadius: '50%',\r\n                            background: '#1976d2',\r\n                            mr: 2,\r\n                            flexShrink: 0,\r\n                            mt: '2px'\r\n                          }}\r\n                        />\r\n                        {b}\r\n                      </Box>\r\n                    ))}\r\n                  </Box>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n            {memberships.length === 0 && (\r\n              <Typography align=\"center\" sx={{ width: '100%', mt: 2 }}>No memberships found.</Typography>\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n\r\n      {/* Blog Section */}\r\n      {/* \r\n      <Container id=\"blog\" maxWidth=\"md\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" align=\"center\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n          Blog\r\n        </Typography>\r\n        <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2' }} />\r\n        <Grid container spacing={4}>\r\n          {blogPosts.map((post, idx) => (\r\n            <Grid item xs={12} md={6} key={idx}>\r\n              <Card elevation={2} sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" fontWeight={600}>{post.title}</Typography>\r\n                <Typography variant=\"caption\" color=\"text.secondary\">{new Date(post.date).toLocaleDateString()}</Typography>\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>{post.excerpt}</Typography>\r\n                <Button size=\"small\" sx={{ mt: 2 }}>Read More</Button>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n      */}\r\n\r\n      {/* Doctors Section */}\r\n      <Container id=\"doctors\" maxWidth=\"lg\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" align=\"center\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n          Our Doctors\r\n        </Typography>\r\n        <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2' }} />\r\n        {loadingDoctors ? (\r\n          <Typography align=\"center\">Loading doctors...</Typography>\r\n        ) : (\r\n          <Grid container spacing={4} justifyContent=\"center\">\r\n            {doctors.map((doc, idx) => (\r\n              <Grid item xs={12} sm={6} md={3} key={doc.id || idx}>\r\n                <Card elevation={2} sx={{ textAlign: 'center', py: 4 }}>\r\n                  <Avatar\r\n                    src={\r\n                      doc.img\r\n                        ? doc.img\r\n                        : `https://randomuser.me/api/portraits/med/men/${doc.id % 50}.jpg`\r\n                    }\r\n                    alt={doc.fullName}\r\n                    sx={{ width: 80, height: 80, mx: 'auto', mb: 2, fontSize: 32, bgcolor: '#1976d2' }}\r\n                  >\r\n                    {!doc.img && (doc.fullName?.[0] || 'D')}\r\n                  </Avatar>\r\n                  <Typography variant=\"h6\" fontWeight={600}>{doc.fullName}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">{doc.specialization || doc.specialty}</Typography>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n            {doctors.length === 0 && (\r\n              <Typography align=\"center\" sx={{ width: '100%', mt: 2 }}>No doctors found.</Typography>\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n\r\n      {/* Staff Section */}\r\n      <Container id=\"staff\" maxWidth=\"md\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" align=\"center\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n          Our Staff\r\n        </Typography>\r\n        <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2' }} />\r\n        {loadingStaffs ? (\r\n          <Typography align=\"center\">Loading staff...</Typography>\r\n        ) : (\r\n          <Grid container spacing={4} justifyContent=\"center\">\r\n            {staffs.map((staff, idx) => (\r\n              <Grid item xs={12} sm={6} md={3} key={staff.id || idx}>\r\n                <Card elevation={1} sx={{ textAlign: 'center', py: 4 }}>\r\n                  <Avatar\r\n                    src={\r\n                      staff.img\r\n                        ? staff.img\r\n                        : `https://randomuser.me/api/portraits/med/women/${staff.id % 50}.jpg`\r\n                    }\r\n                    alt={staff.fullName}\r\n                    sx={{ width: 70, height: 70, mx: 'auto', mb: 2, fontSize: 28, bgcolor: '#1976d2' }}\r\n                  >\r\n                    {!staff.img && (staff.fullName?.[0] || 'S')}\r\n                  </Avatar>\r\n                  <Typography variant=\"subtitle1\" fontWeight={600}>{staff.fullName}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">{staff.role}</Typography>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n            {staffs.length === 0 && (\r\n              <Typography align=\"center\" sx={{ width: '100%', mt: 2 }}>No staff found.</Typography>\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n\r\n      {/* Contact Section */}\r\n      <Box\r\n        id=\"contact\"\r\n        sx={{\r\n          width: '100vw',\r\n          position: 'relative',\r\n          left: '50%',\r\n          right: '50%',\r\n          ml: '-50vw',\r\n          mr: '-50vw',\r\n          background: `linear-gradient(rgba(25,118,210,0.85),rgba(25,118,210,0.85)), url(${contactImg}) center/cover no-repeat`,\r\n          py: { xs: 8, md: 10 },\r\n          mt: 10,\r\n          mb: 10,\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Card\r\n            elevation={4}\r\n            sx={{\r\n              p: { xs: 3, md: 5 },\r\n              bgcolor: 'rgba(255,255,255,0.97)',\r\n              borderRadius: 4,\r\n              boxShadow: '0 8px 32px rgba(25, 118, 210, 0.10)',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <Typography variant=\"h4\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n              Contact Us\r\n            </Typography>\r\n            <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2', opacity: 0.6 }} />\r\n            <Typography variant=\"body1\" sx={{ mb: 3 }}>\r\n              Have questions or want to book an appointment? Reach out to us!\r\n            </Typography>\r\n            <Grid container spacing={2} justifyContent=\"center\" sx={{ mb: 2 }}>\r\n              <Grid item xs={12} sm={4}>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <Avatar sx={{ bgcolor: '#1976d2', mb: 1 }}>\r\n                    <i className=\"fas fa-envelope\" style={{ color: '#fff' }} />\r\n                  </Avatar>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Email</Typography>\r\n                  <Typography variant=\"body2\" sx={{ wordBreak: 'break-all' }}>\r\n                    {clinicSettings.system.email || 'info@denticclinic.com'}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <Avatar sx={{ bgcolor: '#1976d2', mb: 1 }}>\r\n                    <i className=\"fas fa-phone\" style={{ color: '#fff' }} />\r\n                  </Avatar>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Phone</Typography>\r\n                  <Typography variant=\"body2\">\r\n                    {clinicSettings.system.phone || '+1 234 567 890'}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <Avatar sx={{ bgcolor: '#1976d2', mb: 1 }}>\r\n                    <i className=\"fas fa-map-marker-alt\" style={{ color: '#fff' }} />\r\n                  </Avatar>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Address</Typography>\r\n                  <Typography variant=\"body2\">\r\n                    {clinicSettings.system.address || '123 Smile Street, Happy City, Country'}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              sx={{ mt: 2, px: 5, fontWeight: 600, borderRadius: 2 }}\r\n              onClick={() => window.location.href = '/send-message'}\r\n            >\r\n              Send Message\r\n            </Button>\r\n          </Card>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* Call to Action */}\r\n      <Box sx={{ bgcolor: '#1976d2', color: '#fff', py: 6, mt: 10 }}>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"h5\" align=\"center\" fontWeight={700} gutterBottom>\r\n            Ready for a brighter, healthier smile?\r\n          </Typography>\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              sx={{ px: 5, fontWeight: 600 }}\r\n              onClick={handleBookVisit}\r\n            >\r\n              Book Your Visit\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* Footer */}\r\n      <Box sx={{ bgcolor: '#222', color: '#fff', py: 3, mt: 8 }}>\r\n        <Container maxWidth=\"md\">\r\n          <Typography align=\"center\" variant=\"body2\">\r\n            &copy; {new Date().getFullYear()} Dentic Clinic. All rights reserved.\r\n          </Typography>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* Patient Modal JSX */}\r\n      <Dialog open={openPatientModal} onClose={() => setOpenPatientModal(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Add Patient</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2} sx={{ mt: 1 }}>\r\n            <TextField label=\"Full Name\" value={patientForm.fullName} onChange={e => setPatientForm(f => ({ ...f, fullName: e.target.value }))} fullWidth required />\r\n            <TextField label=\"Medical Record Number\" value={patientForm.medicalRecordNumber} onChange={e => setPatientForm(f => ({ ...f, medicalRecordNumber: e.target.value }))} fullWidth />\r\n            <TextField label=\"Insurance ID\" value={patientForm.insuranceId} onChange={e => setPatientForm(f => ({ ...f, insuranceId: e.target.value }))} fullWidth />\r\n            <FormControl fullWidth>\r\n              <InputLabel>Blood Type</InputLabel>\r\n              <Select\r\n                label=\"Blood Type\"\r\n                value={patientForm.bloodType}\r\n                onChange={e => setPatientForm(f => ({ ...f, bloodType: e.target.value }))}\r\n              >\r\n                {['A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-'].map(bt => (\r\n                  <MenuItem key={bt} value={bt}>{bt}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              label=\"Allergies (comma separated)\"\r\n              value={patientForm.allergies.join(', ')}\r\n              onChange={e => setPatientForm(f => ({ ...f, allergies: e.target.value.split(',').map(a => a.trim()).filter(Boolean) }))}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Emergency Contact Name\"\r\n              value={patientForm.emergencyContact.name}\r\n              onChange={e => setPatientForm(f => ({ ...f, emergencyContact: { ...f.emergencyContact, name: e.target.value } }))}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Emergency Contact Phone\"\r\n              value={patientForm.emergencyContact.phone}\r\n              onChange={e => setPatientForm(f => ({ ...f, emergencyContact: { ...f.emergencyContact, phone: e.target.value } }))}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Emergency Contact Relationship\"\r\n              value={patientForm.emergencyContact.relationship}\r\n              onChange={e => setPatientForm(f => ({ ...f, emergencyContact: { ...f.emergencyContact, relationship: e.target.value } }))}\r\n              fullWidth\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenPatientModal(false)} color=\"primary\" variant=\"outlined\">Cancel</Button>\r\n          <Button onClick={handleSavePatient} color=\"primary\" variant=\"contained\">Next</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Appointment Modal JSX */}\r\n      <Dialog open={openAppointmentModal} onClose={() => setOpenAppointmentModal(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Book Appointment</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2} sx={{ mt: 1 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Doctor</InputLabel>\r\n              <Select\r\n                label=\"Doctor\"\r\n                value={appointmentForm.doctorId}\r\n                onChange={e => setAppointmentForm(f => ({ ...f, doctorId: e.target.value }))}\r\n              >\r\n                {doctorsList.map(doc => (\r\n                  <MenuItem key={doc.id} value={doc.id}>{doc.fullName}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Clinic Location</InputLabel>\r\n              <Select\r\n                label=\"Clinic Location\"\r\n                value={appointmentForm.clinicLocationId}\r\n                onChange={e => setAppointmentForm(f => ({ ...f, clinicLocationId: e.target.value }))}\r\n              >\r\n                {clinicsList.map(clinic => (\r\n                  <MenuItem key={clinic.id} value={clinic.id}>{clinic.name}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              label=\"Appointment Date\"\r\n              type=\"date\"\r\n              value={appointmentForm.appointmentDate}\r\n              onChange={e => setAppointmentForm(f => ({ ...f, appointmentDate: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Start Time\"\r\n              type=\"time\"\r\n              value={appointmentForm.startTime}\r\n              onChange={e => setAppointmentForm(f => ({ ...f, startTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"End Time\"\r\n              type=\"time\"\r\n              value={appointmentForm.endTime}\r\n              onChange={e => setAppointmentForm(f => ({ ...f, endTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              fullWidth\r\n            />\r\n            <FormControl fullWidth>\r\n              <InputLabel>Type</InputLabel>\r\n              <Select\r\n                label=\"Type\"\r\n                value={appointmentForm.appointmentType}\r\n                onChange={e => setAppointmentForm(f => ({ ...f, appointmentType: e.target.value }))}\r\n              >\r\n                <MenuItem value=\"In-Person\">In-Person</MenuItem>\r\n                <MenuItem value=\"Telemedicine\">Telemedicine</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              label=\"Reason for Visit\"\r\n              value={appointmentForm.reasonForVisit}\r\n              onChange={e => setAppointmentForm(f => ({ ...f, reasonForVisit: e.target.value }))}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Notes\"\r\n              value={appointmentForm.notes}\r\n              onChange={e => setAppointmentForm(f => ({ ...f, notes: e.target.value }))}\r\n              fullWidth\r\n              multiline\r\n              rows={2}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenAppointmentModal(false)} color=\"primary\" variant=\"outlined\">Cancel</Button>\r\n          <Button onClick={handleSaveAppointment} color=\"primary\" variant=\"contained\">Book</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Snackbar for feedback */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={3000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n\r\n};\r\nexport default HomePage;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box, Typography, Paper, List, ListItem, ListItemIcon, ListItemText, Divider, Button,\r\n  Dialog, DialogTitle, DialogContent, DialogActions\r\n} from '@mui/material';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport FlashOnIcon from '@mui/icons-material/FlashOn';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\n\r\n// --- NEW: Import module documentation from JSON/text file ---\r\nimport moduleDocs from './moduleDocs.json';\r\n\r\nconst docItems = [\r\n  {\r\n    icon: <DashboardIcon color=\"primary\" />,\r\n    primary: \"Widgets\",\r\n    secondary: \"Quick stats for patients, appointments, staff, and more. Hover for highlight.\"\r\n  },\r\n  {\r\n    icon: <BarChartIcon color=\"secondary\" />,\r\n    primary: \"Charts\",\r\n    secondary: \"Visualize clinic data (patients, medicaments, appointments, etc.)\"\r\n  },\r\n  {\r\n    icon: <FlashOnIcon sx={{ color: \"#fbc02d\" }} />,\r\n    primary: \"Recent Activities\",\r\n    secondary: \"Track latest actions and updates in your clinic.\"\r\n  },\r\n  {\r\n    icon: <ListAltIcon sx={{ color: \"#43a047\" }} />,\r\n    primary: \"Quick Actions\",\r\n    secondary: \"Use buttons to add patients, schedule appointments, and manage records.\"\r\n  },\r\n  {\r\n    icon: <ListAltIcon sx={{ color: \"#0288d1\" }} />,\r\n    primary: \"Top 5 Lists\",\r\n    secondary: \"See top doctors, patients, and medicaments at a glance.\"\r\n  },\r\n  {\r\n    icon: <MonetizationOnIcon sx={{ color: \"#d32f2f\" }} />,\r\n    primary: \"Financial Summary\",\r\n    secondary: \"Overview of income, expenses, and profit.\"\r\n  },\r\n  {\r\n    icon: <SearchIcon sx={{ color: \"#8e24aa\" }} />,\r\n    primary: \"Search & Filter\",\r\n    secondary: \"Quickly find patients, appointments, or medicaments.\"\r\n  },\r\n  {\r\n    icon: <SettingsIcon sx={{ color: \"#1976d2\" }} />,\r\n    primary: \"Settings\",\r\n    secondary: \"Edit your profile or customize your dashboard widgets.\"\r\n  },\r\n  {\r\n    icon: <ChatIcon sx={{ color: \"#009688\" }} />,\r\n    primary: \"Help\",\r\n    secondary: \"For support, use the Live Chat or contact your admin.\"\r\n  }\r\n];\r\n\r\nconst moduleItems = [\r\n  { label: \"Dashboard\", desc: \"Overview, widgets, charts, and quick stats.\" },\r\n  { label: \"Patient Management\", desc: \"Add, edit, view, and search patients. Medical history, allergies, blood type, emergency contact.\" },\r\n  { label: \"Doctor Management\", desc: \"Manage doctor profiles and schedules.\" },\r\n  { label: \"Staff Management\", desc: \"Manage staff profiles and roles.\" },\r\n  { label: \"Clinic Management\", desc: \"Clinic info, locations, and working hours.\" },\r\n  { label: \"Appointment Management\", desc: \"Book, edit, and view appointments. Telemedicine support.\" },\r\n  { label: \"Billing & Invoices\", desc: \"Create and manage bills, invoices, and payments.\" },\r\n  { label: \"Payments\", desc: \"Track and manage patient payments.\" },\r\n  { label: \"Expenses\", desc: \"Record and monitor clinic expenses.\" },\r\n  { label: \"Memberships\", desc: \"Manage patient memberships and plans.\" },\r\n  { label: \"Prescription Management\", desc: \"Create, edit, and view prescriptions.\" },\r\n  { label: \"Medicament Management\", desc: \"Manage medicaments, manufacturers, and stock.\" },\r\n  { label: \"Certificates\", desc: \"Issue and manage certificates.\" },\r\n  { label: \"Reports & Analytics\", desc: \"View statistics, summaries, and trends.\" },\r\n  { label: \"Contact & Communication\", desc: \"Contact section, book visit, and communication tools.\" },\r\n  { label: \"Settings\", desc: \"Profile and dashboard customization.\" },\r\n  { label: \"Help & Documentation\", desc: \"Access help center and user guides.\" }\r\n];\r\n\r\nconst DocumentationHelp = () => {\r\n  const [openModule, setOpenModule] = useState(null);\r\n  const [moduleContent, setModuleContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (openModule) {\r\n      setModuleContent(moduleDocs[openModule] || \"Documentation coming soon.\");\r\n    }\r\n  }, [openModule]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxWidth: 700,\r\n        width: '100%',\r\n        mx: 'auto',\r\n        mt: 4,\r\n        mb: 4,\r\n        px: { xs: 1, sm: 2 },\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          borderRadius: 4,\r\n          p: { xs: 2, sm: 4 },\r\n          bgcolor: '#fafdff',\r\n          boxShadow: '0 4px 24px rgba(25,118,210,0.08)',\r\n          width: '100%',\r\n          minWidth: 320,\r\n        }}\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n          <HelpOutlineIcon sx={{ fontSize: 36, color: '#1976d2', mr: 1 }} />\r\n          <Typography variant=\"h4\" fontWeight={700} color=\"primary\">\r\n            Dashboard Documentation & Help\r\n          </Typography>\r\n        </Box>\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\" mb={3}>\r\n          Welcome to your Dentic Clinic dashboard! Here’s a quick guide to help you get the most out of your admin panel.\r\n        </Typography>\r\n        <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 1, mt: 2 }}>\r\n          Main Modules\r\n        </Typography>\r\n        <List sx={{ mb: 2 }}>\r\n          {moduleItems.map((mod, idx) => (\r\n            <ListItem\r\n              key={idx}\r\n              button\r\n              onClick={() => setOpenModule(mod.label)}\r\n              sx={{\r\n                pl: 0,\r\n                mb: 0.5,\r\n                borderRadius: 2,\r\n                '&:hover': { bgcolor: '#e3f2fd', cursor: 'pointer' }\r\n              }}\r\n            >\r\n              <ListItemIcon sx={{ minWidth: 32 }}>\r\n                <FlashOnIcon color=\"primary\" fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={<Typography variant=\"subtitle2\" fontWeight={600}>{mod.label}</Typography>}\r\n                secondary={<Typography variant=\"body2\" color=\"text.secondary\">{mod.desc}</Typography>}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <List>\r\n          {docItems.map((item, idx) => (\r\n            <ListItem key={idx} alignItems=\"flex-start\" sx={{ mb: 1 }}>\r\n              <ListItemIcon sx={{ minWidth: 40 }}>{item.icon}</ListItemIcon>\r\n              <ListItemText\r\n                primary={<Typography variant=\"subtitle1\" fontWeight={600}>{item.primary}</Typography>}\r\n                secondary={<Typography variant=\"body2\" color=\"text.secondary\">{item.secondary}</Typography>}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider sx={{ my: 2 }} />\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" flexWrap=\"wrap\" gap={2}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            For more detailed documentation, please refer to the user manual or contact support.\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            href=\"/help\"\r\n            sx={{ textTransform: 'none', fontWeight: 600 }}\r\n          >\r\n            Go to Help Center\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* Modal for module documentation */}\r\n      <Dialog\r\n        open={!!openModule}\r\n        onClose={() => setOpenModule(null)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          {openModule} Documentation\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-line' }}>\r\n            {moduleContent}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenModule(null)} color=\"primary\" variant=\"outlined\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DocumentationHelp;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useForm } from 'react-hook-form';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  Avatar,\r\n  Stack,\r\n} from '@mui/material';\r\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst Register = () => {\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [user, setUser] = useState({ username: '', password: '' });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(BASE_URL+'/users', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: user.username, password: user.password }),\r\n      });\r\n      if (response.ok) {\r\n        alert('Registration successful! You can now log in.');\r\n        history.replace('/login');\r\n      } else {\r\n        alert('Registration failed. Please try a different username.');\r\n      }\r\n    } catch (e) {\r\n      alert('An error occurred. Please try again.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const goToLogin = () => {\r\n    history.replace('/login');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        bgcolor: '#fafdff',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundImage: 'url(\"images/login.jpg\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n      }}\r\n    >\r\n      <Paper elevation={6} sx={{ p: 4, maxWidth: 380, width: '100%', borderRadius: 3, backdropFilter: 'blur(2px)', background: 'rgba(255,255,255,0.92)' }}>\r\n        <Stack alignItems=\"center\" spacing={2}>\r\n          <Avatar sx={{ bgcolor: '#1976d2', width: 64, height: 64 }}>\r\n            <PersonAddAltIcon fontSize=\"large\" />\r\n          </Avatar>\r\n          <Typography variant=\"h5\" fontWeight={700} color=\"primary\">\r\n            Register Account\r\n          </Typography>\r\n        </Stack>\r\n        <form onSubmit={handleSubmit(onSubmit)} style={{ marginTop: 24 }}>\r\n          <TextField\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={user.username}\r\n            onChange={handleInputChange}\r\n            inputRef={register({ required: true })}\r\n            error={!!errors?.username}\r\n            helperText={errors?.username && \"Username is required\"}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={user.password}\r\n            onChange={handleInputChange}\r\n            inputRef={register({ required: true })}\r\n            error={!!errors?.password}\r\n            helperText={errors?.password && \"Password is required\"}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            size=\"large\"\r\n            sx={{ mt: 2, mb: 1, fontWeight: 600 }}\r\n            startIcon={<PersonAddAltIcon />}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Registering...' : 'Register'}\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={goToLogin}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n            sx={{ mb: 1, fontWeight: 600 }}\r\n          >\r\n            Back to Login\r\n          </Button>\r\n        </form>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mt: 2 }}>\r\n          &copy; {new Date().getFullYear()} Dentic Clinic\r\n        </Typography>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Register;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { Button, Typography, TextField, Paper, Stack, Alert } from '@mui/material';\r\n\r\nconst AboutUsPage = () => {\r\n  const [description, setDescription] = useState('');\r\n  const [highlights, setHighlights] = useState([]);\r\n  const [textarea, setTextarea] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [success, setSuccess] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch about us on mount\r\n  useEffect(() => {\r\n    fetchAboutUs();\r\n  }, []);\r\n\r\n  const fetchAboutUs = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const res = await axios.get(BASE_URL + '/aboutus');\r\n      const about = res.data.aboutUs || {};\r\n      setDescription(about.description || '');\r\n      setHighlights(about.highlights || []);\r\n      setTextarea((about.highlights || []).join('\\n'));\r\n    } catch (e) {\r\n      setError('Failed to load About Us.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditMode(true);\r\n    setSuccess('');\r\n    setError('');\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditMode(false);\r\n    setTextarea(highlights.join('\\n'));\r\n    setSuccess('');\r\n    setError('');\r\n  };\r\n\r\n  const handleChangeDesc = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleChangeHighlights = (e) => {\r\n    setTextarea(e.target.value);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n    try {\r\n      const updatedHighlights = textarea\r\n        .split('\\n')\r\n        .map(s => s.trim())\r\n        .filter(Boolean);\r\n      await axios.post(BASE_URL + '/aboutus', {\r\n        aboutUs: {\r\n          description,\r\n          highlights: updatedHighlights,\r\n        }\r\n      });\r\n      setHighlights(updatedHighlights);\r\n      setEditMode(false);\r\n      setSuccess('About Us updated successfully.');\r\n    } catch (e) {\r\n      setError('Failed to update About Us.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ maxWidth: 700, mx: 'auto', mt: 6, p: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        <i className=\"menu-icon fa fa-info-circle\"></i> About Us\r\n      </Typography>\r\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n      {success && <Alert severity=\"success\" sx={{ mb: 2 }}>{success}</Alert>}\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Description\"\r\n          multiline\r\n          minRows={3}\r\n          value={description}\r\n          onChange={handleChangeDesc}\r\n          fullWidth\r\n          disabled={!editMode || loading}\r\n        />\r\n        <TextField\r\n          label=\"Highlights\"\r\n          multiline\r\n          minRows={5}\r\n          value={textarea}\r\n          onChange={handleChangeHighlights}\r\n          fullWidth\r\n          disabled={!editMode || loading}\r\n          helperText=\"One highlight per line\"\r\n        />\r\n        {!editMode ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleEdit}\r\n            disabled={loading}\r\n            sx={{ width: 120 }}\r\n          >\r\n            Edit\r\n          </Button>\r\n        ) : (\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              onClick={handleSave}\r\n              disabled={loading}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={handleCancel}\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        )}\r\n      </Stack>\r\n      {!editMode && (\r\n        <div style={{ marginTop: 24 }}>\r\n          <Typography variant=\"subtitle1\" fontWeight={600} gutterBottom>\r\n            Highlights:\r\n          </Typography>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {highlights.map((h, idx) => (\r\n              <li className=\"list-group-item\" key={idx}>\r\n                {h}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AboutUsPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Content.css';\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport Configuration from '../Configuration/Configuration';\r\nimport Dashbord from '../DashBoard/DashBoard';\r\nimport Rendezvous from '../Rendezvous/Rendezvous';\r\nimport Prescription from '../Prescription/Prescription';\r\nimport Payment from '../Payment/Payment';\r\nimport Patient from '../Patient/Patient';\r\nimport Medicament from '../Medicament/Medicament';\r\nimport Login from '../Login/Login';\r\nimport AddPrescription from \"../AddPrescription/AddPrescription\";\r\nimport CurrentUser from '../../main/config/user';\r\nimport AddMedicament from '../AddMedicament/AddMedicament';\r\nimport AddPatient from '../AddPatient/AddPatient';\r\nimport Expense from \"../Expense/Expense\";\r\nimport Income from \"../Income/Income\";\r\nimport Note from \"../Note/Note\";\r\nimport ToDo from \"../ToDo/ToDo\";\r\nimport Message from \"../Message/Message\";\r\nimport MedicamentManufacture from \"../MedicamentManufacture/MedicamentManufacture\";\r\nimport MedicamentCategory from \"../MedicamentCategory/MedicamentCategory\";\r\nimport LabTest from \"../LabTest/LabTest\";\r\nimport Invoice from \"../Invoice/Invoice\";\r\nimport Certificates from '../Certificates/Certificates'\r\nimport Consultation from '../Consultation/Consultations.jsx'\r\nimport CertificateTemplates from '../CertificateTemplates/CertificateTemplates'\r\nimport TestLab from '../LabTest/LabTest'\r\nimport MedicamentAnalytics from '../MedicamentAnalytics/MedicamentAnalytics';\r\nimport PatientAnalytics from '../PatientAnalytics/PatientAnalytics'\r\nimport SaleAnalytics from '../SaleAnalytics/SaleAnalytics'\r\nimport Services from '../Services/Services'\r\nimport OpeningHourPage from '../OpeningHourPage/OpeningHourPage'\r\nimport ContactPage from '../ContactPage/ContactPage'\r\nimport ServicePage from '../ServicePage/ServicePage'\r\nimport BlogPage from '../BlogPage/BlogPage'\r\nimport Testimonial from '../Testimonial/Testimonial'\r\nimport Schedule from '../Schedule/Schedule'\r\nimport NewsLetter from '../NewsLetter/NewsLetter'\r\nimport SearchPatient from '../SearchPatient/SearchPatient';\r\nimport Profile from '../Profile/Profile';\r\nimport Appointments from '../Appointements/Appointements';\r\nimport CaseStudies from '../CaseStudy/CaseStudies';\r\nimport MembershipDetails from '../Membership/MembershipDetails.jsx';\r\nimport OperationDetails from '../Operation/OperationDetails.jsx';\r\nimport ClinicInfo from '../Clinic/ClinicInfo.jsx';\r\nimport Diagnoses from '../Diagnose/Diagnoses.jsx';\r\nimport EquipmentMaintenance from '../EquipmentMaintenance/EquipementMaintenance.js';\r\nimport InsuranceInfo from '../Insurance/InsuranceInfo.jsx';\r\nimport LegalCompliance from '../LegalCompliance/LegalCompliance.jsx';\r\nimport LoyaltyProgram from '../LoyaltyProgram/LoyaltyProgram.js';\r\nimport MarketingCampaign from '../MarketingCampaign/MarketingCampaign.jsx';\r\nimport StaffProfile from '../Staff/StaffProfile.jsx';\r\nimport ProcedureDetails from '../Procedure/ProcedureDetails.jsx';\r\nimport TreatmentPlan from '../TreatmentPlan/TreatmentPlan.jsx';\r\nimport Doctors from '../Doctor/Doctors.jsx';\r\nimport ProfessionalOdontogram from '../Odontogram/ProfessionalOdontogram.js';\r\nimport Telemedicine from '../Telemedicine/Telemedicine.js';\r\nimport Billing from '../Billing/Billing.js';\r\nimport DentalImaging from '../DentalImaging/DentalImaging.js';\r\nimport InventoryItem from '../InventoryItem/InventoryItem.js';\r\nimport HomePage from '../Home/HomePage.jsx';\r\nimport DocumentationHelp from '../DocumentationHelp/DocumentationHelp.js';\r\nimport Register from '../Register/Register.js';\r\nimport AboutUsPage from '../AboutUsPage/AboutUsPage.jsx';\r\nimport AddInventoryItem from '../InventoryItem/AddInventoryItem.js';\r\nimport AddAppointment from '../Appointements/AddAppointment.js';\r\n\r\nconst Content = ({ connected }) => (\r\n  <div className=\"col-md-12\" style={{ display: (connected ? 'block' : 'none') }}>\r\n    <div>\r\n      <Route exact path=\"/dashboard\" component={Dashbord} />\r\n      <Route exact path=\"/rendezvous\" component={Appointments} />\r\n      <Route exact path=\"/prescription\" component={Prescription} />\r\n      <Route exact path=\"/addprescription\" component={AddPrescription} />\r\n      <Route exact path=\"/patient\" component={Patient} />\r\n      <Route exact path=\"/medicaments\" component={Medicament} />\r\n      <Route exact path=\"/configuration\" component={Configuration} />\r\n      <Route exact path=\"/add-prescription\" component={AddPrescription} />\r\n      <Route exact path=\"/add-medicament\" component={AddMedicament} />\r\n      <Route exact path=\"/add-patient\" component={AddPatient} />\r\n      <Route exact path=\"/add-appointement\" component={Rendezvous} />\r\n      <Route exact path=\"/payment\" component={Payment} />\r\n      <Route exact path=\"/income\" component={Income} />\r\n      <Route exact path=\"/expense\" component={Expense} />\r\n      <Route exact path=\"/note\" component={Note} />\r\n      <Route exact path=\"/todo\" component={ToDo} />\r\n      <Route exact path=\"/message\" component={Message} />\r\n      <Route exact path=\"/telemedicine\" component={Telemedicine} />\r\n      <Route exact path=\"/billing\" component={Billing} />\r\n      <Route exact path=\"/dental-imaging\" component={DentalImaging} />\r\n      <Route exact path=\"/inventory-item\" component={InventoryItem} />\r\n      <Route exact path=\"/aboutus\" component={AboutUsPage} />\r\n      <Route exact path=\"/medicament-manufacture\" component={MedicamentManufacture} />\r\n      <Route exact path=\"/medicament-category\" component={MedicamentCategory} />\r\n      <Route exact path=\"/lab-test\" component={LabTest} />\r\n      <Route exact path=\"/invoice\" component={Invoice} />\r\n      <Route exact path=\"/certificate\" component={Certificates} />\r\n      <Route exact path=\"/consultation\" component={Consultation} />\r\n      <Route exact path=\"/certificate-template\" component={CertificateTemplates} />\r\n      <Route exact path=\"/quick-test\" component={TestLab} />\r\n      <Route exact path=\"/medicament-analytics\" component={MedicamentAnalytics} />\r\n      <Route exact path=\"/patient-analytics\" component={PatientAnalytics} />\r\n      <Route exact path=\"/sale-analytics\" component={SaleAnalytics} />\r\n      <Route exact path=\"/service\" component={Services} />\r\n\r\n      <Route exact path=\"/homepage\" component={HomePage} />\r\n      <Route exact path=\"/openinghourpage\" component={OpeningHourPage} />\r\n      <Route exact path=\"/servicepage\" component={ServicePage} />\r\n      <Route exact path=\"/blogpage\" component={BlogPage} />\r\n      <Route exact path=\"/contactpage\" component={ContactPage} />\r\n\r\n      <Route exact path=\"/testimonials\" component={Testimonial} />\r\n      <Route exact path=\"/schedule\" component={Schedule} />\r\n      <Route exact path=\"/messages\" component={Message} />\r\n      <Route exact path=\"/newsletters\" component={NewsLetter} />\r\n      <Route path=\"/result/:input\" component={SearchPatient} />\r\n      <Route exact path=\"/profile\" component={Profile} />\r\n\r\n\r\n      <Route exact path=\"/case-study\" component={CaseStudies} />\r\n      <Route exact path=\"/dental-membership\" component={MembershipDetails} />\r\n      <Route exact path=\"/operation\" component={OperationDetails} />\r\n      <Route exact path=\"/treatment-plan\" component={TreatmentPlan} />\r\n      <Route exact path=\"/procedure\" component={ProcedureDetails} />\r\n      <Route exact path=\"/staff\" component={StaffProfile} />\r\n      <Route exact path=\"/marketing\" component={MarketingCampaign} />\r\n      <Route exact path=\"/loyalty\" component={LoyaltyProgram} />\r\n      <Route exact path=\"/legal\" component={LegalCompliance} />\r\n      <Route exact path=\"/insurance\" component={InsuranceInfo} />\r\n      <Route exact path=\"/income\" component={Income} />\r\n      <Route exact path=\"/equipment-maintenance\" component={EquipmentMaintenance} />\r\n      <Route exact path=\"/diagnosis\" component={Diagnoses} />\r\n      <Route exact path=\"/clinic\" component={ClinicInfo} />\r\n      <Route exact path=\"/doctor\" component={Doctors} />\r\n      <Route exact path=\"/help\" component={DocumentationHelp} />\r\n      <Route exact path=\"/odontogram\" component={ProfessionalOdontogram} />\r\n      <Route exact path=\"/appointments/add\" component={AddAppointment} />\r\n      <Route exact path=\"/patients/add\" component={AddPatient} />\r\n      <Route exact path=\"/inventory/add\" component={AddInventoryItem} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nContent.propTypes = {};\r\n\r\nContent.defaultProps = {};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Footer.css';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst Footer = ({ connected }) => (\r\n\r\n\r\n  <footer className=\"site-footer\" style={{ display: (connected ? 'block' : 'none') }}>\r\n    <div className=\"footer-inner bg-white\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\">\r\n\r\n        </div>\r\n        <div className=\"col-sm-6 text-right\">\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {};\r\n\r\nFooter.defaultProps = {};\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  Alert,\r\n  Stack,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SendMessage = () => {\r\n  const [form, setForm] = useState({ name: '', subject: '', message: '' });\r\n  const [loading, setLoading] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n    setError('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSent(false);\r\n    try {\r\n      await axios.post(BASE_URL + '/messages', form);\r\n      setSent(true);\r\n      setForm({ name: '', subject: '', message: '' });\r\n      setTimeout(() => {\r\n        history.push('/');\r\n      }, 1500); // Redirect after 1.5 seconds\r\n    } catch (err) {\r\n      setError('Failed to send message. Please try again.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 480, mx: 'auto', mt: 8 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        <Typography variant=\"h5\" fontWeight={700} gutterBottom color=\"primary\">\r\n          Send a Message\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <Stack spacing={2}>\r\n            <TextField\r\n              label=\"Your Name\"\r\n              name=\"name\"\r\n              value={form.name}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Subject\"\r\n              name=\"subject\"\r\n              value={form.subject}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Message\"\r\n              name=\"message\"\r\n              value={form.message}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n              multiline\r\n              minRows={4}\r\n            />\r\n            {error && <Alert severity=\"error\">{error}</Alert>}\r\n            {sent && <Alert severity=\"success\">Message sent successfully! Redirecting...</Alert>}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={loading}\r\n              sx={{ fontWeight: 600 }}\r\n            >\r\n              {loading ? 'Sending...' : 'Send Message'}\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SendMessage;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  Stack,\r\n  Alert,\r\n  MenuItem,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst initialState = {\r\n  patientId: '',\r\n  doctorId: '',\r\n  clinicLocationId: '',\r\n  appointmentDate: '',\r\n  startTime: '',\r\n  endTime: '',\r\n  status: 'Scheduled',\r\n  appointmentType: 'In-Person',\r\n  reasonForVisit: '',\r\n  notes: '',\r\n};\r\n\r\nconst BookAppointment = () => {\r\n  const [form, setForm] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [loadingSelects, setLoadingSelects] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoadingSelects(true);\r\n      try {\r\n        const [patientsRes, doctorsRes, clinicsRes] = await Promise.all([\r\n          axios.get(BASE_URL + '/patients'),\r\n          axios.get(BASE_URL + '/doctors'),\r\n          axios.get(BASE_URL + '/clinics'),\r\n        ]);\r\n        setPatients(patientsRes.data || []);\r\n        setDoctors(doctorsRes.data || []);\r\n        setClinics(clinicsRes.data || []);\r\n      } catch (err) {\r\n        setError('Failed to load select options.');\r\n      }\r\n      setLoadingSelects(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n    setError('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSent(false);\r\n    try {\r\n      await axios.post(BASE_URL + '/appointments', {\r\n        ...form,\r\n        id: undefined, // Let backend handle id\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n      setSent(true);\r\n      setForm(initialState);\r\n      setTimeout(() => history.push('/'), 1500);\r\n    } catch (err) {\r\n      setError('Failed to book appointment. Please try again.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 500, mx: 'auto', mt: 8 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        <Typography variant=\"h5\" fontWeight={700} gutterBottom color=\"primary\">\r\n          Book Appointment\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <Stack spacing={2}>\r\n            <TextField\r\n              select\r\n              label=\"Patient\"\r\n              name=\"patientId\"\r\n              value={form.patientId}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n              disabled={loadingSelects}\r\n            >\r\n              {loadingSelects ? (\r\n                <MenuItem value=\"\">\r\n                  <CircularProgress size={20} />\r\n                </MenuItem>\r\n              ) : (\r\n                patients.map((p) => (\r\n                  <MenuItem key={p.id} value={p.id}>\r\n                    {p.name || p.fullName || `Patient #${p.id}`}\r\n                  </MenuItem>\r\n                ))\r\n              )}\r\n            </TextField>\r\n            <TextField\r\n              select\r\n              label=\"Doctor\"\r\n              name=\"doctorId\"\r\n              value={form.doctorId}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n              disabled={loadingSelects}\r\n            >\r\n              {loadingSelects ? (\r\n                <MenuItem value=\"\">\r\n                  <CircularProgress size={20} />\r\n                </MenuItem>\r\n              ) : (\r\n                doctors.map((d) => (\r\n                  <MenuItem key={d.id} value={d.id}>\r\n                    {d.name || d.fullName || `Doctor #${d.id}`}\r\n                  </MenuItem>\r\n                ))\r\n              )}\r\n            </TextField>\r\n            <TextField\r\n              select\r\n              label=\"Clinic Location\"\r\n              name=\"clinicLocationId\"\r\n              value={form.clinicLocationId}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n              disabled={loadingSelects}\r\n            >\r\n              {loadingSelects ? (\r\n                <MenuItem value=\"\">\r\n                  <CircularProgress size={20} />\r\n                </MenuItem>\r\n              ) : (\r\n                clinics.map((c) => (\r\n                  <MenuItem key={c.id} value={c.id}>\r\n                    {c.name || c.location || `Clinic #${c.id}`}\r\n                  </MenuItem>\r\n                ))\r\n              )}\r\n            </TextField>\r\n            <TextField\r\n              label=\"Appointment Date\"\r\n              name=\"appointmentDate\"\r\n              type=\"date\"\r\n              value={form.appointmentDate}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <TextField\r\n                label=\"Start Time\"\r\n                name=\"startTime\"\r\n                type=\"time\"\r\n                value={form.startTime}\r\n                onChange={handleChange}\r\n                required\r\n                fullWidth\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n              <TextField\r\n                label=\"End Time\"\r\n                name=\"endTime\"\r\n                type=\"time\"\r\n                value={form.endTime}\r\n                onChange={handleChange}\r\n                required\r\n                fullWidth\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Stack>\r\n            <TextField\r\n              label=\"Status\"\r\n              name=\"status\"\r\n              select\r\n              value={form.status}\r\n              onChange={handleChange}\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"Scheduled\">Scheduled</MenuItem>\r\n              <MenuItem value=\"Completed\">Completed</MenuItem>\r\n              <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n            </TextField>\r\n            <TextField\r\n              label=\"Appointment Type\"\r\n              name=\"appointmentType\"\r\n              select\r\n              value={form.appointmentType}\r\n              onChange={handleChange}\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"In-Person\">In-Person</MenuItem>\r\n              <MenuItem value=\"Online\">Online</MenuItem>\r\n            </TextField>\r\n            <TextField\r\n              label=\"Reason For Visit\"\r\n              name=\"reasonForVisit\"\r\n              value={form.reasonForVisit}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Notes\"\r\n              name=\"notes\"\r\n              value={form.notes}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              multiline\r\n              minRows={2}\r\n            />\r\n            {error && <Alert severity=\"error\">{error}</Alert>}\r\n            {sent && <Alert severity=\"success\">Appointment booked! Redirecting...</Alert>}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={loading || loadingSelects}\r\n              sx={{ fontWeight: 600 }}\r\n            >\r\n              {loading ? 'Booking...' : 'Book Appointment'}\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BookAppointment;","import React, { useState } from 'react';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport Header from '../Header/Header';\r\nimport Content from '../Content/Content';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Footer from '../Footer/Footer';\r\nimport Login from '../Login/Login';\r\nimport HomePage from '../Home/HomePage';\r\nimport Register from '../Register/Register';\r\nimport SendMessage from '../Home/SendMessage';\r\nimport BookAppointment from '../Appointments/BookAppointment';\r\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom';\r\n\r\nconst Root = () => {\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  const handleClick = num => {\r\n    setConnected(num);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n       <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n           <Route exact path=\"/register\" >\r\n           <Register />\r\n           </Route>\r\n            <Route exact path=\"/send-message\" >\r\n           <SendMessage />\r\n           </Route>\r\n           <Route path=\"/book-appointment\">\r\n            <BookAppointment />\r\n           </Route>\r\n          <Route path=\"*\">\r\n            {connected === true ? (\r\n              <div>\r\n                <Navigation connected={connected} />\r\n                <Header connected={connected} handleClick={handleClick} />\r\n                <div id=\"right-panel\" className=\"right-panel\">\r\n                  <div className=\"content\">\r\n                    <div className=\"animated fadeIn\">\r\n                      <div className=\"row\">\r\n                        <Content connected={connected} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                  <Footer connected={connected} />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Login handleClick={handleClick} />\r\n            )}\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","// DEMO INTERCEPTOR FOR AXIOS\r\nimport axios from \"axios\";\r\nimport CurrentUser from \"../config/user\";\r\n\r\n// Enable or disable demo mode\r\nexport const demo = CurrentUser.DEMO_MODE; // Set to false to disable the interceptor\r\n\r\n// Map endpoints to local JSON files (put your JSON files in /public/demo/)\r\nconst endpointToFile = {\r\n  \"/aboutus\": \"/demo/aboutus.json\",\r\n  \"/appointments\": \"/demo/appointments.json\",\r\n  \"/certificates\": \"/demo/certificates.json\",\r\n  \"/clinics\": \"/demo/clinics.json\",\r\n  \"/clinicssettings\": \"/demo/clinicssettings.json\",\r\n  \"/dental-imaging\": \"/demo/dental-imaging.json\",\r\n  \"/diagnoses\": \"/demo/diagnoses.json\",\r\n  \"/doctors\": \"/demo/doctors.json\",\r\n  \"/equipements\": \"/demo/equipement.json\",\r\n  \"/expenses\": \"/demo/expenses.json\",\r\n  \"/insurances\": \"/demo/insurances.json\",\r\n  \"/inventory\": \"/demo/inventory.json\",\r\n  \"/invoices\": \"/demo/invoices.json\",\r\n  \"/labtests\": \"/demo/labtests.json\",\r\n  \"/medicament-manufactures\": \"/demo/medicament-manufactures.json\",\r\n  \"/medicaments-categories\": \"/demo/medicaments-categories.json\",\r\n  \"/medicaments\": \"/demo/medicaments.json\",\r\n  \"/memberships\": \"/demo/memberships.json\",\r\n  \"/operations\": \"/demo/operations.json\",\r\n  \"/patients\": \"/demo/patients.json\",\r\n  \"/prescriptions\": \"/demo/prescriptions.json\",\r\n  \"/procedures\": \"/demo/procedures.json\",\r\n  \"/services\": \"/demo/services.json\",\r\n  \"/staff\": \"/demo/staff.json\",\r\n  \"/telemedicines\": \"/demo/telemedicines.json\",\r\n  \"/treatmentplans\": \"/demo/treatmentplans.json\",\r\n  // Add more mappings as needed\r\n};\r\n\r\nif (demo) {\r\n  axios.defaults.baseURL = \"\"; // or \"/\"\r\n  axios.interceptors.request.use(async (config) => {\r\n    console.log(`Request Method: ${config.method}`);\r\n    if (!config.method) config.method = \"get\"; // Ensure method is always set\r\n\r\n    if (config.method.toLowerCase() === \"get\" && typeof config.url === \"string\") {\r\n      // Extract path from full URL (handles both relative and absolute URLs)\r\n      let urlPath;\r\n      try {\r\n        urlPath = new URL(config.url, window.location.origin).pathname.split('?')[0];\r\n        console.log(`Request URL Path: ${urlPath}`);\r\n      } catch {\r\n        urlPath = config.url.split('?')[0];\r\n      }\r\n\r\n      // Match if the path is exactly the endpoint, or starts with endpoint + \"/\" or endpoint + \"?\"\r\n      const endpoint = Object.keys(endpointToFile).find((ep) =>\r\n        urlPath === ep || urlPath.startsWith(ep + \"/\") || urlPath.startsWith(ep + \"?\")\r\n      );\r\n      if (endpoint) {\r\n        config.adapter = async () => {\r\n          const response = await fetch(endpointToFile[endpoint]);\r\n          if (!response.ok) {\r\n            return {\r\n              data: { error: \"Demo data not found\" },\r\n              status: 404,\r\n              statusText: \"Not Found\",\r\n              headers: {},\r\n              config,\r\n              request: {},\r\n            };\r\n          }\r\n          const data = await response.json();\r\n          return {\r\n            data,\r\n            status: 200,\r\n            statusText: \"OK\",\r\n            headers: {},\r\n            config,\r\n            request: {},\r\n          };\r\n        };\r\n      }\r\n    }\r\n    return config;\r\n  });\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Root from './components/Root/Root';\r\nimport './main/services/demoInterceptor';\r\nfunction App() {\r\n  return (\r\n   <Root/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'light',\r\n    primary: {\r\n      main: '#1976d2',\r\n    },\r\n    secondary: {\r\n      main: '#dc004e',\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}