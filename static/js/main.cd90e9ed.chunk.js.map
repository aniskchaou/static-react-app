{"version":3,"sources":["logo.svg","main/config/user.js","main/urls/urls.js","libraries/axios/axios.js","main/services/messageHTTPService.js","libraries/messages/messages.js","main/services/appointementHTTPService.js","components/Header/Header.js","components/init.js","components/Navigation/Navigation.js","components/ConfigurationContent/ConfigurationContent.js","components/Configuration/Configuration.js","components/Odontogram/Odontogram.js","main/config/chart.bar.js","main/services/expenseHTTPService.js","main/services/certificateHTTPService.js","main/services/medicamentHTTPService.js","components/DashBoard/DashBoard.js","components/ViewAppointment/ViewAppointment.js","main/validations/appointementValidation.js","main/services/patientHTTPService.js","components/AddAppointment/AddAppointment.js","components/EditAppointment/EditAppointment.js","main/messages/patientMessage.js","components/SummaryWidget/SummaryWidget.js","components/Rendezvous/Rendezvous.js","components/AddPrescription/AddPrescription.js","main/services/prescriptionHTTPService.js","components/ViewPrescription/ViewPrescription.js","components/EditPrescription/EditPrescription.js","components/AddMedicamentItem/AddMedicamentItem.js","components/Prescription/Prescription.js","main/services/paymentHTTPService.js","components/AddPayment/AddPayment.js","components/EditPayment/EditPayment.js","components/Payment/Payment.js","components/AddPatient/AddPatient.js","components/Patient/ViewPatient.js","components/EditPatient/EditPatient.js","components/Patient/Patient.js","main/services/medicamentManufactureHTTPService.js","components/Medicament/AddMedicament.js","components/Medicament/Medicament.js","main/services/userHTTPService.js","components/Login/Login.js","main/validations/medicamentValidation.js","main/services/medicamentCategoryHTTPService.js","components/AddMedicament/AddMedicament.js","components/Expense/AddExpense.js","components/EditExpense/EditExpense.js","components/Expense/Expense.js","main/services/incomeHTTPService.js","components/EditIncome/EditIncome.js","components/AddIncome/AddIncome.js","components/Income/Income.js","main/services/noteHTTPService.js","components/Note/Note.js","main/services/todoHTTPService.js","components/ToDo/ToDo.js","components/Message/Message.js","components/MedicamentManufacture/AddMedicamentManufacture.js","components/EditMedicamentManufacture/EditMedicamentManufacture.js","components/MedicamentManufacture/MedicamentManufacture.js","components/MedicamentCategory/AddMedicamentCategory.js","components/EditMedicamentCategory/EditMedicamentCategory.js","components/MedicamentCategory/MedicamentCategory.js","main/services/testlabHTTPService.js","components/LabTest/AddLabTest.js","components/LabTest/EditLabTest.js","components/LabTest/ViewLabTest.js","components/LabTest/LabTest.js","main/services/invoiceHTTPService.js","components/AddInvoice/AddInvoice.js","components/Invoice/Invoice.js","components/Certificates/AddCertificate.js","components/EditCertificate/EditCertificate.js","components/Certificates/Certificates.js","components/Consultation/Consultations.jsx","main/validations/certificationtemplateValidation.js","main/services/certificationtemplatetHTTPService copy.js","components/AddCertificateTemplate/AddCertificateTemplate.js","components/EditCertificateTemplate/EditCertificateTemplate.js","components/CertificateTemplates/CertificateTemplates.js","components/MedicamentAnalytics/MedicamentAnalytics.js","components/PatientAnalytics/PatientAnalytics.js","components/SaleAnalytics/SaleAnalytics.js","main/services/serviceHTTPService.js","components/AddService/AddService.js","components/EditService/EditService.js","components/Services/Services.js","main/services/frontOfficeHTTPService.js","components/EditOpeningHourPage/EditOpeningHourPage.js","components/OpeningHourPage/OpeningHourPage.js","components/EditContactPage/EditContactPage.js","components/ContactPage/ContactPage.js","components/ServicePage/ServicePage.js","components/EditBlogPage/EditBlogPage.js","components/BlogPage/BlogPage.js","components/AddTestimonial/AddTestimonial.js","components/EditTestimonial/EditTestimonial.js","main/services/testimonialsHTTPService.js","components/Testimonial/Testimonial.js","components/Schedule/Schedule.js","components/NewsLetter/NewsLetter.js","components/SearchPatient/SearchPatient.js","components/Profile/Profile.js","components/Appointements/AddAppointment.js","components/Appointements/EditAppointment.js","components/Appointements/ViewAppointment.js","components/Appointements/Appointements.js","components/CaseStudy/CaseStudies.jsx","components/Membership/CreateMembership.jsx","components/Membership/EditMembership.js","components/Membership/MembershipDetails.jsx","components/Operation/AddOperation.js","components/Operation/EditOperation.js","components/Operation/OperationDetails.jsx","components/Clinic/ClinicInfo.jsx","components/Diagnose/CreateDiagnosis.js","components/Diagnose/Diagnoses.jsx","components/EquipmentMaintenance/AddEquipmentMaintenance.js","components/EquipmentMaintenance/EditEquipmentMaintenance.js","components/EquipmentMaintenance/EquipementMaintenance.js","components/Insurance/AddInsurance.js","components/Insurance/InsuranceInfo.jsx","components/LegalCompliance/LegalCompliance.jsx","components/LoyaltyProgram/LoyaltyProgram.js","components/MarketingCampaign/MarketingCampaign.jsx","components/Staff/AddStaff.jsx","components/Staff/ViewStaff.jsx","components/Staff/EditStaff.jsx","components/Staff/StaffProfile.jsx","components/Procedure/AddProcedure.js","components/Procedure/EditProcedure.js","components/Procedure/ProcedureDetails.jsx","components/TreatmentPlan/AddTreatmentPlan.js","components/TreatmentPlan/TreatmentPlan.jsx","components/Doctor/AddDoctor.jsx","components/Doctor/EditDoctor.jsx","components/Doctor/Doctors.jsx","components/Odontogram/ProfessionalOdontogram.js","components/Telemedicine/Telemedicine.js","components/Billing/Billing.js","components/DentalImaging/DentalImaging.js","components/InventoryItem/AddInventoryItem.js","components/InventoryItem/EditInventoryItem.js","components/InventoryItem/InventoryItem.js","components/Home/HomePage.jsx","components/DocumentationHelp/DocumentationHelp.js","components/Register/Register.js","components/AboutUsPage/AboutUsPage.jsx","components/Content/Content.js","components/Footer/Footer.js","components/Home/SendMessage.jsx","components/Appointments/BookAppointment.jsx","components/Root/Root.js","App.js","reportWebVitals.js","index.js"],"names":["CurrentUser","USER_NAME","CONNECTED_USER","HTTP_ERR_MESSAGE","USER_DETAIL","DELTE_MSG","SETTINGS_UPDATE_MSG","CREATE_MSG","UPDATE_MSG","REMOVE_MSG","ERR_MSG","DEMO_MODE","BASE_URL","axios","create","baseURL","headers","getAllMessage","http","get","id","delete","getCount","showMessage","title","message","type","window","createNotification","closeOnClick","displayCloseButton","positionClass","onclick","theme","myNotification","getAllAppointement","createAppointement","data","post","editAppointement","put","removeAppointement","username","userObj","JSON","parse","localStorage","getItem","charAt","toUpperCase","slice","user","name","role","avatar","Header","_ref","_clinicSettings$syste","connected","handleClick","history","useHistory","location","useLocation","loading","setLoading","useState","messsage","setmessage","appointements","setAppointements","activity","setActivity","input","darkMode","setDarkMode","lang","setLang","navOpen","setNavOpen","userAnchorEl","setUserAnchorEl","handleUserClose","quickAddAnchorEl","setQuickAddAnchorEl","handleQuickAddClose","systemStatus","setSystemStatus","breadcrumbs","pathname","split","filter","Boolean","appointmentsAnchorEl","setAppointmentsAnchorEl","clinicSettings","setClinicSettings","system","appName","useEffect","then","res","catch","_jsx","className","style","display","children","_jsxs","alignItems","justifyContent","width","flexWrap","padding","minHeight","boxSizing","fontWeight","fontSize","color","letterSpacing","fontFamily","FaTooth","marginRight","IconButton","onClick","toggleNav","open","sx","ml","md","FaBars","flex","marginLeft","minWidth","overflow","FaGlobe","flexShrink","aria-label","margin","background","whiteSpace","overflowX","Link","to","map","crumb","idx","join","gap","Select","value","onChange","e","target","size","MenuItem","disabled","onSubmit","preventDefault","replace","event","onKeyDown","keyCode","placeholder","maxWidth","Tooltip","currentTarget","FaPlus","Menu","anchorEl","onClose","push","appointementHTTPService","response","Badge","badgeContent","length","FaBell","handleAppointmentsClose","PaperProps","maxHeight","overflowY","paddingBottom","itemm","borderBottom","borderRadius","marginBottom","patient","status","date","Date","toLocaleString","startTime","endTime","doctor","phone","reason","notes","createdAt","updatedAt","component","FaQuestionCircle","Avatar","src","alt","mr","FaUserCircle","FaCog","clear","FaPowerOff","defaultProps","LoadJSFiles","scripts","i","node","document","createElement","async","charset","getElementById","appendChild","console","log","Navigation","messages","setMessages","sidebarCollapsed","setSidebarCollapsed","search","setSearch","getMessages","messageHTTPService","menuItems","section","items","icon","label","dropdown","badge","iconSize","transition","tabIndex","key","textAlign","border","cursor","flexDirection","height","item","filteredChildren","child","toLowerCase","includes","React","Fragment","borderTop","href","data-toggle","aria-haspopup","aria-expanded","left","NavLink","_ref2","isActive","_ref3","defaultSettings","address","email","showLogo","localisation","language","dateFormat","currency","currencySymbol","openHours","day","hours","SETTINGS_FILE_KEY","CLINIC_SETTINGS_API_URL","dateFormatOptions","languageOptions","currencyOptions","currencySymbolOptions","ConfigurationContent","_settings$system$appN","_settings$system","_settings$system$show","_settings$system2","_settings$system$addr","_settings$system3","_settings$system$emai","_settings$system4","_settings$localisatio","_settings$localisatio2","_settings$localisatio3","_settings$localisatio4","_settings$localisatio5","_settings$localisatio6","_settings$localisatio7","_settings$localisatio8","settings","setSettings","tab","setTab","editDialog","setEditDialog","loadingOpenHours","setLoadingOpenHours","saved","restoreSection","prev","openEdit","closeEdit","EditDialogContent","_settings$section","_sectionSettings$appN","_sectionSettings$addr","_sectionSettings$emai","_sectionSettings$show","_sectionSettings$lang","_sectionSettings$date","_sectionSettings$curr","_sectionSettings$curr2","sectionSettings","handleChange","checked","handleHoursChange","Stack","spacing","mt","TextField","fullWidth","_Fragment","FormControl","InputLabel","opt","Box","mx","p","bgcolor","boxShadow","direction","xs","Tabs","orientation","_","v","variant","borderRight","borderColor","Tab","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","handleEditSave","setItem","stringify","Configuration","class","Odontogram","chartBarOption","indexAxis","elements","bar","borderWidth","responsive","plugins","legend","position","text","intialChartBarData","labels3","datasets","backgroundColor","getAllExpense","editExpense","getAllCertificate","createCertificate","editCertificate","removeCertificate","removeAllCertificates","getAllMedicament","createMedicament","editMedicament","getMedicamentByDate","removeMedicament","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Legend","ArcElement","BarElement","labels","data2","chartData","pie","doughnut","line","fill","polar","radar","scatter","x","y","bubble","r","bar2","pie2","doughnut2","line2","polar2","radar2","scatter2","bubble2","bar3","pie3","doughnut3","line3","chartList","Bar","Pie","Doughnut","Line","PolarArea","Radar","Scatter","Bubble","DashBoard","expenseChart","setExpenseChart","incomeChart","setIncomeChart","memberLine","setmemberLine","activityPie","setActivityPie","attendance","setAttendance","certificateCountCount","setcertificateCount","appointementCount","setAppointementsCount","medicamentCount","setMedicamentCount","patientCount","setPatientCount","dashboardSettings","setDashboardSettings","appointementsCalendar","setAppointementsCalendar","topDoctors","setTopDoctors","topPatients","setTopPatients","topMedicaments","setTopMedicaments","getExpenseChartData","getIncomeChartData","getMemberLinetData","getActivityPieData","getAttendencesCalendar","getPatientCount","getAppointementCount","getMedicamentCount","getCertificateCount","getDashboardSettings","fetch","json","appointement","medicamentHTTPService","medicament","certificateHTTPService","certificate","widgetColors","bg","widgetData","appointmentDates","appointmentDate","toDateString","getAppointmentsForDate","selectedDate","setSelectedDate","w","onMouseOver","transform","onMouseOut","lineHeight","opacity","gridTemplateColumns","chart","options","marginTop","paddingLeft","doc","fullName","doctorName","appointmentCount","visits","pat","patientName","visitCount","med","medicamentName","salesCount","sold","textDecoration","Calendar","onClickDay","tileContent","view","tileClassName","calendarType","locale","toLocaleDateString","listStyle","borderLeft","patientId","doctorId","appointmentType","reasonForVisit","ViewAppointment","scope","expenseValidation","amount","note","paymenMode","getAllPatients","getPatientById","createPatient","editPatient","removePatient","removeAllPatients","AddAppointment","props","initialState","problem","handleSubmit","errors","useForm","setAppointement","patients","setPatients","getAllPatient","patientHTTPService","handleInputChange","closeModal","method","accept-charset","ref","required","autocomplete","appointementValidation","namepatient","patient_id","rows","EditAppointment","datee","patientMessage","add","edit","SummaryWidget","Rendezvous","updatedItem","setUpdatedItem","closeButtonEdit","useForceUpdate","useRef","closeButtonAdd","getAllAppointements","closeModalEdit","current","click","closeModalAdd","updatedItemId","setUpdatedItemId","updatedItemIds","setUpdatedItemIds","showFilter","setShowFilter","showChart","setShowChart","gutterBottom","removeAppointementAction","confirm","LinearProgress","DataGrid","columns","field","headerName","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","selectedItem","find","components","Toolbar","GridToolbar","tabindex","aria-labelledby","aria-hidden","data-dismiss","EdiTAppointement","refillOptions","statusOptions","AddPrescription","onSuccess","form","setForm","clinicId","medications","dosage","duration","frequency","instructions","medicationId","medicationName","prescriptionDate","validUntil","refillAllowed","refillCount","pharmacyId","digitalSignature","doctors","setDoctors","clinics","setClinics","handleMedicationChange","f","meds","now","toISOString","autoComplete","select","clinic","clinicName","mb","handleAddMedication","AddIcon","InputLabelProps","shrink","getAllPrescription","getPrescription","getMedicamentPrescription","removeMedicamentPrescription","ViewPrescription","setMedicament","medicaments","setMedicaments","prescriptionHTTPService","pression","temperature","dose","remove","EditPrescription","enctype","onkeyup","for","colspan","AddMedicamentItem","statusColors","Active","Expired","Completed","Pending","Prescription","_selectedPrescription","_selectedPrescription2","_selectedPrescription3","prescriptions","setPrescriptions","actionAnchorEl","setActionAnchorEl","actionRow","setActionRow","addDialogOpen","setAddDialogOpen","editDialogOpen","setEditDialogOpen","viewDialogOpen","setViewDialogOpen","addMedicamentDialogOpen","setAddMedicamentDialogOpen","drawerOpen","setDrawerOpen","selectedPrescription","setSelectedPrescription","selectedIds","setSelectedIds","notification","setNotification","severity","getAllPrescriptions","getPatientName","getDoctorName","d","getClinicName","c","handleActionClose","getMedicationWarnings","prescription","_prescription$medicat","some","m","handlePrint","print","generatePrescriptionPDF","jsPDF","unit","format","setFillColor","rect","setFontSize","setTextColor","setFont","forEach","notesLines","splitTextToSize","setDrawColor","save","valueGetter","params","row","renderCell","valueFormatter","Chip","sortable","filterable","aria-controls","handleActionClick","MoreVertIcon","ids","handleView","handleDelete","sm","Divider","Alert","startIcon","PrintIcon","DownloadIcon","Drawer","anchor","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","getAllPayment","editPayment","paymentMethods","paymentStatuses","currencies","AddPayment","appointmentId","invoiceId","paymentMethod","transactionId","insuranceClaimId","paymentStatus","paymentDate","payment","setPayment","Math","random","toString","substr","Number","paymentHTTPService","finally","cur","multiline","EditPayment","invoiceNumber","amountReceived","invoiceBlanceDue","Payment","payments","setPayments","setAnchorEl","selectedRow","setSelectedRow","viewItem","setViewItem","viewOpen","setViewOpen","getAllPayments","resfreshComponent","removePaymentAction","updatePaymentAction","data-target","autoHeight","bloodTypes","AddPatient","medicalRecordNumber","insuranceId","bloodType","allergies","medicalHistory","condition","diagnosedAt","currentMedications","prescribedBy","emergencyContact","relationship","nationalId","setPatient","handleMedicalHistoryChange","updated","handleEmergencyContactChange","addAllergy","addMedicalHistory","addMedication","patientData","a","trim","mh","PersonIcon","verticalAlign","Grid","container","Card","CardContent","MedicalServicesIcon","bt","LocalHospitalIcon","allergy","handleAllergyChange","removeAllergy","RemoveCircleOutlineIcon","AddCircleOutlineIcon","Paper","removeMedicalHistory","removeMedication","ContactPhoneIcon","ViewPatient","_patient$emergencyCon","_patient$emergencyCon2","_patient$emergencyCon3","userId","BloodtypeIcon","my","HistoryEduIcon","MedicationIcon","ContactEmergencyIcon","EditPatient","dta","encType","acceptCharset","emailpatient","birth","telephone","gender","insuranceNumber","bloodGroup","maritalStatus","occupation","chronicDiseases","Chart","ChartTooltip","ChartLegend","Patient","searchQuery","setSearchQuery","editOpen","setEditOpen","removePatientAction","handleMenuClose","handleMenuAction","action","dataStr","encodeURIComponent","downloadAnchorNode","setAttribute","body","exportPatientData","printWindow","write","close","printPatientData","navigator","share","alert","sharePatientData","duplicated","duplicatePatient","warn","handleMenuOpen","filteredPatients","Object","values","reduce","acc","bloodTypeLabels","bloodTypeCounts","totalPatients","typeCounts","doughnutData","barData","lineData","align","updatePatientAction","getAllMedicamentManufacture","editMedicamentManufacture","categories","dosageForms","AddMedicament","onCreate","genericName","category","description","activeIngredients","ingredient","concentration","dosageForm","strength","manufacturerId","requiresPrescription","sideEffects","contraindications","usageInstructions","stockQuantity","pricePerUnit","expirationDate","storageConditions","barcode","batchNumber","handleIngredientChange","addIngredient","addSideEffect","addContraindication","ai","s","cat","removeIngredient","df","side","handleSideEffectChange","removeSideEffect","contra","handleContraindicationChange","removeContraindication","Medicament","_viewMedicament$stock","_viewMedicament$price","selectedMedicaments","setSelectedMedicaments","openConfirmDialog","setOpenConfirmDialog","isDarkMode","setIsDarkMode","addOpen","setAddOpen","viewMedicament","setViewMedicament","filteredMedicaments","producer","handleEdit","duplicate","handleDuplicate","active","updateMedicament","toggleActive","handleArchive","handleRestore","handleViewHistory","keepMounted","getRowId","dividers","DialogContentText","confirmBulkDelete","Login","setUser","password","snackbar","setSnackbar","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","elevation","backdropFilter","LockOutlinedIcon","setTimeout","error","inputRef","helperText","autoFocus","getFullYear","medicamentValidation","medicine_name","company_name","group_name","getAllMedicamentCayegory","editMedicamentCayegory","medicamentCategory","setMedicamentCategory","medicamentManufacture","setMedicamentManufacture","getAllMedicamentManufactures","getAllMedicamentCategories","medicamentManufactureHTTPService","medicamentCategoryHTTPService","expenseCategories","AddExpense","estimatedDuration","expenseCategory","expenseHTTPService","EditExpense","expense","setExpense","Expense","expenses","setExpenses","viewExpense","setViewExpense","getAllExpenses","removeExpenseAction","updateExpenseAction","totalExpenses","paidExpenses","pendingExpenses","keys","handleExpenseCreated","vendorName","transactionDate","receiptAttachments","rel","getAllIncome","createIncome","editIncome","removeIncome","EditIncome","AddIncome","Income","incomes","setIncomes","forceUpdate","getAllIncomes","incomeHTTPService","_params$value","updateIncomeAction","removeIncomeAction","removeAll","getAllNote","Note","setNotes","noteHTTPService","updateNoteAction","removeNoteAction","getAllToDo","ToDo","todos","setToDos","getAllToDos","todoHTTPService","Message","openViewDialog","setOpenViewDialog","selectedMessage","setSelectedMessage","getAllMessages","filteredMessages","_message$name","_message$subject","_message$message","subject","VisibilityIcon","DeleteIcon","CircularProgress","pb","borderTopLeftRadius","borderTopRightRadius","MessageIcon","EmailIcon","SubjectIcon","borderBottomLeftRadius","borderBottomRightRadius","contactPerson","street","city","state","postalCode","country","website","licenseNumber","certifications","medicamentsSupplied","contractStartDate","contractEndDate","manufactureStatus","setCategories","_id","EditMedicamentManufacture","typeSubs","setTypeSubs","members","setMembers","MedicamentManufacture","_viewItem$contactPers","_viewItem$contactPers2","_viewItem$contactPers3","medicamentManufactures","setMedicamentManufactures","fetchData","formatted","index","cp","addr","cert","removeMedicamentManufactureAction","selected","AddMedicamentManufacture","clickable","AddMedicamentCategory","EditMedicamentCategory","MedicamentCategory","medicamentsCategories","setMedicamentsCategories","removeMedicamentCategoryAction","updateMedicamentCategoryAction","querySelector","getAllTestLab","statuses","insuranceOptions","AddLabTest","laboratories","testName","testCategory","testDescription","sampleType","sampleCollectionDate","sampleCollectedBy","testStatus","result","laboratoryId","testCost","insuranceCovered","labTestData","l","sampleConditions","urgencyLevels","resultDeliveryMethods","EditLabTest","testLab","sampleCondition","urgencyLevel","resultDeliveryMethod","resultDeliveryDate","comments","ViewLabTest","uploading","setUploading","uploadedFile","setUploadedFile","fileInputRef","accept","file","files","formData","FormData","append","url","err","handleDownload","link","download","removeChild","LabTest","labTests","setLabTests","editModalOpen","setEditModalOpen","viewModalOpen","setViewModalOpen","viewedItem","setViewedItem","testlabHTTPService","hidden","handleUploadReport","undefined","splitText","String","addPage","totalLabTests","completedTests","t","pendingTests","updateLabTestAction","removeLabTestAction","bulkDelete","exportSelected","getAllInvoice","AddInvoice","setTestLab","Invoice","invoices","setInvoices","getAllInvoices","invoiceHTTPService","removeInvoiceAction","updateInvoiceAction","client","certificateTypes","AddCertificate","certificateNumber","certificateType","issueDate","diagnosis","treatmentDetails","recommendations","attachments","signature","EditCertificate","setCertificate","template","content","Certificates","skeleton","setSkeleton","certificates","setCertificates","drawerCertificate","setDrawerCertificate","bulkSelection","setBulkSelection","editRowsModel","setEditRowsModel","setFilter","from","getAllCertificates","filteredCertificates","matchesType","matchesStatus","matchesPatient","matchesDoctor","matchesClinic","matchesFrom","matchesTo","_patients$find","_doctors$find","_clinics$find","exportToExcel","csvContent","blob","Blob","URL","createObjectURL","editable","userRole","exportCertificateToPDF","types","Skeleton","setLineWidth","paragraph","lines","leftMargin","AssignmentIcon","TemplateIcon","exportToPDF","onRowSelectionModelChange","editMode","onRowEditCommit","changes","fromEntries","entries","k","updateCertificate","onEditRowsModelChange","model","certificateData","ShareIcon","Consultations","consultations","setConsultations","retrieveConsultations","refresh","_params$value2","diagnosisName","_params$value3","_params$value4","treatmentName","_params$value5","_params$value6","update","DELETE_MSG","certificateTemplateValidation","getAllCertificationTemplate","editCertificationTemplate","AddCertificateTemplate","certificateTemplate","setCertificateTemplate","certificationtemplatetHTTPServiceCopy","EditCertificateTemplate","CertificateTemplates","createTemplate","templateDetails","designCertificateLayout","layoutDetails","logo","signatures","applyTemplateToGenerateCertificate","templateId","EditCertificationTemplate","RadialLinearScale","MedicamentAnalytics","charts","setCharts","typePie","prepareCharts","categoryCounts","manufacturerCounts","manufacturerName","monthCounts","month","year","months","stockCounts","stockStatus","ingredientCounts","scatterData","price","floor","stock","bubbleData","PatientAnalytics","genderPie","insuranceCounts","cityCounts","_p$address","paymentStatusCounts","allergyCounts","age","genderCounts","SaleAnalytics","getAllService","createService","filename","AddService","fileName","setService","service","serviceHTTPService","EditService","groupe","setGroupe","groupe_name","Services","getOpeningHourPage","editContactPage","getContactPage","editOpeningHourPage","editBlogPage","getBlogPage","EditOpeningHourPage","frontOffice","setFrontOffice","frontOfficeHTTPService","subtitle","OpeningHourPage","retrieveEvents","EditContactPage","setfrontOffice","sendButton","ContactPage","ServicePage","services","setServices","textarea","setTextarea","setEditMode","success","setSuccess","setError","fetchServices","minRows","updatedServices","handleCancel","EditBlogPage","BlogPage","AddTestimonial","EditTestimonial","testimonial","getAllTestimonials","Testimonial","testimonialsHTTPService","showQuickFilter","Schedule","NewsLetter","SearchPatient","projects","setProjects","searchProject","match","searchPatient","Profile","_user$birthday","top","right","objectFit","birthday","substring","clinicLocationId","roomNumber","isFirstVisit","followUpDate","FormControlLabel","control","Checkbox","appointment","paymentAmount","insuranceProvider","Appointments","appointmentsList","setAppointments","viewMode","setViewMode","retrieveAppointments","resfresh","handleExport","syncWithGoogleCalendar","sendReminder","saveAs","MenuIcon","MuiMenuItem","totalAppointments","completed","pending","confirmed","noShow","appt","filteredAppointments","q","handleBulkArchive","renderCalendarView","grouped","dates","sort","List","ListItem","ListItemText","primary","secondary","renderTimelineView","sortedAppointments","b","CaseStudies","caseStudies","setCaseStudies","filteredCaseStudies","setFilteredCaseStudies","retrieveCaseStudies","query","filtered","cs","exportToCSV","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","bookType","plans","defaultBenefits","CreateMembership","onCancel","membershipPlan","benefits","validityPeriod","startDate","endDate","renewalDate","lastPaymentAmount","lastPaymentDate","benefitInput","setBenefitInput","startsWith","handleAddBenefit","objToSend","plan","onDelete","handleRemoveBenefit","benefit","db","planOptions","EditMembership","membership","_membership$validityP","_membership$validityP2","planColors","Premium","Standard","Basic","Inactive","Cancelled","Memberships","_viewMembership$valid","_viewMembership$valid2","memberships","setMemberships","selectedMembership","setSelectedMembership","selectedMembershipId","setSelectedMembershipId","setOpen","viewMembership","setViewMembership","fetchMemberships","_params$row$validityP","_params$row$validityP2","handleViewMenu","handleEditMenu","handleDeleteRow","handleSuccess","operationTypes","anesthesiaTypes","followUpOptions","AddOperation","operationType","procedureName","operationDate","anesthesiaType","complications","postOperationInstructions","followUpRequired","EditOperation","operation","onEdit","Operations","operations","setOperations","selectedOperation","setSelectedOperation","selectedOperationId","setSelectedOperationId","fetchOperations","op","handleActionEdit","handleActionDelete","initialForm","zipCode","contactNumber","workingHours","doctorsAvailable","Clinic","selectedClinic","setSelectedClinic","selectedId","setSelectedId","menuRowId","setMenuRowId","fetchClinics","handleFormChange","wh","rowId","pl","handleMenuView","handleMenuEdit","handleMenuDelete","severityOptions","CreateDiagnosis","diagnosisDate","Diagnoses","diagnoses","setDiagnoses","severityFilter","setSeverityFilter","conditionFilter","setConditionFilter","doctorFilter","setDoctorFilter","dateRange","setDateRange","drawerDiagnosis","setDrawerDiagnosis","auditTrail","setAuditTrail","chartFilter","setChartFilter","fetchDiagnoses","useCallback","filteredDiagnoses","matchesSeverity","matchesCondition","matchesSearch","matchesDate","matchesChart","conditionCounts","cond","severityCounts","sev","doctorCounts","dateCounts","pieData","tension","diagnosisResults","entry","AddEquipmentMaintenance","technicians","equipmentName","modelNumber","manufacturer","purchaseDate","lastServiceDate","nextServiceDue","assignedTechnician","maintenanceNotes","EditEquipmentMaintenance","equipment","EquipmentMaintenance","maintenanceData","setMaintenanceData","scheduleDialogOpen","setScheduleDialogOpen","historyDrawerOpen","setHistoryDrawerOpen","selectedHistory","setSelectedHistory","filterStatus","setFilterStatus","filterTechnician","setFilterTechnician","filterClinic","setFilterClinic","assignDialogOpen","setAssignDialogOpen","fileDialogOpen","setFileDialogOpen","qrDialogOpen","setQrDialogOpen","editEquipment","setEditEquipment","viewEquipment","setViewEquipment","maintenanceDialogOpen","setMaintenanceDialogOpen","selectedEquipment","setSelectedEquipment","maintenanceDate","setMaintenanceDate","maintenanceType","setMaintenanceType","setMaintenanceNotes","isMobile","useMediaQuery","cl","filteredData","_row$equipmentName","isOverdue","dateChip","arguments","containerSx","handleBulkDelete","palette","paper","handleScheduleMaintenance","handleAddMaintenanceDialog","h","technician","UploadFileIcon","QrCodeIcon","py","newHistory","maintenanceHistory","AddInsurance","providerName","policyNumber","coverageDetails","maxAnnualCoverage","treatmentCoverage","medicationCoverage","consultationCoverage","validFrom","InsuranceInfo","insuranceData","setInsuranceData","coverageModalOpen","setCoverageModalOpen","coverageModalData","setCoverageModalData","totalInsurances","activeInsurances","expiredInsurances","providers","provider","_ref4","CoverageModalContent","_ref5","_coverageDetails$cons","_coverageDetails$trea","_coverageDetails$medi","insurance","mainChips","additional","_ref6","patientFullName","chip","_ref7","str","viewCoverage","LegalCompliance","records","setRecords","Loyalty","loyaltyData","setLoyaltyData","selectedLoyalty","setSelectedLoyalty","fetchLoyalty","parsedData","earnedFrom","redeemedRewards","pointsEarned","reward","rewardName","pointsUsed","redeemedDate","Marketing","campaigns","setCampaigns","selectedCampaign","setSelectedCampaign","selectedCampaignId","setSelectedCampaignId","fetchCampaigns","ta","ageGroup","lastVisitDate","treatmentHistory","_metrics$openRate","_metrics$clickThrough","_metrics$conversionRa","metrics","openRate","clickThroughRate","conversionRate","campaign","roles","permissionsList","daysOfWeek","AddStaff","shiftSchedule","Mon","start","end","Tue","Wed","Thu","Fri","Sat","Sun","permissions","handleScheduleChange","staffData","perm","handlePermissionToggle","ViewStaff","staff","_staff$shiftSchedule","_staff$shiftSchedule$","_staff$shiftSchedule2","_staff$shiftSchedule3","_staff$shiftSchedule4","_staff$shiftSchedule5","EditStaff","Staff","staffList","setStaffList","selectedStaff","setSelectedStaff","selectedStaffId","setSelectedStaffId","fetchStaff","totalStaff","activeStaff","onLeaveStaff","inactiveStaff","roleCounts","staffMember","handleActionView","AddProcedure","procedureDate","EditProcedure","procedure","ViewProcedure","Procedures","procedures","setProcedures","selectedProcedure","setSelectedProcedure","selectedProcedureId","setSelectedProcedureId","fetchProcedures","proc","AddTreatmentPlan","TreatmentPlans","treatmentPlans","setTreatmentPlans","selectedPlan","setSelectedPlan","selectedPlanId","setSelectedPlanId","fetchTreatmentPlans","totalPlans","completedPlans","inProgressPlans","pendingPlans","treatmentType","specializations","AddDoctor","specialization","experienceYears","consultationFee","availableDays","availableTimeSlots","rating","timeSlot","setTimeSlot","SelectProps","multiple","ts","handleAddTimeSlot","slot","handleRemoveTimeSlot","inputProps","min","max","step","EditDoctor","Doctors","selectedDoctor","setSelectedDoctor","parseFloat","toFixed","Rating","precision","readOnly","totalDoctors","avgRating","sum","avgExperience","spec","rowHeight","TOOTH_STATUSES","TOOTH_TYPES","getInitialTeeth","Array","surfaces","images","treatmentSummary","ProfessionalOdontogram","teeth","setTeeth","selectedTooth","setSelectedTooth","showModal","setShowModal","appointments","selectedPatient","setSelectedPatient","selectedAppointment","setSelectedAppointment","sentFormData","setSentFormData","backendTeethHistory","setBackendTeethHistory","parseInt","isNaN","backendTeeth","prevTeeth","tooth","found","toothNumber","getToothTooltip","toothSVG","isSelected","numberColor","cross","x1","y1","x2","y2","stroke","strokeWidth","viewBox","cx","cy","rx","ry","textAnchor","renderArch","teethSlice","arch","archCenterY","angle","PI","cos","sin","handleToothDetails","onMouseEnter","onMouseLeave","handleModalChange","handleSaveToothDetails","newHistoryItem","payload","formatDate","dateStr","FaUser","FaUserMd","FaClinicMedical","FaCalendarAlt","FaIdBadge","odontogramEl","html2canvas","default","parentNode","canvas","toDataURL","resize","o","borderCollapse","colSpan","localizer","momentLocalizer","moment","dummyCallHistory","patientAvatar","loadScript","Promise","resolve","script","onload","Telemedicine","_patients$find2","_doctors$find2","inCall","setInCall","videoEnabled","setVideoEnabled","audioEnabled","setAudioEnabled","showChat","setShowChat","chatInput","setChatInput","showHistory","setShowHistory","meetLink","setMeetLink","copied","setCopied","calendarLoading","setCalendarLoading","openModal","setOpenModal","newAppointment","setNewAppointment","sessionDuration","meetingLink","recordedSessionUrl","selectedEvent","setSelectedEvent","showEventModal","setShowEventModal","localVideoRef","remoteVideoRef","fetchAppointments","fetchPatients","fetchDoctors","handleSendMessage","sender","createMeetEvent","accessToken","reject","google","accounts","oauth2","initTokenClient","client_id","callback","tokenResponse","access_token","requestAccessToken","authenticate","gapi","load","init","apiKey","discoveryDocs","setToken","summary","dateTime","conferenceData","createRequest","requestId","calendar","events","insert","calendarId","resource","conferenceDataVersion","hangoutLink","calendarEvents","getTime","VideocamIcon","handleOpenModal","startAccessor","endAccessor","titleAccessor","onSelectEvent","tooltipAccessor","eventPropGetter","wordBreak","ContentCopyIcon","handleCopyLink","clipboard","writeText","HistoryIcon","call","ListItemAvatar","autoPlay","playsInline","poster","muted","bottom","msg","px","Billing","_selectedInvoice$disc","_selectedInvoice$disc2","billItems","setBillItems","quantity","setQuantity","openDialog","setOpenDialog","loadingInvoices","setLoadingInvoices","selectedInvoice","setSelectedInvoice","viewInvoiceDialog","setViewInvoiceDialog","setClinicId","discount","setDiscount","percentage","discountReason","taxAmount","setTaxAmount","setPaymentMethod","dueDate","setDueDate","fetchInvoices","totalAmount","total","handleCloseDialog","handleCloseInvoiceDialog","handleDownloadInvoicePDF","invoice","_invoice$discount","_invoice$discount2","invoiceDate","autoTable","startY","head","itemType","itemDescription","unitPrice","totalPrice","lastAutoTable","finalY","subTotal","grandTotal","invoiceColumns","handleViewInvoice","PictureAsPdfIcon","handleAddItem","selectedService","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","handleRemoveItem","handleGenerateBill","disableSelectionOnClick","invoiceObj","getMonth","padStart","getDate","itemId","imagingTypes","DentalImaging","setImages","openView","setOpenView","selectedImage","setSelectedImage","imageType","uploadDate","diagnosisNotes","imageUrl","dragActive","setDragActive","selectedFile","setSelectedFile","fetchImages","handleCloseView","img","AddPhotoAlternateIcon","handleOpenDialog","_imagingTypes$find2","onDrop","stopPropagation","dataTransfer","reader","FileReader","ev","readAsDataURL","onDragOver","onDragLeave","htmlFor","_imagingTypes$find","curlParts","units","AddInventoryItem","reorderLevel","expiryDate","clinicObj","itemData","u","EditInventoryItem","DEMO_ITEMS","DEMO_CLINICS","InventoryItem","setItems","addModalOpen","setAddModalOpen","editItem","setEditItem","Inventory2OutlinedIcon","EditIcon","menuLinks","HomePage","loadingServices","setLoadingServices","aboutUs","setAboutUs","highlights","loadingAbout","setLoadingAbout","editingHours","setEditingHours","openHoursDraft","setOpenHoursDraft","savingHours","setSavingHours","loadingMemberships","setLoadingMemberships","staffs","setStaffs","loadingDoctors","setLoadingDoctors","loadingStaffs","setLoadingStaffs","openPatientModal","setOpenPatientModal","openAppointmentModal","setOpenAppointmentModal","patientForm","setPatientForm","savedPatient","setSavedPatient","appointmentForm","setAppointmentForm","doctorsList","setDoctorsList","clinicsList","setClinicsList","isArray","fetchAboutUs","fetchClinicSettings","fetchStaffs","handleClose","handleMenuClick","el","scrollIntoView","behavior","handleBookVisit","handleContactScroll","contactSection","AppBar","flexGrow","textTransform","pt","Container","order","_item$membershipPlan","_item$validityPeriod","_item$validityPeriod2","zIndex","_doc$fullName","specialty","_staff$fullName","docItems","DashboardIcon","BarChartIcon","FlashOnIcon","ListAltIcon","MonetizationOnIcon","SearchIcon","SettingsIcon","ChatIcon","moduleItems","desc","DocumentationHelp","openModule","setOpenModule","moduleContent","setModuleContent","moduleDocs","HelpOutlineIcon","mod","button","ListItemIcon","Register","PersonAddAltIcon","ok","goToLogin","AboutUsPage","setDescription","setHighlights","about","updatedHighlights","Content","Route","exact","path","Dashbord","Consultation","TestLab","MembershipDetails","OperationDetails","TreatmentPlan","ProcedureDetails","StaffProfile","MarketingCampaign","LoyaltyProgram","ClinicInfo","Footer","SendMessage","sent","setSent","BookAppointment","loadingSelects","setLoadingSelects","patientsRes","doctorsRes","clinicsRes","all","Root","setConnected","num","BrowserRouter","Switch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","mode","main","ReactDOM","render","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.cd90e9ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default class CurrentUser {\r\n    static USER_NAME = \"Admin\"\r\n    static CONNECTED_USER = false\r\n    static HTTP_ERR_MESSAGE = \"\"\r\n    static USER_DETAIL = {}\r\n    static DELTE_MSG = 'Are you sure you want to delete ?'\r\n    static SETTINGS_UPDATE_MSG = \"Your settings has been updated.\"\r\n    static CREATE_MSG = \"New item has been created.\"\r\n    static UPDATE_MSG = \"item has been updated.\"\r\n    static REMOVE_MSG = \"item has been removed.\"\r\n    static ERR_MSG = 'An Error Occurred Please Try Again Later'\r\n    static DEMO_MODE = false\r\n}","const BASE_URL = 'https://dentic-frontend-client.onrender.com'\r\n\r\nexport default BASE_URL\r\n","import axios from \"axios\";\r\nimport BASE_URL from '../../main/urls/urls'\r\nexport default axios.create({\r\n    baseURL: BASE_URL,\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllMessage = () => {\r\n    return http.get(`${BASE_URL}/messages`)\r\n}\r\n\r\nconst getCount = () => {\r\n    return http.get(`${BASE_URL}/messages/count`)\r\n}\r\nconst createMessage = data => {\r\n    return http.post(`${BASE_URL}/messages`, data);\r\n};\r\n\r\nconst editMessage = (id, data) => {\r\n    return http.put(`${BASE_URL}/messages/${id}`, data);\r\n};\r\n\r\nconst removeMessage = id => {\r\n    return http.delete(`${BASE_URL}/messages/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllMessage,\r\n    createMessage,\r\n    editMessage,\r\n    removeMessage,\r\n    getCount\r\n};","\r\nexport default function showMessage(title, message, type) {\r\n    const myNotification = window.createNotification({\r\n        title: title,\r\n        message: message,\r\n        closeOnClick: true,\r\n        displayCloseButton: false,\r\n        positionClass: 'nfc-top-right',\r\n        onclick: false,\r\n        theme: type\r\n    });\r\n    myNotification({\r\n        title: title,\r\n        message: message,\r\n        closeOnClick: true,\r\n        displayCloseButton: false,\r\n        positionClass: 'nfc-top-right',\r\n        onclick: false,\r\n        theme: type\r\n    });\r\n}\r\n\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllAppointement = () => {\r\n    return http.get(`${BASE_URL}/appointments`)\r\n}\r\nconst createAppointement = data => {\r\n    return http.post(`${BASE_URL}/appointments`, data);\r\n};\r\n\r\nconst editAppointement = (id, data) => {\r\n    return http.put(`${BASE_URL}/appointments/${id}`, data);\r\n};\r\n\r\nconst removeAppointement = id => {\r\n    return http.delete(`${BASE_URL}/appointments/${id}`);\r\n};\r\nconst getCount = () => {\r\n    return http.get(`${BASE_URL}/appointments/count`)\r\n}\r\n\r\nexport default {\r\n    getAllAppointement,\r\n    createAppointement,\r\n    editAppointement,\r\n    getCount,\r\n    removeAppointement\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Header.css';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport CurrentUser from '../../main/config/user';\r\nimport messageHTTPService from '../../main/services/messageHTTPService'\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport { LinearProgress, Switch, MenuItem, Menu, IconButton, Avatar, Tooltip, Badge, Chip, Select } from '@mui/material';\r\nimport appointementHTTPService from '../../main/services/appointementHTTPService';\r\nimport { FaPlus, FaBell, FaQuestionCircle, FaBars, FaCircle, FaUserCircle, FaCog, FaPowerOff, FaUser, FaGlobe, FaTooth } from 'react-icons/fa';\r\nimport axios from 'axios'; // Add this if not already imported\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst languages = [\r\n  { code: 'en', label: 'English' },\r\n  { code: 'fr', label: 'Français' },\r\n  { code: 'ar', label: 'العربية' }\r\n];\r\n\r\n// Get username from localStorage user object and capitalize first character\r\nlet username = '';\r\ntry {\r\n  const userObj = JSON.parse(localStorage.getItem('user'));\r\n  if (userObj && userObj.username) {\r\n    username = userObj.username.charAt(0).toUpperCase() + userObj.username.slice(1);\r\n  }\r\n} catch {\r\n  username = '';\r\n}\r\n\r\n// Example usage in header (e.g., greeting or profile menu)\r\nconst user = {\r\n  name: username || \"User\",\r\n  role: \"Administrator\",\r\n  avatar: \"images/admin.png\"\r\n};\r\n\r\nconst Header = ({ connected, handleClick }) => {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const [loading, setLoading] = useState(false);\r\n    const [messsage, setmessage] = useState([]);\r\n    const [appointements, setAppointements] = useState([]);\r\n    const initialState = { input: '' };\r\n    const [activity, setActivity] = useState(initialState);\r\n\r\n    // Theme switcher\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const handleThemeChange = () => setDarkMode((prev) => !prev);\r\n\r\n    // Language selector\r\n    const [lang, setLang] = useState('en');\r\n    const handleLangChange = (e) => setLang(e.target.value);\r\n\r\n    // Hamburger menu for mobile\r\n    const [navOpen, setNavOpen] = useState(true);\r\n    const toggleNav = () => setNavOpen(open => !open);\r\n\r\n    // User dropdown\r\n    const [userAnchorEl, setUserAnchorEl] = useState(null);\r\n    const handleUserMenu = (event) => setUserAnchorEl(event.currentTarget);\r\n    const handleUserClose = () => setUserAnchorEl(null);\r\n\r\n    // Quick Add\r\n    const [quickAddAnchorEl, setQuickAddAnchorEl] = useState(null);\r\n    const handleQuickAdd = (event) => setQuickAddAnchorEl(event.currentTarget);\r\n    const handleQuickAddClose = () => setQuickAddAnchorEl(null);\r\n\r\n    // System status\r\n    const [systemStatus, setSystemStatus] = useState('online'); // online, warning, offline\r\n\r\n    // Customizable shortcuts (example)\r\n    const shortcuts = [];\r\n\r\n    // Breadcrumbs\r\n    const breadcrumbs = location.pathname.split('/').filter(Boolean);\r\n\r\n    // Add state for appointments menu anchor\r\n    const [appointmentsAnchorEl, setAppointmentsAnchorEl] = useState(null);\r\n    const [clinicSettings, setClinicSettings] = useState({ system: { appName: 'App' } });\r\n\r\n    const logout = () => {\r\n        handleClick(false)\r\n        localStorage.clear()\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Fetch clinic settings for appName\r\n        axios.get(`${BASE_URL}/clinicsettings`)\r\n            .then(res => setClinicSettings(res.data))\r\n            .catch(() => setClinicSettings({ system: { appName: 'App' } }));\r\n        // LoadJS()\r\n        //  getAllExpenses()\r\n    }, []);\r\n\r\n    const print = () => {\r\n        history.replace(\"/result/\" + activity.input)\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setActivity({ ...activity, [name]: value });\r\n    };\r\n\r\n    const search = (event) => {\r\n        if (event.keyCode === 13) {\r\n            history.replace(\"/result/\" + activity.input)\r\n        }\r\n    }\r\n\r\n    const getAllExpenses = () => {\r\n        setLoading(true);\r\n        messageHTTPService.getAllMessage()\r\n            .then(response => {\r\n                setmessage(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(e => {\r\n                showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n            });\r\n    };\r\n\r\n    const getAllAppointements = () => {\r\n        setLoading(true);\r\n        appointementHTTPService.getAllAppointement()\r\n            .then(response => {\r\n                setAppointements(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(e => {\r\n                showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n            });\r\n    };\r\n\r\n    const handleAppointmentsClick = (event) => {\r\n        setAppointmentsAnchorEl(event.currentTarget);\r\n        getAllAppointements(); // Fetch appointments when opening\r\n    };\r\n    const handleAppointmentsClose = () => setAppointmentsAnchorEl(null);\r\n\r\n    return (\r\n        <div id=\"right-panel\" className={`right-panel${darkMode ? ' dark-mode' : ''}`} style={{ display: (connected ? 'block' : 'none') }}>\r\n            <header id=\"header\" className=\"header\">\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-between',\r\n                        width: '100%',\r\n                        flexWrap: 'nowrap',\r\n                        padding: '0 16px',\r\n                        minHeight: 64,\r\n                        boxSizing: 'border-box'\r\n                    }}\r\n                >\r\n                    {/* Left: App Name instead of Logo */}\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <span className=\"navbar-brand\" style={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            fontWeight: 700,\r\n                            fontSize: 28,\r\n                            color: '#1976d2',\r\n                            letterSpacing: 1,\r\n                            fontFamily: 'inherit'\r\n                        }}>\r\n                            <FaTooth style={{ fontSize: 32, marginRight: 10, color: '#1976d2' }} />\r\n                            {clinicSettings?.system?.appName || 'App'}\r\n                        </span>\r\n                        {/* Remove logo images */}\r\n                        {/* <a className=\"navbar-brand\"><img src=\"images/logo.png\" alt=\"Logo\" /></a>\r\n                        <a className=\"navbar-brand hidden\"><img src=\"images/logo2.png\" alt=\"Logo\" /></a> */}\r\n                        <IconButton onClick={toggleNav} sx={{ ml: 1, display: { md: 'none' } }}>\r\n                            <FaBars />\r\n                        </IconButton>\r\n                    </div>\r\n                    {/* Breadcrumb Navigation */}\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        flex: 1,\r\n                        marginLeft: 16,\r\n                        marginRight: 16,\r\n                        minWidth: 0,\r\n                        overflow: 'hidden'\r\n                    }}>\r\n                        <FaGlobe style={{ marginRight: 8, color: '#1976d2', flexShrink: 0 }} />\r\n                        <nav aria-label=\"breadcrumb\" style={{ width: '100%', overflow: 'hidden' }}>\r\n                            <ol className=\"breadcrumb\" style={{\r\n                                margin: 0,\r\n                                background: 'none',\r\n                                padding: 0,\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                width: '100%',\r\n                                whiteSpace: 'nowrap',\r\n                                overflowX: 'auto'\r\n                            }}>\r\n                                <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                                {breadcrumbs.map((crumb, idx) => (\r\n                                    <li key={idx} className=\"breadcrumb-item\">\r\n                                        <Link to={`/${breadcrumbs.slice(0, idx + 1).join('/')}`}>{crumb.charAt(0).toUpperCase() + crumb.slice(1)}</Link>\r\n                                    </li>\r\n                                ))}\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n                    {/* Right: All header actions */}\r\n                    <div className=\"header-menu\" style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 8,\r\n                        flexShrink: 0\r\n                    }}>\r\n                        {/* Remove the dark mode Switch */}\r\n                        {/* <Tooltip title=\"Toggle light/dark mode\">\r\n                            <Switch checked={darkMode} onChange={handleThemeChange} color=\"default\" />\r\n                        </Tooltip> */}\r\n                        <Select\r\n                            value={lang}\r\n                            onChange={handleLangChange}\r\n                            size=\"small\"\r\n                            sx={{ minWidth: 90, fontSize: 14, background: '#fff' }}\r\n                        >\r\n                            {/* Only English enabled, others disabled */}\r\n                            <MenuItem key=\"en\" value=\"en\">English</MenuItem>\r\n                            <MenuItem key=\"fr\" value=\"fr\" disabled>Français</MenuItem>\r\n                            <MenuItem key=\"ar\" value=\"ar\" disabled>العربية</MenuItem>\r\n                        </Select>\r\n                        <div className=\"form-inline\" style={{ marginRight: 0 }}>\r\n                            <form className=\"search-form\" onSubmit={e => { e.preventDefault(); print(); }}>\r\n                                <input\r\n                                    onChange={handleInputChange}\r\n                                    name=\"input\"\r\n                                    value={activity.input}\r\n                                    onKeyDown={search}\r\n                                    className=\"form-control mr-sm-2\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Global Search...\"\r\n                                    aria-label=\"Search\"\r\n                                    style={{ minWidth: 140, maxWidth: 180 }}\r\n                                />\r\n                                <button className=\"search-close\" type=\"submit\"><i className=\"fa fa-search\"></i></button>\r\n                            </form>\r\n                        </div>\r\n                        <Tooltip title=\"Quick Add\">\r\n                            <IconButton color=\"primary\" onClick={handleQuickAdd}>\r\n                                <FaPlus />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Menu\r\n                            anchorEl={quickAddAnchorEl}\r\n                            open={Boolean(quickAddAnchorEl)}\r\n                            onClose={handleQuickAddClose}\r\n                        >\r\n                            <MenuItem onClick={() => { handleQuickAddClose(); history.push('/appointments/add'); }}>\r\n                                Add Appointment\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => { handleQuickAddClose(); history.push('/patients/add'); }}>\r\n                                Add Patient\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => { handleQuickAddClose(); history.push('/inventory/add'); }}>\r\n                                Add Inventory Item\r\n                            </MenuItem>\r\n                        </Menu>\r\n                        <Tooltip title=\"Appointments\">\r\n                            <IconButton color=\"secondary\" onClick={handleAppointmentsClick}>\r\n                                <Badge badgeContent={appointements?.length} color=\"error\">\r\n                                    <FaBell />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Menu\r\n                            anchorEl={appointmentsAnchorEl}\r\n                            open={Boolean(appointmentsAnchorEl)}\r\n                            onClose={handleAppointmentsClose}\r\n                            PaperProps={{\r\n                                style: { minWidth: 340, maxHeight: 350, overflowY: 'auto', paddingBottom: 0 }\r\n                            }}\r\n                        >\r\n                            <MenuItem disabled>\r\n                                <strong>You have {appointements.length} Appointments</strong>\r\n                            </MenuItem>\r\n                            {loading ? (\r\n                                <MenuItem>Loading...</MenuItem>\r\n                            ) : appointements.length === 0 ? (\r\n                                <MenuItem>No appointments found.</MenuItem>\r\n                            ) : (\r\n                                appointements.map(itemm => (\r\n                                    <MenuItem\r\n                                        key={itemm.id || itemm.patient}\r\n                                        style={{\r\n                                            whiteSpace: 'normal',\r\n                                            alignItems: 'flex-start',\r\n                                            padding: '12px 8px',\r\n                                            borderBottom: '1px solid #f0f0f0',\r\n                                            background: '#f9f9f9',\r\n                                            borderRadius: 8,\r\n                                            margin: '6px 0'\r\n                                        }}\r\n                                    >\r\n                                        <div style={{ width: '100%' }}>\r\n                                            <div style={{ display: 'flex', alignItems: 'center', marginBottom: 4 }}>\r\n                                                <span style={{\r\n                                                    fontWeight: 600,\r\n                                                    fontSize: 15,\r\n                                                    color: '#1976d2',\r\n                                                    marginRight: 8\r\n                                                }}>\r\n                                                    {itemm.patient}\r\n                                                </span>\r\n                                                {itemm.status && (\r\n                                                    <span\r\n                                                        style={{\r\n                                                            background:\r\n                                                                itemm.status === 'Confirmed' ? '#e8f5e9'\r\n                                                                : itemm.status === 'Pending' ? '#fff8e1'\r\n                                                                : itemm.status === 'Cancelled' ? '#ffebee'\r\n                                                                : '#e3f2fd',\r\n                                                            color:\r\n                                                                itemm.status === 'Confirmed' ? '#388e3c'\r\n                                                                : itemm.status === 'Pending' ? '#ffa000'\r\n                                                                : itemm.status === 'Cancelled' ? '#e53935'\r\n                                                                : '#1976d2',\r\n                                                            borderRadius: 8,\r\n                                                            padding: '2px 10px',\r\n                                                            fontSize: 13,\r\n                                                            fontWeight: 600,\r\n                                                            marginLeft: 4\r\n                                                        }}\r\n                                                    >\r\n                                                        {itemm.status}\r\n                                                    </span>\r\n                                                )}\r\n                                            </div>\r\n                                            {itemm.date && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Date:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#e3f2fd',\r\n                                                        color: '#1976d2',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13,\r\n                                                        fontWeight: 500\r\n                                                    }}>\r\n                                                        {new Date(itemm.date).toLocaleString()}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.startTime && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Start:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#fffde7',\r\n                                                        color: '#fbc02d',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.startTime}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.endTime && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>End:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#e1f5fe',\r\n                                                        color: '#0288d1',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.endTime}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.doctor && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Doctor:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#ede7f6',\r\n                                                        color: '#5e35b1',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.doctor}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.type && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Type:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#f3e5f5',\r\n                                                        color: '#8e24aa',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.type}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.location && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Location:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#e0f2f1',\r\n                                                        color: '#00897b',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.location}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.phone && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Phone:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#fce4ec',\r\n                                                        color: '#ad1457',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.phone}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.reason && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Reason:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#fff3e0',\r\n                                                        color: '#ef6c00',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.reason}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.notes && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Notes:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#f3e5f5',\r\n                                                        color: '#8e24aa',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {itemm.notes}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.createdAt && (\r\n                                                <div style={{ marginBottom: 2 }}>\r\n                                                    <strong>Created:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#ede7f6',\r\n                                                        color: '#5e35b1',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {new Date(itemm.createdAt).toLocaleString()}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                            {itemm.updatedAt && (\r\n                                                <div>\r\n                                                    <strong>Updated:</strong>{' '}\r\n                                                    <span style={{\r\n                                                        background: '#fbe9e7',\r\n                                                        color: '#d84315',\r\n                                                        borderRadius: 6,\r\n                                                        padding: '2px 8px',\r\n                                                        fontSize: 13\r\n                                                    }}>\r\n                                                        {new Date(itemm.updatedAt).toLocaleString()}\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </MenuItem>\r\n                                ))\r\n                            )}\r\n                        </Menu>\r\n                        <Tooltip title=\"Help & Support\">\r\n                            <IconButton color=\"info\" component={Link} to=\"/help\">\r\n                                <FaQuestionCircle />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <IconButton onClick={handleUserMenu} sx={{ ml: 1 }}>\r\n                            <Avatar src={user.avatar} alt={user.name} />\r\n                        </IconButton>\r\n                        <Menu\r\n                            anchorEl={userAnchorEl}\r\n                            open={Boolean(userAnchorEl)}\r\n                            onClose={handleUserClose}\r\n                        >\r\n                            <MenuItem disabled>\r\n                                <Avatar src={user.avatar} sx={{ mr: 1 }} />\r\n                                <div>\r\n                                    <div style={{ fontWeight: 600 }}>{user.name}</div>\r\n                                    <div style={{ fontSize: 13, color: '#888' }}>{user.role}</div>\r\n                                </div>\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => { handleUserClose(); history.push('/profile'); }}>\r\n                                <FaUserCircle style={{ marginRight: 8 }} /> My Profile\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => { handleUserClose(); history.push('/configuration'); }}>\r\n                                <FaCog style={{ marginRight: 8 }} /> Settings\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => { handleUserClose(); logout(); }}>\r\n                                <FaPowerOff style={{ marginRight: 8 }} /> Log Out\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    )\r\n};\r\n\r\nHeader.propTypes = {};\r\n\r\nHeader.defaultProps = {};\r\n\r\nexport default Header;\r\n","export function LoadJSFiles() {\r\n\r\n  let scripts = [\r\n    { src: \"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.1/jquery.min.js\" },\r\n\r\n    { src: \"assets/js/init.js\" },\r\n    { src: \"assets/js/main.js\" }\r\n\r\n  ]\r\n  //Append the script element on each iteration\r\n\r\n\r\n  for (let i = 0; i < scripts.length; i++) {\r\n    const node = document.createElement('script');\r\n    node.src = scripts[i].src;\r\n    node.type = 'text/javascript';\r\n    node.async = false;\r\n    node.charset = 'utf-8';\r\n    document.getElementById('root').appendChild(node);\r\n    console.log(i)\r\n  }\r\n\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Header from '../Header/Header';\r\nimport { NavLink, useLocation } from \"react-router-dom\"\r\nimport CurrentUser from '../../main/config/user';\r\nimport { LoadJSFiles } from '../init';\r\nimport messageHTTPService from '../../main/services/messageHTTPService';\r\nimport './Navigation.css'\r\n\r\n// Get username from localStorage user object and capitalize first character\r\nlet username = '';\r\ntry {\r\n  const userObj = JSON.parse(localStorage.getItem('user'));\r\n  if (userObj && userObj.username) {\r\n    username = userObj.username.charAt(0).toUpperCase() + userObj.username.slice(1);\r\n  }\r\n} catch {\r\n  username = '';\r\n}\r\n\r\n// Example user data for profile section\r\nconst user = {\r\n  name: username || \"User\",\r\n  role: \"Admin\",\r\n  avatar: \"images/admin.png\"\r\n};\r\n\r\nconst Navigation = ({ connected, darkMode }) => {\r\n  const [messages, setMessages] = useState(2);\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n  const [search, setSearch] = useState('');\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    getMessages()\r\n  }, []);\r\n\r\n  const getMessages = () => {\r\n    messageHTTPService.getCount().then(data => {\r\n      setMessages(data.data.message)\r\n    })\r\n  }\r\n\r\n  // Example dynamic menu items based on role\r\n  const menuItems = [\r\n    {\r\n      section: \"Main\",\r\n      items: [\r\n        { to: \"/dashboard\", icon: \"fa-laptop\", label: \"Dashboard\" },\r\n        { to: \"/Odontogram\", icon: \"fa-tooth\", label: \"Odontogram\" }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Consultations\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-calendar\",\r\n          label: \"Consultations\",\r\n          children: [\r\n            { to: \"/rendezvous\", label: \"Appointments\", badge: 2, icon: \"fa-calendar-check\" },\r\n            { to: \"/quick-test\", label: \"Quick tests\", icon: \"fa-vial\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Management\",\r\n      items: [\r\n        { to: \"/patient\", icon: \"fa-user\", label: \"Patients\" },\r\n        { to: \"/messages\", icon: \"fa-envelope-open\", label: \"Messages\", badge: messages }, // <-- use messages state here\r\n        { to: \"/certificate\", icon: \"fa-certificate\", label: \"Certificates\" },\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-usd\",\r\n          label: \"Finances\",\r\n          children: [\r\n            { to: \"/payment\", label: \"Payments\", icon: \"fa-credit-card\" },\r\n            { to: \"/expense\", label: \"Expenses\", icon: \"fa-money-bill\" }\r\n          ]\r\n        },\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-hotel\",\r\n          label: \"Pharmaceuticals\",\r\n          children: [\r\n            { to: \"/medicaments\", label: \"Medicaments\", icon: \"fa-pills\" },\r\n            { to: \"/medicament-manufacture\", label: \"Manufactures\", icon: \"fa-industry\" },\r\n            { to: \"/medicament-category\", label: \"Categories\", icon: \"fa-tags\" }\r\n          ]\r\n        },\r\n        { to: \"/prescription\", icon: \"fa-bars\", label: \"Prescriptions\" }\r\n      ]\r\n    },\r\n    {\r\n      section: \"CMS\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-bookmark\",\r\n          label: \"CMS\",\r\n          children: [\r\n            { to: \"/\", label: \"Web Front\", icon: \"fa-screen\" },\r\n            { to: \"/aboutus\", label: \"About Us Page\", icon: \"fa-home\" },\r\n            { to: \"/servicepage\", label: \"Service Page\", icon: \"fa-concierge-bell\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Analytics\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-area-chart\",\r\n          label: \"Analytics\",\r\n          children: [\r\n            { to: \"/patient-analytics\", label: \"Patient\", icon: \"fa-user-chart\" },\r\n            { to: \"/medicament-analytics\", label: \"Medicament\", icon: \"fa-chart-bar\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Clinic\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-medkit\",\r\n          label: \"Clinic Management\",\r\n          children: [\r\n            { to: \"/treatment-plan\", label: \"Treatment Plan\", icon: \"fa-notes-medical\" },\r\n            { to: \"/telemedicine\", label: \"Telemedicine\", icon: \"fa-video\" },\r\n            { to: \"/staff\", label: \"Staff\", icon: \"fa-users\" },\r\n            { to: \"/doctor\", label: \"Doctor\", icon: \"fa-user-md\" },\r\n            { to: \"/clinic\", label: \"Clinic\", icon: \"fa-hospital\" },\r\n            { to: \"/billing\", label: \"Billing\", icon: \"fa-file-invoice-dollar\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Diagnostics\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-stethoscope\",\r\n          label: \"Diagnostics & Treatment\",\r\n          children: [\r\n            { to: \"/procedure\", label: \"Procedure\", icon: \"fa-stethoscope\" },\r\n            { to: \"/operation\", label: \"Operation\", icon: \"fa-syringe\" },\r\n            { to: \"/diagnosis\", label: \"Diagnosis\", icon: \"fa-diagnoses\" },\r\n            { to: \"/dental-imaging\", label: \"Dental Imaging\", icon: \"fa-x-ray\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Records\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-heartbeat\",\r\n          label: \"Patient Records\",\r\n          children: [\r\n            { to: \"/dental-membership\", label: \"Dental Membership\", icon: \"fa-id-card\" },\r\n            { to: \"/insurance\", label: \"Insurance\", icon: \"fa-shield-alt\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Inventory\",\r\n      items: [\r\n        {\r\n          dropdown: true,\r\n          icon: \"fa-archive\",\r\n          label: \"Inventory Management\",\r\n          children: [\r\n            { to: \"/inventory-item\", label: \"Inventory Item\", icon: \"fa-boxes\" },\r\n            { to: \"/equipment-maintenance\", label: \"Equipment Maintenance\", icon: \"fa-tools\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      section: \"Settings\",\r\n      items: [\r\n        { to: \"/configuration\", icon: \"fa-cogs\", label: \"Settings\" },\r\n        { to: \"/help\", icon: \"fa-question-circle\", label: \"Help\" }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  // Filter menu items by search\r\n  const filterMenu = (items) => {\r\n    if (!search) return items;\r\n    return items\r\n      .map(section => ({\r\n        ...section,\r\n        items: section.items\r\n          .map(item => {\r\n            if (item.dropdown) {\r\n              const filteredChildren = item.children.filter(child =>\r\n                child.label.toLowerCase().includes(search.toLowerCase())\r\n              );\r\n              return filteredChildren.length > 0 ? { ...item, children: filteredChildren } : null;\r\n            }\r\n            return item.label.toLowerCase().includes(search.toLowerCase()) ? item : null;\r\n          })\r\n          .filter(Boolean)\r\n      }))\r\n      .filter(section => section.items.length > 0);\r\n  };\r\n\r\n  // Keyboard navigation support (basic)\r\n  // You can enhance this for full accessibility\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Escape\") setSidebarCollapsed(false);\r\n  };\r\n\r\n  // Change icon size based on sidebarCollapsed\r\n  const iconSize = sidebarCollapsed ? 28 : 18;\r\n\r\n  return (\r\n    <aside\r\n      id=\"left-panel\"\r\n      className={`left-panel${sidebarCollapsed ? ' collapsed' : ''}${darkMode ? ' dark-mode' : ''}`}\r\n      style={{\r\n        display: (connected ? 'block' : 'none'),\r\n        width: sidebarCollapsed ? 80 : 250, // Increased collapsed width from 60 to 80\r\n        minWidth: sidebarCollapsed ? 80 : 250,\r\n        maxWidth: sidebarCollapsed ? 80 : 250,\r\n        transition: 'width 0.2s, min-width 0.2s, max-width 0.2s'\r\n      }}\r\n      tabIndex={0}\r\n      onKeyDown={handleKeyDown}\r\n    >\r\n      {/* Collapsible Sidebar Toggle */}\r\n      <div className=\"sidebar-toggle\" style={{ padding: 8, textAlign: 'right' }}>\r\n        <button\r\n          aria-label={sidebarCollapsed ? \"Expand sidebar\" : \"Collapse sidebar\"}\r\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n          style={{\r\n            background: 'none',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n            color: darkMode ? '#fff' : '#333',\r\n            fontSize: 20\r\n          }}\r\n        >\r\n          <i className={`fa ${sidebarCollapsed ? 'fa-chevron-right' : 'fa-chevron-left'}`}></i>\r\n        </button>\r\n      </div>\r\n\r\n      {/* User Profile Section */}\r\n      <div className=\"sidebar-profile\" style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: sidebarCollapsed ? 'column' : 'row',\r\n        padding: sidebarCollapsed ? '8px 0' : '8px 16px',\r\n        borderBottom: '1px solid #eee'\r\n      }}>\r\n        <img src={user.avatar} alt=\"avatar\" style={{\r\n          width: 38, height: 38, borderRadius: '50%', marginRight: sidebarCollapsed ? 0 : 10, marginBottom: sidebarCollapsed ? 6 : 0\r\n        }} />\r\n        {!sidebarCollapsed && (\r\n          <div>\r\n            <div style={{ fontWeight: 600 }}>{user.name}</div>\r\n            <div style={{ fontSize: 13, color: '#888' }}>{user.role}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Search in Sidebar */}\r\n      <div style={{ padding: sidebarCollapsed ? '8px 0' : '8px 16px', borderBottom: '1px solid #eee' }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search menu...\"\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '6px 10px',\r\n            borderRadius: 4,\r\n            border: '1px solid #ccc',\r\n            fontSize: 14\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Main Menu */}\r\n      <nav className=\"navbar navbar-expand-sm navbar-default\" style={{ width: '100%' }}>\r\n        <div id=\"main-menu\" className=\"main-menu collapse navbar-collapse\">\r\n          <ul className=\"nav navbar-nav\" style={{ width: '100%' }}>\r\n            {filterMenu(menuItems).map(section => (\r\n              <React.Fragment key={section.section}>\r\n                {/* Section Title/Divider */}\r\n                <li className=\"nav-section-title\" style={{\r\n                  fontWeight: 700,\r\n                  fontSize: 13,\r\n                  color: '#888',\r\n                  padding: sidebarCollapsed ? '8px 0 4px 0' : '12px 16px 4px 16px',\r\n                  borderTop: '1px solid #eee'\r\n                }}>\r\n                  {!sidebarCollapsed && section.section}\r\n                </li>\r\n                {section.items.map(item =>\r\n                  item.dropdown ? (\r\n                    <li className=\"menu-item-has-children dropdown\" key={item.label}>\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"dropdown-toggle\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\"\r\n                        tabIndex={0}\r\n                        title={item.label}\r\n                        style={{ display: 'flex', alignItems: 'center' }}\r\n                      >\r\n                        <i\r\n                          className={`menu-icon fa ${item.icon}`}\r\n                          style={{\r\n                            width: 32,\r\n                            textAlign: 'center',\r\n                            fontSize: iconSize,\r\n                            transition: 'font-size 0.2s'\r\n                          }}\r\n                        ></i>\r\n                        {!sidebarCollapsed && <span>{item.label}</span>}\r\n                        {!sidebarCollapsed && <i className=\"fa fa-caret-down\" style={{ marginLeft: 'auto', fontSize: 12 }}></i>}\r\n                      </a>\r\n                      <ul className=\"sub-menu children dropdown-menu\" style={{ left: sidebarCollapsed ? 60 : 250 }}>\r\n                        {item.children.map(child => (\r\n                          <li key={child.to}>\r\n                            <NavLink\r\n                              to={child.to}\r\n                              className={({ isActive }) => isActive ? 'activeNavLink' : ''}\r\n                              tabIndex={0}\r\n                              title={child.label}\r\n                              style={{ display: 'flex', alignItems: 'center', padding: '6px 0' }}\r\n                            >\r\n                              {!sidebarCollapsed && (\r\n                                <span style={{ marginRight: 12 }}>{child.label}</span>\r\n                              )}\r\n                              {child.badge && <span className=\"badge badge-primary\" style={{ marginLeft: 8 }}>{child.badge}</span>}\r\n                            </NavLink>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </li>\r\n                  ) : (\r\n                    <li key={item.to}>\r\n                      <NavLink\r\n                        to={item.to}\r\n                        className={({ isActive }) => isActive ? 'activeNavLink' : ''}\r\n                        tabIndex={0}\r\n                        title={item.label}\r\n                        style={{ display: 'flex', alignItems: 'center', padding: '6px 0' }}\r\n                      >\r\n                        <i\r\n                          className={`menu-icon fa ${item.icon || 'fa-circle'}`}\r\n                          style={{\r\n                            width: 32,\r\n                            textAlign: 'center',\r\n                            fontSize: iconSize,\r\n                            transition: 'font-size 0.2s',\r\n                            marginRight: !sidebarCollapsed ? 16 : 0 // <-- increased space between icon and label\r\n                          }}\r\n                        ></i>\r\n                        {!sidebarCollapsed && (\r\n                          <span style={{ marginRight: 12 }}>{item.label}</span> // <-- increased space between label and badge\r\n                        )}\r\n                        {item.badge && <span className=\"badge badge-primary\" style={{ marginLeft: 8 }}>{item.badge}</span>}\r\n                      </NavLink>\r\n                    </li>\r\n                  )\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Responsive design: hide sidebar on small screens */}\r\n      <style>\r\n        {`\r\n          @media (max-width: 768px) {\r\n            .left-panel {\r\n              position: absolute;\r\n              z-index: 2000;\r\n              height: 100vh;\r\n              left: 0;\r\n              top: 0;\r\n              background: #fff;\r\n              box-shadow: 2px 0 8px rgba(0,0,0,0.08);\r\n            }\r\n            .left-panel.collapsed {\r\n              width: 0 !important;\r\n              min-width: 0 !important;\r\n              overflow: hidden;\r\n            }\r\n          }\r\n          .left-panel.dark-mode {\r\n            background: #23272b;\r\n            color: #fff;\r\n          }\r\n          .left-panel .activeNavLink {\r\n            background: #1976d2;\r\n            color: #fff !important;\r\n            border-radius: 4px;\r\n          }\r\n          .left-panel .menu-icon {\r\n            color: #1976d2;\r\n          }\r\n          .left-panel.dark-mode .menu-icon {\r\n            color: #90caf9;\r\n          }\r\n          .left-panel .badge-primary {\r\n            background: #1976d2;\r\n            color: #fff;\r\n          }\r\n        `}\r\n      </style>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import PropTypes from 'prop-types';\r\nimport './ConfigurationContent.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Box, Tabs, Tab, Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Stack, TextField, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n// Only keep important settings\r\nconst defaultSettings = {\r\n  system: {\r\n    appName: 'Dentic',\r\n    address: '123 Dentic St',\r\n    email: 'support@dentic.com',\r\n    showLogo: false,\r\n  },\r\n  localisation: {\r\n    language: 'en',\r\n    dateFormat: 'YYYY-MM-DD',\r\n    currency: 'USD',\r\n    currencySymbol: '$',\r\n  },\r\n  openHours: [\r\n    { day: 'Monday', hours: '08:00 - 18:00' },\r\n    { day: 'Tuesday', hours: '08:00 - 18:00' },\r\n    { day: 'Wednesday', hours: '08:00 - 18:00' },\r\n    { day: 'Thursday', hours: '08:00 - 18:00' },\r\n    { day: 'Friday', hours: '08:00 - 18:00' },\r\n    { day: 'Saturday', hours: '09:00 - 14:00' },\r\n    { day: 'Sunday', hours: 'Closed' },\r\n  ]\r\n};\r\n\r\nconst SETTINGS_FILE_KEY = 'dentic_settings_json';\r\nconst CLINIC_SETTINGS_API_URL = BASE_URL + '/clinicsettings';\r\n\r\nconst dateFormatOptions = [\r\n  { value: 'YYYY-MM-DD', label: 'YYYY-MM-DD' },\r\n  { value: 'DD-MM-YYYY', label: 'DD-MM-YYYY' },\r\n  { value: 'MM/DD/YYYY', label: 'MM/DD/YYYY' },\r\n];\r\n\r\nconst languageOptions = [\r\n  { value: 'en', label: 'English' },\r\n  { value: 'fr', label: 'French' },\r\n  { value: 'ar', label: 'Arabic' },\r\n  { value: 'es', label: 'Spanish' },\r\n];\r\n\r\nconst currencyOptions = [\r\n  { value: 'USD', label: 'USD - US Dollar' },\r\n  { value: 'EUR', label: 'EUR - Euro' },\r\n  { value: 'GBP', label: 'GBP - British Pound' },\r\n  { value: 'MAD', label: 'MAD - Moroccan Dirham' },\r\n];\r\n\r\nconst currencySymbolOptions = [\r\n  { value: '$', label: '$' },\r\n  { value: '€', label: '€' },\r\n  { value: '£', label: '£' },\r\n  { value: 'د.م.', label: 'د.م.' },\r\n];\r\n\r\nconst ConfigurationContent = () => {\r\n  const [settings, setSettings] = useState(defaultSettings);\r\n  const [tab, setTab] = useState(0);\r\n  const [editDialog, setEditDialog] = useState({ open: false, section: null });\r\n  const [loadingOpenHours, setLoadingOpenHours] = useState(false);\r\n\r\n  // Load from backend on mount\r\n  useEffect(() => {\r\n    axios.get(CLINIC_SETTINGS_API_URL)\r\n      .then(res => {\r\n        if (res.data) setSettings(res.data);\r\n      })\r\n      .catch(() => {\r\n        const saved = localStorage.getItem(SETTINGS_FILE_KEY);\r\n        if (saved) setSettings(JSON.parse(saved));\r\n      });\r\n  }, []);\r\n\r\n  // Save to backend when user clicks Save in dialog\r\n  const handleEditSave = () => {\r\n    axios.put(CLINIC_SETTINGS_API_URL, settings)\r\n      .then(() => {\r\n        closeEdit();\r\n      })\r\n      .catch(() => {\r\n        // fallback to localStorage if backend fails\r\n        localStorage.setItem(SETTINGS_FILE_KEY, JSON.stringify(settings));\r\n        closeEdit();\r\n      });\r\n  };\r\n\r\n  const convertToYesNoValue = (value) => value ? 'Yes' : 'No';\r\n\r\n  // Restore default for a section\r\n  const restoreSection = (section) => {\r\n    setSettings(prev => ({ ...prev, [section]: defaultSettings[section] }));\r\n  };\r\n\r\n  // Dialog open/close helpers\r\n  const openEdit = (section) => setEditDialog({ open: true, section });\r\n  const closeEdit = () => setEditDialog({ open: false, section: null });\r\n\r\n  // Simple edit dialog for demonstration\r\n  const EditDialogContent = () => {\r\n    const section = editDialog.section;\r\n    const sectionSettings = settings[section] ?? {};\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value, type, checked } = e.target;\r\n      setSettings(prev => ({\r\n        ...prev,\r\n        [section]: {\r\n          ...prev[section],\r\n          [name]: type === 'checkbox' ? checked : value\r\n        }\r\n      }));\r\n    };\r\n\r\n    // For openHours, handle array of days\r\n    if (section === 'openHours') {\r\n      const handleHoursChange = (idx, value) => {\r\n        setSettings(prev => ({\r\n          ...prev,\r\n          openHours: prev.openHours.map((item, i) =>\r\n            i === idx ? { ...item, hours: value } : item\r\n          )\r\n        }));\r\n      };\r\n      return (\r\n        <Stack spacing={2} sx={{ mt: 1 }}>\r\n          {settings.openHours.map((item, idx) => (\r\n            <TextField\r\n              key={item.day}\r\n              label={item.day}\r\n              value={item.hours}\r\n              onChange={e => handleHoursChange(idx, e.target.value)}\r\n              fullWidth\r\n            />\r\n          ))}\r\n        </Stack>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Stack spacing={2} sx={{ mt: 1 }}>\r\n        {section === 'system' && (\r\n          <>\r\n            <TextField label=\"App Name\" name=\"appName\" value={sectionSettings.appName ?? ''} onChange={handleChange} fullWidth />\r\n            <TextField label=\"Address\" name=\"address\" value={sectionSettings.address ?? ''} onChange={handleChange} fullWidth />\r\n            <TextField label=\"Email\" name=\"email\" value={sectionSettings.email ?? ''} onChange={handleChange} fullWidth />\r\n            <label>\r\n              <input type=\"checkbox\" name=\"showLogo\" checked={sectionSettings.showLogo ?? false} onChange={handleChange} />\r\n              Show Logo\r\n            </label>\r\n          </>\r\n        )}\r\n        {section === 'localisation' && (\r\n          <>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Language</InputLabel>\r\n              <Select\r\n                label=\"Language\"\r\n                name=\"language\"\r\n                value={sectionSettings.language ?? ''}\r\n                onChange={handleChange}\r\n              >\r\n                {languageOptions.map(opt => (\r\n                  <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ mt: 2 }}>\r\n              <InputLabel>Date Format</InputLabel>\r\n              <Select\r\n                label=\"Date Format\"\r\n                name=\"dateFormat\"\r\n                value={sectionSettings.dateFormat ?? ''}\r\n                onChange={handleChange}\r\n              >\r\n                {dateFormatOptions.map(opt => (\r\n                  <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ mt: 2 }}>\r\n              <InputLabel>Currency</InputLabel>\r\n              <Select\r\n                label=\"Currency\"\r\n                name=\"currency\"\r\n                value={sectionSettings.currency ?? ''}\r\n                onChange={handleChange}\r\n              >\r\n                {currencyOptions.map(opt => (\r\n                  <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ mt: 2 }}>\r\n              <InputLabel>Currency Symbol</InputLabel>\r\n              <Select\r\n                label=\"Currency Symbol\"\r\n                name=\"currencySymbol\"\r\n                value={sectionSettings.currencySymbol ?? ''}\r\n                onChange={handleChange}\r\n              >\r\n                {currencySymbolOptions.map(opt => (\r\n                  <MenuItem key={opt.value} value={opt.value}>{opt.label}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </>\r\n        )}\r\n      </Stack>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 900, mx: 'auto', p: 2, bgcolor: '#fff', borderRadius: 2, boxShadow: 2 }}>\r\n      <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n        <Box sx={{ minWidth: 220 }}>\r\n          <Tabs\r\n            orientation=\"vertical\"\r\n            value={tab}\r\n            onChange={(_, v) => setTab(v)}\r\n            aria-label=\"Settings Tabs\"\r\n            variant=\"scrollable\"\r\n            sx={{ borderRight: 1, borderColor: 'divider' }}\r\n          >\r\n            <Tab label=\"System\" />\r\n            <Tab label=\"Localisation\" />\r\n            <Tab label=\"Open Hours\" />\r\n          </Tabs>\r\n        </Box>\r\n        <Box sx={{ flex: 1 }}>\r\n          {/* System */}\r\n          {tab === 0 && (\r\n            <Box>\r\n              <Typography variant=\"h6\">System Settings</Typography><hr />\r\n              <Typography>App Title: {settings?.system?.appName ?? ''}</Typography>\r\n              <Typography>Show logo: {convertToYesNoValue(settings?.system?.showLogo ?? false)}</Typography>\r\n              <Typography>Address: {settings?.system?.address ?? ''}</Typography>\r\n              <Typography>Email: {settings?.system?.email ?? ''}</Typography>\r\n              <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n                <Button variant=\"contained\" color=\"info\" onClick={() => openEdit('system')}>Edit</Button>\r\n                <Button variant=\"contained\" color=\"warning\" onClick={() => restoreSection('system')}>Restore Default</Button>\r\n              </Stack>\r\n            </Box>\r\n          )}\r\n          {/* Localisation */}\r\n          {tab === 1 && (\r\n            <Box>\r\n              <Typography variant=\"h6\">Localisation Settings</Typography><hr />\r\n              <Typography>Language: {settings?.localisation?.language ?? ''}</Typography>\r\n              <Typography>Date format: {settings?.localisation?.dateFormat ?? ''}</Typography>\r\n              <Typography>Currency: {settings?.localisation?.currency ?? ''}</Typography>\r\n              <Typography>Currency symbol: {settings?.localisation?.currencySymbol ?? ''}</Typography>\r\n              <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n                <Button variant=\"contained\" color=\"info\" onClick={() => openEdit('localisation')}>Edit</Button>\r\n                <Button variant=\"contained\" color=\"warning\" onClick={() => restoreSection('localisation')}>Restore Default</Button>\r\n              </Stack>\r\n            </Box>\r\n          )}\r\n          {/* Open Hours */}\r\n          {tab === 2 && (\r\n            <Box>\r\n              <Typography variant=\"h6\">Open Hours</Typography><hr />\r\n              {loadingOpenHours ? (\r\n                <Typography>Loading...</Typography>\r\n              ) : (\r\n                <Box>\r\n                  {settings.openHours && settings.openHours.map((item, idx) => (\r\n                    <Typography key={item.day}>\r\n                      <b>{item.day}:</b> {item.hours}\r\n                    </Typography>\r\n                  ))}\r\n                  <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n                    <Button variant=\"contained\" color=\"info\" onClick={() => openEdit('openHours')}>Edit</Button>\r\n                  </Stack>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Stack>\r\n\r\n      {/* Material-UI Edit Dialog */}\r\n      <Dialog open={editDialog.open} onClose={closeEdit} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Edit Settings</DialogTitle>\r\n        <DialogContent>\r\n          <EditDialogContent />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEditSave} color=\"primary\" variant=\"contained\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={closeEdit} color=\"secondary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  )\r\n};\r\n\r\nConfigurationContent.propTypes = {};\r\n\r\nConfigurationContent.defaultProps = {};\r\n\r\nexport default ConfigurationContent\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Configuration.css';\r\nimport ConfigurationContent from '../ConfigurationContent/ConfigurationContent';\r\n\r\nconst Configuration = () => (\r\n  <div class=\"container\">\r\n    <ConfigurationContent />\r\n  </div>\r\n\r\n);\r\n\r\nConfiguration.propTypes = {};\r\n\r\nConfiguration.defaultProps = {};\r\n\r\nexport default Configuration;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Odontogram.css';\r\nimport axios from 'axios';\r\nimport { Box, Button, Dialog, DialogTitle, DialogContent, DialogActions, Typography, TextField, MenuItem, Stack } from '@mui/material';\r\n\r\nconst TOOTH_STATUSES = ['healthy', 'decayed', 'missing', 'treated'];\r\nconst TOOTH_SURFACES = ['mesial', 'distal', 'occlusal', 'buccal', 'lingual'];\r\n\r\nconst getInitialTeeth = () =>\r\n  Array.from({ length: 32 }, (_, i) => ({\r\n    id: i + 1,\r\n    status: 'healthy',\r\n    surfaces: {},\r\n    notes: '',\r\n    images: [],\r\n    history: [],\r\n    procedure: '',\r\n    operation: '',\r\n    diagnosis: ''\r\n  }));\r\n\r\nconst Odontogram = ({ patientId }) => {\r\n  const [teeth, setTeeth] = useState(getInitialTeeth());\r\n  const [selectedTooth, setSelectedTooth] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // Data for selects\r\n  const [procedures, setProcedures] = useState([]);\r\n  const [operations, setOperations] = useState([]);\r\n  const [diagnosis, setDiagnosis] = useState([]);\r\n\r\n  // Fetch select options\r\n  useEffect(() => {\r\n    axios.get('/procedures').then(res => setProcedures(res.data));\r\n    axios.get('/operations').then(res => setOperations(res.data));\r\n    axios.get('/diagnosis').then(res => setDiagnosis(res.data));\r\n  }, []);\r\n\r\n  // Load from localStorage for patient-specific odontogram\r\n  useEffect(() => {\r\n    if (patientId) {\r\n      const saved = localStorage.getItem(`odontogram_${patientId}`);\r\n      if (saved) setTeeth(JSON.parse(saved));\r\n    }\r\n  }, [patientId]);\r\n\r\n  // Save to localStorage on change\r\n  useEffect(() => {\r\n    if (patientId) {\r\n      localStorage.setItem(`odontogram_${patientId}`, JSON.stringify(teeth));\r\n    }\r\n  }, [teeth, patientId]);\r\n\r\n  // Cycle tooth status on click\r\n  const handleToothClick = (id) => {\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === id\r\n          ? {\r\n              ...tooth,\r\n              status:\r\n                TOOTH_STATUSES[\r\n                  (TOOTH_STATUSES.indexOf(tooth.status) + 1) %\r\n                    TOOTH_STATUSES.length\r\n                ],\r\n              history: [\r\n                ...tooth.history,\r\n                {\r\n                  date: new Date().toISOString(),\r\n                  status: tooth.status,\r\n                },\r\n              ],\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n  };\r\n\r\n  // Open modal for tooth details\r\n  const handleToothDetails = (tooth) => {\r\n    setSelectedTooth(tooth);\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Update notes, surfaces, images, selects\r\n  const handleModalChange = (field, value) => {\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? { ...tooth, [field]: value }\r\n          : tooth\r\n      )\r\n    );\r\n    setSelectedTooth({ ...selectedTooth, [field]: value });\r\n\r\n    // Remove \"Selected:\" from value if present (for select boxes)\r\n    if (typeof value === 'string' && value.startsWith('Selected:')) {\r\n      const cleanValue = value.replace(/^Selected:\\s*/, '');\r\n      setTeeth((prev) =>\r\n        prev.map((tooth) =>\r\n          tooth.id === selectedTooth.id\r\n            ? { ...tooth, [field]: cleanValue }\r\n            : tooth\r\n        )\r\n      );\r\n      setSelectedTooth({ ...selectedTooth, [field]: cleanValue });\r\n    }\r\n  };\r\n\r\n  // Surface selection\r\n  const handleSurfaceToggle = (surface) => {\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? {\r\n              ...tooth,\r\n              surfaces: {\r\n                ...tooth.surfaces,\r\n                [surface]: !tooth.surfaces[surface],\r\n              },\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n    setSelectedTooth({\r\n      ...selectedTooth,\r\n      surfaces: {\r\n        ...selectedTooth.surfaces,\r\n        [surface]: !selectedTooth.surfaces[surface],\r\n      },\r\n    });\r\n  };\r\n\r\n  // Image upload\r\n  const handleImageUpload = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? {\r\n              ...tooth,\r\n              images: [\r\n                ...tooth.images,\r\n                ...files.map((file) => URL.createObjectURL(file)),\r\n              ],\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n    setSelectedTooth({\r\n      ...selectedTooth,\r\n      images: [\r\n        ...selectedTooth.images,\r\n        ...files.map((file) => URL.createObjectURL(file)),\r\n      ],\r\n    });\r\n  };\r\n\r\n  // Export odontogram as image\r\n  const handleExport = () => {\r\n    const odontogramEl = document.querySelector('.odontogram');\r\n    if (!odontogramEl) return;\r\n    import('html2canvas').then((html2canvas) => {\r\n      html2canvas.default(odontogramEl).then((canvas) => {\r\n        const link = document.createElement('a');\r\n        link.download = 'odontogram.png';\r\n        link.href = canvas.toDataURL();\r\n        link.click();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box className=\"odontogram\">\r\n        {teeth.map((tooth) => (\r\n          <div\r\n            key={tooth.id}\r\n            className={`tooth ${tooth.status}`}\r\n            title={`Tooth ${tooth.id}: ${tooth.status}`}\r\n            onClick={() => handleToothClick(tooth.id)}\r\n            onDoubleClick={() => handleToothDetails(tooth)}\r\n          >\r\n            {tooth.id}\r\n            <span className=\"surfaces\">\r\n              {TOOTH_SURFACES.map(\r\n                (surface) =>\r\n                  tooth.surfaces[surface] && (\r\n                    <span key={surface} className={`surface ${surface}`}>\r\n                      {surface[0].toUpperCase()}\r\n                    </span>\r\n                  )\r\n              )}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </Box>\r\n      <Button variant=\"contained\" onClick={handleExport} sx={{ mt: 2 }}>\r\n        Export Odontogram\r\n      </Button>\r\n      <Dialog open={showModal && !!selectedTooth} onClose={() => setShowModal(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Tooth {selectedTooth?.id} Details</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2}>\r\n            <Typography><strong>Status:</strong> {selectedTooth?.status}</Typography>\r\n            <Box>\r\n              <strong>Surfaces:</strong>\r\n              <Stack direction=\"row\" spacing={1}>\r\n                {TOOTH_SURFACES.map((surface) => (\r\n                  <label key={surface}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={!!selectedTooth?.surfaces[surface]}\r\n                      onChange={() => handleSurfaceToggle(surface)}\r\n                    />\r\n                    {surface}\r\n                  </label>\r\n                ))}\r\n              </Stack>\r\n            </Box>\r\n            <TextField\r\n              label=\"Notes\"\r\n              value={selectedTooth?.notes || ''}\r\n              onChange={(e) => handleModalChange('notes', e.target.value)}\r\n              multiline\r\n              rows={2}\r\n              fullWidth\r\n            />\r\n            <Box>\r\n              <strong>Images:</strong>\r\n              <input\r\n                type=\"file\"\r\n                multiple\r\n                accept=\"image/*\"\r\n                onChange={handleImageUpload}\r\n              />\r\n              <Box className=\"images\" sx={{ mt: 1 }}>\r\n                {selectedTooth?.images.map((img, idx) => (\r\n                  <img key={idx} src={img} alt={`Tooth ${selectedTooth?.id}`} width={50} />\r\n                ))}\r\n              </Box>\r\n            </Box>\r\n            {/* Select Procedure, Operation, Diagnosis */}\r\n            <TextField\r\n              select\r\n              label=\"Procedure\"\r\n              value={selectedTooth?.procedure || ''}\r\n              onChange={e => handleModalChange('procedure', e.target.value)}\r\n              fullWidth\r\n            >\r\n              {procedures.map((proc) => (\r\n                <MenuItem key={proc.id || proc.name} value={proc.id || proc.name}>\r\n                  {proc.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              select\r\n              label=\"Operation\"\r\n              value={selectedTooth?.operation || ''}\r\n              onChange={e => handleModalChange('operation', e.target.value)}\r\n              fullWidth\r\n            >\r\n              {operations.map((op) => (\r\n                <MenuItem key={op.id || op.name} value={op.id || op.name}>\r\n                  {op.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              select\r\n              label=\"Diagnosis\"\r\n              value={selectedTooth?.diagnosis || ''}\r\n              onChange={e => handleModalChange('diagnosis', e.target.value)}\r\n              fullWidth\r\n            >\r\n              {diagnosis.map((diag) => (\r\n                <MenuItem key={diag.id || diag.name} value={diag.id || diag.name}>\r\n                  {diag.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            {/* Save button below select boxes */}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              sx={{ mt: 2, minWidth: 120 }}\r\n              fullWidth\r\n              onClick={() => setShowModal(false)}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Box>\r\n              <strong>History:</strong>\r\n              <ul>\r\n                {selectedTooth?.history.map((h, idx) => (\r\n                  <li key={idx}>\r\n                    {h.date}: {h.status}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </Box>\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowModal(false)} color=\"secondary\">Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Odontogram;\r\n","export const chartBarOption = {\r\n    indexAxis: 'y',\r\n    elements: {\r\n        bar: {\r\n            borderWidth: 2,\r\n        },\r\n    },\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'right',\r\n        },\r\n        title: {\r\n            display: false,\r\n            text: '',\r\n        },\r\n    },\r\n};\r\nconst labels3 = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\nexport const intialChartBarData = {\r\n    labels3,\r\n    datasets: [\r\n        {\r\n            label: 'Dataset 1',\r\n            data: [1, 3, 4, 5, 11, 3, 2],\r\n            borderColor: '#ffa400',\r\n            backgroundColor: '#ffa400',\r\n        }\r\n\r\n    ],\r\n}","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllExpense = () => {\r\n    return http.get(`${BASE_URL}/expenses`)\r\n}\r\nconst createExpense = data => {\r\n    return http.post(`${BASE_URL}/expenses`, data);\r\n};\r\n\r\nconst editExpense = (id, data) => {\r\n    return http.put(`${BASE_URL}/expenses/${id}`, data);\r\n};\r\n\r\nconst removeExpense = id => {\r\n    return http.delete(`${BASE_URL}/expense/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllExpense,\r\n    createExpense,\r\n    editExpense,\r\n    removeExpense\r\n};","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllCertificate = () => {\r\n    return http.get(`${BASE_URL}/certificates`)\r\n}\r\nconst createCertificate = data => {\r\n    return http.post(`${BASE_URL}/certificates`, data);\r\n};\r\n\r\nconst editCertificate = (id, data) => {\r\n    return http.put(`${BASE_URL}/certificates/${id}`, data);\r\n};\r\n\r\nconst removeCertificate = id => {\r\n    return http.delete(`${BASE_URL}/certificates/${id}`);\r\n};\r\n\r\nconst removeAllCertificates = id => {\r\n    return http.delete(`${BASE_URL}/certificates`);\r\n};\r\n\r\n\r\nconst getCount = () => {\r\n    return http.get(`${BASE_URL}/certificates/count`)\r\n}\r\n\r\n\r\nexport default {\r\n    getAllCertificate,\r\n    createCertificate,\r\n    editCertificate,\r\n    removeCertificate,\r\n    getCount,\r\n    removeAllCertificates\r\n};","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllMedicament = () => {\r\n    return http.get(`${BASE_URL}/medicaments`)\r\n}\r\n\r\nconst getMedicamentByDate = () => {\r\n    return http.get(`${BASE_URL}/medicaments/analytics`)\r\n}\r\nconst createMedicament = data => {\r\n    return http.post(`${BASE_URL}/medicaments`, data);\r\n};\r\n\r\nconst editMedicament = (id, data) => {\r\n    return http.put(`${BASE_URL}/medicaments/${id}`, data);\r\n};\r\n\r\nconst removeMedicament = id => {\r\n    return http.delete(`${BASE_URL}/medicaments/${id}`);\r\n};\r\nconst getCount = () => {\r\n    return http.get(`${BASE_URL}/medicaments/count`)\r\n}\r\nexport default {\r\n    getAllMedicament,\r\n    createMedicament,\r\n    editMedicament,\r\n    getCount,\r\n    getMedicamentByDate,\r\n    removeMedicament\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './DashBoard.css';\r\nimport {\r\n  Bar, Pie, Doughnut, Line, PolarArea, Radar, Scatter, Bubble\r\n} from 'react-chartjs-2';\r\nimport Odontogram from '../Odontogram/Odontogram';\r\n\r\n//import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  BarElement\r\n} from 'chart.js';\r\nimport { chartBarOption, intialChartBarData } from '../../main/config/chart.bar';\r\nimport expenseHTTPService from '../../main/services/expenseHTTPService';\r\n\r\n\r\nimport showMessage from '../../libraries/messages/messages'\r\nimport appointementHTTPService from '../../main/services/appointementHTTPService';\r\nimport certificateHTTPService from '../../main/services/certificateHTTPService';\r\nimport medicamentHTTPService from '../../main/services/medicamentHTTPService';\r\nimport { Link } from 'react-router-dom';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport BASE_URL from '../../main/urls/urls';\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend, ArcElement, BarElement\r\n);\r\n\r\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\n\r\n\r\nexport const data3 = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: [3, 5, 6, 4, 2, 7, 8],\r\n      borderColor: 'rgba(255, 99, 132, 0.5)',\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n    }\r\n  ],\r\n};\r\n\r\n\r\nconst labels3 = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\n\r\n\r\n\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: 'Chart.js Line Chart',\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\nexport const data2 = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: [1, 3, 4, 5, 11, 3, 2],\r\n      borderColor: 'rgba(255, 99, 132, 0.5)',\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n    }\r\n\r\n  ],\r\n};\r\n\r\nexport const data = {\r\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n};\r\n\r\n// Example chart data for demonstration (replace with real API data as needed)\r\nconst chartData = {\r\n  bar: { labels: ['A', 'B', 'C', 'D'], datasets: [{ label: 'Bar', data: [12, 19, 3, 5], backgroundColor: 'rgba(53, 162, 235, 0.5)' }] },\r\n  pie: { labels: ['A', 'B', 'C', 'D'], datasets: [{ label: 'Pie', data: [12, 19, 3, 5], backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f'] }] },\r\n  doughnut: { labels: ['A', 'B', 'C', 'D'], datasets: [{ label: 'Doughnut', data: [12, 19, 3, 5], backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56'] }] },\r\n  line: { labels: ['Jan', 'Feb', 'Mar', 'Apr'], datasets: [{ label: 'Line', data: [3, 5, 6, 4], borderColor: '#1976d2', backgroundColor: 'rgba(25, 118, 210, 0.2)', fill: true }] },\r\n  polar: { labels: ['A', 'B', 'C', 'D'], datasets: [{ label: 'Polar', data: [12, 19, 3, 5], backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f'] }] },\r\n  radar: { labels: ['A', 'B', 'C', 'D'], datasets: [{ label: 'Radar', data: [12, 19, 3, 5], backgroundColor: 'rgba(255,99,132,0.2)', borderColor: 'rgba(255,99,132,1)' }] },\r\n  scatter: { datasets: [{ label: 'Scatter', data: [{ x: 1, y: 2 }, { x: 2, y: 3 }, { x: 3, y: 1 }], backgroundColor: 'rgba(53, 162, 235, 0.5)' }] },\r\n  bubble: { datasets: [{ label: 'Bubble', data: [{ x: 1, y: 2, r: 10 }, { x: 2, y: 3, r: 15 }, { x: 3, y: 1, r: 8 }], backgroundColor: 'rgba(255, 206, 86, 0.5)' }] },\r\n  bar2: { labels: ['X', 'Y', 'Z', 'W'], datasets: [{ label: 'Bar2', data: [7, 11, 5, 9], backgroundColor: 'rgba(255, 99, 132, 0.5)' }] },\r\n  pie2: { labels: ['X', 'Y', 'Z', 'W'], datasets: [{ label: 'Pie2', data: [7, 11, 5, 9], backgroundColor: ['#0288d1', '#7b1fa2', '#fbc02d', '#388e3c'] }] },\r\n  doughnut2: { labels: ['X', 'Y', 'Z', 'W'], datasets: [{ label: 'Doughnut2', data: [7, 11, 5, 9], backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56'] }] },\r\n  line2: { labels: ['May', 'Jun', 'Jul', 'Aug'], datasets: [{ label: 'Line2', data: [8, 6, 7, 5], borderColor: '#d32f2f', backgroundColor: 'rgba(211, 47, 47, 0.2)', fill: true }] },\r\n  polar2: { labels: ['X', 'Y', 'Z', 'W'], datasets: [{ label: 'Polar2', data: [7, 11, 5, 9], backgroundColor: ['#0288d1', '#7b1fa2', '#fbc02d', '#388e3c'] }] },\r\n  radar2: { labels: ['X', 'Y', 'Z', 'W'], datasets: [{ label: 'Radar2', data: [7, 11, 5, 9], backgroundColor: 'rgba(54, 162, 235, 0.2)', borderColor: 'rgba(54, 162, 235, 1)' }] },\r\n  scatter2: { datasets: [{ label: 'Scatter2', data: [{ x: 2, y: 4 }, { x: 3, y: 2 }, { x: 4, y: 5 }], backgroundColor: 'rgba(255, 99, 132, 0.5)' }] },\r\n  bubble2: { datasets: [{ label: 'Bubble2', data: [{ x: 2, y: 4, r: 12 }, { x: 3, y: 2, r: 10 }, { x: 4, y: 5, r: 14 }], backgroundColor: 'rgba(54, 162, 235, 0.5)' }] },\r\n  bar3: { labels: ['M', 'N', 'O', 'P'], datasets: [{ label: 'Bar3', data: [10, 8, 12, 6], backgroundColor: 'rgba(75, 192, 192, 0.5)' }] },\r\n  pie3: { labels: ['M', 'N', 'O', 'P'], datasets: [{ label: 'Pie3', data: [10, 8, 12, 6], backgroundColor: ['#75cdd9', '#fbc02d', '#d32f2f', '#388e3c'] }] },\r\n  doughnut3: { labels: ['M', 'N', 'O', 'P'], datasets: [{ label: 'Doughnut3', data: [10, 8, 12, 6], backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56'] }] },\r\n  line3: { labels: ['Sep', 'Oct', 'Nov', 'Dec'], datasets: [{ label: 'Line3', data: [5, 9, 7, 11], borderColor: '#388e3c', backgroundColor: 'rgba(56, 142, 60, 0.2)', fill: true }] },\r\n};\r\n\r\n// Add chart data for each model (replace with real API data if available)\r\nconst chartList = [\r\n  { type: Bar, data: chartData.bar, title: 'Patients by Month' },\r\n  { type: Pie, data: chartData.pie, title: 'Patients by Gender' },\r\n  { type: Doughnut, data: chartData.doughnut, title: 'Medicaments by Category' },\r\n  { type: Line, data: chartData.line, title: 'Medicaments Added Over Time' },\r\n  { type: PolarArea, data: chartData.polar, title: 'Appointments by Status' },\r\n  { type: Radar, data: chartData.radar, title: 'TestLab Results Distribution' },\r\n  { type: Scatter, data: chartData.scatter, title: 'Expenses: Amount vs Date' },\r\n  { type: Bubble, data: chartData.bubble, title: 'Doctors by Specialty' },\r\n  { type: Bar, data: chartData.bar2, title: 'Staff by Department' },\r\n  { type: Pie, data: chartData.pie2, title: 'Clinics by City' },\r\n  { type: Doughnut, data: chartData.doughnut2, title: 'Membership Types' },\r\n  { type: Line, data: chartData.line2, title: 'Insurance Claims Over Time' },\r\n  { type: PolarArea, data: chartData.polar2, title: 'Expenses by Category' },\r\n  { type: Radar, data: chartData.radar2, title: 'Doctor Ratings' },\r\n  { type: Scatter, data: chartData.scatter2, title: 'Appointments: Duration vs Satisfaction' },\r\n  { type: Bubble, data: chartData.bubble2, title: 'Staff Attendance' },\r\n  { type: Bar, data: chartData.bar3, title: 'Clinic Revenue' },\r\n  { type: Pie, data: chartData.pie3, title: 'Insurance Types' },\r\n  { type: Doughnut, data: chartData.doughnut3, title: 'TestLab Types' },\r\n  { type: Line, data: chartData.line3, title: 'Membership Growth' },\r\n];\r\n\r\nconst DashBoard = () => {\r\n  const [expenseChart, setExpenseChart] = useState(intialChartBarData);\r\n  const [incomeChart, setIncomeChart] = useState(data2);\r\n  const [memberLine, setmemberLine] = useState(data2);\r\n  const [activityPie, setActivityPie] = useState(data);\r\n  const [attendance, setAttendance] = useState([])\r\n\r\n\r\n  const [certificateCountCount, setcertificateCount] = useState(0);\r\n  const [appointementCount, setAppointementsCount] = useState(0);\r\n  const [medicamentCount, setMedicamentCount] = useState(0);\r\n  const [patientCount, setPatientCount] = useState(0);\r\n  const [dashboardSettings, setDashboardSettings] = useState([]);\r\n  const [appointements, setAppointements] = useState([]);\r\n  const [appointementsCalendar, setAppointementsCalendar] = useState([]);\r\n  const [topDoctors, setTopDoctors] = useState([]);\r\n  const [topPatients, setTopPatients] = useState([]);\r\n  const [topMedicaments, setTopMedicaments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const aar = []\r\n    // Runs ONCE after initial rendering\r\n    getExpenseChartData()\r\n    getIncomeChartData()\r\n    getMemberLinetData()\r\n    getActivityPieData()\r\n    getAttendencesCalendar()\r\n    getPatientCount()\r\n    getAppointementCount()\r\n    getMedicamentCount()\r\n    getCertificateCount()\r\n    getDashboardSettings()\r\n    appointementHTTPService.getAllAppointement()\r\n      .then(response => {\r\n        setAppointements(response.data);\r\n        console.log(response.data)\r\n        //setLoading(false);\r\n        for (const item of response.data) {\r\n          console.log(item)\r\n          appointementsCalendar.push({ title: item.patient, date: item.createdAt })\r\n        }\r\n\r\n\r\n        // console.log(aar)\r\n        setAppointements(appointementsCalendar)\r\n        console.log(appointements)\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      });\r\n\r\n    // Fetch Top 5 Doctors by Appointments\r\n    fetch(BASE_URL+'/doctors?sort=appointments&limit=5')\r\n      .then(res => res.json())\r\n      .then(data => setTopDoctors(data))\r\n      .catch(() => setTopDoctors([]));\r\n\r\n    // Fetch Top 5 Patients by Visits\r\n    fetch(BASE_URL+'/patients?sort=visits&limit=5')\r\n      .then(res => res.json())\r\n      .then(data => setTopPatients(data))\r\n      .catch(() => setTopPatients([]));\r\n\r\n    // Fetch Top 5 Medicaments by Sales\r\n    fetch(BASE_URL+'/medicaments?sort=sales&limit=5')\r\n      .then(res => res.json())\r\n      .then(data => setTopMedicaments(data))\r\n      .catch(() => setTopMedicaments([]));\r\n  }, []);\r\n\r\n  const getPatientCount = () => {\r\n    //patientHTTPService.getCount().then(data => {\r\n      //setPatientCount(data.data.patient)\r\n    //})\r\n  }\r\n\r\n  const getAppointementCount = () => {\r\n    appointementHTTPService.getCount().then(data => {\r\n      setAppointementsCount(data.data.appointement)\r\n    })\r\n  }\r\n\r\n  const getMedicamentCount = () => {\r\n    medicamentHTTPService.getCount().then(data => {\r\n      setMedicamentCount(data.data.medicament)\r\n    })\r\n  }\r\n\r\n  const getCertificateCount = () => {\r\n    certificateHTTPService.getCount().then(data => {\r\n      setcertificateCount(data.data.certificate)\r\n    })\r\n  }\r\n\r\n  const getAttendencesCalendar = () => {\r\n\r\n    /*  attendanceHTTPService.getAllAtendances()\r\n       .then(response => {\r\n         setAttendance(response.data);\r\n \r\n       })\r\n       .catch(e => {\r\n         showMessage('Confirmation', e, 'info')\r\n       }); */\r\n  };\r\n\r\n\r\n  const getExpenseChartData = () => {\r\n\r\n    /* expenseHTTPService.getExpenseByDate()\r\n      .then(response => {\r\n        setExpenseChart(response.data);\r\n\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      }); */\r\n  };\r\n\r\n  const getMemberLinetData = () => {\r\n\r\n    /*    memberHTTPService.getAllMemberByDate()\r\n         .then(response => {\r\n           setmemberLine(response.data);\r\n   \r\n         })\r\n         .catch(e => {\r\n           showMessage('Confirmation', e, 'info')\r\n         }); */\r\n  };\r\n\r\n  const getIncomeChartData = () => {\r\n\r\n    /*  revenueHTTPService.getAllRevenueByDate()\r\n       .then(response => {\r\n         setIncomeChart(response.data);\r\n \r\n       })\r\n       .catch(e => {\r\n         showMessage('Confirmation', e, 'info')\r\n       }); */\r\n  };\r\n\r\n  const getActivityPieData = () => {\r\n\r\n    /*   activityHTTPService.getAllActivityByDate()\r\n        .then(response => {\r\n          setActivityPie(response.data);\r\n  \r\n        })\r\n        .catch(e => {\r\n          showMessage('Confirmation', e, 'info')\r\n        }); */\r\n  };\r\n\r\n  const getDashboardSettings = () => {\r\n    /*  settingsHTTPService.getDashboardSettings().then(data => {\r\n       setDashboardSettings(data.data[0])\r\n       console.log(dashboardSettings)\r\n \r\n     }) */\r\n  }\r\n\r\n  const widgetColors = [\r\n  { bg: \"#1976d2\", color: \"#fff\" },\r\n  { bg: \"#388e3c\", color: \"#fff\" },\r\n  { bg: \"#fbc02d\", color: \"#222\" },\r\n  { bg: \"#d32f2f\", color: \"#fff\" },\r\n  { bg: \"#0288d1\", color: \"#fff\" },\r\n  { bg: \"#7b1fa2\", color: \"#fff\" },\r\n  { bg: \"#ff9800\", color: \"#fff\" },\r\n  { bg: \"#009688\", color: \"#fff\" },\r\n  { bg: \"#c2185b\", color: \"#fff\" },\r\n  { bg: \"#455a64\", color: \"#fff\" },\r\n  { bg: \"#43a047\", color: \"#fff\" },\r\n  { bg: \"#5d4037\", color: \"#fff\" },\r\n];\r\n\r\nconst widgetData = [\r\n  { icon: \"fas fa-user-injured\", label: \"Patients\", value: patientCount },\r\n  { icon: \"fas fa-capsules\", label: \"Medicaments\", value: medicamentCount },\r\n  { icon: \"fas fa-calendar-check\", label: \"Appointements\", value: appointementCount },\r\n  { icon: \"fas fa-certificate\", label: \"Certificates\", value: certificateCountCount },\r\n  { icon: \"fas fa-flask\", label: \"TestLabs\", value: 12 },\r\n  { icon: \"fas fa-money-bill-wave\", label: \"Expenses\", value: 8 },\r\n  { icon: \"fas fa-user-md\", label: \"Doctors\", value: 5 },\r\n  { icon: \"fas fa-users\", label: \"Staff\", value: 20 },\r\n  { icon: \"fas fa-hospital\", label: \"Clinics\", value: 3 },\r\n  { icon: \"fas fa-id-card\", label: \"Memberships\", value: 15 },\r\n  { icon: \"fas fa-shield-alt\", label: \"Insurance\", value: 7 },\r\n];\r\n\r\n  // Prepare appointment dates for calendar (using appointmentDate)\r\n  const appointmentDates = appointements\r\n    .filter(item => item.appointmentDate)\r\n    .map(item => new Date(item.appointmentDate).toDateString());\r\n\r\n  // Show a dot on days with appointments\r\n  const tileContent = ({ date, view }) => {\r\n    if (view === 'month' && appointmentDates.includes(date.toDateString())) {\r\n      return (\r\n        <div style={{\r\n          marginTop: 2,\r\n          width: 8,\r\n          height: 8,\r\n          borderRadius: '50%',\r\n          background: '#1976d2',\r\n          marginLeft: 'auto',\r\n          marginRight: 'auto'\r\n        }} />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Highlight days with appointments\r\n  const tileClassName = ({ date, view }) => {\r\n    if (view === 'month' && appointmentDates.includes(date.toDateString())) {\r\n      return 'calendar-appointment-day';\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Helper to get appointments for a specific date\r\n  const getAppointmentsForDate = (date) => {\r\n    return appointements.filter(\r\n      item => item.appointmentDate && new Date(item.appointmentDate).toDateString() === date.toDateString()\r\n    );\r\n  };\r\n\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {/* Statistics Cards - Improved UI/UX */}\r\n      <div className=\"row\" style={{ marginBottom: 8 }}>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"row\" style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n            {widgetData.map((w, idx) => (\r\n              <div\r\n                key={w.label}\r\n                className=\"col-lg-3 col-md-6\"\r\n                style={{\r\n                  flex: '1 1 220px',\r\n                  minWidth: 220,\r\n                  maxWidth: 260,\r\n                  marginBottom: 8,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"card\"\r\n                  style={{\r\n                    width: '100%',\r\n                    border: 'none',\r\n                    borderRadius: 16,\r\n                    background: widgetColors[idx % widgetColors.length].bg,\r\n                    color: widgetColors[idx % widgetColors.length].color,\r\n                    boxShadow: '0 4px 24px rgba(25, 118, 210, 0.10)',\r\n                    transition: 'transform 0.2s',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  onMouseOver={e => e.currentTarget.style.transform = 'translateY(-4px) scale(1.03)'}\r\n                  onMouseOut={e => e.currentTarget.style.transform = 'none'}\r\n                >\r\n                  <div className=\"card-body\" style={{ padding: 24 }}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\r\n                      <div style={{\r\n                        fontSize: 36,\r\n                        background: 'rgba(255,255,255,0.12)',\r\n                        borderRadius: '50%',\r\n                        width: 56,\r\n                        height: 56,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center'\r\n                      }}>\r\n                        <i className={w.icon}></i>\r\n                      </div>\r\n                      <div>\r\n                        <div style={{ fontSize: 28, fontWeight: 700, lineHeight: 1 }}>\r\n                          {w.value}\r\n                        </div>\r\n                        <div style={{ fontSize: 16, opacity: 0.85 }}>{w.label}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Charts Section */}\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '32px',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\r\n          margin: '24px 0'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gap: '30px'\r\n          }}\r\n        >\r\n          {chartList.map((chart, idx) => (\r\n            <div key={idx}>\r\n              <h5>{chart.title}</h5>\r\n              <chart.type data={chart.data} options={chartBarOption} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {/* Top 5 Lists */}\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '24px',\r\n          margin: '24px 0',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\r\n        }}\r\n      >\r\n        <h5 style={{ marginBottom: 24 }}>Top 5 Lists</h5>\r\n        <div style={{ display: 'flex', gap: '32px', flexWrap: 'wrap' }}>\r\n          {/* Top 5 Doctors */}\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 220,\r\n            background: '#f8fafc',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            boxShadow: '0 1px 4px rgba(25,118,210,0.06)'\r\n          }}>\r\n            <strong style={{ fontSize: 16, color: '#1976d2' }}>Top 5 Doctors by Appointments</strong>\r\n            <ol style={{ marginTop: 12, paddingLeft: 20 }}>\r\n              {topDoctors.length === 0 && <li style={{ color: '#888' }}>No data</li>}\r\n              {topDoctors.slice(0, 5).map((doc, idx) => (\r\n                <li key={doc.id || idx} style={{ marginBottom: 8 }}>\r\n                  <span style={{ fontWeight: 600 }}>{doc.name || doc.fullName || doc.doctorName}</span>\r\n                  <span style={{\r\n                    marginLeft: 8,\r\n                    color: '#388e3c',\r\n                    fontSize: 13,\r\n                    background: '#e8f5e9',\r\n                    borderRadius: 6,\r\n                    padding: '2px 8px'\r\n                  }}>\r\n                    {doc.appointmentCount || doc.visits || 0} appts\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </div>\r\n          {/* Top 5 Patients */}\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 220,\r\n            background: '#f8fafc',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            boxShadow: '0 1px 4px rgba(25,118,210,0.06)'\r\n          }}>\r\n            <strong style={{ fontSize: 16, color: '#388e3c' }}>Top 5 Patients by Visits</strong>\r\n            <ol style={{ marginTop: 12, paddingLeft: 20 }}>\r\n              {topPatients.length === 0 && <li style={{ color: '#888' }}>No data</li>}\r\n              {topPatients.slice(0, 5).map((pat, idx) => (\r\n                <li key={pat.id || idx} style={{ marginBottom: 8 }}>\r\n                  <span style={{ fontWeight: 600 }}>{pat.name || pat.fullName || pat.patientName}</span>\r\n                  <span style={{\r\n                    marginLeft: 8,\r\n                    color: '#1976d2',\r\n                    fontSize: 13,\r\n                    background: '#e3f2fd',\r\n                    borderRadius: 6,\r\n                    padding: '2px 8px'\r\n                  }}>\r\n                    {pat.visitCount || pat.visits || 0} visits\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </div>\r\n          {/* Top 5 Medicaments */}\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 220,\r\n            background: '#f8fafc',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            boxShadow: '0 1px 4px rgba(25,118,210,0.06)'\r\n          }}>\r\n            <strong style={{ fontSize: 16, color: '#d32f2f' }}>Top 5 Selling Medicaments</strong>\r\n            <ol style={{ marginTop: 12, paddingLeft: 20 }}>\r\n              {topMedicaments.length === 0 && <li style={{ color: '#888' }}>No data</li>}\r\n              {topMedicaments.slice(0, 5).map((med, idx) => (\r\n                <li key={med.id || idx} style={{ marginBottom: 8 }}>\r\n                  <span style={{ fontWeight: 600 }}>{med.name || med.medicamentName}</span>\r\n                  <span style={{\r\n                    marginLeft: 8,\r\n                    color: '#d32f2f',\r\n                    fontSize: 13,\r\n                    background: '#ffebee',\r\n                    borderRadius: 6,\r\n                    padding: '2px 8px'\r\n                  }}>\r\n                    {med.salesCount || med.sold || 0} sold\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Calendar Widget */}\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '24px',\r\n          margin: '24px 0',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\r\n        }}\r\n      >\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 12 }}>\r\n          <h5 style={{ margin: 0 }}>Appointments Calendar</h5>\r\n          <Link to=\"/rendezvous\" style={{ textDecoration: 'none' }}>\r\n            <button className=\"btn btn-primary\" style={{ fontSize: 14, padding: '4px 16px' }}>\r\n              View All Appointments\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: 32 }}>\r\n          <div style={{ minWidth: 320, flex: 1 }}>\r\n            <Calendar\r\n              value={selectedDate}\r\n              onClickDay={setSelectedDate}\r\n              tileContent={tileContent}\r\n              tileClassName={tileClassName}\r\n              calendarType=\"gregory\"\r\n              locale=\"en-US\"\r\n            />\r\n          </div>\r\n          <div style={{\r\n            flex: 2,\r\n            minWidth: 280,\r\n            maxWidth: 500,\r\n            background: '#f8fafc',\r\n            borderRadius: 12,\r\n            padding: 20,\r\n            marginLeft: 16,\r\n            boxShadow: '0 1px 4px rgba(25,118,210,0.06)'\r\n          }}>\r\n            <div style={{ marginBottom: 8 }}>\r\n              <strong>\r\n                {getAppointmentsForDate(selectedDate).length > 0\r\n                  ? `Appointments for ${selectedDate.toLocaleDateString()}`\r\n                  : `No appointments for ${selectedDate.toLocaleDateString()}`}\r\n              </strong>\r\n            </div>\r\n            <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>\r\n              {getAppointmentsForDate(selectedDate).map((item, idx) => (\r\n                <li key={item.id} style={{\r\n                  background: '#fff',\r\n                  borderRadius: 8,\r\n                  marginBottom: 12,\r\n                  padding: '12px 16px',\r\n                  boxShadow: '0 1px 4px rgba(25,118,210,0.04)',\r\n                  borderLeft: '4px solid #1976d2',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  gap: 4\r\n                }}>\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <span style={{ fontWeight: 600, color: '#1976d2' }}>\r\n                      {item.patient || item.patientId}\r\n                    </span>\r\n                    <span style={{\r\n                      background:\r\n                        item.status === 'Confirmed' || item.status === 'Scheduled' ? '#e8f5e9'\r\n                          : item.status === 'Pending' ? '#fff8e1'\r\n                          : item.status === 'Cancelled' ? '#ffebee'\r\n                          : '#e3f2fd',\r\n                      color:\r\n                        item.status === 'Confirmed' || item.status === 'Scheduled' ? '#388e3c'\r\n                          : item.status === 'Pending' ? '#ffa000'\r\n                          : item.status === 'Cancelled' ? '#e53935'\r\n                          : '#1976d2',\r\n                      borderRadius: 8,\r\n                      padding: '2px 10px',\r\n                      fontSize: 13,\r\n                      fontWeight: 600,\r\n                    }}>\r\n                      {item.status}\r\n                    </span>\r\n                  </div>\r\n                  <div>\r\n                    <span style={{ fontWeight: 500 }}>Time:</span>{' '}\r\n                    <span>{item.startTime} - {item.endTime}</span>\r\n                  </div>\r\n                  <div>\r\n                    <span style={{ fontWeight: 500 }}>Doctor:</span>{' '}\r\n                    <span>{item.doctor || item.doctorId}</span>\r\n                  </div>\r\n                  <div>\r\n                    <span style={{ fontWeight: 500 }}>Type:</span>{' '}\r\n                    <span>{item.appointmentType}</span>\r\n                  </div>\r\n                  {item.reasonForVisit && (\r\n                    <div>\r\n                      <span style={{ fontWeight: 500 }}>Reason:</span>{' '}\r\n                      <span>{item.reasonForVisit}</span>\r\n                    </div>\r\n                  )}\r\n                  {item.notes && (\r\n                    <div>\r\n                      <span style={{ fontWeight: 500 }}>Notes:</span>{' '}\r\n                      <span>{item.notes}</span>\r\n                    </div>\r\n                  )}\r\n                  <div style={{ marginTop: 4 }}>\r\n                    <Link to={`/rendezvous/${item.id}`} style={{ color: '#1976d2', textDecoration: 'underline', fontSize: 13 }}>\r\n                      View Details\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* System Health/Status */}\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '24px',\r\n          margin: '24px 0',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)'\r\n        }}\r\n      >\r\n        <h5 style={{ marginBottom: 18, display: 'flex', alignItems: 'center', gap: 8 }}>\r\n          <i className=\"fas fa-heartbeat\" style={{ color: '#d32f2f', fontSize: 22 }}></i>\r\n          System Health / Status\r\n        </h5>\r\n        <div style={{ display: 'flex', gap: 32, flexWrap: 'wrap' }}>\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 180,\r\n            background: '#e8f5e9',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 12,\r\n            marginBottom: 12\r\n          }}>\r\n            <i className=\"fas fa-server\" style={{ color: '#388e3c', fontSize: 20 }}></i>\r\n            <div>\r\n              <div style={{ fontWeight: 600 }}>Backend</div>\r\n              <div style={{ color: '#388e3c', fontWeight: 500 }}>Online</div>\r\n            </div>\r\n          </div>\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 180,\r\n            background: '#e3f2fd',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 12,\r\n            marginBottom: 12\r\n          }}>\r\n            <i className=\"fas fa-network-wired\" style={{ color: '#1976d2', fontSize: 20 }}></i>\r\n            <div>\r\n              <div style={{ fontWeight: 600 }}>API</div>\r\n              <div style={{ color: '#1976d2', fontWeight: 500 }}>Healthy</div>\r\n            </div>\r\n          </div>\r\n          <div style={{\r\n            flex: 1,\r\n            minWidth: 180,\r\n            background: '#fffde7',\r\n            borderRadius: 10,\r\n            padding: 16,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 12,\r\n            marginBottom: 12\r\n          }}>\r\n            <i className=\"fas fa-clock\" style={{ color: '#fbc02d', fontSize: 20 }}></i>\r\n            <div>\r\n              <div style={{ fontWeight: 600 }}>Uptime</div>\r\n              <div style={{ color: '#fbc02d', fontWeight: 500 }}>99.9%</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDashBoard.propTypes = {};\r\n\r\nDashBoard.defaultProps = {};\r\n\r\nexport default DashBoard;\r\n\r\n/* Add this CSS to your DashBoard.css for appointment highlight\r\n.calendar-appointment-day {\r\n  position: relative;\r\n}\r\n\r\n.calendar-appointment-day::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 6px;\r\n  height: 6px;\r\n  border-radius: 50%;\r\n  background: #1976d2;\r\n}\r\n*/\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ViewAppointment.css';\r\n\r\nconst ViewAppointment = () => (\r\n  <div className=\"ViewAppointment\">\r\n\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">ID de rendez-vous</th>\r\n          <th scope=\"col\">A201LPSI</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">Nom\r\n               </th>\r\n          <td>David</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\"> Heure</th>\r\n          <td>14h00</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Date</th>\r\n          <td>11/11/2018</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Docteur</th>\r\n          <td>Dr Anderson</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Département</th>\r\n          <td>Lorem Ipsum est simplement un faux texte de la norme de l'industrie</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n\r\n  </div>\r\n);\r\n\r\nViewAppointment.propTypes = {};\r\n\r\nViewAppointment.defaultProps = {};\r\n\r\nexport default ViewAppointment;\r\n","const expenseValidation = {\r\n    date: 'dd',\r\n    name: 'd',\r\n    amount: 'sss',\r\n    note: 'ss',\r\n    paymenMode: 'ss'\r\n\r\n\r\n}\r\nexport default expenseValidation;","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllPatients = () => {\r\n    return http.get(`${BASE_URL}/patients`);\r\n};\r\n\r\nconst getPatientById = (id) => {\r\n    return http.get(`${BASE_URL}/patients/${id}`);\r\n};\r\n\r\nconst createPatient = (data) => {\r\n    return http.post(`${BASE_URL}/patients`, data);\r\n};\r\n\r\nconst editPatient = (id, data) => {\r\n    return http.put(`${BASE_URL}/patients/${id}`, data);\r\n};\r\n\r\nconst removePatient = (id) => {\r\n    return http.delete(`${BASE_URL}/patients/${id}`);\r\n};\r\n\r\nconst removeAllPatients = () => {\r\n    return http.delete(`${BASE_URL}/patients`);\r\n};\r\n\r\nexport default {\r\n    getAllPatients,\r\n    getPatientById,\r\n    createPatient,\r\n    editPatient,\r\n    removePatient,\r\n    removeAllPatients\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport './AddAppointment.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages'\r\nimport appointementMessage from '../../main/messages/appointementMessage'\r\nimport AppointementTestService from '../../main/mocks/AppointementTestService';\r\nimport appointementValidation from '../../main/validations/appointementValidation'\r\nimport appointementHTTPService from '../../main/services/appointementHTTPService';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst AddAppointment = (props) => {\r\n\r\n    const initialState = {\r\n        date: '',\r\n        patient: '',\r\n        problem: '',\r\n    };\r\n\r\n    const { register, handleSubmit, errors } = useForm()\r\n    const [appointement, setAppointement] = useState(initialState);\r\n    const [patients, setPatients] = useState([]);\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        //saveAppointement(data)\r\n        //AppointementTestService.create(data)\r\n        appointementHTTPService.createAppointement(data).then(data => {\r\n            setAppointement(initialState)\r\n            showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success')\r\n            props.closeModal()\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllPatient()\r\n    }, []);\r\n\r\n\r\n    const getAllPatient = () => {\r\n\r\n        patientHTTPService.getAllPatient()\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setPatients(response.data);\r\n\r\n            })\r\n            .catch(e => {\r\n                showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n            });\r\n    };\r\n\r\n    const saveAppointement = (data) => {\r\n\r\n        appointementHTTPService.create(data)\r\n            .then(response => {\r\n                setAppointement(initialState)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n    };\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setAppointement({ ...appointement, [name]: value });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"AddAppointment\">\r\n            <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n                <div class=\"form-body\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Date:</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={appointement.date} ref={register({ required: true })}\r\n                                type=\"date\" id=\"date\" name=\"date\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n                            <div className=\"error text-danger\">\r\n                                {errors.date && appointementValidation.date}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Patient:</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <select onChange={handleInputChange} value={appointement.patient} ref={register({ required: true })}\r\n                                name=\"patient\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\">\r\n                                {patients.map(response =>\r\n                                    <option value={response?.id}>{response?.namepatient}</option>\r\n                                )}\r\n                            </select>\r\n                            <div className=\"error text-danger\">\r\n                                {errors.patient_id && appointementValidation.patient}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><font  ><font  >Problem:</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <textarea onChange={handleInputChange} value={appointement.problem} ref={register({ required: true })}\r\n                                name=\"problem\" class=\"form-control\" rows=\"3\"></textarea>\r\n                            <div className=\"error text-danger\">\r\n                                {errors.problem && appointementValidation.problem}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group row\">\r\n                        <div class=\" col-8\">\r\n                            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nAddAppointment.propTypes = {};\r\n\r\nAddAppointment.defaultProps = {};\r\n\r\nexport default AddAppointment;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './EditAppointment.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport appointementHTTPService from '../../main/services/appointementHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditAppointment = (props) => {\r\n    const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n    const [appointement, setAppointement] = useState(props.event);\r\n    const [patients, setPatients] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        setAppointement(props.appointement)\r\n        getAllPatient()\r\n    }, [props.appointement]);\r\n\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        //EventTestService.update(props.event, data)\r\n\r\n        console.log(props.appointement)\r\n        appointementHTTPService.editAppointement(props.appointement, data).then(data => {\r\n            showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n            props.closeModal()\r\n        })\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setAppointement({ ...event, [name]: value });\r\n    };\r\n    const getAllPatient = () => {\r\n\r\n        patientHTTPService.getAllPatient()\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setPatients(response.data);\r\n\r\n            })\r\n            .catch(e => {\r\n                showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n            <div class=\"form-body\">\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Date:</font></font></label>\r\n                    <div class=\"col-md-12\">\r\n                        <input onChange={handleInputChange} value={appointement?.datee} ref={register({ required: true })}\r\n                            type=\"date\" id=\"date\" name=\"date\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Patient:</font></font></label>\r\n                    <div class=\"col-md-12\">\r\n                        <select onChange={handleInputChange} value={appointement?.patient} ref={register({ required: true })}\r\n                            name=\"patient\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\">\r\n                            {patients.map(response =>\r\n                                <option value={response?.id}>{response?.namepatient}</option>\r\n                            )}\r\n                        </select>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-3 control-label\"><font  ><font  >Problem:</font></font></label>\r\n                    <div class=\"col-md-12\">\r\n                        <textarea onChange={handleInputChange} value={appointement?.problem} ref={register({ required: true })}\r\n                            name=\"problem\" class=\"form-control\" rows=\"3\"></textarea>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-8\">\r\n                        <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                            <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nEditAppointment.propTypes = {};\r\n\r\nEditAppointment.defaultProps = {};\r\n\r\nexport default EditAppointment;\r\n","const patientMessage = {\r\n    add: 'Le patient a été ajouté avec succés',\r\n    edit: 'Le patient a été modifié avec succés',\r\n    delete: 'Le patient a été supprimé avec succés'\r\n}\r\n\r\nexport default patientMessage\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SummaryWidget.css';\r\n\r\nconst SummaryWidget = () => (\r\n  <div class=\"col-lg-3 col-md-6\">\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"stat-widget-four\">\r\n          <div class=\"stat-icon dib\">\r\n            <i class=\"ti-stats-up text-muted\"></i>\r\n          </div>\r\n          <div class=\"stat-content\">\r\n            <div class=\"text-left dib\">\r\n              <div class=\"stat-heading\">Daily Sales</div>\r\n              <div class=\"stat-text\">Total: $76,58,714</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nSummaryWidget.propTypes = {};\r\n\r\nSummaryWidget.defaultProps = {};\r\n\r\nexport default SummaryWidget;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './Rendezvous.css';\r\nimport { LoadJS, LoadJSFiles } from './../init';\r\nimport ViewAppointment from './../ViewAppointment/ViewAppointment';\r\nimport AddAppointment from '../AddAppointment/AddAppointment';\r\nimport EdiTAppointement from './../EditAppointment/EditAppointment'\r\nimport appointementHTTPService from '../../main/services/appointementHTTPService';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport useForceUpdate from 'use-force-update';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst Rendezvous = () => {\r\n\r\n  const [appointements, setAppointements] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllAppointements()\r\n  }, []);\r\n\r\n\r\n  const getAllAppointements = () => {\r\n    setLoading(true);\r\n    appointementHTTPService.getAllAppointement()\r\n      .then(response => {\r\n        setAppointements(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'info')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllAppointements()\r\n    forceUpdate()\r\n  }\r\n\r\n  const removeAppointementAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success')\r\n      appointementHTTPService.removeAppointement(data).then(data => {\r\n        // resfreshComponent()\r\n        getAllAppointements()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateAppointementAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //resfreshComponent()\r\n\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    closeButtonEdit.current.click()\r\n    getAllAppointements()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    getAllAppointements()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n    { field: 'patient', headerName: 'Full Name', width: 200 },\r\n    { field: 'datee', headerName: 'Date', width: 150 },\r\n    { field: 'email', headerName: 'Email', width: 200 },\r\n    { field: 'telephone', headerName: 'Telephone', width: 150 },\r\n    { field: 'message', headerName: 'Problem', width: 200 },\r\n    { field: 'doctor', headerName: 'Doctor', width: 180 },\r\n    { field: 'status', headerName: 'Status', width: 120 },\r\n    { field: 'time', headerName: 'Time', width: 120 },\r\n    { field: 'created_at', headerName: 'Created At', width: 180 },\r\n    { field: 'updated_at', headerName: 'Updated At', width: 180 },\r\n    // Add any other fields from your appointment model here\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = appointements.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Appointements\r\n        </Typography>\r\n        <br />\r\n        <Button onClick={e => removeAppointementAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n        <Button type=\"button\" onClick={() => getAllAppointements()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n\r\n        <br /><br />\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={appointements}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n          /></div>}\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addRendezvous\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">New</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddAppointment closeModal={closeModalAdd} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonAdd} type=\"button\" onClick={closeModalAdd} class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"editRendezvous\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <EdiTAppointement appointement={updatedItem} closeModal={closeModalEdit} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonEdit} onClick={closeModalEdit} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewRendezvous\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">View</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <ViewAppointment />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nRendezvous.propTypes = {};\r\n\r\nRendezvous.defaultProps = {};\r\n\r\nexport default Rendezvous;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, TextField, MenuItem, Stack, Typography, IconButton } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst refillOptions = ['Yes', 'No'];\r\nconst statusOptions = ['Active', 'Expired', 'Completed', 'Pending'];\r\n\r\nconst AddPrescription = ({ closeModal, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicId: '',\r\n    medications: [{\r\n      dosage: '',\r\n      duration: '',\r\n      frequency: '',\r\n      instructions: '',\r\n      medicationId: '',\r\n      medicationName: ''\r\n    }],\r\n    prescriptionDate: '',\r\n    validUntil: '',\r\n    refillAllowed: 'Yes',\r\n    refillCount: 1,\r\n    pharmacyId: '',\r\n    digitalSignature: '',\r\n    status: 'Active'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Add state for select box data\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(BASE_URL+'/patients').then(res => setPatients(res.data)).catch(() => setPatients([]));\r\n    axios.get(BASE_URL+'/doctors').then(res => setDoctors(res.data)).catch(() => setDoctors([]));\r\n    axios.get(BASE_URL+'/clinics').then(res => setClinics(res.data)).catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  // Add more medications\r\n  const handleAddMedication = () => {\r\n    setForm(f => ({\r\n      ...f,\r\n      medications: [\r\n        ...f.medications,\r\n        { dosage: '', duration: '', frequency: '', instructions: '', medicationId: '', medicationName: '' }\r\n      ]\r\n    }));\r\n  };\r\n\r\n  // Change medication fields\r\n  const handleMedicationChange = (idx, e) => {\r\n    const { name, value } = e.target;\r\n    setForm(f => {\r\n      const meds = [...f.medications];\r\n      meds[idx][name] = value;\r\n      return { ...f, medications: meds };\r\n    });\r\n  };\r\n\r\n  // Change main fields\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...form,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      // Replace with your backend endpoint\r\n      await axios.post(BASE_URL+'/prescriptions', data);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(patient => (\r\n          <MenuItem key={patient.id} value={patient.id}>\r\n            {patient.fullName || patient.name || patient.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(doctor => (\r\n          <MenuItem key={doctor.id} value={doctor.id}>\r\n            {doctor.fullName || doctor.name || doctor.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic\"\r\n        name=\"clinicId\"\r\n        value={form.clinicId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {clinics.map(clinic => (\r\n          <MenuItem key={clinic.id} value={clinic.id}>\r\n            {clinic.name || clinic.clinicName || clinic.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>Medications</Typography>\r\n      {form.medications.map((med, idx) => (\r\n        <Stack key={idx} direction=\"row\" spacing={1} sx={{ mb: 1 }}>\r\n          <TextField\r\n            label=\"Medication Name\"\r\n            name=\"medicationName\"\r\n            value={med.medicationName}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Medication ID\"\r\n            name=\"medicationId\"\r\n            value={med.medicationId}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Dosage\"\r\n            name=\"dosage\"\r\n            value={med.dosage}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Duration (days)\"\r\n            name=\"duration\"\r\n            type=\"number\"\r\n            value={med.duration}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Frequency\"\r\n            name=\"frequency\"\r\n            value={med.frequency}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Instructions\"\r\n            name=\"instructions\"\r\n            value={med.instructions}\r\n            onChange={e => handleMedicationChange(idx, e)}\r\n          />\r\n        </Stack>\r\n      ))}\r\n      <IconButton color=\"primary\" onClick={handleAddMedication} sx={{ mb: 2 }}>\r\n        <AddIcon />\r\n      </IconButton>\r\n      <TextField\r\n        label=\"Prescription Date\"\r\n        name=\"prescriptionDate\"\r\n        type=\"datetime-local\"\r\n        value={form.prescriptionDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Valid Until\"\r\n        name=\"validUntil\"\r\n        type=\"datetime-local\"\r\n        value={form.validUntil}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Refill Allowed\"\r\n        name=\"refillAllowed\"\r\n        value={form.refillAllowed}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {refillOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Refill Count\"\r\n        name=\"refillCount\"\r\n        type=\"number\"\r\n        value={form.refillCount}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Pharmacy ID\"\r\n        name=\"pharmacyId\"\r\n        value={form.pharmacyId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Digital Signature\"\r\n        name=\"digitalSignature\"\r\n        value={form.digitalSignature}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Status\"\r\n        name=\"status\"\r\n        value={form.status}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {statusOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Create Prescription'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddPrescription;","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllPrescription = () => {\r\n    return http.get(`${BASE_URL}/prescriptions`)\r\n}\r\nconst createPrescription = data => {\r\n    return http.post(`${BASE_URL}/prescriptions`, data);\r\n};\r\n\r\nconst createMedicamentPrescription = data => {\r\n    return http.post(`${BASE_URL}/prescriptions/medicament`, data);\r\n};\r\n\r\nconst getPrescription = (id, data) => {\r\n    return http.get(`${BASE_URL}/prescriptions/${id}`, data);\r\n};\r\n\r\nconst getMedicamentPrescription = (id, data) => {\r\n    return http.get(`${BASE_URL}/prescriptions/medicament/${id}`, data);\r\n};\r\n\r\nconst editPrescription = (id, data) => {\r\n    return http.put(`${BASE_URL}/prescriptions/${id}`, data);\r\n};\r\n\r\nconst removePrescription = id => {\r\n    return http.delete(`${BASE_URL}/prescriptions/${id}`);\r\n};\r\n\r\nconst removeMedicamentPrescription = (id, data) => {\r\n    return http.delete(`${BASE_URL}/prescriptions/medicament/${id}`, data);\r\n};\r\n\r\nexport default {\r\n    getAllPrescription,\r\n    createPrescription,\r\n    editPrescription,\r\n    removePrescription,\r\n    createMedicamentPrescription,\r\n    getPrescription,\r\n    getMedicamentPrescription,\r\n    removeMedicamentPrescription\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ViewPrescription.css';\r\nimport prescriptionHTTPService from '../../main/services/prescriptionHTTPService';\r\nimport { Button } from 'bootstrap';\r\n\r\nconst ViewPrescription = (props) => {\r\n  const [medicament, setMedicament] = useState({});\r\n  const [medicaments, setMedicaments] = useState([]);\r\n  useEffect(() => {\r\n    console.log(props.updatedItem)\r\n    prescriptionHTTPService.getPrescription(props.updatedItem).then(data => {\r\n      console.log(data.data)\r\n      setMedicament(data.data)\r\n    })\r\n\r\n    prescriptionHTTPService.getMedicamentPrescription(props.updatedItem).then(data => {\r\n      console.log(data.data)\r\n      setMedicaments(data.data)\r\n    })\r\n  }, [props.updatedItem]);\r\n\r\n  const remove = (e, id) => {\r\n    prescriptionHTTPService.removeMedicamentPrescription(id).then(data => {\r\n      prescriptionHTTPService.getMedicamentPrescription(props.updatedItem).then(data => {\r\n        console.log(data.data)\r\n        setMedicaments(data.data)\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"ViewPrescription\">\r\n      <p>Patient :{medicament.patient}</p>\r\n      <p>Pression : {medicament.pression}</p>\r\n      <p>temperature :{medicament.temperature} </p>\r\n      <p>Problem : {medicament.problem}</p>\r\n      <p>Note : {medicament.note}</p>\r\n\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Medicament</th>\r\n            <th scope=\"col\">Duration</th>\r\n            <th scope=\"col\">Dose</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            medicaments.map(data =>\r\n              <tr>\r\n                <th scope=\"row\">{data.medicament}\r\n                </th>\r\n                <td>{data.duration}</td>\r\n                <td>{data.dose}</td>\r\n                <td> <button className=\"btn btn-danger\" onClick={e => remove(e, data.id)} type=\"button\" ><i class=\"fas fa-trash\"></i> </button></td>\r\n              </tr>\r\n            )\r\n          }\r\n\r\n\r\n        </tbody>\r\n      </table>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nViewPrescription.propTypes = {};\r\n\r\nViewPrescription.defaultProps = {};\r\n\r\nexport default ViewPrescription;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditPrescription.css';\r\n\r\nconst EditPrescription = () => (\r\n    <div className=\"EditPrescription\">\r\n        <form className=\"form-horizontal\" method=\"post\" name=\"n_p\" enctype=\"multipart/form-data\" accept-charset=\"utf-8\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"panel panel-default panel-form\">\r\n                    <div className=\"panel-body\">\r\n                        <div className=\"portlet-body form\">\r\n\r\n                            <div className=\"portlet-title\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"portlet-title\">\r\n                                            <div className=\"form-group \">\r\n\r\n\r\n                                                <div className=\"col-md-12\">\r\n                                                    <select className=\"form-control\" name=\"venue_id\" required=\"\">\r\n                                                        <option value=\"\">--Sélectionnez le lieu--</option>\r\n                                                        <option value=\"1\"><b  ><b  >Démo Medical Collage</b></b></option><option value=\"3\"><b  ><b  >Tour verte</b></b></option><option value=\"4\"><b  ><b  >Tour de Manan</b></b></option>                                                        </select>\r\n\r\n                                                </div><br /><hr />\r\n\r\n                                                <div className=\"col-md-12 \">\r\n                                                    <div id=\"ab\"></div>\r\n                                                </div>\r\n                                                <div className=\"col-md-6 pid\">\r\n                                                    <input type=\"text\" name=\"p_id\" id=\"p_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadNameOne(this.value);\" className=\"form-control\" placeholder=\"ID du patient\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"had\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Nom du patient\" name=\"name\" required=\"\" />\r\n                                                    </div>\r\n                                                    <input type=\"hidden\" name=\"patient_id\" required=\"\" />\r\n\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Numéro de téléphone\" name=\"phone\" required=\"\" />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <input type=\"text\" name=\"birth_date\" className=\"form-control datepicker1 birth_date hasDatepicker\" placeholder=\"Date de naissance\" required=\"\" id=\"dp1608289767518\" />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <input type=\"text\" name=\"age\" id=\"age\" className=\"form-control\" placeholder=\"Âge\" />\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-md-3\">\r\n                                                        <div className=\"md-radio\">\r\n                                                            <input type=\"radio\" id=\"lb1\" name=\"gender\" value=\"Male\" />\r\n                                                            <label for=\"lb1\"><b  ><b  > Masculin</b></b></label>\r\n\r\n                                                            <input type=\"radio\" id=\"lb2\" name=\"gender\" value=\"Female\" />\r\n\r\n                                                            <label for=\"lb2\"><b  ><b  > Femme</b></b></label>\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div> <hr />\r\n\r\n                                <div className=\"portlet-title\">\r\n                                    <div className=\"form-group \">\r\n                                        <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"CC du patient\" name=\"Problem\" /><samp></samp></div>\r\n                                        <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"Poids du patient\" name=\"Weight\" value=\"\" /></div>\r\n                                        <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"PA du patient\" name=\"Pressure\" value=\"\" /></div>\r\n                                        <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"Température\" name=\"temperature\" value=\"\" /></div>\r\n                                    </div>\r\n                                </div><hr />\r\n\r\n                                <div className=\"portlet-title\">\r\n                                    <div className=\"form-group \">\r\n                                        <div className=\"col-md-4\"><input type=\"text\" className=\"form-control\" placeholder=\"L'histoire\" name=\"history\" /></div>\r\n                                        <div className=\"col-md-4\"><input type=\"text\" className=\"form-control\" placeholder=\"O / Ex\" name=\"oex\" /></div>\r\n                                        <div className=\"col-md-4\"><input type=\"text\" className=\"form-control\" placeholder=\"PD\" name=\"pd\" value=\"\" /></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"portlet-title\">\r\n                                <div className=\"row\">\r\n\r\n\r\n                                    <div className=\"col-sm-12 col-md-12\">\r\n                                        <table className=\"table table-bordered table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <td colspan=\"6\" className=\"m_add_btn\"><b  ><b  >Médicament </b></b><a href=\"javascript:void(0);\" className=\"btn btn-primary add_button pull-right\" title=\"Ajouter le champ\"> <span className=\"glyphicon glyphicon-plus\"></span><b  ><b  >Ajouter</b></b></a></td>\r\n                                                </tr>\r\n\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className=\"field_wrapper\">\r\n                                                            <div className=\"form-group \">\r\n                                                                <div className=\"col-md-6 col-md-12\">\r\n                                                                    <input type=\"text\" className=\"form-control\" name=\"type[]\" placeholder=\"Type\" />\r\n\r\n                                                                </div>\r\n                                                                <div className=\"col-md-3\">\r\n                                                                    <input type=\"hidden\" className=\"mdcn_value\" name=\"group_id[]\" value=\"\" id=\"search-group_id\" />\r\n                                                                    <input type=\"text\" className=\"group_name form-control\" name=\"group_name[]\" id=\"search-group\" autocomplete=\"off\" placeholder=\"Nom générique\" />\r\n                                                                    <div id=\"suggesstion-box\"></div>\r\n\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"Mg / ml\" name=\"mg[]\" /></div>\r\n                                                                <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"Dose\" name=\"dose[]\" /></div>\r\n                                                                <div className=\"col-md-6\"><input type=\"text\" className=\"form-control\" placeholder=\"journée\" name=\"day[]\" /></div>\r\n                                                                <div className=\"col-md-3\"><input type=\"text\" className=\"form-control\" placeholder=\"commentaires\" name=\"comments[]\" /></div>\r\n                                                                <a href=\"javascript:void(0);\" className=\" btn btn-danger remove_button\" title=\"Supprimer le champ\"><i class=\"fas fa-minus\"></i></a>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td colspan=\"6\">\r\n                                                        <div className=\"form-group col-md-12\">\r\n                                                            <textarea placeholder=\"Commentaire général\" name=\"prescription_comment\" className=\"form-control\" rows=\"2\"></textarea>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className=\"col-sm-6 col-md-12\">\r\n                                        <table className=\"table table-bordered table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <td colspan=\"6\" className=\"t_add_btn\"><b  ><b  >Tester\r\n                                                                </b></b><a href=\"javascript:void(0);\" className=\"btn btn-primary add_button1 pull-right\" title=\"Ajouter le champ\"><span className=\"glyphicon glyphicon-plus\"></span><b  ><b  >Ajouter</b></b></a>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className=\"field_wrapper1\">\r\n                                                            <div id=\"count_test1\">\r\n                                                                <div className=\"form-group \">\r\n                                                                    <div className=\"col-md-5\">\r\n                                                                        <input type=\"hidden\" className=\"test_value\" name=\"test_name[]\" value=\"\" />\r\n                                                                        <input placeholder=\"Test Name\" className=\"test_name form-control\" name=\"te_name[]\" autocomplete=\"off\" />\r\n                                                                        <div id=\"test-box\"></div>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-md-5\">\r\n                                                                        <input placeholder=\"Description\" name=\"test_description[]\" className=\"form-control\" />\r\n                                                                    </div>\r\n                                                                    <a href=\"javascript:void(0);\" className=\" btn btn-danger remove_button\" title=\"Remove field\"><i class=\"fas fa-minus\"></i></a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className=\"col-sm-6 col-md-12\">\r\n                                        <table className=\"table table-bordered table-hover\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <td colspan=\"6\" className=\"a_btn\"><b  ><b  >Conseil\r\n                                                                </b></b><a href=\"javascript:void(0);\" className=\"btn btn-primary add_advice pull-right\" title=\"Add field\"><span className=\"glyphicon glyphicon-plus\"></span><b  ><b  >Ajouter</b></b></a>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className=\"field_wrapper2\">\r\n                                                            <div id=\"count_advice1\">\r\n                                                                <div className=\"form-group \">\r\n                                                                    <div className=\"col-md-10\">\r\n                                                                        <input type=\"hidden\" className=\"advice_value\" name=\"advice[]\" value=\"\" />\r\n                                                                        <input placeholder=\"Advice\" className=\"advice_name form-control\" name=\"adv[]\" autocomplete=\"off\" />\r\n                                                                        <div id=\"advice-box\"></div>\r\n                                                                    </div><a href=\"javascript:void(0);\" className=\" btn btn-danger remove_button\" title=\"Remove field\"><i class=\"fas fa-minus\"></i></a>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group row\">\r\n                                    <div className=\"col-sm-offset-9 col-sm-6\">\r\n                                        <button type=\"reset\" className=\"btn btn-danger\"><b  ><b  >Réinitialiser</b></b></button>\r\n                                        <button type=\"button\" onclick=\"if (!window.__cfRLUnblockHandlers) return false; demoModeOne()\" className=\"btn btn-success\"><b  ><b  >Soumettre</b></b></button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n);\r\n\r\nEditPrescription.propTypes = {};\r\n\r\nEditPrescription.defaultProps = {};\r\n\r\nexport default EditPrescription;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport medicamentHTTPService from '../../main/services/medicamentHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport prescriptionHTTPService from '../../main/services/prescriptionHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\n\r\nconst AddMedicamentItem = (props) => {\r\n\r\n    const initialState = {\r\n        medicament: \"\",\r\n        dose: \"\",\r\n        duration: \"\",\r\n    };\r\n\r\n    const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n    const [medicament, setMedicament] = useState({});\r\n    useEffect(() => {\r\n        console.log('kjbkblk')\r\n        console.log(props.updatedItem)\r\n\r\n    }, [props.updatedItem]);\r\n\r\n    const onSubmit = (data) => {\r\n        //savePrescription(data)\r\n        // PrescriptionTestService.create(data)\r\n        prescriptionHTTPService.createMedicamentPrescription(data)\r\n            .then(response => {\r\n                setMedicament(initialState)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n        setMedicament(initialState)\r\n        showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success')\r\n    }\r\n\r\n    /*  const savePrescription = (data) => {\r\n     \r\n         medicamentHTTPService.create(data)\r\n             .then(response => {\r\n                 setPrescription(initialState)\r\n             })\r\n             .catch(e => {\r\n                 console.log(e);\r\n             });\r\n     \r\n     }; */\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setMedicament({ ...medicament, [name]: value });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\">\r\n\r\n                <input value={props.updatedItem} onChange={handleInputChange} ref={register({ required: false })} id=\"appendedtext\" name=\"prescription\" class=\"form-control\" placeholder=\"placeholder\" type=\"hidden\" />\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-4 control-label\" for=\"Medicament\">Medicament</label>\r\n                    <div class=\"col-md-5\">\r\n                        <select value={medicament.medicament} onChange={handleInputChange} ref={register({ required: true })} id=\"Medicament\" name=\"medicament\" class=\"form-control\">\r\n                            <option value=\"1\">Option one</option>\r\n                            <option value=\"2\">Option two</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-4 control-label\" for=\"appendedtext\">Dose</label>\r\n                    <div class=\"col-md-5\">\r\n                        <div class=\"input-group\">\r\n                            <input value={medicament.dose} onChange={handleInputChange} ref={register({ required: true })} id=\"appendedtext\" name=\"dose\" class=\"form-control\" placeholder=\"placeholder\" type=\"text\" />\r\n                            <span class=\"input-group-addon\">Mg/ml</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-4 control-label\" for=\"appendedtext\">Duration</label>\r\n                    <div class=\"col-md-5\">\r\n                        <div class=\"input-group\">\r\n                            <input value={medicament.duration} onChange={handleInputChange} ref={register({ required: true })} id=\"appendedtext\" name=\"duration\" class=\"form-control\" placeholder=\"placeholder\" type=\"text\" />\r\n                            <span class=\"input-group-addon\">Days</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"col-md-4 control-label\" for=\"singlebutton\"></label>\r\n                    <div class=\"col-md-4\">\r\n                        <button id=\"singlebutton\" name=\"singlebutton\" class=\"btn btn-primary\">Add Item</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nAddMedicamentItem.propTypes = {};\r\n\r\nAddMedicamentItem.defaultProps = {};\r\n\r\nexport default AddMedicamentItem;\r\n","import PropTypes from 'prop-types';\r\nimport './Prescription.css';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport AddPrescription from '../AddPrescription/AddPrescription';\r\nimport ViewPrescription from './../ViewPrescription/ViewPrescription';\r\nimport EditPrescription from './../EditPrescription/EditPrescription';\r\nimport AddMedicamentItem from '../AddMedicamentItem/AddMedicamentItem';\r\nimport prescriptionHTTPService from '../../main/services/prescriptionHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport CurrentUser from '../../main/config/user';\r\nimport { Button, LinearProgress, Typography, IconButton, Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Snackbar, Alert, Drawer, Chip, Tooltip, Box, Stack, Divider } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport jsPDF from 'jspdf';\r\n\r\nconst statusColors = {\r\n  Active: 'success',\r\n  Expired: 'error',\r\n  Completed: 'info',\r\n  Pending: 'warning',\r\n};\r\n\r\nconst Prescription = () => {\r\n  const [prescriptions, setPrescriptions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Modal/dialog states\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\r\n  const [addMedicamentDialogOpen, setAddMedicamentDialogOpen] = useState(false);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  const [selectedPrescription, setSelectedPrescription] = useState(null);\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllPrescriptions();\r\n    axios.get(BASE_URL+'/patients').then(res => setPatients(res.data)).catch(() => setPatients([]));\r\n    axios.get(BASE_URL+'/doctors').then(res => setDoctors(res.data)).catch(() => setDoctors([]));\r\n    axios.get(BASE_URL+'/clinics').then(res => setClinics(res.data)).catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  const getAllPrescriptions = () => {\r\n    setLoading(true);\r\n    prescriptionHTTPService.getAllPrescription()\r\n      .then(response => {\r\n        setPrescriptions(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // Helper functions to get names by ID\r\n  const getPatientName = id => {\r\n    const p = patients.find(x => x.id === id);\r\n    return p ? (p.fullName || p.name || p.id) : id;\r\n  };\r\n  const getDoctorName = id => {\r\n    const d = doctors.find(x => x.id === id);\r\n    return d ? (d.fullName || d.name || d.id) : id;\r\n  };\r\n  const getClinicName = id => {\r\n    const c = clinics.find(x => x.id === id);\r\n    return c ? (c.name || c.clinicName || c.id) : id;\r\n  };\r\n\r\n  // Actions\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setSelectedPrescription(actionRow);\r\n    setEditDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleView = () => {\r\n    setSelectedPrescription(actionRow);\r\n    setViewDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleAddMedicament = () => {\r\n    setSelectedPrescription(actionRow);\r\n    setAddMedicamentDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\")) {\r\n      prescriptionHTTPService.removePrescription([actionRow.id])\r\n        .then(() => {\r\n          setNotification({ open: true, message: 'Prescription deleted', severity: 'success' });\r\n          getAllPrescriptions();\r\n        })\r\n        .catch(() => setNotification({ open: true, message: 'Error deleting', severity: 'error' }));\r\n    }\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleBulkDelete = () => {\r\n    if (window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\")) {\r\n      prescriptionHTTPService.removePrescription(selectedIds)\r\n        .then(() => {\r\n          setNotification({ open: true, message: 'Prescriptions deleted', severity: 'success' });\r\n          getAllPrescriptions();\r\n        })\r\n        .catch(() => setNotification({ open: true, message: 'Error deleting', severity: 'error' }));\r\n    }\r\n  };\r\n\r\n  // For medication warnings (mock logic)\r\n  const getMedicationWarnings = (prescription) => {\r\n    // Example: if patient has allergy to \"Penicillin\"\r\n    if (prescription && prescription.medications?.some(m => m.medicationName === 'Penicillin')) {\r\n      return \"Warning: Patient is allergic to Penicillin!\";\r\n    }\r\n    // Add more logic for drug interactions\r\n    return null;\r\n  };\r\n\r\n  // Bulk status update\r\n  const handleBulkStatusUpdate = (status) => {\r\n    // Call your backend here\r\n    setNotification({ open: true, message: `Marked as ${status}`, severity: 'success' });\r\n    // Optionally refresh data\r\n  };\r\n\r\n  // Print/download PDF (mock)\r\n  const handlePrint = () => window.print();\r\n  const handleDownloadPDF = () => setNotification({ open: true, message: 'PDF downloaded (mock)', severity: 'info' });\r\n\r\n  // PDF generation\r\n  const generatePrescriptionPDF = (prescription) => {\r\n    const doc = new jsPDF({\r\n      orientation: 'portrait',\r\n      unit: 'pt',\r\n      format: 'A4'\r\n    });\r\n\r\n    // Header\r\n    doc.setFillColor('#1976d2');\r\n    doc.rect(0, 0, 595, 70, 'F');\r\n    doc.setFontSize(24);\r\n    doc.setTextColor('#fff');\r\n    doc.setFont('times', 'bold');\r\n    doc.text('Dentic Clinic Prescription', 45, 45);\r\n\r\n    // Title\r\n    doc.setFontSize(18);\r\n    doc.setTextColor('#1976d2');\r\n    doc.setFont('times', 'bold');\r\n    doc.text('Medical Prescription', 200, 100);\r\n\r\n    // Patient/Doctor/Clinic Info\r\n    doc.setFontSize(12);\r\n    doc.setTextColor('#222');\r\n    doc.setFont('times', 'normal');\r\n    let y = 130;\r\n    const left = 45;\r\n    doc.text(`Patient: `, left, y);\r\n    doc.setFont('times', 'bold');\r\n    doc.text(getPatientName(prescription.patientId), left + 60, y);\r\n    doc.setFont('times', 'normal');\r\n    y += 20;\r\n    doc.text(`Doctor: `, left, y);\r\n    doc.setFont('times', 'bold');\r\n    doc.text(getDoctorName(prescription.doctorId), left + 60, y);\r\n    doc.setFont('times', 'normal');\r\n    y += 20;\r\n    doc.text(`Clinic: `, left, y);\r\n    doc.setFont('times', 'bold');\r\n    doc.text(getClinicName(prescription.clinicId), left + 60, y);\r\n    doc.setFont('times', 'normal');\r\n    y += 20;\r\n    doc.text(`Prescribed On: `, left, y);\r\n    doc.setFont('times', 'bold');\r\n    doc.text(prescription.prescriptionDate ? new Date(prescription.prescriptionDate).toLocaleDateString() : '-', left + 90, y);\r\n    doc.setFont('times', 'normal');\r\n    y += 20;\r\n    doc.text(`Valid Until: `, left, y);\r\n    doc.setFont('times', 'bold');\r\n    doc.text(prescription.validUntil ? new Date(prescription.validUntil).toLocaleDateString() : '-', left + 80, y);\r\n\r\n    // Medications\r\n    y += 35;\r\n    doc.setFont('times', 'bold');\r\n    doc.setFontSize(14);\r\n    doc.text('Medications:', left, y);\r\n    doc.setFont('times', 'normal');\r\n    doc.setFontSize(12);\r\n    y += 18;\r\n    if (prescription.medications && prescription.medications.length > 0) {\r\n      prescription.medications.forEach((m, idx) => {\r\n        doc.text(\r\n          `${idx + 1}. ${m.medicationName} (${m.dosage}, ${m.frequency})`,\r\n          left + 10,\r\n          y\r\n        );\r\n        y += 16;\r\n      });\r\n    } else {\r\n      doc.text('No medications listed.', left + 10, y);\r\n      y += 16;\r\n    }\r\n\r\n    // Notes\r\n    if (prescription.notes) {\r\n      y += 18;\r\n      doc.setFont('times', 'bold');\r\n      doc.text('Notes:', left, y);\r\n      doc.setFont('times', 'normal');\r\n      const notesLines = doc.splitTextToSize(prescription.notes, 480);\r\n      doc.text(notesLines, left + 50, y);\r\n      y += notesLines.length * 14;\r\n    }\r\n\r\n    // Status\r\n    y += 18;\r\n    doc.setFont('times', 'bold');\r\n    doc.text('Status:', left, y);\r\n    doc.setFont('times', 'normal');\r\n    doc.text(prescription.status, left + 50, y);\r\n\r\n    // Signature area\r\n    y += 60;\r\n    doc.setDrawColor('#1976d2');\r\n    doc.line(400, y, 555, y);\r\n    doc.setFontSize(14);\r\n    doc.setTextColor('#1976d2');\r\n    doc.setFont('times', 'italic');\r\n    doc.text(getDoctorName(prescription.doctorId), 420, y + 18);\r\n    doc.setFont('times', 'normal');\r\n    doc.setFontSize(11);\r\n    doc.setTextColor('#222');\r\n    doc.text('Doctor Signature', 420, y + 34);\r\n\r\n    // Footer\r\n    doc.setFontSize(10);\r\n    doc.setTextColor('#888');\r\n    doc.text('This prescription was generated electronically by Dentic Clinic.', left, 800);\r\n\r\n    doc.save(`prescription_${prescription.id || ''}.pdf`);\r\n  };\r\n\r\n  // Update columns for status chip and view action\r\n  const columns = [\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 200,\r\n      valueGetter: params => getPatientName(params.row.patientId), // Shows patient name\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor',\r\n      width: 200,\r\n      valueGetter: params => getDoctorName(params.row.doctorId), // Shows doctor name\r\n    },\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: 200,\r\n      valueGetter: params => getClinicName(params.row.clinicId), // Shows clinic name\r\n    },\r\n    {\r\n      field: 'medications',\r\n      headerName: 'Medications',\r\n      width: 220,\r\n      renderCell: (params) =>\r\n        params.value && params.value.length > 0\r\n          ? params.value.map(m => `${m.medicationName} (${m.dosage}, ${m.frequency})`).join(', ')\r\n          : '-'\r\n    },\r\n    {\r\n      field: 'prescriptionDate',\r\n      headerName: 'Prescribed On',\r\n      width: 150,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleDateString() : ''\r\n    },\r\n    {\r\n      field: 'validUntil',\r\n      headerName: 'Valid Until',\r\n      width: 150,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleDateString() : ''\r\n    },\r\n    { field: 'refillAllowed', headerName: 'Refill Allowed', width: 120 },\r\n    { field: 'refillCount', headerName: 'Refill Count', width: 110 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 110,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={statusColors[params.value] || 'default'}\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 90,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"action-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleActionClick(event, params.row)}\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <Tooltip title=\"View Details\">\r\n            <IconButton size=\"small\" onClick={() => { setSelectedPrescription(params.row); setDrawerOpen(true); }}>\r\n              <i className=\"fas fa-eye\"></i>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </>\r\n      ),\r\n    }\r\n  ];\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i> Prescriptions\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => setAddDialogOpen(true)}\r\n          sx={{ mb: 2 }}\r\n        >\r\n          <i className=\"fas fa-plus\"></i> Create\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={getAllPrescriptions}\r\n          sx={{ mb: 2, ml: 2 }}\r\n        >\r\n          <i className=\"fas fa-refresh\"></i> Reload\r\n        </Button>\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={prescriptions}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection\r\n              components={{ Toolbar: GridToolbar }}\r\n              onSelectionModelChange={ids => setSelectedIds(ids)}\r\n            />\r\n            <Menu\r\n              id=\"action-menu\"\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleView}>View</MenuItem>\r\n              <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  generatePrescriptionPDF(actionRow);\r\n                  handleActionClose();\r\n                }}\r\n              >\r\n                Generate PDF\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Prescription Dialog */}\r\n        <Dialog open={addDialogOpen} onClose={() => setAddDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Add Prescription</DialogTitle>\r\n          <DialogContent>\r\n            <AddPrescription closeModal={() => { setAddDialogOpen(false); getAllPrescriptions(); }} />\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* Edit Prescription Dialog */}\r\n        <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Edit Prescription</DialogTitle>\r\n          <DialogContent>\r\n            <EditPrescription updatedItem={selectedPrescription} closeModal={() => { setEditDialogOpen(false); getAllPrescriptions(); }} />\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* View Prescription Dialog */}\r\n        <Dialog open={viewDialogOpen} onClose={() => setViewDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            <span style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n              <i className=\"fas fa-prescription-bottle-alt\" style={{ color: '#1976d2', fontSize: 22 }} />\r\n              Prescription Details\r\n            </span>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {selectedPrescription ? (\r\n              <div>\r\n                <Box\r\n                  sx={{\r\n                    bgcolor: '#fafdff',\r\n                    borderRadius: 2,\r\n                    boxShadow: 1,\r\n                    p: { xs: 2, sm: 3 },\r\n                    minWidth: 320,\r\n                    minHeight: 200,\r\n                    mb: 2\r\n                  }}\r\n                >\r\n                  <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                    <Chip\r\n                      label={`Patient: ${getPatientName(selectedPrescription.patientId)}`}\r\n                      color=\"primary\"\r\n                      icon={<i className=\"fas fa-user\"></i>}\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Doctor: ${getDoctorName(selectedPrescription.doctorId)}`}\r\n                      color=\"info\"\r\n                      icon={<i className=\"fas fa-user-md\"></i>}\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Clinic: ${getClinicName(selectedPrescription.clinicId)}`}\r\n                      color=\"success\"\r\n                      icon={<i className=\"fas fa-hospital\"></i>}\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Status: ${selectedPrescription.status}`}\r\n                      color={statusColors[selectedPrescription.status] || 'default'}\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                  </Stack>\r\n                  <Divider sx={{ mb: 2 }} />\r\n                  <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                    <Chip\r\n                      label={`Prescribed On: ${selectedPrescription.prescriptionDate ? new Date(selectedPrescription.prescriptionDate).toLocaleDateString() : '-'}`}\r\n                      color=\"default\"\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Valid Until: ${selectedPrescription.validUntil ? new Date(selectedPrescription.validUntil).toLocaleDateString() : '-'}`}\r\n                      color=\"warning\"\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Refill Allowed: ${selectedPrescription.refillAllowed ? 'Yes' : 'No'}`}\r\n                      color={selectedPrescription.refillAllowed ? 'success' : 'default'}\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                    <Chip\r\n                      label={`Refill Count: ${selectedPrescription.refillCount ?? '-'}`}\r\n                      color=\"info\"\r\n                      sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    />\r\n                  </Stack>\r\n                  <Divider sx={{ mb: 2 }} />\r\n                  <Typography variant=\"subtitle1\" fontWeight={600} sx={{ mb: 1 }}>\r\n                    Medications:\r\n                  </Typography>\r\n                  <Stack spacing={1} sx={{ mb: 2 }}>\r\n                    {selectedPrescription.medications?.length > 0 ? (\r\n                      selectedPrescription.medications.map((m, idx) => (\r\n                        <Chip\r\n                          key={idx}\r\n                          label={`${m.medicationName} (${m.dosage}, ${m.frequency})`}\r\n                          color=\"primary\"\r\n                          variant=\"outlined\"\r\n                          sx={{ fontWeight: 600, fontSize: 14, mb: 0.5 }}\r\n                        />\r\n                      ))\r\n                    ) : (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">No medications listed.</Typography>\r\n                    )}\r\n                  </Stack>\r\n                  <Divider sx={{ mb: 2 }} />\r\n                  <Typography variant=\"subtitle2\" fontWeight={600}>Notes:</Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 2 }}>{selectedPrescription.notes || '-'}</Typography>\r\n                  {/* Medication Warnings */}\r\n                  {getMedicationWarnings(selectedPrescription) && (\r\n                    <Alert severity=\"warning\" sx={{ mt: 2 }}>\r\n                      {getMedicationWarnings(selectedPrescription)}\r\n                    </Alert>\r\n                  )}\r\n                </Box>\r\n                <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n                  <Button variant=\"outlined\" startIcon={<PrintIcon />} onClick={handlePrint}>Print</Button>\r\n                  <Button variant=\"outlined\" startIcon={<DownloadIcon />} onClick={() => generatePrescriptionPDF(selectedPrescription)}>Download PDF</Button>\r\n                </Stack>\r\n              </div>\r\n            ) : (\r\n              <Typography>No prescription selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewDialogOpen(false)} color=\"secondary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Add Medicament Item Dialog */}\r\n        <Dialog open={addMedicamentDialogOpen} onClose={() => setAddMedicamentDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Add Medicament Item</DialogTitle>\r\n          <DialogContent>\r\n            <AddMedicamentItem updatedItem={selectedPrescription} />\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* Detailed View Drawer */}\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={drawerOpen}\r\n          onClose={() => setDrawerOpen(false)}\r\n          PaperProps={{ sx: { width: { xs: 320, sm: 480 } } }}\r\n        >\r\n          <div style={{ padding: 24, maxWidth: 480 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Prescription Details\r\n            </Typography>\r\n            {selectedPrescription && (\r\n              <>\r\n                <Typography variant=\"subtitle2\">Patient: {getPatientName(selectedPrescription.patientId)}</Typography>\r\n                <Typography variant=\"subtitle2\">Doctor: {getDoctorName(selectedPrescription.doctorId)}</Typography>\r\n                <Typography variant=\"subtitle2\">Clinic: {getClinicName(selectedPrescription.clinicId)}</Typography>\r\n                <Typography variant=\"subtitle2\">Prescribed On: {selectedPrescription.prescriptionDate ? new Date(selectedPrescription.prescriptionDate).toLocaleDateString() : '-'}</Typography>\r\n                <Typography variant=\"subtitle2\">Valid Until: {selectedPrescription.validUntil ? new Date(selectedPrescription.validUntil).toLocaleDateString() : '-'}</Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Medications:</Typography>\r\n                <ul>\r\n                  {selectedPrescription.medications?.map((m, idx) => (\r\n                    <li key={idx}>\r\n                      <strong>{m.medicationName}</strong> ({m.dosage}, {m.frequency})\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                <Typography variant=\"subtitle2\">Notes:</Typography>\r\n                <Typography variant=\"body2\">{selectedPrescription.notes || '-'}</Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Status: <Chip label={selectedPrescription.status} color={statusColors[selectedPrescription.status] || 'default'} size=\"small\" /></Typography>\r\n                {/* Medication Warnings */}\r\n                {getMedicationWarnings(selectedPrescription) && (\r\n                  <Alert severity=\"warning\" sx={{ mt: 2 }}>\r\n                    {getMedicationWarnings(selectedPrescription)}\r\n                  </Alert>\r\n                )}\r\n                {/* Print/Download PDF */}\r\n                <div style={{ marginTop: 24, display: 'flex', gap: 8 }}>\r\n                  <Button variant=\"outlined\" startIcon={<PrintIcon />} onClick={handlePrint}>Print</Button>\r\n                  <Button variant=\"outlined\" startIcon={<DownloadIcon />} onClick={() => generatePrescriptionPDF(selectedPrescription)}>Download PDF</Button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Drawer>\r\n\r\n        {/* Snackbar Notifications */}\r\n        <Snackbar\r\n          open={notification.open}\r\n          autoHideDuration={3000}\r\n          onClose={() => setNotification({ ...notification, open: false })}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n        >\r\n          <Alert onClose={() => setNotification({ ...notification, open: false })} severity={notification.severity} sx={{ width: '100%' }}>\r\n            {notification.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPrescription.propTypes = {};\r\nPrescription.defaultProps = {};\r\nexport default Prescription;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllPayment = () => {\r\n    return http.get(`${BASE_URL}/payments`)\r\n}\r\nconst createPayment = data => {\r\n    return http.post(`${BASE_URL}/payments`, data);\r\n};\r\n\r\nconst editPayment = (id, data) => {\r\n    return http.put(`${BASE_URL}/payments/${id}`, data);\r\n};\r\n\r\nconst removePayment = id => {\r\n    return http.delete(`${BASE_URL}/payments/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllPayment,\r\n    createPayment,\r\n    editPayment,\r\n    removePayment\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport paymentHTTPService from '../../main/services/paymentHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst paymentMethods = ['Cash', 'Credit Card', 'Bank Transfer', 'Insurance', 'Other'];\r\nconst paymentStatuses = ['Completed', 'Pending', 'Failed', 'Refunded'];\r\nconst currencies = ['USD', 'EUR', 'GBP', 'DZD', 'Other'];\r\n\r\nconst AddPayment = (props) => {\r\n  const initialState = {\r\n    patientId: '',\r\n    appointmentId: '',\r\n    invoiceId: '',\r\n    clinicId: '',\r\n    amount: '',\r\n    currency: 'USD',\r\n    paymentMethod: '',\r\n    transactionId: '',\r\n    insuranceClaimId: '',\r\n    paymentStatus: 'Completed',\r\n    paymentDate: '',\r\n    notes: ''\r\n  };\r\n\r\n  const [payment, setPayment] = useState(initialState);\r\n  const [patients, setPatients] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getAllPatients();\r\n  }, []);\r\n\r\n  const getAllPatients = () => {\r\n    patientHTTPService.getAllPatients()\r\n      .then(response => setPatients(response.data))\r\n      .catch(() => showMessage('Error', CurrentUser.ERR_MSG, 'warning'));\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setPayment({ ...payment, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...payment,\r\n      id: payment.id || Math.random().toString(36).substr(2, 9),\r\n      amount: Number(payment.amount),\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    paymentHTTPService.createPayment(data)\r\n      .then(() => {\r\n        setPayment(initialState);\r\n        if (props.closeModal) props.closeModal(data);\r\n        showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success');\r\n      })\r\n      .catch(() => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2, maxWidth: 500 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          select\r\n          label=\"Patient\"\r\n          name=\"patientId\"\r\n          value={payment.patientId}\r\n          onChange={handleInputChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {patients.map((p) => (\r\n            <MenuItem key={p.id} value={p.id}>\r\n              {p.fullName || p.namepatient || p.id}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Appointment ID\"\r\n          name=\"appointmentId\"\r\n          value={payment.appointmentId}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Invoice ID\"\r\n          name=\"invoiceId\"\r\n          value={payment.invoiceId}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Clinic ID\"\r\n          name=\"clinicId\"\r\n          value={payment.clinicId}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Amount\"\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          value={payment.amount}\r\n          onChange={handleInputChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Currency\"\r\n          name=\"currency\"\r\n          value={payment.currency}\r\n          onChange={handleInputChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {currencies.map(cur => (\r\n            <MenuItem key={cur} value={cur}>{cur}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Payment Method\"\r\n          name=\"paymentMethod\"\r\n          value={payment.paymentMethod}\r\n          onChange={handleInputChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {paymentMethods.map(method => (\r\n            <MenuItem key={method} value={method}>{method}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Transaction ID\"\r\n          name=\"transactionId\"\r\n          value={payment.transactionId}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Insurance Claim ID\"\r\n          name=\"insuranceClaimId\"\r\n          value={payment.insuranceClaimId}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Payment Status\"\r\n          name=\"paymentStatus\"\r\n          value={payment.paymentStatus}\r\n          onChange={handleInputChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {paymentStatuses.map(status => (\r\n            <MenuItem key={status} value={status}>{status}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Payment Date\"\r\n          name=\"paymentDate\"\r\n          type=\"datetime-local\"\r\n          value={payment.paymentDate}\r\n          onChange={handleInputChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Notes\"\r\n          name=\"notes\"\r\n          value={payment.notes}\r\n          onChange={handleInputChange}\r\n          multiline\r\n          rows={2}\r\n          fullWidth\r\n        />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={() => props.closeModal && props.closeModal()} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddPayment;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditPayment.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport paymentHTTPService from '../../main/services/paymentHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditPayment = (props) => {\r\n\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [payment, setPayment] = useState(props.payment);\r\n\r\n  useEffect(() => {\r\n    setPayment(props.payment)\r\n  }, [props.payment]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    paymentHTTPService.editPayment(props.payment.id, data)\r\n    props.closeModal(data)\r\n    showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setPayment({ ...payment, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditPayment\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Invoice:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={payment?.invoiceNumber} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"invoiceNumber\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" >\r\n                <option value=\"1\">INV001</option>\r\n              </select>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Payment Date:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={payment?.paymentDate} ref={register({ required: true })}\r\n                type=\"date\" name=\"paymentDate\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Payment Mode</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={payment?.paymenMode} ref={register({ required: true })}\r\n                type=\"text\" name=\"paymenMode\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n                <option>Cash</option>\r\n                <option>Credit Card</option>\r\n              </select>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Amount received:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={payment?.amountReceived} ref={register({ required: true })}\r\n                name=\"amountReceived\" class=\"form-control\" rows=\"3\" type=\"text\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Invoice Balance Due :</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={payment?.invoiceBlanceDue} ref={register({ required: true })}\r\n                name=\"invoiceBlanceDue\" class=\"form-control\" rows=\"3\" type=\"date\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form >\r\n    </div>\r\n  )\r\n};\r\n\r\nEditPayment.propTypes = {};\r\n\r\nEditPayment.defaultProps = {};\r\n\r\nexport default EditPayment;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Payment.css';\r\nimport { LoadJSFiles } from './../init';\r\nimport useForceUpdate from 'use-force-update';\r\nimport paymentHTTPService from '../../main/services/paymentHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport AddPayment from '../AddPayment/AddPayment';\r\nimport EditPayment from '../EditPayment/EditPayment';\r\nimport { Button, LinearProgress, Typography, Menu, MenuItem, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Chip, Box, Divider, Stack } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport CurrentUser from '../../main/config/user';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst deleteTask = () => {\r\n  return window.confirm(\"Êtes-vous sûr de vouloir supprimer cette tache ?\")\r\n}\r\n\r\nconst Payment = () => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [patients, setPatients] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [viewItem, setViewItem] = useState(null);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllPayments()\r\n    // Fetch patients\r\n    fetch(`${BASE_URL}/patients`)\r\n      .then(res => res.json())\r\n      .then(data => setPatients(data));\r\n    // Fetch clinics\r\n    fetch(`${BASE_URL}/clinics`)\r\n      .then(res => res.json())\r\n      .then(data => setClinics(data));\r\n  }, []);\r\n\r\n  const getAllPayments = () => {\r\n    setLoading(true);\r\n    paymentHTTPService.getAllPayment()\r\n      .then(response => {\r\n        setPayments(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllPayments()\r\n    // forceUpdate()\r\n  }\r\n\r\n  const removePaymentAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success')\r\n      paymentHTTPService.removePayment(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updatePaymentAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  // Helper functions to get names\r\n  const getPatientName = (id) => {\r\n    const pat = patients.find(p => p.id === id);\r\n    return pat ? pat.fullName : 'Patient not found';\r\n  };\r\n  const getClinicName = (id) => {\r\n    const clinic = clinics.find(c => c.id === id);\r\n    return clinic ? clinic.name : 'Clinic not found';\r\n  };\r\n\r\n  // Actions menu for each row\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton onClick={(event) => { setAnchorEl(event.currentTarget); setSelectedRow(params.row); }}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\r\n        <MenuItem onClick={() => {\r\n          setViewItem(params.row);\r\n          setViewOpen(true);\r\n          setAnchorEl(null);\r\n        }}>View</MenuItem>\r\n        <MenuItem onClick={() => { updatePaymentAction({}, params.row); setAnchorEl(null); }}>Edit</MenuItem>\r\n        <MenuItem onClick={() => { removePaymentAction({}, [params.row.id]); setAnchorEl(null); }}>Delete</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  // Columns for Payment object (do not show id, createdAt, updatedAt)\r\n  const columns = [\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Chip label={getPatientName(params.value)} color=\"primary\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Chip label={getClinicName(params.value)} color=\"info\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"success\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'currency',\r\n      headerName: 'Currency',\r\n      width: 100,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"default\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentMethod',\r\n      headerName: 'Payment Method',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"info\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentStatus',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Paid'\r\n              ? 'success'\r\n              : params.value === 'Pending'\r\n                ? 'warning'\r\n                : 'default'\r\n          }\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentDate',\r\n      headerName: 'Payment Date',\r\n      width: 160,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={new Date(params.value).toLocaleString()}\r\n          color=\"default\"\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      renderCell: renderActionsMenu\r\n    }\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = payments.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n\r\n\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Payments\r\n        </Typography>\r\n        <br />\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          type=\"button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#addPayment\"\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          onClick={e => updatePaymentAction(e, updatedItem)}\r\n          type=\"button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#editPayment\"\r\n          startIcon={<i className=\"fas fa-edit\"></i>}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          onClick={e => removePaymentAction(e, updatedItemIds)}\r\n          type=\"button\"\r\n          startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n        >\r\n          Remove\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, fontWeight: 600 }}\r\n          type=\"button\"\r\n          onClick={() => getAllPayments()}\r\n          startIcon={<i className=\"fas fa-refresh\"></i>}\r\n        >\r\n          Reload\r\n        </Button>\r\n        <br /><br />\r\n\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={payments}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[5, 10, 15, 20]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n            autoHeight\r\n          /></div>}\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddPayment closeModal={closeModalAdd} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" ref={closeButtonAdd} data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <EditPayment closeModal={closeModalEdit} payment={updatedItem} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" ref={closeButtonEdit} class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Add this MUI Dialog for viewing payment details */}\r\n        <Dialog open={viewOpen} onClose={() => setViewOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>View Payment</DialogTitle>\r\n          <DialogContent>\r\n            {viewItem ? (\r\n              <Box sx={{\r\n                bgcolor: '#fafdff',\r\n                borderRadius: 2,\r\n                boxShadow: 1,\r\n                p: { xs: 2, sm: 3 },\r\n                minWidth: 320,\r\n                minHeight: 200,\r\n                mb: 2\r\n              }}>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip label={getPatientName(viewItem.patientId)} color=\"primary\" icon={<i className=\"fas fa-user\"></i>} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={getClinicName(viewItem.clinicId)} color=\"info\" icon={<i className=\"fas fa-hospital\"></i>} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Amount: ${viewItem.amount} ${viewItem.currency}`} color=\"success\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={viewItem.paymentMethod} color=\"info\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={viewItem.paymentStatus} color={viewItem.paymentStatus === 'Paid' ? 'success' : viewItem.paymentStatus === 'Pending' ? 'warning' : 'default'} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                  <b>Appointment ID:</b> {viewItem.appointmentId}<br />\r\n                  <b>Invoice ID:</b> {viewItem.invoiceId}<br />\r\n                  <b>Transaction ID:</b> {viewItem.transactionId}<br />\r\n                  <b>Insurance Claim:</b> {viewItem.insuranceClaimId}<br />\r\n                  <b>Payment Date:</b> {viewItem.paymentDate ? new Date(viewItem.paymentDate).toLocaleString() : '-'}<br />\r\n                  <b>Notes:</b> {viewItem.notes}\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No payment selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"primary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nPayment.propTypes = {};\r\n\r\nPayment.defaultProps = {};\r\n\r\nexport default Payment;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box, Button, TextField, Typography, IconButton, Stack, Paper, Divider, Grid, Card, CardContent,\r\n  MenuItem\r\n} from '@mui/material';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport MedicalServicesIcon from '@mui/icons-material/MedicalServices';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst bloodTypes = ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'];\r\n\r\nconst AddPatient = ({ closeModal }) => {\r\n  const initialState = {\r\n    fullName: '',\r\n    medicalRecordNumber: '', // <-- Add this field\r\n    insuranceId: '',\r\n    bloodType: '',\r\n    allergies: [''],\r\n    medicalHistory: [{ notes: '', condition: '', diagnosedAt: '' }],\r\n    currentMedications: [{ name: '', dosage: '', frequency: '', prescribedBy: '' }],\r\n    emergencyContact: { name: '', phone: '', relationship: '' },\r\n    nationalId: '' // <-- new field\r\n  };\r\n\r\n  const [patient, setPatient] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Handlers for fields\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setPatient({ ...patient, [name]: value });\r\n  };\r\n\r\n  const handleAllergyChange = (idx, value) => {\r\n    const updated = [...patient.allergies];\r\n    updated[idx] = value;\r\n    setPatient({ ...patient, allergies: updated });\r\n  };\r\n\r\n  const handleMedicalHistoryChange = (idx, field, value) => {\r\n    const updated = [...patient.medicalHistory];\r\n    updated[idx][field] = value;\r\n    setPatient({ ...patient, medicalHistory: updated });\r\n  };\r\n\r\n  const handleMedicationChange = (idx, field, value) => {\r\n    const updated = [...patient.currentMedications];\r\n    updated[idx][field] = value;\r\n    setPatient({ ...patient, currentMedications: updated });\r\n  };\r\n\r\n  const handleEmergencyContactChange = (field, value) => {\r\n    setPatient({ ...patient, emergencyContact: { ...patient.emergencyContact, [field]: value } });\r\n  };\r\n\r\n  // Add/Remove for dynamic fields\r\n  const addAllergy = () => setPatient({ ...patient, allergies: [...patient.allergies, ''] });\r\n  const removeAllergy = idx => setPatient({ ...patient, allergies: patient.allergies.filter((_, i) => i !== idx) });\r\n\r\n  const addMedicalHistory = () => setPatient({ ...patient, medicalHistory: [...patient.medicalHistory, { notes: '', condition: '', diagnosedAt: '' }] });\r\n  const removeMedicalHistory = idx => setPatient({ ...patient, medicalHistory: patient.medicalHistory.filter((_, i) => i !== idx) });\r\n\r\n  const addMedication = () => setPatient({ ...patient, currentMedications: [...patient.currentMedications, { name: '', dosage: '', frequency: '', prescribedBy: '' }] });\r\n  const removeMedication = idx => setPatient({ ...patient, currentMedications: patient.currentMedications.filter((_, i) => i !== idx) });\r\n\r\n  // Submit handler\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    // Validation for required fields (remove medicalRecordNumber)\r\n    if (\r\n      !patient.fullName ||\r\n      !patient.insuranceId ||\r\n      !patient.bloodType\r\n    ) {\r\n      showMessage('Error', 'Please fill all required fields.', 'warning');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Do not include medicalRecordNumber in patientData\r\n    const patientData = {\r\n      fullName: patient.fullName,\r\n      medicalRecordNumber: patient.medicalRecordNumber, // <-- Add this field\r\n      insuranceId: patient.insuranceId,\r\n      bloodType: patient.bloodType,\r\n      nationalId: patient.nationalId,\r\n      allergies: patient.allergies.filter(a => a.trim() !== ''),\r\n      medicalHistory: patient.medicalHistory.map(mh => ({\r\n        condition: mh.condition,\r\n        diagnosedAt: mh.diagnosedAt,\r\n        notes: mh.notes\r\n      })),\r\n      currentMedications: patient.currentMedications.map(med => ({\r\n        name: med.name,\r\n        dosage: med.dosage,\r\n        frequency: med.frequency,\r\n        prescribedBy: med.prescribedBy\r\n      })),\r\n      emergencyContact: {\r\n        name: patient.emergencyContact.name,\r\n        relationship: patient.emergencyContact.relationship,\r\n        phone: patient.emergencyContact.phone\r\n      }\r\n    };\r\n\r\n    console.log('Sent object:', patientData);\r\n\r\n    try {\r\n      await patientHTTPService.createPatient(patientData);\r\n      showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success');\r\n      setPatient(initialState);\r\n      if (closeModal) closeModal(patientData);\r\n    } catch (e) {\r\n      showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={onSubmit} sx={{ p: 3, maxWidth: 700, mx: 'auto', bgcolor: '#f8f9fa', borderRadius: 3, boxShadow: 2 }}>\r\n      <Typography variant=\"h5\" gutterBottom sx={{ fontWeight: 700, mb: 2, textAlign: 'center', color: '#1976d2' }}>\r\n        <PersonIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n        Add New Patient\r\n      </Typography>\r\n      <Divider sx={{ mb: 3 }} />\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Card variant=\"outlined\" sx={{ mb: 2 }}>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n                <MedicalServicesIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Basic Information\r\n              </Typography>\r\n              <Stack spacing={2}>\r\n                <TextField label=\"Full Name\" name=\"fullName\" value={patient.fullName} onChange={handleInputChange} required fullWidth />\r\n                <TextField label=\"Insurance ID\" name=\"insuranceId\" value={patient.insuranceId} onChange={handleInputChange} required fullWidth />\r\n                <TextField select label=\"Blood Type\" name=\"bloodType\" value={patient.bloodType} onChange={handleInputChange} required fullWidth>\r\n                  {bloodTypes.map(bt => <MenuItem key={bt} value={bt}>{bt}</MenuItem>)}\r\n                </TextField>\r\n                <TextField\r\n                  label=\"National ID\"\r\n                  name=\"nationalId\"\r\n                  value={patient.nationalId}\r\n                  onChange={handleInputChange}\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  label=\"Medical Record Number\"\r\n                  name=\"medicalRecordNumber\"\r\n                  value={patient.medicalRecordNumber}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  fullWidth\r\n                />\r\n              </Stack>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card variant=\"outlined\" sx={{ mb: 2 }}>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n                <LocalHospitalIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Allergies\r\n              </Typography>\r\n              {patient.allergies.map((allergy, idx) => (\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx} sx={{ mb: 1 }}>\r\n                  <TextField\r\n                    label={`Allergy ${idx + 1}`}\r\n                    value={allergy}\r\n                    onChange={e => handleAllergyChange(idx, e.target.value)}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                  />\r\n                  <IconButton\r\n                    color=\"error\"\r\n                    onClick={() => removeAllergy(idx)}\r\n                    disabled={patient.allergies.length === 1}\r\n                    aria-label=\"Remove allergy\"\r\n                  >\r\n                    <RemoveCircleOutlineIcon />\r\n                  </IconButton>\r\n                  {idx === patient.allergies.length - 1 && (\r\n                    <IconButton color=\"primary\" onClick={addAllergy} aria-label=\"Add allergy\">\r\n                      <AddCircleOutlineIcon />\r\n                    </IconButton>\r\n                  )}\r\n                </Stack>\r\n              ))}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Card variant=\"outlined\" sx={{ mb: 2 }}>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n                <MedicalServicesIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Medical History\r\n              </Typography>\r\n              {patient.medicalHistory.map((mh, idx) => (\r\n                <Paper key={idx} variant=\"outlined\" sx={{ p: 2, mb: 1, bgcolor: '#f5f5f5' }}>\r\n                  <Stack spacing={1}>\r\n                    <TextField\r\n                      label=\"Condition\"\r\n                      value={mh.condition}\r\n                      onChange={e => handleMedicalHistoryChange(idx, 'condition', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      label=\"Diagnosed At\"\r\n                      type=\"date\"\r\n                      value={mh.diagnosedAt}\r\n                      onChange={e => handleMedicalHistoryChange(idx, 'diagnosedAt', e.target.value)}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      label=\"Notes\"\r\n                      value={mh.notes}\r\n                      onChange={e => handleMedicalHistoryChange(idx, 'notes', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <IconButton\r\n                        color=\"error\"\r\n                        onClick={() => removeMedicalHistory(idx)}\r\n                        disabled={patient.medicalHistory.length === 1}\r\n                        aria-label=\"Remove medical history\"\r\n                      >\r\n                        <RemoveCircleOutlineIcon />\r\n                      </IconButton>\r\n                      {idx === patient.medicalHistory.length - 1 && (\r\n                        <IconButton color=\"primary\" onClick={addMedicalHistory} aria-label=\"Add medical history\">\r\n                          <AddCircleOutlineIcon />\r\n                        </IconButton>\r\n                      )}\r\n                    </Stack>\r\n                  </Stack>\r\n                </Paper>\r\n              ))}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card variant=\"outlined\" sx={{ mb: 2 }}>\r\n            <CardContent>\r\n              <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n                <MedicalServicesIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Current Medications\r\n              </Typography>\r\n              {patient.currentMedications.map((med, idx) => (\r\n                <Paper key={idx} variant=\"outlined\" sx={{ p: 2, mb: 1, bgcolor: '#f5f5f5' }}>\r\n                  <Stack spacing={1}>\r\n                    <TextField\r\n                      label=\"Name\"\r\n                      value={med.name}\r\n                      onChange={e => handleMedicationChange(idx, 'name', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      label=\"Dosage\"\r\n                      value={med.dosage}\r\n                      onChange={e => handleMedicationChange(idx, 'dosage', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      label=\"Frequency\"\r\n                      value={med.frequency}\r\n                      onChange={e => handleMedicationChange(idx, 'frequency', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                    />\r\n                    <TextField\r\n                      label=\"Prescribed By (Doctor ID)\"\r\n                      value={med.prescribedBy}\r\n                      onChange={e => handleMedicationChange(idx, 'prescribedBy', e.target.value)}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required\r\n                    />\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <IconButton\r\n                        color=\"error\"\r\n                        onClick={() => removeMedication(idx)}\r\n                        disabled={patient.currentMedications.length === 1}\r\n                        aria-label=\"Remove medication\"\r\n                      >\r\n                        <RemoveCircleOutlineIcon />\r\n                      </IconButton>\r\n                      {idx === patient.currentMedications.length - 1 && (\r\n                        <IconButton color=\"primary\" onClick={addMedication} aria-label=\"Add medication\">\r\n                          <AddCircleOutlineIcon />\r\n                        </IconButton>\r\n                      )}\r\n                    </Stack>\r\n                  </Stack>\r\n                </Paper>\r\n              ))}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Card variant=\"outlined\" sx={{ mt: 3 }}>\r\n        <CardContent>\r\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: 600, mb: 2 }}>\r\n            <ContactPhoneIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n            Emergency Contact\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                label=\"Name\"\r\n                value={patient.emergencyContact.name}\r\n                onChange={e => handleEmergencyContactChange('name', e.target.value)}\r\n                fullWidth\r\n                size=\"small\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                label=\"Phone\"\r\n                value={patient.emergencyContact.phone}\r\n                onChange={e => handleEmergencyContactChange('phone', e.target.value)}\r\n                fullWidth\r\n                size=\"small\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextField\r\n                label=\"Relationship\"\r\n                value={patient.emergencyContact.relationship}\r\n                onChange={e => handleEmergencyContactChange('relationship', e.target.value)}\r\n                fullWidth\r\n                size=\"small\"\r\n                required\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 4, justifyContent: 'center' }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"success\" size=\"large\" disabled={loading}>\r\n          <i className=\"fa fa-check\"></i> Save Patient\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"secondary\" size=\"large\" onClick={() => closeModal && closeModal()} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddPatient;\r\n","import React from 'react';\r\nimport { Box, Typography, Stack, Paper, Divider, Chip, Avatar } from '@mui/material';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\r\nimport BloodtypeIcon from '@mui/icons-material/Bloodtype';\r\nimport MedicationIcon from '@mui/icons-material/Medication';\r\nimport HistoryEduIcon from '@mui/icons-material/HistoryEdu';\r\nimport ContactEmergencyIcon from '@mui/icons-material/ContactEmergency';\r\n\r\nconst ViewPatient = ({ patient }) => {\r\n  if (!patient) return (\r\n    <Box sx={{ p: 4, textAlign: 'center' }}>\r\n      <Typography color=\"text.secondary\">No patient selected.</Typography>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ p: 3, maxWidth: 650, mx: 'auto', bgcolor: '#fafdff', borderRadius: 3, boxShadow: 2 }}>\r\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 2 }}>\r\n        <Avatar sx={{ bgcolor: 'primary.main', width: 56, height: 56 }}>\r\n          <PersonIcon fontSize=\"large\" />\r\n        </Avatar>\r\n        <Box>\r\n          <Typography variant=\"h5\" fontWeight={700} color=\"primary\">\r\n            {patient.fullName}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n            User ID: {patient.userId}\r\n          </Typography>\r\n        </Box>\r\n      </Stack>\r\n\r\n      <Divider sx={{ mb: 2 }} />\r\n\r\n      <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n        <Chip icon={<LocalHospitalIcon />} label={`MRN: ${patient.medicalRecordNumber || '-'}`} color=\"info\" variant=\"outlined\" />\r\n        <Chip icon={<BloodtypeIcon />} label={`Blood: ${patient.bloodType || '-'}`} color=\"error\" variant=\"outlined\" />\r\n        <Chip label={`Insurance: ${patient.insuranceId || '-'}`} color=\"success\" variant=\"outlined\" />\r\n      </Stack>\r\n\r\n      <Divider sx={{ my: 2 }} />\r\n\r\n      {/* Allergies */}\r\n      <Typography variant=\"subtitle1\" sx={{ mb: 1, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <HistoryEduIcon fontSize=\"small\" color=\"warning\" /> Allergies\r\n      </Typography>\r\n      {patient.allergies && patient.allergies.length > 0 ? (\r\n        <Stack spacing={0.5} sx={{ mb: 2 }}>\r\n          {patient.allergies.map((allergy, idx) => (\r\n            <Chip key={idx} label={allergy} color=\"warning\" variant=\"outlined\" sx={{ ml: 1 }} />\r\n          ))}\r\n        </Stack>\r\n      ) : (\r\n        <Typography sx={{ ml: 2, mb: 2 }} color=\"text.secondary\">None</Typography>\r\n      )}\r\n\r\n      {/* Medical History */}\r\n      <Typography variant=\"subtitle1\" sx={{ mb: 1, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <HistoryEduIcon fontSize=\"small\" color=\"primary\" /> Medical History\r\n      </Typography>\r\n      {patient.medicalHistory && patient.medicalHistory.length > 0 ? (\r\n        <Stack spacing={1} sx={{ mb: 2 }}>\r\n          {patient.medicalHistory.map((mh, idx) => (\r\n            <Paper key={idx} variant=\"outlined\" sx={{ p: 1.5, bgcolor: '#f3f6fb' }}>\r\n              <Typography><b>Condition:</b> {mh.condition}</Typography>\r\n              <Typography><b>Diagnosed At:</b> {mh.diagnosedAt}</Typography>\r\n              <Typography><b>Notes:</b> {mh.notes}</Typography>\r\n            </Paper>\r\n          ))}\r\n        </Stack>\r\n      ) : (\r\n        <Typography sx={{ ml: 2, mb: 2 }} color=\"text.secondary\">None</Typography>\r\n      )}\r\n\r\n      {/* Current Medications */}\r\n      <Typography variant=\"subtitle1\" sx={{ mb: 1, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <MedicationIcon fontSize=\"small\" color=\"info\" /> Current Medications\r\n      </Typography>\r\n      {patient.currentMedications && patient.currentMedications.length > 0 ? (\r\n        <Stack spacing={1} sx={{ mb: 2 }}>\r\n          {patient.currentMedications.map((med, idx) => (\r\n            <Paper key={idx} variant=\"outlined\" sx={{ p: 1.5, bgcolor: '#f3f6fb' }}>\r\n              <Typography><b>Name:</b> {med.name}</Typography>\r\n              <Typography><b>Dosage:</b> {med.dosage}</Typography>\r\n              <Typography><b>Frequency:</b> {med.frequency}</Typography>\r\n              <Typography><b>Prescribed By:</b> {med.prescribedBy}</Typography>\r\n            </Paper>\r\n          ))}\r\n        </Stack>\r\n      ) : (\r\n        <Typography sx={{ ml: 2, mb: 2 }} color=\"text.secondary\">None</Typography>\r\n      )}\r\n\r\n      {/* Emergency Contact */}\r\n      <Typography variant=\"subtitle1\" sx={{ mb: 1, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <ContactEmergencyIcon fontSize=\"small\" color=\"error\" /> Emergency Contact\r\n      </Typography>\r\n      <Paper variant=\"outlined\" sx={{ p: 1.5, bgcolor: '#fff8f0', mb: 2 }}>\r\n        <Typography><b>Name:</b> {patient.emergencyContact?.name || '-'}</Typography>\r\n        <Typography><b>Phone:</b> {patient.emergencyContact?.phone || '-'}</Typography>\r\n        <Typography><b>Relationship:</b> {patient.emergencyContact?.relationship || '-'}</Typography>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ViewPatient;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditPatient.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport PatientTestService from '../../main/mocks/PatientTestService';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientValidation from '../../main/validations/patientValidation';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditPatient = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n    const [patient, setPatient] = useState(props.patient);\r\n\r\n    useEffect(() => {\r\n        setPatient(props.patient)\r\n    }, [props.patient]);\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        patientHTTPService.editPatient(props.patient, data).then(dta => {\r\n            props.closeModal(data)\r\n            showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n        })\r\n\r\n    }\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setPatient({ ...patient, [name]: value });\r\n    };\r\n\r\n    // Add or update fields to match AddPatient (example: maritalStatus, occupation, allergies, chronicDiseases, etc.)\r\n    return (\r\n        <div className=\"EditPatient\">\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"form-horizontal\" role=\"form\" encType=\"multipart/form-data\" method=\"post\" acceptCharset=\"utf-8\">\r\n                <div className=\"form-body\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\"><span className=\"text-danger\"> * </span>  Fullname </label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.namepatient} ref={register({ required: true })}\r\n                                type=\"text\" name=\"namepatient\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\"><span className=\"text-danger\"> * </span> Email</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.emailpatient} ref={register({ required: true })}\r\n                                type=\"email\" id=\"emailpatient\" autoComplete=\"off\" name=\"emailpatient\"\r\n                                className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\"><span className=\"text-danger\"> * </span>  Date Of Birth </label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.birth} ref={register({ required: true })}\r\n                                type=\"date\" name=\"birth\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\"><span className=\"text-danger\"> * </span>  Telephone </label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.telephone} ref={register({ required: true })}\r\n                                type=\"text\" name=\"telephone\" id=\"old\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\"> Address </label>\r\n                        <div className=\"col-md-12\">\r\n                            <textarea onChange={handleInputChange} value={patient.address}\r\n                                ref={register({ required: true })}\r\n                                name=\"address\" className=\"form-control\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                    {/* New fields below */}\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Gender</label>\r\n                        <div className=\"col-md-12\">\r\n                            <select name=\"gender\" className=\"form-control\" value={patient.gender || ''} onChange={handleInputChange} ref={register({ required: true })}>\r\n                                <option value=\"\">Select Gender</option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">National ID</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.nationalId || ''} ref={register}\r\n                                type=\"text\" name=\"nationalId\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Insurance Number</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.insuranceNumber || ''} ref={register}\r\n                                type=\"text\" name=\"insuranceNumber\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Emergency Contact</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.emergencyContact || ''} ref={register}\r\n                                type=\"text\" name=\"emergencyContact\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Blood Group</label>\r\n                        <div className=\"col-md-12\">\r\n                            <select name=\"bloodGroup\" className=\"form-control\" value={patient.bloodGroup || ''} onChange={handleInputChange} ref={register}>\r\n                                <option value=\"\">Select Blood Group</option>\r\n                                <option value=\"A+\">A+</option>\r\n                                <option value=\"A-\">A-</option>\r\n                                <option value=\"B+\">B+</option>\r\n                                <option value=\"B-\">B-</option>\r\n                                <option value=\"AB+\">AB+</option>\r\n                                <option value=\"AB-\">AB-</option>\r\n                                <option value=\"O+\">O+</option>\r\n                                <option value=\"O-\">O-</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Marital Status</label>\r\n                        <div className=\"col-md-12\">\r\n                            <select name=\"maritalStatus\" className=\"form-control\" value={patient.maritalStatus || ''} onChange={handleInputChange} ref={register}>\r\n                                <option value=\"\">Select Marital Status</option>\r\n                                <option value=\"Single\">Single</option>\r\n                                <option value=\"Married\">Married</option>\r\n                                <option value=\"Divorced\">Divorced</option>\r\n                                <option value=\"Widowed\">Widowed</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Occupation</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.occupation || ''} ref={register}\r\n                                type=\"text\" name=\"occupation\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Allergies</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.allergies || ''} ref={register}\r\n                                type=\"text\" name=\"allergies\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-md-3 control-label\">Chronic Diseases</label>\r\n                        <div className=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={patient.chronicDiseases || ''} ref={register}\r\n                                type=\"text\" name=\"chronicDiseases\" className=\"form-control\" />\r\n                        </div>\r\n                    </div>\r\n                    {/* End new fields */}\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-offset-9 col-sm-6\">\r\n                            <button name=\"submit\" type=\"submit\" className=\"btn btn-primary\">\r\n                                <i className=\"fa fa-check\"></i>  Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nEditPatient.propTypes = {};\r\n\r\nEditPatient.defaultProps = {};\r\n\r\nexport default EditPatient;\r\n","// Enhanced Patient.js (with added features)\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport './Patient.css';\r\nimport { LoadJSFiles } from './../init';\r\nimport AddPatient from './../AddPatient/AddPatient';\r\nimport ViewPatient from './ViewPatient';\r\nimport EditPatient from './../EditPatient/EditPatient';\r\n\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\n\r\nimport { Button, LinearProgress, Typography, Menu, MenuItem, IconButton, Box, Dialog, DialogTitle, DialogContent, DialogActions, Chip } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport CurrentUser from '../../main/config/user';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst Patient = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    getAllPatient();\r\n  }, []);\r\n\r\n  const getAllPatient = () => {\r\n    setLoading(true);\r\n    patientHTTPService.getAllPatients()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n      });\r\n  };\r\n\r\n  const removePatientAction = (e, data) => {\r\n    e?.preventDefault();\r\n    if (window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\")) {\r\n      patientHTTPService.removePatient(data)\r\n        .then(() => {\r\n          resfreshComponent();\r\n          showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success');\r\n        })\r\n        .catch(() => showMessage('Error', CurrentUser.ERR_MSG, 'warning'));\r\n    }\r\n  };\r\n\r\n  const updatePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data);\r\n  };\r\n\r\n  const closeModalEdit = () => {\r\n    closeButtonEdit.current.click();\r\n    getAllPatient();\r\n  };\r\n\r\n  const closeModalAdd = () => {\r\n    closeButtonAdd.current.click();\r\n    getAllPatient();\r\n  };\r\n\r\n  const resfreshComponent = () => {\r\n    getAllPatient();\r\n  };\r\n\r\n  const exportPatientData = (patient) => {\r\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(patient, null, 2));\r\n    const downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", `patient_${patient.userId}.json`);\r\n    document.body.appendChild(downloadAnchorNode);\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n  };\r\n\r\n  const printPatientData = (patient) => {\r\n    const printWindow = window.open('', '_blank');\r\n    printWindow.document.write('<html><head><title>Print Patient</title></head><body>');\r\n    printWindow.document.write(`<pre>${JSON.stringify(patient, null, 2)}</pre>`);\r\n    printWindow.document.write('</body></html>');\r\n    printWindow.document.close();\r\n    printWindow.print();\r\n  };\r\n\r\n  const sharePatientData = (patient) => {\r\n    const text = JSON.stringify(patient, null, 2);\r\n    if (navigator.share) {\r\n      navigator.share({\r\n        title: `Patient: ${patient.userId}`,\r\n        text: text\r\n      });\r\n    } else {\r\n      alert('Web Share API not supported in your browser');\r\n    }\r\n  };\r\n\r\n  const duplicatePatient = (patient) => {\r\n    const duplicated = { ...patient, id: Date.now() };\r\n    patientHTTPService.createPatient(duplicated)\r\n      .then(() => {\r\n        showMessage('Duplicated', 'Patient duplicated successfully', 'success');\r\n        getAllPatient();\r\n      })\r\n      .catch(() => showMessage('Error', 'Failed to duplicate', 'warning'));\r\n  };\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length === 1) {\r\n      setUpdatedItemId(e[0]);\r\n      const selectedItem = patients.find(item => item.id === e[0]);\r\n      setUpdatedItem(selectedItem);\r\n    }\r\n  };\r\n\r\n  const handleMenuOpen = (event, row) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedRow(row);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  const handleMenuAction = (action) => {\r\n    switch (action) {\r\n      case 'view':\r\n        setUpdatedItem(selectedRow);\r\n        setViewOpen(true);\r\n        break;\r\n      case 'edit':\r\n        setUpdatedItem(selectedRow);\r\n        setEditOpen(true);\r\n        break;\r\n      case 'delete':\r\n        removePatientAction(null, selectedRow);\r\n        break;\r\n      case 'archive':\r\n        break;\r\n      case 'export':\r\n        exportPatientData(selectedRow);\r\n        break;\r\n      case 'print':\r\n        printPatientData(selectedRow);\r\n        break;\r\n      case 'share':\r\n        sharePatientData(selectedRow);\r\n        break;\r\n      case 'duplicate':\r\n        duplicatePatient(selectedRow);\r\n        break;\r\n      default:\r\n        console.warn('Unknown action:', action);\r\n    }\r\n    handleMenuClose();\r\n  };\r\n\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton onClick={(event) => handleMenuOpen(event, params.row)}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleMenuClose}>\r\n        <MenuItem onClick={() => handleMenuAction('view')}>View</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('edit')}>Edit</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('delete')}>Delete</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  // Columns for Patient object (do not show id, userId, createdAt, updatedAt)\r\n  const columns = [\r\n    // { field: 'userId', headerName: 'User ID', width: 220 }, // deleted\r\n    { field: 'fullName', headerName: 'Full Name', width: 220 },\r\n    { field: 'medicalRecordNumber', headerName: 'Medical Record #', width: 180 },\r\n    {\r\n      field: 'bloodType',\r\n      headerName: 'Blood Type',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'A+' || params.value === 'A-' ? 'primary'\r\n            : params.value === 'B+' || params.value === 'B-' ? 'warning'\r\n            : params.value === 'O+' || params.value === 'O-' ? 'success'\r\n            : params.value === 'AB+' || params.value === 'AB-' ? 'error'\r\n            : 'default'\r\n          }\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'allergies',\r\n      headerName: 'Allergies',\r\n      width: 180,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {(params.value && params.value.length > 0)\r\n            ? params.value.map((a, i) => (\r\n                <Chip key={i} label={a} color=\"error\" size=\"small\" variant=\"outlined\" sx={{ mb: 0.5 }} />\r\n              ))\r\n            : <Chip label=\"None\" color=\"default\" size=\"small\" />}\r\n        </Box>\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 150,\r\n      renderCell: renderActionsMenu\r\n    },\r\n  ];\r\n\r\n  const filteredPatients = patients.filter(patient =>\r\n    Object.values(patient).some(value => value?.toString().toLowerCase().includes(searchQuery.toLowerCase()))\r\n  );\r\n\r\n  // --- Replace bloodTypes and chart data logic ---\r\n\r\n  // Count all blood types including A+, A-, B+, B-, AB+, AB-, O+, O-\r\n  const bloodTypes = patients.reduce((acc, p) => {\r\n    acc[p.bloodType] = (acc[p.bloodType] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const bloodTypeLabels = ['A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-'];\r\n  const bloodTypeColors = ['#43a047', '#81c784', '#ffa000', '#ffe082', '#1976d2', '#90caf9', '#e53935', '#ef9a9a'];\r\n  const bloodTypeCounts = bloodTypeLabels.map(type => bloodTypes[type] || 0);\r\n\r\n  // Example widget summary data (replace with your actual logic)\r\n  const totalPatients = patients.length;\r\n  const typeCounts = {};\r\n  bloodTypeLabels.forEach(type => { typeCounts[type] = bloodTypes[type] || 0; });\r\n\r\n  // Example chart data (customize for your context)\r\n  const doughnutData = {\r\n    labels: bloodTypeLabels,\r\n    datasets: [{\r\n      data: bloodTypeCounts,\r\n      backgroundColor: bloodTypeColors,\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: bloodTypeLabels,\r\n    datasets: [{\r\n      label: 'Blood Type Count',\r\n      data: bloodTypeCounts,\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: bloodTypeLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Blood Type Trend',\r\n        data: bloodTypeCounts,\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      {/* Widgets row */}\r\n      <Typography\r\n        variant=\"h4\"\r\n        gutterBottom\r\n        sx={{ mb: 3, mt: 2, display: 'flex', alignItems: 'center', gap: 1 }}\r\n      >\r\n        <i className=\"menu-icon fa fa-bars\"></i> Patients\r\n      </Typography>\r\n\r\n      {/* Chips for Medical Record Number and Blood Type */}\r\n      \r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Patients</Typography>\r\n          <Typography variant=\"h6\">{totalPatients}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Type A</Typography>\r\n          <Typography variant=\"h6\">{typeCounts['A+'] + typeCounts['A-']}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Type B</Typography>\r\n          <Typography variant=\"h6\">{typeCounts['B+'] + typeCounts['B-']}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#f3e5f5', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Type O</Typography>\r\n          <Typography variant=\"h6\">{typeCounts['O+'] + typeCounts['O-']}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"error.main\">Type AB</Typography>\r\n          <Typography variant=\"h6\">{typeCounts['AB+'] + typeCounts['AB-']}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts row */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Patients by Blood Type</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Blood Type Count</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Blood Type Trend</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        {showChart && (\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {showFilter && (\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n          </div>\r\n        )}\r\n\r\n        \r\n\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#addPatient\"\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={e => updatePatientAction(e, updatedItemId)}\r\n          data-toggle=\"modal\"\r\n          data-target=\"#editPatient\"\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n          startIcon={<i className=\"fas fa-edit\"></i>}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={e => removePatientAction(e, updatedItemId)}\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n          startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n        >\r\n          Remove\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={getAllPatient}\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n          startIcon={<i className=\"fas fa-refresh\"></i>}\r\n        >\r\n          Reload\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => console.log('Search clicked')}\r\n          sx={{ mb: 2, fontWeight: 600 }}\r\n          startIcon={<i className=\"fas fa-search\"></i>}\r\n        >\r\n          Search\r\n        </Button>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search patients...\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          style={{ marginBottom: '10px', padding: '5px', width: '100%' }}\r\n        />\r\n\r\n        {loading ? <LinearProgress /> : (\r\n          <div style={{ width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredPatients}\r\n              columns={columns}\r\n              pageSize={10} // Show 10 rows visible\r\n              rowsPerPageOptions={[10, 15, 20]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n              autoHeight // <-- Add this prop to remove vertical scroll and fit rows\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Modals */}\r\n        <div className=\"modal fade\" id=\"addPatient\">\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">New Patient</h5>\r\n                <button onClick={resfreshComponent} className=\"close\" data-dismiss=\"modal\">×</button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <AddPatient closeModal={closeModalAdd} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button ref={closeButtonAdd} className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"editPatient\">\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Patient</h5>\r\n                <button className=\"close\" data-dismiss=\"modal\">×</button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <EditPatient patient={updatedItem} closeModal={closeModalEdit} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button ref={closeButtonEdit} className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* View Patient Modal (for detailed view) */}\r\n        <Dialog open={viewOpen} onClose={() => setViewOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Patient Details</DialogTitle>\r\n          <DialogContent>\r\n            <ViewPatient patient={updatedItem} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"primary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog open={editOpen} onClose={() => setEditOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Edit Patient</DialogTitle>\r\n          <DialogContent>\r\n            <EditPatient patient={updatedItem} closeModal={() => setEditOpen(false)} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditOpen(false)} color=\"primary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patient;","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllMedicamentManufacture = () => {\r\n    return http.get(`${BASE_URL}/medicament-manufactures`)\r\n}\r\nconst createMedicamentManufacture = data => {\r\n    return http.post(`${BASE_URL}/medicament-manufactures`, data);\r\n};\r\n\r\nconst editMedicamentManufacture = (id, data) => {\r\n    return http.put(`${BASE_URL}/medicament-manufactures/${id}`, data);\r\n};\r\n\r\nconst removeMedicamentManufacture = id => {\r\n    return http.delete(`${BASE_URL}/medicament-manufactures/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllMedicamentManufacture,\r\n    createMedicamentManufacture,\r\n    editMedicamentManufacture,\r\n    removeMedicamentManufacture\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, Stack, Typography, MenuItem } from '@mui/material';\r\nimport medicamentHTTPService from '../../main/services/medicamentHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nimport medicamentManufactureHTTPService from '../../main/services/medicamentManufactureHTTPService';\r\n\r\nconst categories = [\r\n  'Antibiotic',\r\n  'Analgesic',\r\n  'Antipyretic',\r\n  'Antiseptic',\r\n  'Antimalarial',\r\n  'Antiviral',\r\n  'Antifungal',\r\n  'Vaccine',\r\n  'Other'\r\n];\r\n\r\nconst dosageForms = [\r\n  \"Tablet\",\r\n  \"Capsule\",\r\n  \"Syrup\",\r\n  \"Injection\",\r\n  \"Gel\",\r\n  \"Spray\"\r\n];\r\n\r\nconst AddMedicament = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    genericName: '',\r\n    category: '',\r\n    description: '',\r\n    activeIngredients: [{ ingredient: '', concentration: '' }],\r\n    dosageForm: '',\r\n    strength: '',\r\n    manufacturerId: '',\r\n    requiresPrescription: 'Yes',\r\n    sideEffects: [''],\r\n    contraindications: [''],\r\n    usageInstructions: '',\r\n    stockQuantity: '',\r\n    pricePerUnit: '',\r\n    expirationDate: '',\r\n    storageConditions: '',\r\n    barcode: '',\r\n    batchNumber: '',\r\n    status: 'Available'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  // Active Ingredients\r\n  const handleIngredientChange = (idx, field, value) => {\r\n    const activeIngredients = [...form.activeIngredients];\r\n    activeIngredients[idx][field] = value;\r\n    setForm(f => ({ ...f, activeIngredients }));\r\n  };\r\n  const addIngredient = () => setForm(f => ({\r\n    ...f,\r\n    activeIngredients: [...f.activeIngredients, { ingredient: '', concentration: '' }]\r\n  }));\r\n  const removeIngredient = idx => setForm(f => ({\r\n    ...f,\r\n    activeIngredients: f.activeIngredients.length > 1\r\n      ? f.activeIngredients.filter((_, i) => i !== idx)\r\n      : [{ ingredient: '', concentration: '' }]\r\n  }));\r\n\r\n  // Side Effects\r\n  const handleSideEffectChange = (idx, value) => {\r\n    const sideEffects = [...form.sideEffects];\r\n    sideEffects[idx] = value;\r\n    setForm(f => ({ ...f, sideEffects }));\r\n  };\r\n  const addSideEffect = () => setForm(f => ({ ...f, sideEffects: [...f.sideEffects, ''] }));\r\n  const removeSideEffect = idx => setForm(f => ({\r\n    ...f,\r\n    sideEffects: f.sideEffects.length > 1\r\n      ? f.sideEffects.filter((_, i) => i !== idx)\r\n      : ['']\r\n  }));\r\n\r\n  // Contraindications\r\n  const handleContraindicationChange = (idx, value) => {\r\n    const contraindications = [...form.contraindications];\r\n    contraindications[idx] = value;\r\n    setForm(f => ({ ...f, contraindications }));\r\n  };\r\n  const addContraindication = () => setForm(f => ({ ...f, contraindications: [...f.contraindications, ''] }));\r\n  const removeContraindication = idx => setForm(f => ({\r\n    ...f,\r\n    contraindications: f.contraindications.length > 1\r\n      ? f.contraindications.filter((_, i) => i !== idx)\r\n      : ['']\r\n  }));\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      name: form.name,\r\n      genericName: form.genericName,\r\n      category: form.category,\r\n      description: form.description,\r\n      activeIngredients: form.activeIngredients.filter(ai => ai.ingredient && ai.concentration),\r\n      dosageForm: form.dosageForm,\r\n      strength: form.strength,\r\n      manufacturerId: Number(form.manufacturerId),\r\n      requiresPrescription: form.requiresPrescription,\r\n      sideEffects: form.sideEffects.filter(s => s.trim() !== ''),\r\n      contraindications: form.contraindications.filter(c => c.trim() !== ''),\r\n      usageInstructions: form.usageInstructions,\r\n      stockQuantity: Number(form.stockQuantity),\r\n      pricePerUnit: Number(form.pricePerUnit),\r\n      expirationDate: new Date(form.expirationDate).toISOString(),\r\n      storageConditions: form.storageConditions,\r\n      barcode: form.barcode,\r\n      batchNumber: form.batchNumber,\r\n      status: form.status,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await medicamentHTTPService.createMedicament(data);\r\n      showMessage('Success', 'Medicament created successfully', 'success');\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } catch (e) {\r\n      showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2, minWidth: 350 }}>\r\n      <Stack spacing={2}>\r\n        <TextField label=\"Name\" name=\"name\" value={form.name} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Generic Name\" name=\"genericName\" value={form.genericName} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Category\"\r\n          name=\"category\"\r\n          value={form.category}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {categories.map(cat => (\r\n            <MenuItem key={cat} value={cat}>\r\n              {cat}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField label=\"Description\" name=\"description\" value={form.description} onChange={handleChange} multiline rows={3} required fullWidth />\r\n\r\n        <Typography variant=\"subtitle2\">Active Ingredients</Typography>\r\n        {form.activeIngredients.map((ai, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              label=\"Ingredient\"\r\n              value={ai.ingredient}\r\n              onChange={e => handleIngredientChange(idx, 'ingredient', e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Concentration\"\r\n              value={ai.concentration}\r\n              onChange={e => handleIngredientChange(idx, 'concentration', e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <Button color=\"error\" onClick={() => removeIngredient(idx)} disabled={form.activeIngredients.length === 1}>-</Button>\r\n            {idx === form.activeIngredients.length - 1 && (\r\n              <Button color=\"success\" onClick={addIngredient}>+</Button>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <TextField\r\n          select\r\n          label=\"Dosage Form\"\r\n          name=\"dosageForm\"\r\n          value={form.dosageForm}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {dosageForms.map(df => (\r\n            <MenuItem key={df} value={df}>\r\n              {df}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField label=\"Strength\" name=\"strength\" value={form.strength} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Manufacturer ID\" name=\"manufacturerId\" value={form.manufacturerId} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Requires Prescription\"\r\n          name=\"requiresPrescription\"\r\n          value={form.requiresPrescription}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"Yes\">Yes</MenuItem>\r\n          <MenuItem value=\"No\">No</MenuItem>\r\n        </TextField>\r\n\r\n        <Typography variant=\"subtitle2\">Side Effects</Typography>\r\n        {form.sideEffects.map((side, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              value={side}\r\n              onChange={e => handleSideEffectChange(idx, e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <Button color=\"error\" onClick={() => removeSideEffect(idx)} disabled={form.sideEffects.length === 1}>-</Button>\r\n            {idx === form.sideEffects.length - 1 && (\r\n              <Button color=\"success\" onClick={addSideEffect}>+</Button>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <Typography variant=\"subtitle2\">Contraindications</Typography>\r\n        {form.contraindications.map((contra, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              value={contra}\r\n              onChange={e => handleContraindicationChange(idx, e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <Button color=\"error\" onClick={() => removeContraindication(idx)} disabled={form.contraindications.length === 1}>-</Button>\r\n            {idx === form.contraindications.length - 1 && (\r\n              <Button color=\"success\" onClick={addContraindication}>+</Button>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <TextField label=\"Usage Instructions\" name=\"usageInstructions\" value={form.usageInstructions} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Stock Quantity\" name=\"stockQuantity\" type=\"number\" value={form.stockQuantity} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Price Per Unit\" name=\"pricePerUnit\" type=\"number\" value={form.pricePerUnit} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          label=\"Expiration Date\"\r\n          name=\"expirationDate\"\r\n          type=\"date\"\r\n          value={form.expirationDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField label=\"Storage Conditions\" name=\"storageConditions\" value={form.storageConditions} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Barcode\" name=\"barcode\" value={form.barcode} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Batch Number\" name=\"batchNumber\" value={form.batchNumber} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"Available\">Available</MenuItem>\r\n          <MenuItem value=\"Unavailable\">Unavailable</MenuItem>\r\n          <MenuItem value=\"Expired\">Expired</MenuItem>\r\n        </TextField>\r\n\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Medicament'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddMedicament;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Medicament.css';\r\nimport { LoadJSFiles } from './../init';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport medicamentHTTPService from '../../main/services/medicamentHTTPService';\r\nimport { Button, LinearProgress, Typography, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Switch, FormControlLabel, Menu, MenuItem, IconButton, Stack, Divider, Chip, Box } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { saveAs } from 'file-saver';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport AddMedicament from './AddMedicament'; // <-- Import the AddMedicament component\r\n\r\nconst Medicament = () => {\r\n  const [medicaments, setMedicaments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedMedicaments, setSelectedMedicaments] = useState([]);\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const [viewMedicament, setViewMedicament] = useState(null);\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    getAllMedicament();\r\n  }, []);\r\n\r\n  const getAllMedicament = () => {\r\n    setLoading(true);\r\n    medicamentHTTPService.getAllMedicament()\r\n      .then(response => {\r\n        setMedicaments(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', e.message, 'warning');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const filteredMedicaments = medicaments.filter(medicament =>\r\n    medicament.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    medicament.producer.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const handleExport = () => {\r\n    const csvContent = [\r\n      ['ID', 'Name', 'Producer', 'Category'],\r\n      ...medicaments.map(m => [m.id, m.name, m.producer, m.group])\r\n    ].map(e => e.join(\",\")).join(\"\\n\");\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    saveAs(blob, 'medicaments.csv');\r\n  };\r\n\r\n  const handleBulkDelete = () => {\r\n    setOpenConfirmDialog(true);\r\n  };\r\n\r\n  const confirmBulkDelete = () => {\r\n    selectedMedicaments.forEach(id => {\r\n      medicamentHTTPService.removeMedicament(id)\r\n        .then(() => {\r\n          showMessage('Success', 'Medicament deleted successfully', 'success');\r\n          getAllMedicament();\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', e.message, 'warning');\r\n        });\r\n    });\r\n    setOpenConfirmDialog(false);\r\n  };\r\n\r\n  const handleDuplicate = (row) => {\r\n    const duplicate = { ...row, id: Date.now() };\r\n    medicamentHTTPService.createMedicament(duplicate)\r\n      .then(() => {\r\n        showMessage('Success', 'Medicament duplicated successfully', 'success');\r\n        getAllMedicament();\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', e.message, 'warning');\r\n      });\r\n  };\r\n\r\n  const toggleActive = (row) => {\r\n    const updated = { ...row, active: !row.active };\r\n    medicamentHTTPService.updateMedicament(updated)\r\n      .then(() => {\r\n        showMessage('Success', 'Medicament status updated successfully', 'success');\r\n        getAllMedicament();\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', e.message, 'warning');\r\n      });\r\n  };\r\n\r\n  const handleImport = (file) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const content = e.target.result;\r\n      const rows = content.split(\"\\n\").slice(1);\r\n      rows.forEach(row => {\r\n        const [id, name, producer, group] = row.split(\",\");\r\n        const medicament = { id, name, producer, group };\r\n        medicamentHTTPService.createMedicament(medicament)\r\n          .then(() => getAllMedicament())\r\n          .catch(e => showMessage('Error', e.message, 'warning'));\r\n      });\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const handleMenuOpen = (event, row) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedRow(row);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  const handleMenuAction = (action) => {\r\n    if (action === 'view') handleView(selectedRow);\r\n    if (action === 'edit') handleEdit(selectedRow);\r\n    if (action === 'duplicate') handleDuplicate(selectedRow);\r\n    if (action === 'toggle') toggleActive(selectedRow);\r\n    if (action === 'delete') handleDelete(selectedRow.id);\r\n    if (action === 'archive') handleArchive(selectedRow);\r\n    if (action === 'restore') handleRestore(selectedRow);\r\n    if (action === 'history') handleViewHistory(selectedRow);\r\n    handleMenuClose();\r\n  };\r\n\r\n  const handleView = (row) => {\r\n    setViewMedicament(row);\r\n    setViewOpen(true);\r\n  };\r\n\r\n  const handleEdit = (row) => {\r\n    showMessage('Info', `Editing ${row.name}`, 'info');\r\n    // Add logic to open an edit modal or navigate to an edit page\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this medicament?')) {\r\n      medicamentHTTPService.removeMedicament(id)\r\n        .then(() => {\r\n          showMessage('Success', 'Medicament deleted successfully', 'success');\r\n          getAllMedicament();\r\n        })\r\n        .catch(e => {\r\n          showMessage('Error', e.message, 'warning');\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleArchive = (row) => {\r\n    showMessage('Info', `Archiving ${row.name}`, 'info');\r\n    // Add logic to archive the medicament\r\n  };\r\n\r\n  const handleRestore = (row) => {\r\n    showMessage('Info', `Restoring ${row.name}`, 'info');\r\n    // Add logic to restore the medicament\r\n  };\r\n\r\n  const handleViewHistory = (row) => {\r\n    showMessage('Info', `Viewing history for ${row.name}`, 'info');\r\n    // Add logic to view the history of the medicament\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'name', headerName: 'Name', width: 150 },\r\n    { field: 'genericName', headerName: 'Generic Name', width: 130 },\r\n    { field: 'category', headerName: 'Category', width: 120 },\r\n    {\r\n      field: 'expirationDate',\r\n      headerName: 'Expiration',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={new Date(params.value).toLocaleDateString()}\r\n          color=\"warning\"\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 100,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Available'\r\n              ? 'success'\r\n              : params.value === 'Expired'\r\n              ? 'warning'\r\n              : 'default'\r\n          }\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    }, \r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <div>\r\n          <IconButton\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleMenuOpen(event, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}\r\n          >\r\n            <MenuItem onClick={() => handleMenuAction('view')}>View</MenuItem>\r\n            <MenuItem onClick={() => handleMenuAction('edit')}>Edit</MenuItem>\r\n            <MenuItem onClick={() => handleMenuAction('delete')}>Delete</MenuItem>\r\n          </Menu>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className={`card ${isDarkMode ? 'dark-mode' : ''}`}>\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i> Medicaments\r\n        </Typography>\r\n\r\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"success\"\r\n            onClick={() => setAddOpen(true)}\r\n            startIcon={<i className=\"fas fa-plus\"></i>}\r\n          >\r\n            Add Medicament\r\n          </Button>\r\n        </Stack>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredMedicaments}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection\r\n              onSelectionModelChange={(ids) => setSelectedMedicaments(ids)}\r\n              components={{ Toolbar: GridToolbar }}\r\n              getRowId={(row) => row.id || row.barcode || row.batchNumber}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <Dialog\r\n          open={addOpen}\r\n          onClose={() => setAddOpen(false)}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle>Add Medicament</DialogTitle>\r\n          <DialogContent>\r\n            <AddMedicament\r\n              closeModal={() => setAddOpen(false)}\r\n              onCreate={getAllMedicament}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAddOpen(false)} color=\"secondary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={viewOpen}\r\n          onClose={() => setViewOpen(false)}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n              <i className=\"fas fa-capsules\" style={{ color: '#1976d2', fontSize: 22 }} />\r\n              Medicament Details\r\n            </Stack>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            {viewMedicament ? (\r\n              <Box\r\n                sx={{\r\n                  bgcolor: '#fafdff',\r\n                  borderRadius: 2,\r\n                  boxShadow: 1,\r\n                  p: { xs: 2, sm: 3 },\r\n                  minWidth: 320,\r\n                  minHeight: 200,\r\n                  mb: 2\r\n                }}\r\n              >\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip label={viewMedicament.name} color=\"primary\" icon={<i className=\"fas fa-capsules\"></i>} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={viewMedicament.genericName} color=\"info\" icon={<i className=\"fas fa-flask\"></i>} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={viewMedicament.category} color=\"success\" icon={<i className=\"fas fa-tags\"></i>} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={viewMedicament.status} color={viewMedicament.status === 'Available' ? 'success' : viewMedicament.status === 'Expired' ? 'warning' : 'default'} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip label={`Dosage: ${viewMedicament.dosageForm || '-'}`} color=\"default\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Strength: ${viewMedicament.strength || '-'}`} color=\"info\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Manufacturer: ${viewMedicament.manufacturerId || '-'}`} color=\"primary\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Batch: ${viewMedicament.batchNumber || '-'}`} color=\"info\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Barcode: ${viewMedicament.barcode || '-'}`} color=\"default\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                </Stack>\r\n                <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip label={`Stock: ${viewMedicament.stockQuantity ?? '-'}`} color=\"info\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Price/Unit: ${viewMedicament.pricePerUnit ?? '-'}`} color=\"success\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Expires: ${viewMedicament.expirationDate ? new Date(viewMedicament.expirationDate).toLocaleDateString() : '-'}`} color=\"warning\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                  <Chip label={`Prescription: ${viewMedicament.requiresPrescription ? 'Yes' : 'No'}`} color={viewMedicament.requiresPrescription ? 'success' : 'default'} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle1\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Description:\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>{viewMedicament.description || '-'}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Active Ingredients:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewMedicament.activeIngredients || []).length > 0 ? (\r\n                    viewMedicament.activeIngredients.map((ai, i) => (\r\n                      <Chip\r\n                        key={i}\r\n                        label={`${ai.ingredient} (${ai.concentration})`}\r\n                        color=\"warning\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        sx={{ mb: 1 }}\r\n                      />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">No active ingredients listed.</Typography>\r\n                  )}\r\n                </Stack>\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Side Effects:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewMedicament.sideEffects || []).length > 0 ? (\r\n                    viewMedicament.sideEffects.map((s, i) => (\r\n                      <Chip key={i} label={s} color=\"error\" variant=\"outlined\" size=\"small\" sx={{ mb: 1 }} />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">No side effects listed.</Typography>\r\n                  )}\r\n                </Stack>\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Contraindications:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewMedicament.contraindications || []).length > 0 ? (\r\n                    viewMedicament.contraindications.map((c, i) => (\r\n                      <Chip key={i} label={c} color=\"warning\" variant=\"outlined\" size=\"small\" sx={{ mb: 1 }} />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">No contraindications listed.</Typography>\r\n                  )}\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Usage Instructions:\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>{viewMedicament.usageInstructions || '-'}</Typography>\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Storage Conditions:\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>{viewMedicament.storageConditions || '-'}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"caption\">\r\n                  <b>Created At:</b> {viewMedicament.createdAt ? new Date(viewMedicament.createdAt).toLocaleString() : '-'}<br />\r\n                  <b>Updated At:</b> {viewMedicament.updatedAt ? new Date(viewMedicament.updatedAt).toLocaleString() : '-'}\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No medicament selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"primary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={openConfirmDialog}\r\n          onClose={() => setOpenConfirmDialog(false)}\r\n        >\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you sure you want to delete the selected medicaments?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setOpenConfirmDialog(false)} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={confirmBulkDelete} color=\"secondary\">\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMedicament.propTypes = {};\r\nMedicament.defaultProps = {};\r\n\r\nexport default Medicament;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllUser = () => {\r\n    return http.get(`${BASE_URL}/api/user`)\r\n}\r\nconst createUser = data => {\r\n    return http.post(`${BASE_URL}/api/user`, data);\r\n};\r\n\r\nconst editUser = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/user/${id}`, data);\r\n};\r\n\r\nconst removeUser = id => {\r\n    return http.delete(`${BASE_URL}/api/user/${id}`);\r\n};\r\nconst getCount = () => {\r\n    return http.get(`${BASE_URL}/api/count/user/all`)\r\n}\r\nconst login = data => {\r\n    return http.post(`${BASE_URL}/api/user/login`, data);\r\n};\r\nexport default {\r\n    getAllUser,\r\n    createUser,\r\n    editUser,\r\n    removeUser,\r\n    getCount,\r\n    login\r\n};","import React, { useEffect, useState } from 'react';\r\nimport './Login.css';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport CurrentUser from '../../main/config/user';\r\nimport userHTTPService from '../../main/services/userHTTPService';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  Avatar,\r\n  Stack,\r\n  Snackbar,\r\n  Alert,\r\n} from '@mui/material';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n;\r\n\r\nconst Login = ({ handleClick }) => {\r\n  let history = useHistory();\r\n  var userInit = { username: \"admin\", password: \"admin\" };\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [user, setUser] = useState(userInit);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'error' });\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const registerPage = () => {\r\n    history.replace(\"/register\");\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const response = await axios.post(`${BASE_URL}/users/login`, {\r\n        username: user.username,\r\n        password: user.password,\r\n      });\r\n      if (response.data && response.data.id) {\r\n        // Save user info in localStorage\r\n        localStorage.setItem('user', JSON.stringify(response.data));\r\n        handleClick(true);\r\n        CurrentUser.USER_DETAIL = response.data;\r\n        localStorage.setItem('connected', CurrentUser.CONNECTED_USER);\r\n        setSnackbar({ open: true, message: 'Login successful!', severity: 'success' });\r\n        setTimeout(() => {\r\n          history.push(\"/dashboard\");\r\n        }, 800);\r\n      } else {\r\n        setSnackbar({ open: true, message: 'Login failed. Please check your credentials.', severity: 'error' });\r\n      }\r\n    } catch (error) {\r\n      setSnackbar({ open: true, message: 'Login failed. Please check your credentials.', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        bgcolor: '#fafdff',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundImage: 'url(\"images/login.jpg\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n      }}\r\n    >\r\n      <Paper elevation={6} sx={{ p: 4, maxWidth: 380, width: '100%', borderRadius: 3, backdropFilter: 'blur(2px)', background: 'rgba(255,255,255,0.92)' }}>\r\n        <Stack alignItems=\"center\" spacing={2}>\r\n          <Avatar sx={{ bgcolor: '#1976d2', width: 64, height: 64 }}>\r\n            <LockOutlinedIcon fontSize=\"large\" />\r\n          </Avatar>\r\n          <Typography variant=\"h5\" fontWeight={700} color=\"primary\">\r\n            Dentic Clinic Login\r\n          </Typography>\r\n        </Stack>\r\n        <form onSubmit={handleSubmit(onSubmit)} style={{ marginTop: 24 }}>\r\n          <TextField\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={user.username}\r\n            onChange={handleInputChange}\r\n            inputRef={register({ required: true })}\r\n            error={!!errors?.username}\r\n            helperText={errors?.username && \"Username is required\"}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={user.password}\r\n            onChange={handleInputChange}\r\n            inputRef={register({ required: true })}\r\n            error={!!errors?.password}\r\n            helperText={errors?.password && \"Password is required\"}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            size=\"large\"\r\n            sx={{ mt: 2, mb: 1, fontWeight: 600 }}\r\n            startIcon={<LockOutlinedIcon />}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Link to=\"/register\" style={{ textDecoration: 'none' }}>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              fullWidth\r\n              sx={{ mb: 1, fontWeight: 600 }}\r\n            >\r\n              Register\r\n            </Button>\r\n          </Link>\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            sx={{ fontWeight: 600 }}\r\n            onClick={() => history.push('/')}\r\n          >\r\n            Back to Website\r\n          </Button>\r\n        </form>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mt: 2 }}>\r\n          &copy; {new Date().getFullYear()} Dentic Clinic\r\n        </Typography>\r\n        <Snackbar\r\n          open={snackbar.open}\r\n          autoHideDuration={3000}\r\n          onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n        >\r\n          <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n            {snackbar.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {};\r\n\r\nLogin.defaultProps = {};\r\n\r\nexport default Login;","\r\nconst medicamentValidation = {\r\n    medicine_name: 'Le nom de medicamnt est obligatoire',\r\n    company_name: 'Le nom de constructeur est obligatoire',\r\n    group_name: 'Le groupe sanguin est obligatoire',\r\n    description: 'La description est obligatoire',\r\n}\r\nexport default medicamentValidation;","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllMedicamentCayegory = () => {\r\n    return http.get(`${BASE_URL}/medicament-categories`)\r\n}\r\nconst createMedicamentCayegory = data => {\r\n    return http.post(`${BASE_URL}/medicament-categories`, data);\r\n};\r\n\r\nconst editMedicamentCayegory = (id, data) => {\r\n    return http.put(`${BASE_URL}/medicament-categories/${id}`, data);\r\n};\r\n\r\nconst removeMedicamentCayegory = id => {\r\n    return http.delete(`${BASE_URL}/medicament-categories/${id}`);\r\n};\r\n\r\nconst getMedicamentCayegoryById = id => {\r\n    return http.get(`${BASE_URL}/medicament-categories/${id}`);\r\n};\r\n\r\nexport default {\r\n    getMedicamentCayegoryById,\r\n    getAllMedicamentCayegory,\r\n    createMedicamentCayegory,\r\n    editMedicamentCayegory,\r\n    removeMedicamentCayegory\r\n};","import React, { useEffect, useState } from 'react';\r\nimport './AddMedicament.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages'\r\nimport medicamentMessage from '../../main/messages/medicamentMessage'\r\nimport medicamentValidation from '../../main/validations/medicamentValidation'\r\nimport MedicamentTestService from '../../main/mocks/MedicamentTestService';\r\nimport medicamentHTTPService from '../../main/services/medicamentHTTPService';\r\nimport medicamentManufactureHTTPService from '../../main/services/medicamentManufactureHTTPService';\r\nimport medicamentCategoryHTTPService from '../../main/services/medicamentCategoryHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst AddMedicament = (props) => {\r\n\r\n    const initialState = {\r\n        medicine_name: \"\",\r\n        company_name: \"\",\r\n        group_name: \"\",\r\n        description: \"\",\r\n    };\r\n\r\n    const { register, handleSubmit, errors } = useForm()\r\n    const [medicament, setMedicament] = useState(initialState);\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(data)\r\n        //saveMedicament(data)\r\n        //MedicamentTestService.create(data)\r\n        medicamentHTTPService.createMedicament(data).then(data => {\r\n            setMedicament(initialState)\r\n            showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success')\r\n            props.closeModal()\r\n        })\r\n\r\n    }\r\n\r\n    const saveMedicament = (data) => {\r\n\r\n        medicamentHTTPService.create(data)\r\n            .then(response => {\r\n                setMedicament(initialState)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n\r\n    };\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setMedicament({ ...medicament, [name]: value });\r\n    };\r\n\r\n    const [medicamentCategory, setMedicamentCategory] = useState([]);\r\n    const [medicamentManufacture, setMedicamentManufacture] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //LoadJSFiles()\r\n        getAllMedicamentManufactures()\r\n        getAllMedicamentCategories()\r\n    }, []);\r\n\r\n\r\n    const getAllMedicamentManufactures = () => {\r\n        //setLoading(true);\r\n        medicamentManufactureHTTPService.getAllMedicamentManufacture()\r\n            .then(response => {\r\n                setMedicamentManufacture(response.data);\r\n                //setLoading(false);\r\n\r\n            })\r\n            .catch(e => {\r\n                showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n            });\r\n    };\r\n\r\n    const getAllMedicamentCategories = () => {\r\n        //setLoading(true);\r\n        medicamentCategoryHTTPService.getAllMedicamentCayegory()\r\n            .then(response => {\r\n                setMedicamentCategory(response.data);\r\n                //setLoading(false);\r\n            })\r\n            .catch(e => {\r\n                showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"AddMedicament\">\r\n            <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" role=\"form\" enctype=\"multipart/form-data\" method=\"post\" accept-charset=\"utf-8\">\r\n\r\n                <div class=\"form-body\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Name:</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <input onChange={handleInputChange} value={medicament.name}\r\n                                ref={register({ required: true })}\r\n                                type=\"text\" data-toggle=\"tooltip\"\r\n                                name=\"name\" class=\"form-control test\"\r\n                            />\r\n\r\n                            <div className=\"error text-danger\">\r\n                                {errors.name && medicamentValidation.name}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Manufacture :</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <select onChange={handleInputChange} value={medicament.company_name} ref={register({ required: true })}\r\n                                type=\"text\" class=\"form-control\" autocomplete=\"off\" id=\"search-box\"\r\n                                placeholder=\"Nom de la compagnie\" data-toggle=\"tooltip\" title=\"Nom de la compagnie\"\r\n                                name=\"company_name\" required=\"\" >\r\n                                {medicamentCategory.map(data =>\r\n                                    <option value={data.id}>{data.name}</option>\r\n                                )}\r\n\r\n                            </select>\r\n\r\n                            <div className=\"error text-danger\">\r\n                                {errors.company_name && medicamentValidation.company_name}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><font  ><font  >Category :</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <select onChange={handleInputChange} value={medicament.group_name} ref={register({ required: true })}\r\n                                type=\"text\" name=\"group_name\" autocomplete=\"off\" id=\"search-group\" class=\"form-control\"\r\n                                data-toggle=\"tooltip\" title=\"Nom de groupe \" required=\"\" >\r\n                                {medicamentManufacture.map(data =>\r\n                                    <option value={data.id}>{data.name}</option>\r\n                                )}\r\n                            </select>\r\n\r\n                            <div className=\"error text-danger\">\r\n                                {errors.group_name && medicamentValidation.group_name}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label class=\"col-md-3 control-label\"><font  ><font  >Description:</font></font></label>\r\n                        <div class=\"col-md-12\">\r\n                            <textarea name=\"description\" class=\"form-control\" rows=\"6\"\r\n                                onChange={handleInputChange} value={medicament.description} ref={register({ required: true })}\r\n                            ></textarea>\r\n\r\n                            <div className=\"error text-danger\">\r\n                                {errors.description && medicamentValidation.description}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"form-group row\">\r\n                    <div class=\" col-8\">\r\n                        <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                            <i className=\"fa fa-check\"></i>  Save</button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nAddMedicament.propTypes = {};\r\n\r\nAddMedicament.defaultProps = {};\r\n\r\nexport default AddMedicament;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport expenseHTTPService from '../../main/services/expenseHTTPService';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statusOptions = ['Planned', 'In Progress', 'Completed', 'Cancelled'];\r\nconst expenseCategories = ['Consultation', 'Treatment', 'Medication', 'Lab', 'Other'];\r\nconst paymentMethods = ['Cash', 'Card', 'Insurance', 'Online'];\r\n\r\nconst AddExpense = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    description: '',\r\n    estimatedDuration: '',\r\n    status: 'Planned',\r\n    expenseCategory: '',\r\n    amount: '',\r\n    paymentMethod: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Add state for select box data\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Replace with your actual endpoints if needed\r\n    fetch(BASE_URL+'/patients').then(res => res.json()).then(setPatients).catch(() => setPatients([]));\r\n    fetch(BASE_URL+'/doctors').then(res => res.json()).then(setDoctors).catch(() => setDoctors([]));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      patientId: form.patientId,\r\n      doctorId: form.doctorId,\r\n      description: form.description,\r\n      estimatedDuration: Number(form.estimatedDuration),\r\n      status: form.status,\r\n      expenseCategory: form.expenseCategory,\r\n      amount: Number(form.amount),\r\n      paymentMethod: form.paymentMethod,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await expenseHTTPService.createExpense(data);\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          select\r\n          label=\"Patient\"\r\n          name=\"patientId\"\r\n          value={form.patientId}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {patients.map(patient => (\r\n            <MenuItem key={patient.id} value={patient.id}>\r\n              {patient.fullName || patient.name || patient.id}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Doctor\"\r\n          name=\"doctorId\"\r\n          value={form.doctorId}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {doctors.map(doctor => (\r\n            <MenuItem key={doctor.id} value={doctor.id}>\r\n              {doctor.fullName || doctor.name || doctor.id}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          value={form.description}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Estimated Duration (days)\"\r\n          name=\"estimatedDuration\"\r\n          type=\"number\"\r\n          value={form.estimatedDuration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Expense Category\"\r\n          name=\"expenseCategory\"\r\n          value={form.expenseCategory}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {expenseCategories.map(cat => (\r\n            <MenuItem key={cat} value={cat}>{cat}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Amount\"\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          value={form.amount}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Payment Method\"\r\n          name=\"paymentMethod\"\r\n          value={form.paymentMethod}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {paymentMethods.map(method => (\r\n            <MenuItem key={method} value={method}>{method}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Expense'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddExpense;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditExpense.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport expenseHTTPService from '../../main/services/expenseHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditExpense = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [expense, setExpense] = useState(props.expense);\r\n\r\n  useEffect(() => {\r\n    setExpense(props.expense)\r\n  }, [props.expense]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    expenseHTTPService.editExpense(props.expense.id, data)\r\n    props.closeModal(data)\r\n    showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setExpense({ ...expense, [name]: value });\r\n  };\r\n  return (\r\n    <div className=\"EditExpense\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Date:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={expense?.date} ref={register({ required: true })}\r\n                type=\"date\" id=\"date\" name=\"date\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Name:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={expense?.name} ref={register({ required: true })}\r\n                type=\"text\" name=\"name\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Amount:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={expense?.amount} ref={register({ required: true })}\r\n                name=\"amount\" class=\"form-control\" type=\"number\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Note:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={expense?.note} ref={register({ required: true })}\r\n                name=\"note\" class=\"form-control\" rows=\"3\"></textarea>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Payment Mode</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={expense?.paymenMode} ref={register({ required: true })}\r\n                type=\"text\" name=\"paymenMode\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n                <option>Cash</option>\r\n                <option>Credit Card</option>\r\n              </select>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nEditExpense.propTypes = {};\r\n\r\nEditExpense.defaultProps = {};\r\n\r\nexport default EditExpense;\r\n","import PropTypes from 'prop-types';\r\nimport './Expense.css';\r\nimport expenseHTTPService from '../../main/services/expenseHTTPService';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { LoadJSFiles } from '../init';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport useForceUpdate from 'use-force-update';\r\nimport AddExpense from './AddExpense';\r\nimport EditExpense from '../EditExpense/EditExpense';\r\nimport { Typography, Button, LinearProgress, Menu, MenuItem, IconButton, Box, Dialog, DialogTitle, DialogContent, DialogActions, Divider, Chip } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport CurrentUser from '../../main/config/user';\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\n\r\n\r\nconst Expense = () => {\r\n\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [viewExpense, setViewExpense] = useState(null);\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllExpenses()\r\n  }, []);\r\n\r\n\r\n  const getAllExpenses = () => {\r\n    setLoading(true);\r\n    expenseHTTPService.getAllExpense()\r\n      .then(response => {\r\n        setExpenses(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllExpenses()\r\n    //   forceUpdate()\r\n  }\r\n\r\n  const removeExpenseAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success')\r\n      expenseHTTPService.removeExpense(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateExpenseAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  // Actions menu for each row\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton onClick={(event) => { setAnchorEl(event.currentTarget); setSelectedRow(params.row); }}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\r\n        <MenuItem onClick={() => {\r\n          setViewExpense(params.row);\r\n          setViewDialogOpen(true);\r\n          setAnchorEl(null);\r\n        }}>View</MenuItem>\r\n        <MenuItem onClick={e => updateExpenseAction(e, params.row)}>Edit</MenuItem>\r\n        <MenuItem onClick={e => removeExpenseAction(e, [params.row.id])}>Delete</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  // Columns for Expense object (do not show id, createdAt, updatedAt)\r\n  const columns = [\r\n    {\r\n      field: 'expenseCategory',\r\n      headerName: 'Category',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"primary\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    { field: 'description', headerName: 'Description', width: 220 },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"success\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentMethod',\r\n      headerName: 'Payment Method',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"info\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentStatus',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Paid'\r\n              ? 'success'\r\n              : params.value === 'Pending'\r\n              ? 'warning'\r\n              : 'default'\r\n          }\r\n          size=\"small\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      renderCell: renderActionsMenu\r\n    }\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = expenses.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n  // Widget summary data\r\n  const totalExpenses = expenses.length;\r\n  const paidExpenses = expenses.filter(e => e.paymentStatus === 'Paid').length;\r\n  const pendingExpenses = expenses.filter(e => e.paymentStatus === 'Pending').length;\r\n  const categories = expenses.reduce((acc, e) => {\r\n    acc[e.expenseCategory] = (acc[e.expenseCategory] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [{\r\n      data: Object.values(categories),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [{\r\n      label: 'Expenses per Category',\r\n      data: Object.values(categories),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [\r\n      {\r\n        label: 'Paid',\r\n        data: Object.keys(categories).map(cat => expenses.filter(e => e.expenseCategory === cat && e.paymentStatus === 'Paid').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Pending',\r\n        data: Object.keys(categories).map(cat => expenses.filter(e => e.expenseCategory === cat && e.paymentStatus === 'Pending').length),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  // Add this handler to refresh after adding\r\n  const handleExpenseCreated = () => {\r\n    setAddDialogOpen(false);\r\n    getAllExpenses();\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Expenses\r\n        </Typography>\r\n        <br />\r\n        {/* Widgets row */}\r\n        <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n          <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n            <Typography variant=\"subtitle2\" color=\"primary\">Total Expenses</Typography>\r\n            <Typography variant=\"h6\">{totalExpenses}</Typography>\r\n          </Box>\r\n          <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n            <Typography variant=\"subtitle2\" color=\"success.main\">Paid</Typography>\r\n            <Typography variant=\"h6\">{paidExpenses}</Typography>\r\n          </Box>\r\n          <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n            <Typography variant=\"subtitle2\" color=\"warning.main\">Pending</Typography>\r\n            <Typography variant=\"h6\">{pendingExpenses}</Typography>\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Charts row */}\r\n        <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n          <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n            <Typography variant=\"subtitle1\" align=\"center\">Expenses by Category</Typography>\r\n            <Doughnut data={doughnutData} />\r\n          </Box>\r\n          <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n            <Typography variant=\"subtitle1\" align=\"center\">Expenses per Category</Typography>\r\n            <Bar data={barData} />\r\n          </Box>\r\n          <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n            <Typography variant=\"subtitle1\" align=\"center\">Status Trends by Category</Typography>\r\n            <Line data={lineData} />\r\n          </Box>\r\n        </Box>\r\n\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n       \r\n        {/* Material-UI Create Button */}\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          onClick={() => setAddDialogOpen(true)}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create Expense\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          onClick={e => updateExpenseAction(e, updatedItemId)}\r\n          startIcon={<i className=\"fas fa-edit\"></i>}\r\n        >\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, mr: 1, fontWeight: 600 }}\r\n          onClick={e => removeExpenseAction(e, updatedItemIds)}\r\n          startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n        >\r\n          Remove\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, fontWeight: 600 }}\r\n          onClick={() => getAllExpenses()}\r\n          startIcon={<i className=\"fas fa-refresh\"></i>}\r\n        >\r\n          Reload\r\n        </Button>\r\n\r\n        <br /><br />\r\n\r\n\r\n\r\n\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={expenses}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[5, 10, 15, 20]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n            autoHeight\r\n          /></div>}\r\n\r\n        {/* Material-UI Add Expense Dialog */}\r\n        <Dialog open={addDialogOpen} onClose={() => setAddDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Create Expense</DialogTitle>\r\n          <DialogContent>\r\n            <AddExpense\r\n              closeModal={() => setAddDialogOpen(false)}\r\n              onCreate={handleExpenseCreated}\r\n            />\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <EditExpense expense={updatedItem} closeModal={closeModalEdit} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" onClick={resfreshComponent} ref={closeButtonEdit} class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Add this MUI Dialog for viewing expense details */}\r\n        <Dialog open={viewDialogOpen} onClose={() => setViewDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle sx={{ bgcolor: '#e3f2fd', fontWeight: 700, fontSize: 22 }}>\r\n            <i className=\"fas fa-file-invoice-dollar\" style={{ color: '#1976d2', marginRight: 10 }} />\r\n            Expense Details\r\n          </DialogTitle>\r\n          <DialogContent dividers sx={{ bgcolor: '#fafdff' }}>\r\n            {viewExpense ? (\r\n              <Box sx={{ p: 2 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\r\n                  <Typography variant=\"h6\" color=\"primary\" fontWeight={700}>\r\n                    {viewExpense.expenseCategory}\r\n                  </Typography>\r\n                  <Chip\r\n                    label={viewExpense.paymentStatus}\r\n                    color={\r\n                      viewExpense.paymentStatus === 'Paid'\r\n                        ? 'success'\r\n                        : viewExpense.paymentStatus === 'Pending'\r\n                        ? 'warning'\r\n                        : 'default'\r\n                    }\r\n                    size=\"small\"\r\n                  />\r\n                </Box>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Box sx={{ mb: 2 }}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 0.5 }}>\r\n                    <b>Description:</b> {viewExpense.description}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Amount:</b> <span style={{ color: '#1976d2', fontWeight: 600 }}>{viewExpense.amount}</span>\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Payment Method:</b> {viewExpense.paymentMethod}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Vendor:</b> {viewExpense.vendorName}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Invoice ID:</b> {viewExpense.invoiceId}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Clinic ID:</b> {viewExpense.clinicId}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Transaction Date:</b> {viewExpense.transactionDate ? new Date(viewExpense.transactionDate).toLocaleString() : '-'}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Notes:</b> {viewExpense.notes || '-'}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                    <b>Receipt:</b>{' '}\r\n                    {viewExpense.receiptAttachments && viewExpense.receiptAttachments.length > 0 ? (\r\n                      <a href={viewExpense.receiptAttachments[0]} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        Download\r\n                      </a>\r\n                    ) : (\r\n                      '-'\r\n                    )}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            ) : (\r\n              <Typography color=\"text.secondary\" sx={{ p: 2 }}>No expense selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions sx={{ bgcolor: '#fafdff' }}>\r\n            <Button onClick={() => setViewDialogOpen(false)} color=\"primary\" variant=\"outlined\" sx={{ minWidth: 100 }}>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>)\r\n};\r\n\r\nExpense.propTypes = {};\r\n\r\nExpense.defaultProps = {};\r\n\r\nexport default Expense;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllIncome = () => {\r\n    return http.get(`${BASE_URL}/incomes`)\r\n}\r\nconst createIncome = data => {\r\n    return http.post(`${BASE_URL}/incomes`, data);\r\n};\r\n\r\nconst editIncome = (id, data) => {\r\n    return http.put(`${BASE_URL}/incomes/${id}`, data);\r\n};\r\n\r\nconst removeIncome = id => {\r\n    return http.delete(`${BASE_URL}/incomes/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllIncome,\r\n    createIncome,\r\n    editIncome,\r\n    removeIncome\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditIncome.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditIncome = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [patient, setPatient] = useState(props.patient);\r\n\r\n  useEffect(() => {\r\n    setPatient(props.patient)\r\n  }, [props.patient]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    patientHTTPService.editPatient(props.patient.id, data)\r\n    props.closeModal(data)\r\n    showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setPatient({ ...patient, [name]: value });\r\n  };\r\n  return (\r\n    <div className=\"EditIncome\">\r\n      EditIncome Component\r\n    </div>\r\n  )\r\n};\r\n\r\nEditIncome.propTypes = {};\r\n\r\nEditIncome.defaultProps = {};\r\n\r\nexport default EditIncome;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddIncome.css';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\n\r\nconst AddIncome = (props) => {\r\n\r\n  const initialState = {\r\n    namepatient: '',\r\n    emailpatient: '',\r\n    birth: '',\r\n    telephone: '',\r\n    gender: '',\r\n    address: '',\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [patient, setPatient] = useState(initialState);\r\n\r\n  const onSubmit = (data) => {\r\n    patientHTTPService.createPatient(data)\r\n      .then(response => {\r\n        setPatient(initialState)\r\n        props.closeModal(data)\r\n        showMessage('Confirmation', patientMessage.add, 'success')\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'warning')\r\n      });\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setPatient({ ...patient, [name]: value });\r\n  };\r\n  return (\r\n    <div className=\"AddIncome\">\r\n      AddIncome Component\r\n    </div>)\r\n};\r\n\r\nAddIncome.propTypes = {};\r\n\r\nAddIncome.defaultProps = {};\r\n\r\nexport default AddIncome;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './Income.css';\r\nimport incomeHTTPService from '../../main/services/incomeHTTPService';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LoadJSFiles } from '../init';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport EditIncome from '../EditIncome/EditIncome';\r\nimport AddIncome from '../AddIncome/AddIncome';\r\nimport { Button, LinearProgress, Link, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport { Bar } from 'react-chartjs-2';\r\nconst Income = () => {\r\n\r\n  const [incomes, setIncomes] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllIncomes()\r\n  }, []);\r\n\r\n\r\n  const getAllIncomes = () => {\r\n    setLoading(true);\r\n    incomeHTTPService.getAllIncome()\r\n      .then(response => {\r\n        setIncomes(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllIncomes()\r\n    forceUpdate()\r\n  }\r\n\r\n  const removeIncomeAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', patientMessage.delete, 'success')\r\n      incomeHTTPService.removePatient(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Confirmation', e, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateIncomeAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  \r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'incomeCategory', headerName: 'Category', width: 180 },\r\n    { field: 'description', headerName: 'Description', width: 220 },\r\n    { field: 'amount', headerName: 'Amount ($)', width: 120, type: 'number' },\r\n    { field: 'paymentMethod', headerName: 'Method', width: 130 },\r\n    { field: 'paymentStatus', headerName: 'Status', width: 130 },\r\n    {\r\n      field: 'transactionDate',\r\n      headerName: 'Date',\r\n      width: 140,\r\n      valueFormatter: ({ value }) => new Date(value).toLocaleDateString()\r\n    },\r\n    { field: 'patientId', headerName: 'Patient ID', width: 230 },\r\n    { field: 'doctorId', headerName: 'Doctor ID', width: 230 },\r\n    { field: 'invoiceId', headerName: 'Invoice ID', width: 230 },\r\n    { field: 'clinicId', headerName: 'Clinic ID', width: 230 },\r\n    {\r\n      field: 'receiptAttachments',\r\n      headerName: 'Receipt',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        params.value?.length > 0 ? (\r\n          <Link href={params.value[0]} target=\"_blank\" rel=\"noopener\">\r\n            View Receipt\r\n          </Link>\r\n        ) : '—'\r\n      )\r\n    },\r\n    { field: 'notes', headerName: 'Notes', width: 250 }\r\n  ];\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = incomes.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n  return (<div className=\"card\">\r\n\r\n    <div className=\"card-body\">\r\n      {\r\n        showChart &&\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h4>Chart</h4>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      {showFilter &&\r\n        <div className=\"row\">\r\n          <SummaryWidget />\r\n\r\n          <SummaryWidget />\r\n\r\n          <SummaryWidget />\r\n\r\n          <SummaryWidget />\r\n        </div>\r\n      }\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        <i className=\"menu-icon fa fa-bars\"></i>   Incomes\r\n      </Typography>\r\n      <br />\r\n      <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addPayment\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n      <Button onClick={e => updateIncomeAction(e, updatedItemId)} type=\"button\" data-toggle=\"modal\" data-target=\"#editMedicament\"><i class=\"fas fa-edit\"></i> Edit</Button>\r\n      <Button onClick={e => removeIncomeAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n      <Button type=\"button\" onClick={() => setShowFilter(!showFilter)} ><i class=\"fas fa-bar-chart\"></i> Show/Hide Summary</Button>\r\n      <Button type=\"button\" onClick={() => setShowChart(!showChart)} ><i class=\"fas fa-pie-chart\"></i> Show/Hide Analytics</Button>\r\n      <Button type=\"button\" onClick={() => getAllIncomes()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n      <Button type=\"button\" onClick={e => removeAll(e)} ><i class=\"fas fa-eraser\"></i> Remove All</Button>\r\n      <br /><br />\r\n      {loading ?\r\n        <LinearProgress />\r\n        : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n          rows={incomes}\r\n          columns={columns}\r\n          pageSize={5}\r\n          rowsPerPageOptions={[6]}\r\n          checkboxSelection\r\n          onSelectionModelChange={handleRowSelection}\r\n          components={{ Toolbar: GridToolbar }}\r\n        /></div>}\r\n      <button data-toggle=\"modal\" data-target=\"#addPayment\" type=\"button\" className=\"btn btn-success btn-sm\">Ajouter</button>\r\n\r\n      <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>)\r\n};\r\n\r\nIncome.propTypes = {};\r\n\r\nIncome.defaultProps = {};\r\n\r\nexport default Income;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllNote = () => {\r\n    return http.get(`${BASE_URL}/api/note`)\r\n}\r\nconst createNote = data => {\r\n    return http.post(`${BASE_URL}/api/note`, data);\r\n};\r\n\r\nconst editNote = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/note/${id}`, data);\r\n};\r\n\r\nconst removeNote = id => {\r\n    return http.delete(`${BASE_URL}/api/note/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllNote,\r\n    createNote,\r\n    editNote,\r\n    removeNote\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Note.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LoadJSFiles } from '../init';\r\nimport noteHTTPService from '../../main/services/noteHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst Note = () => {\r\n\r\n  const [notes, setNotes] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllIncomes()\r\n  }, []);\r\n\r\n\r\n  const getAllIncomes = () => {\r\n    setLoading(true);\r\n    noteHTTPService.getAllNote()\r\n      .then(response => {\r\n        setNotes(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllIncomes()\r\n    forceUpdate()\r\n  }\r\n\r\n  const removeNoteAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', patientMessage.delete, 'success')\r\n      noteHTTPService.removeNote(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Confirmation', e, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateNoteAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 200 },\r\n    { field: 'name', headerName: 'Name', width: 200 }\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    /*  if (e.length == 1) {\r\n \r\n       setUpdatedItemId(e[0])\r\n       const selectedItem = patients.find(item => item.id == e[0])\r\n       setUpdatedItem(selectedItem)\r\n       console.log(updatedItem);\r\n     }\r\n     setUpdatedItemIds(e)\r\n  */\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Notes\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addMedicament\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n        <Button onClick={e => updateNoteAction(e, updatedItemId)} type=\"button\" data-toggle=\"modal\" data-target=\"#editMedicament\"><i class=\"fas fa-edit\"></i> Edit</Button>\r\n        <Button onClick={e => removeNoteAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n        <Button type=\"button\" onClick={() => setShowFilter(!showFilter)} ><i class=\"fas fa-bar-chart\"></i> Show/Hide Summary</Button>\r\n        <Button type=\"button\" onClick={() => setShowChart(!showChart)} ><i class=\"fas fa-pie-chart\"></i> Show/Hide Analytics</Button>\r\n        <Button type=\"button\" onClick={() => getAllIncomes()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n        <Button type=\"button\" onClick={e => removeAll(e)} ><i class=\"fas fa-eraser\"></i> Remove All</Button>\r\n        <br /><br />\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={notes}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n          /></div>}\r\n        <button data-toggle=\"modal\" data-target=\"#addPayment\" type=\"button\" className=\"btn btn-success btn-sm\">Ajouter</button>\r\n\r\n        <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nNote.propTypes = {};\r\n\r\nNote.defaultProps = {};\r\n\r\nexport default Note;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllToDo = () => {\r\n    return http.get(`${BASE_URL}/api/todo`)\r\n}\r\nconst createToDo = data => {\r\n    return http.post(`${BASE_URL}/api/todo`, data);\r\n};\r\n\r\nconst editToDo = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/todo/${id}`, data);\r\n};\r\n\r\nconst removeToDo = id => {\r\n    return http.delete(`${BASE_URL}/api/todo/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllToDo,\r\n    createToDo,\r\n    editToDo,\r\n    removeToDo\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ToDo.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LoadJSFiles } from '../init';\r\nimport todoHTTPService from '../../main/services/todoHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\n\r\nimport { Bar } from 'react-chartjs-2';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\n\r\nconst ToDo = () => {\r\n\r\n  const [todos, setToDos] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllToDos()\r\n  }, []);\r\n\r\n\r\n  const getAllToDos = () => {\r\n    setLoading(true);\r\n    todoHTTPService.getAllToDo()\r\n      .then(response => {\r\n        setToDos(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllToDos()\r\n    forceUpdate()\r\n  }\r\n\r\n  const removeIncomeAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', patientMessage.delete, 'success')\r\n      todoHTTPService.removeToDo(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Confirmation', e, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateIncomeAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 200 },\r\n    { field: 'name_income', headerName: 'Name', width: 200 },\r\n    { field: 'amount', headerName: 'Amount', width: 200 },\r\n    { field: 'datee', headerName: 'Date', width: 200 },\r\n    { field: 'note', headerName: 'Note', width: 200 },\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = todos.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n\r\n\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Tasks\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addMedicament\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n        <Button onClick={e => updateIncomeAction(e, updatedItemId)} type=\"button\" data-toggle=\"modal\" data-target=\"#editMedicament\"><i class=\"fas fa-edit\"></i> Edit</Button>\r\n        <Button onClick={e => removeIncomeAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n        <Button type=\"button\" onClick={() => setShowFilter(!showFilter)} ><i class=\"fas fa-bar-chart\"></i> Show/Hide Summary</Button>\r\n        <Button type=\"button\" onClick={() => setShowChart(!showChart)} ><i class=\"fas fa-pie-chart\"></i> Show/Hide Analytics</Button>\r\n        <Button type=\"button\" onClick={() => getAllToDos()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n        <Button type=\"button\" onClick={e => removeAll(e)} ><i class=\"fas fa-eraser\"></i> Remove All</Button>\r\n        <br /><br />\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={todos}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n          /></div>}\r\n        <button data-toggle=\"modal\" data-target=\"#addPayment\" type=\"button\" className=\"btn btn-success btn-sm\">Ajouter</button>\r\n\r\n        <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nToDo.propTypes = {};\r\n\r\nToDo.defaultProps = {};\r\n\r\nexport default ToDo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Message.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport messageHTTPService from '../../main/services/messageHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n  CircularProgress,\r\n  IconButton,\r\n  Tooltip,\r\n  Box,\r\n  Divider,\r\n  Stack\r\n} from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport SubjectIcon from '@mui/icons-material/Subject';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst Message = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [openConfirmDialog, setOpenConfirmDialog] = useState(false);\r\n  const [openViewDialog, setOpenViewDialog] = useState(false);\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    getAllMessages();\r\n  }, []);\r\n\r\n  const getAllMessages = () => {\r\n    setLoading(true);\r\n    messageHTTPService.getAllMessage()\r\n      .then(response => {\r\n        setMessages(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedMessage) {\r\n      messageHTTPService.removeMessage(selectedMessage)\r\n        .then(() => {\r\n          showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success');\r\n          getAllMessages();\r\n        })\r\n        .catch(() => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n        });\r\n    }\r\n    setOpenConfirmDialog(false);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const filteredMessages = messages.filter(message =>\r\n    message.name?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    message.subject?.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    message.message?.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n    { field: 'name', headerName: 'From', width: 200 },\r\n    { field: 'subject', headerName: 'Subject', width: 200 },\r\n    { field: 'message', headerName: 'Message', width: 200 },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Box>\r\n          <Tooltip title=\"View\">\r\n            <IconButton\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                setSelectedMessage(params.row);\r\n                setOpenViewDialog(true);\r\n              }}\r\n            >\r\n              <VisibilityIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                setSelectedMessage(params.row);\r\n                setOpenConfirmDialog(true);\r\n              }}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i> Messages\r\n        </Typography>\r\n\r\n        <TextField\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={searchQuery}\r\n          onChange={handleSearch}\r\n        />\r\n\r\n        {loading ? (\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '200px' }}>\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredMessages}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection={false}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* View Message Dialog */}\r\n        <Dialog\r\n          open={openViewDialog}\r\n          onClose={() => setOpenViewDialog(false)}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n          PaperProps={{\r\n            sx: {\r\n              borderRadius: 3,\r\n              bgcolor: '#fafdff',\r\n              boxShadow: 6,\r\n            }\r\n          }}\r\n        >\r\n          <DialogTitle sx={{ bgcolor: '#1976d2', color: '#fff', pb: 2, borderTopLeftRadius: 12, borderTopRightRadius: 12 }}>\r\n            <MessageIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n            View Message\r\n          </DialogTitle>\r\n          <DialogContent dividers sx={{ p: 3 }}>\r\n            {selectedMessage && (\r\n              <Box>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 2 }}>\r\n                  <PersonIcon color=\"primary\" />\r\n                  <Typography variant=\"subtitle1\" fontWeight={600}>\r\n                    {selectedMessage.name}\r\n                  </Typography>\r\n                </Stack>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 2 }}>\r\n                  <EmailIcon color=\"action\" />\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {selectedMessage.email || '-'}\r\n                  </Typography>\r\n                </Stack>\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 2 }}>\r\n                  <SubjectIcon color=\"secondary\" />\r\n                  <Typography variant=\"body2\" fontWeight={500}>\r\n                    {selectedMessage.subject}\r\n                  </Typography>\r\n                </Stack>\r\n                <Divider sx={{ my: 2 }} />\r\n                <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-line', fontSize: 17 }}>\r\n                  {selectedMessage.message}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions sx={{ bgcolor: '#f5f5f5', borderBottomLeftRadius: 12, borderBottomRightRadius: 12 }}>\r\n            <Button onClick={() => setOpenViewDialog(false)} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Delete Confirmation Dialog */}\r\n        <Dialog\r\n          open={openConfirmDialog}\r\n          onClose={() => setOpenConfirmDialog(false)}\r\n        >\r\n          <DialogTitle>Confirmation</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Are you sure you want to delete this message?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setOpenConfirmDialog(false)} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDelete} color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {};\r\nMessage.defaultProps = {};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack, Typography, IconButton } from '@mui/material';\r\nimport medicamentManufactureHTTPService from '../../main/services/medicamentManufactureHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statusOptions = ['Available', 'Unavailable', 'Expired'];\r\n\r\nconst AddMedicament = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    genericName: '',\r\n    category: '',\r\n    description: '',\r\n    activeIngredients: [{ ingredient: '', concentration: '' }],\r\n    dosageForm: '',\r\n    strength: '',\r\n    manufacturerId: '',\r\n    requiresPrescription: 'Yes',\r\n    sideEffects: [''],\r\n    contraindications: [''],\r\n    usageInstructions: '',\r\n    stockQuantity: '',\r\n    pricePerUnit: '',\r\n    expirationDate: '',\r\n    storageConditions: '',\r\n    barcode: '',\r\n    batchNumber: '',\r\n    status: 'Available',\r\n    // Add missing fields for manufacturer\r\n    contactPerson: {\r\n      fullName: '',\r\n      phone: '',\r\n      email: ''\r\n    },\r\n    address: {\r\n      street: '',\r\n      city: '',\r\n      state: '',\r\n      postalCode: '',\r\n      country: ''\r\n    },\r\n    phone: '',\r\n    email: '',\r\n    website: '',\r\n    licenseNumber: '',\r\n    certifications: [],\r\n    medicamentsSupplied: [],\r\n    contractStartDate: '',\r\n    contractEndDate: '',\r\n    manufactureStatus: 'Active' // renamed to avoid conflict with medicament status\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Replace with your actual service/API for medicament categories\r\n    // Example: medicamentCategoryHTTPService.getAllCategories()\r\n    fetch(BASE_URL+'/medicament-categories')\r\n      .then(res => res.json())\r\n      .then(data => setCategories(data || []))\r\n      .catch(() => setCategories([]));\r\n  }, []);\r\n\r\n  // Handlers for main fields\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  // Active Ingredients\r\n  const handleIngredientChange = (idx, field, value) => {\r\n    const activeIngredients = [...form.activeIngredients];\r\n    activeIngredients[idx][field] = value;\r\n    setForm(f => ({ ...f, activeIngredients }));\r\n  };\r\n  const addIngredient = () => setForm(f => ({\r\n    ...f,\r\n    activeIngredients: [...f.activeIngredients, { ingredient: '', concentration: '' }]\r\n  }));\r\n  const removeIngredient = idx => setForm(f => ({\r\n    ...f,\r\n    activeIngredients: f.activeIngredients.length > 1\r\n      ? f.activeIngredients.filter((_, i) => i !== idx)\r\n      : [{ ingredient: '', concentration: '' }]\r\n  }));\r\n\r\n  // Side Effects\r\n  const handleSideEffectChange = (idx, value) => {\r\n    const sideEffects = [...form.sideEffects];\r\n    sideEffects[idx] = value;\r\n    setForm(f => ({ ...f, sideEffects }));\r\n  };\r\n  const addSideEffect = () => setForm(f => ({ ...f, sideEffects: [...f.sideEffects, ''] }));\r\n  const removeSideEffect = idx => setForm(f => ({\r\n    ...f,\r\n    sideEffects: f.sideEffects.length > 1\r\n      ? f.sideEffects.filter((_, i) => i !== idx)\r\n      : ['']\r\n  }));\r\n\r\n  // Contraindications\r\n  const handleContraindicationChange = (idx, value) => {\r\n    const contraindications = [...form.contraindications];\r\n    contraindications[idx] = value;\r\n    setForm(f => ({ ...f, contraindications }));\r\n  };\r\n  const addContraindication = () => setForm(f => ({ ...f, contraindications: [...f.contraindications, ''] }));\r\n  const removeContraindication = idx => setForm(f => ({\r\n    ...f,\r\n    contraindications: f.contraindications.length > 1\r\n      ? f.contraindications.filter((_, i) => i !== idx)\r\n      : ['']\r\n  }));\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n\r\n    // Validation for required fields\r\n    if (\r\n      !form.name ||\r\n      !form.genericName ||\r\n      !form.category ||\r\n      !form.description ||\r\n      !form.dosageForm ||\r\n      !form.strength ||\r\n      !form.manufacturerId ||\r\n      !form.usageInstructions ||\r\n      !form.stockQuantity ||\r\n      !form.pricePerUnit ||\r\n      !form.expirationDate ||\r\n      !form.storageConditions ||\r\n      !form.barcode ||\r\n      !form.batchNumber ||\r\n      !form.status\r\n    ) {\r\n      showMessage('Error', 'Please fill all required fields.', 'warning');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      name: form.name,\r\n      genericName: form.genericName,\r\n      category: form.category,\r\n      description: form.description,\r\n      activeIngredients: form.activeIngredients.filter(ai => ai.ingredient && ai.concentration),\r\n      dosageForm: form.dosageForm,\r\n      strength: form.strength,\r\n      manufacturerId: Number(form.manufacturerId),\r\n      requiresPrescription: form.requiresPrescription,\r\n      sideEffects: form.sideEffects.filter(s => s.trim() !== ''),\r\n      contraindications: form.contraindications.filter(c => c.trim() !== ''),\r\n      usageInstructions: form.usageInstructions,\r\n      stockQuantity: Number(form.stockQuantity),\r\n      pricePerUnit: Number(form.pricePerUnit),\r\n      expirationDate: new Date(form.expirationDate).toISOString(),\r\n      storageConditions: form.storageConditions,\r\n      barcode: form.barcode,\r\n      batchNumber: form.batchNumber,\r\n      status: form.status,\r\n      contactPerson: form.contactPerson,\r\n      address: form.address,\r\n      phone: form.phone,\r\n      email: form.email,\r\n      website: form.website,\r\n      licenseNumber: form.licenseNumber,\r\n      certifications: form.certifications,\r\n      medicamentsSupplied: form.medicamentsSupplied,\r\n      contractStartDate: form.contractStartDate ? new Date(form.contractStartDate).toISOString() : '',\r\n      contractEndDate: form.contractEndDate ? new Date(form.contractEndDate).toISOString() : '',\r\n      manufactureStatus: form.manufactureStatus,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n\r\n    try {\r\n      await medicamentManufactureHTTPService.createMedicamentManufacture(data);\r\n      showMessage('Success', 'Medicament created successfully', 'success');\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } catch (e) {\r\n      showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2, minWidth: 400 }}>\r\n      <Stack spacing={2}>\r\n        <TextField label=\"Name\" name=\"name\" value={form.name} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Generic Name\" name=\"genericName\" value={form.genericName} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Category\"\r\n          name=\"category\"\r\n          value={form.category}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {categories.map(cat => (\r\n            <MenuItem key={cat.id || cat._id || cat.name} value={cat.name}>\r\n              {cat.name}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField label=\"Description\" name=\"description\" value={form.description} onChange={handleChange} required fullWidth />\r\n\r\n        <Typography variant=\"subtitle2\">Active Ingredients</Typography>\r\n        {form.activeIngredients.map((ai, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              label=\"Ingredient\"\r\n              value={ai.ingredient}\r\n              onChange={e => handleIngredientChange(idx, 'ingredient', e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Concentration\"\r\n              value={ai.concentration}\r\n              onChange={e => handleIngredientChange(idx, 'concentration', e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <IconButton color=\"error\" onClick={() => removeIngredient(idx)} disabled={form.activeIngredients.length === 1}>\r\n              <span className=\"fa fa-minus\" />\r\n            </IconButton>\r\n            {idx === form.activeIngredients.length - 1 && (\r\n              <IconButton color=\"success\" onClick={addIngredient}>\r\n                <span className=\"fa fa-plus\" />\r\n              </IconButton>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <TextField label=\"Dosage Form\" name=\"dosageForm\" value={form.dosageForm} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Strength\" name=\"strength\" value={form.strength} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Manufacturer ID\" name=\"manufacturerId\" value={form.manufacturerId} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Requires Prescription\"\r\n          name=\"requiresPrescription\"\r\n          value={form.requiresPrescription}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"Yes\">Yes</MenuItem>\r\n          <MenuItem value=\"No\">No</MenuItem>\r\n        </TextField>\r\n\r\n        <Typography variant=\"subtitle2\">Side Effects</Typography>\r\n        {form.sideEffects.map((side, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              value={side}\r\n              onChange={e => handleSideEffectChange(idx, e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <IconButton color=\"error\" onClick={() => removeSideEffect(idx)} disabled={form.sideEffects.length === 1}>\r\n              <span className=\"fa fa-minus\" />\r\n            </IconButton>\r\n            {idx === form.sideEffects.length - 1 && (\r\n              <IconButton color=\"success\" onClick={addSideEffect}>\r\n                <span className=\"fa fa-plus\" />\r\n              </IconButton>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <Typography variant=\"subtitle2\">Contraindications</Typography>\r\n        {form.contraindications.map((contra, idx) => (\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={idx}>\r\n            <TextField\r\n              value={contra}\r\n              onChange={e => handleContraindicationChange(idx, e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n            />\r\n            <IconButton color=\"error\" onClick={() => removeContraindication(idx)} disabled={form.contraindications.length === 1}>\r\n              <span className=\"fa fa-minus\" />\r\n            </IconButton>\r\n            {idx === form.contraindications.length - 1 && (\r\n              <IconButton color=\"success\" onClick={addContraindication}>\r\n                <span className=\"fa fa-plus\" />\r\n              </IconButton>\r\n            )}\r\n          </Stack>\r\n        ))}\r\n\r\n        <TextField label=\"Usage Instructions\" name=\"usageInstructions\" value={form.usageInstructions} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Stock Quantity\" name=\"stockQuantity\" type=\"number\" value={form.stockQuantity} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Price Per Unit\" name=\"pricePerUnit\" type=\"number\" value={form.pricePerUnit} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          label=\"Expiration Date\"\r\n          name=\"expirationDate\"\r\n          type=\"date\"\r\n          value={form.expirationDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField label=\"Storage Conditions\" name=\"storageConditions\" value={form.storageConditions} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Barcode\" name=\"barcode\" value={form.barcode} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Batch Number\" name=\"batchNumber\" value={form.batchNumber} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n        {/* Manufacturer Details Section */}\r\n        <Typography variant=\"h6\" sx={{ mt: 3 }}>Manufacturer Details</Typography>\r\n        <TextField label=\"Contact Person\" name=\"contactPerson.fullName\" value={form.contactPerson.fullName} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Phone\" name=\"contactPerson.phone\" value={form.contactPerson.phone} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Email\" name=\"contactPerson.email\" value={form.contactPerson.email} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Street\" name=\"address.street\" value={form.address.street} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"City\" name=\"address.city\" value={form.address.city} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"State\" name=\"address.state\" value={form.address.state} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Postal Code\" name=\"address.postalCode\" value={form.address.postalCode} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Country\" name=\"address.country\" value={form.address.country} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Phone\" name=\"phone\" value={form.phone} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Email\" name=\"email\" value={form.email} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"Website\" name=\"website\" value={form.website} onChange={handleChange} required fullWidth />\r\n        <TextField label=\"License Number\" name=\"licenseNumber\" value={form.licenseNumber} onChange={handleChange} required fullWidth />\r\n        <TextField\r\n          select\r\n          label=\"Certifications\"\r\n          name=\"certifications\"\r\n          value={form.certifications}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"GMP\">GMP</MenuItem>\r\n          <MenuItem value=\"ISO\">ISO</MenuItem>\r\n          <MenuItem value=\"Other\">Other</MenuItem>\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Medicaments Supplied\"\r\n          name=\"medicamentsSupplied\"\r\n          value={form.medicamentsSupplied}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"Medicament A\">Medicament A</MenuItem>\r\n          <MenuItem value=\"Medicament B\">Medicament B</MenuItem>\r\n          <MenuItem value=\"Medicament C\">Medicament C</MenuItem>\r\n        </TextField>\r\n        <TextField\r\n          label=\"Contract Start Date\"\r\n          name=\"contractStartDate\"\r\n          type=\"date\"\r\n          value={form.contractStartDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Contract End Date\"\r\n          name=\"contractEndDate\"\r\n          type=\"date\"\r\n          value={form.contractEndDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Manufacture Status\"\r\n          name=\"manufactureStatus\"\r\n          value={form.manufactureStatus}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          <MenuItem value=\"Active\">Active</MenuItem>\r\n          <MenuItem value=\"Inactive\">Inactive</MenuItem>\r\n        </TextField>\r\n\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Medicament'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddMedicament;","\r\nimport PropTypes from 'prop-types';\r\nimport './EditMedicamentManufacture.css';\r\nimport medicamentManufactureHTTPService from '../../main/services/medicamentManufactureHTTPService';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nconst EditMedicamentManufacture = (props) => {\r\n\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [medicamentManufacture, setMedicamentManufacture] = useState(props.medicamentManufacture);\r\n  const [typeSubs, setTypeSubs] = useState([]);\r\n  const [members, setMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMedicamentManufacture(props.medicamentManufacture)\r\n\r\n  }, [props.medicamentManufacture]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //ActivityTestService.update(props.medicamentManufacture, data)\r\n    medicamentManufactureHTTPService.editMedicamentManufacture(props.medicamentManufacture.id, data).then(data => {\r\n      props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setMedicamentManufacture({ ...medicamentManufacture, [name]: value });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"EditActivity\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Manufacture:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={medicamentManufacture?.name} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nEditMedicamentManufacture.propTypes = {};\r\n\r\nEditMedicamentManufacture.defaultProps = {};\r\n\r\nexport default EditMedicamentManufacture;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './MedicamentManufacture.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport medicamentManufactureHTTPService from '../../main/services/medicamentManufactureHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nimport AddMedicamentManufacture from './AddMedicamentManufacture';\r\nimport EditMedicamentManufacture from '../EditMedicamentManufacture/EditMedicamentManufacture';\r\nimport { Button, Chip, LinearProgress, Menu, MenuItem, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Divider, Box, Stack } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst MedicamentManufacture = () => {\r\n  const [medicamentManufactures, setMedicamentManufactures] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [viewItem, setViewItem] = useState(null);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    setLoading(true);\r\n    medicamentManufactureHTTPService.getAllMedicamentManufacture()\r\n      .then(response => {\r\n        // Ensure every row has a unique id\r\n        const formatted = response.data.map((item, index) => ({\r\n          ...item,\r\n          id: item.id ? item.id : (item.barcode ? item.barcode : index + 1) // Use id, else barcode, else index\r\n        }));\r\n        setMedicamentManufactures(formatted);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    setUpdatedItemIds(ids);\r\n    if (ids.length === 1) {\r\n      const selected = medicamentManufactures.find(item => item.id === ids[0]);\r\n      setUpdatedItemId(ids[0]);\r\n      setUpdatedItem(selected || {});\r\n    }\r\n  };\r\n\r\n  const removeMedicamentManufactureAction = (e, ids) => {\r\n    e.preventDefault();\r\n    if (!ids.length) return;\r\n    if (window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\")) {\r\n      // You may want to loop and delete each or support batch delete\r\n      medicamentManufactureHTTPService.removeMedicamentManufacture(ids[0])\r\n        .then(() => {\r\n          fetchData();\r\n          showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success');\r\n        }).catch(() => {\r\n          showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n        });\r\n    }\r\n  };\r\n\r\n  const closeModalEdit = () => {\r\n    fetchData();\r\n    closeButtonEdit.current.click();\r\n  };\r\n\r\n  const closeModalAdd = () => {\r\n    fetchData();\r\n    closeButtonAdd.current.click();\r\n  };\r\n\r\n  // Update actions menu for View\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton onClick={(event) => { setAnchorEl(event.currentTarget); setSelectedRow(params.row); }}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\r\n        <MenuItem onClick={() => {\r\n          setViewItem(params.row);\r\n          setViewOpen(true);\r\n          setAnchorEl(null);\r\n        }}>View</MenuItem>\r\n        <MenuItem onClick={() => {/* Edit logic */}}>Edit</MenuItem>\r\n        <MenuItem onClick={() => {/* Delete logic */}}>Delete</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  // Columns for MedicamentManufacture table (delete id column, add chip for status, add actions column)\r\n  const columns = [\r\n    // { field: 'id', headerName: '#', width: 60 }, // deleted\r\n    { field: 'name', headerName: 'Manufacture', width: 150 },\r\n    { field: 'licenseNumber', headerName: 'License No.', width: 130 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Active'\r\n              ? 'success'\r\n              : params.value === 'Inactive'\r\n              ? 'default'\r\n              : 'warning'\r\n          }\r\n          size=\"small\"\r\n          variant=\"filled\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    { field: 'phone', headerName: 'Phone', width: 140 },\r\n    { field: 'email', headerName: 'Email', width: 200 },\r\n    {\r\n      field: 'website',\r\n      headerName: 'Website',\r\n      width: 180,\r\n      renderCell: (params) => (\r\n        <a href={params.value} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {params.value}\r\n        </a>\r\n      )\r\n    },\r\n    {\r\n      field: 'contactPerson',\r\n      headerName: 'Contact',\r\n      width: 230,\r\n      renderCell: (params) => {\r\n        const cp = params.row.contactPerson;\r\n        return cp ? (\r\n          <div>\r\n            <div><strong>{cp.fullName}</strong></div>\r\n            <div>{cp.email}</div>\r\n            <div>{cp.phone}</div>\r\n          </div>\r\n        ) : 'N/A';\r\n      }\r\n    },\r\n    {\r\n      field: 'address',\r\n      headerName: 'Address',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        const addr = params.row.address;\r\n        return addr ? `${addr.street}, ${addr.city}, ${addr.state}, ${addr.country} ${addr.postalCode}` : 'N/A';\r\n      }\r\n    },\r\n    {\r\n      field: 'certifications',\r\n      headerName: 'Certifications',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {(params.row.certifications || []).map((cert, i) => (\r\n            <Chip key={i} label={cert} color=\"warning\" variant=\"outlined\" size=\"small\" sx={{ mb: 0.5 }} />\r\n          ))}\r\n        </Box>\r\n      )\r\n    },\r\n    {\r\n      field: 'medicamentsSupplied',\r\n      headerName: 'Medicaments',\r\n      width: 250,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {(params.row.medicamentsSupplied || []).map((med, i) => (\r\n            <Chip key={i} label={`${med.name} (${med.batchNumber})`} color=\"success\" variant=\"outlined\" size=\"small\" sx={{ mb: 0.5 }} />\r\n          ))}\r\n        </Box>\r\n      )\r\n    },\r\n    {\r\n      field: 'contractStartDate',\r\n      headerName: 'Start Date',\r\n      width: 120,\r\n      valueGetter: (params) => new Date(params.value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'contractEndDate',\r\n      headerName: 'End Date',\r\n      width: 120,\r\n      valueGetter: (params) => new Date(params.value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Created At',\r\n      width: 160,\r\n      valueGetter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      renderCell: renderActionsMenu\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i> Medicaments Manufactures\r\n        </Typography>\r\n\r\n        <Button\r\n          type=\"button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#addModal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n        >\r\n          <i className=\"fas fa-plus\"></i> Create\r\n        </Button>\r\n        <Button\r\n          type=\"button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#editModal\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n        >\r\n          <i className=\"fas fa-edit\"></i> Edit\r\n        </Button>\r\n        <Button\r\n          onClick={e => removeMedicamentManufactureAction(e, updatedItemIds)}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mr: 1, mb: 2, fontWeight: 600 }}\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i> Remove\r\n        </Button>\r\n        <Button\r\n          onClick={fetchData}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, fontWeight: 600 }}\r\n        >\r\n          <i className=\"fas fa-refresh\"></i> Reload\r\n        </Button>\r\n\r\n        <br /><br />\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n              rows={medicamentManufactures}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Modal */}\r\n        <div className=\"modal fade\" id=\"addModal\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">New Manufacture</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                  <span>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <AddMedicamentManufacture closeModal={closeModalAdd} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" ref={closeButtonAdd} className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Modal */}\r\n        <div className=\"modal fade\" id=\"editModal\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Manufacture</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                  <span>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <EditMedicamentManufacture medicamentManufacture={updatedItem} closeModal={closeModalEdit} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" ref={closeButtonEdit} className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* View Dialog */}\r\n        <Dialog open={viewOpen} onClose={() => setViewOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            <span style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n              <i className=\"fas fa-industry\" style={{ color: '#1976d2', fontSize: 22 }} />\r\n              Manufacture Details\r\n            </span>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {viewItem ? (\r\n              <Box\r\n                sx={{\r\n                  bgcolor: '#fafdff',\r\n                  borderRadius: 2,\r\n                  boxShadow: 1,\r\n                  p: { xs: 2, sm: 3 },\r\n                  minWidth: 320,\r\n                  minHeight: 200,\r\n                  mb: 2\r\n                }}\r\n              >\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip\r\n                    label={viewItem.status}\r\n                    color={viewItem.status === 'Active' ? 'success' : viewItem.status === 'Inactive' ? 'default' : 'warning'}\r\n                    icon={<i className=\"fas fa-check-circle\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`License: ${viewItem.licenseNumber || '-'}`}\r\n                    color=\"info\"\r\n                    icon={<i className=\"fas fa-id-card\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Phone: ${viewItem.phone || '-'}`}\r\n                    color=\"primary\"\r\n                    icon={<i className=\"fas fa-phone\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Email: ${viewItem.email || '-'}`}\r\n                    color=\"primary\"\r\n                    icon={<i className=\"fas fa-envelope\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle1\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  General Info:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip\r\n                    label={`Name: ${viewItem.name || '-'}`}\r\n                    color=\"default\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Website: ${viewItem.website || '-'}`}\r\n                    color=\"info\"\r\n                    icon={<i className=\"fas fa-globe\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                    component=\"a\"\r\n                    href={viewItem.website}\r\n                    target=\"_blank\"\r\n                    clickable={!!viewItem.website}\r\n                  />\r\n                </Stack>\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Contact Person:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip\r\n                    label={viewItem.contactPerson?.fullName || '-'}\r\n                    color=\"primary\"\r\n                    icon={<i className=\"fas fa-user\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={viewItem.contactPerson?.email || '-'}\r\n                    color=\"info\"\r\n                    icon={<i className=\"fas fa-envelope\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={viewItem.contactPerson?.phone || '-'}\r\n                    color=\"success\"\r\n                    icon={<i className=\"fas fa-phone\"></i>}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Address:\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n                  {viewItem.address\r\n                    ? `${viewItem.address.street}, ${viewItem.address.city}, ${viewItem.address.state}, ${viewItem.address.country} ${viewItem.address.postalCode}`\r\n                    : '-'}\r\n                </Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Certifications:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewItem.certifications || []).length > 0 ? (\r\n                    viewItem.certifications.map((cert, i) => (\r\n                      <Chip key={i} label={cert} color=\"warning\" variant=\"outlined\" sx={{ mb: 1 }} />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">No certifications listed.</Typography>\r\n                  )}\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle2\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Medicaments Supplied:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewItem.medicamentsSupplied || []).length > 0 ? (\r\n                    viewItem.medicamentsSupplied.map((med, i) => (\r\n                      <Chip key={i} label={`${med.name} (${med.batchNumber})`} color=\"success\" variant=\"outlined\" sx={{ mb: 1 }} />\r\n                    ))\r\n                  ) : (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">No medicaments listed.</Typography>\r\n                  )}\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip\r\n                    label={`Contract Start: ${viewItem.contractStartDate ? new Date(viewItem.contractStartDate).toLocaleDateString() : '-'}`}\r\n                    color=\"info\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Contract End: ${viewItem.contractEndDate ? new Date(viewItem.contractEndDate).toLocaleDateString() : '-'}`}\r\n                    color=\"warning\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Created: ${viewItem.createdAt ? new Date(viewItem.createdAt).toLocaleString() : '-'}`}\r\n                    color=\"default\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No manufacture selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"secondary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MedicamentManufacture;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, TextField, Stack } from '@mui/material';\r\nimport medicamentCategoryHTTPService from '../../main/services/medicamentCategoryHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst AddMedicamentCategory = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    description: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      name: form.name,\r\n      description: form.description,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await medicamentCategoryHTTPService.createMedicamentCayegory(data);\r\n      showMessage('Success', 'Category created successfully', 'success');\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } catch (e) {\r\n      showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2, minWidth: 350 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          value={form.name}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          value={form.description}\r\n          onChange={handleChange}\r\n          multiline\r\n          rows={3}\r\n          required\r\n          fullWidth\r\n        />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Category'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddMedicamentCategory;","\r\nimport PropTypes from 'prop-types';\r\nimport './EditMedicamentCategory.css';\r\nimport medicamentCategoryHTTPService from '../../main/services/medicamentCategoryHTTPService';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nconst EditMedicamentCategory = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [medicamentCategory, setMedicamentCategory] = useState(props.medicamentCategory);\r\n  const [typeSubs, setTypeSubs] = useState([]);\r\n  const [members, setMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setMedicamentCategory(props.medicamentCategory)\r\n\r\n  }, [props.medicamentCategory]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //ActivityTestService.update(props.medicamentCategory, data)\r\n    medicamentCategoryHTTPService.editMedicamentCayegory(props.medicamentCategory.id, data).then(data => {\r\n      props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setMedicamentCategory({ ...medicamentCategory, [name]: value });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"EditActivity\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  >Medecine Category:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={medicamentCategory?.name} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\" col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nEditMedicamentCategory.propTypes = {};\r\n\r\nEditMedicamentCategory.defaultProps = {};\r\n\r\nexport default EditMedicamentCategory;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button, LinearProgress, Typography, IconButton, Menu, MenuItem } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport useForceUpdate from 'use-force-update';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MedicamentCategory.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport medicamentCategoryHTTPService from '../../main/services/medicamentCategoryHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\n\r\nimport AddMedicamentCategory from './AddMedicamentCategory';\r\nimport EditMedicamentCategory from '../EditMedicamentCategory/EditMedicamentCategory';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\n\r\n\r\nconst MedicamentCategory = () => {\r\n  const [medicamentsCategories, setMedicamentsCategories] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    getAllIncomes();\r\n  }, []);\r\n\r\n  const getAllIncomes = () => {\r\n    setLoading(true);\r\n    medicamentCategoryHTTPService.getAllMedicamentCayegory()\r\n      .then(response => {\r\n        const formatted = response.data.map((item, index) => ({\r\n          ...item,\r\n          id: item.id || index + 1,\r\n        }));\r\n        setMedicamentsCategories(formatted);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const resfreshComponent = () => {\r\n    getAllIncomes();\r\n    forceUpdate();\r\n  };\r\n\r\n  const removeMedicamentCategoryAction = (e, data) => {\r\n    e.preventDefault();\r\n    if (window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\")) {\r\n      showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success');\r\n      medicamentCategoryHTTPService.removeMedicamentCayegory(data)\r\n        .then(() => resfreshComponent())\r\n        .catch(() => showMessage('Error', CurrentUser.ERR_MSG, 'warning'));\r\n    }\r\n  };\r\n\r\n  const updateMedicamentCategoryAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data);\r\n    resfreshComponent();\r\n  };\r\n\r\n  const closeModalEdit = () => {\r\n    resfreshComponent();\r\n    closeButtonEdit.current.click();\r\n  };\r\n\r\n  const closeModalAdd = () => {\r\n    resfreshComponent();\r\n    closeButtonAdd.current.click();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      setUpdatedItemId(ids[0]);\r\n      const selectedItem = medicamentsCategories.find(item => item.id === ids[0]);\r\n      setUpdatedItem(selectedItem);\r\n    }\r\n    setUpdatedItemIds(ids);\r\n  };\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setUpdatedItem(actionRow);\r\n    setUpdatedItemId(actionRow.id);\r\n    document.querySelector('[data-target=\"#editPatient\"]').click();\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    removeMedicamentCategoryAction({ preventDefault: () => {} }, [actionRow.id]);\r\n    handleActionClose();\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 70 },\r\n    { field: 'name', headerName: 'Category', width: 150 },\r\n    {\r\n      field: 'description',\r\n      headerName: 'Description',\r\n      width: 250\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 90,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"action-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleActionClick(event, params.row)}\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        {showChart && (\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {showFilter && (\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n            <SummaryWidget />\r\n          </div>\r\n        )}\r\n\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i> Medicaments Categories\r\n        </Typography>\r\n\r\n        <Button data-toggle=\"modal\" data-target=\"#addPayment\">\r\n          <i className=\"fas fa-plus\"></i> Create\r\n        </Button>\r\n        <Button onClick={(e) => updateMedicamentCategoryAction(e, updatedItemId)} data-toggle=\"modal\" data-target=\"#editPatient\">\r\n          <i className=\"fas fa-edit\"></i> Edit\r\n        </Button>\r\n        <Button onClick={(e) => removeMedicamentCategoryAction(e, updatedItemIds)}>\r\n          <i className=\"fas fa-trash-alt\"></i> Remove\r\n        </Button>\r\n        <Button onClick={getAllIncomes}>\r\n          <i className=\"fas fa-refresh\"></i> Reload\r\n        </Button>\r\n\r\n        <br /><br />\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={medicamentsCategories}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              id=\"action-menu\"\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleEdit}>Edit</MenuItem>\r\n              <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Modal */}\r\n        <div className=\"modal fade\" id=\"addPayment\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Nouveau</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <AddMedicamentCategory closeModal={closeModalAdd} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" onClick={resfreshComponent} ref={closeButtonAdd} className=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                  Fermer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Modal */}\r\n        <div className=\"modal fade\" id=\"editPatient\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span>&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <EditMedicamentCategory closeModal={closeModalEdit} medicamentCategory={updatedItem} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" onClick={resfreshComponent} ref={closeButtonEdit} className=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                  Fermer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMedicamentCategory.propTypes = {};\r\nMedicamentCategory.defaultProps = {};\r\n\r\nexport default MedicamentCategory;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllTestLab = () => {\r\n    return http.get(`${BASE_URL}/labtests`)\r\n}\r\nconst createTestLab = data => {\r\n    return http.post(`${BASE_URL}/labtests`, data);\r\n};\r\n\r\nconst editTestLab = (id, data) => {\r\n    return http.put(`${BASE_URL}/labtests/${id}`, data);\r\n};\r\n\r\nconst removeTestLab = id => {\r\n    return http.delete(`${BASE_URL}/labtests/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllTestLab,\r\n    createTestLab,\r\n    editTestLab,\r\n    removeTestLab\r\n};","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['Pending', 'In Progress', 'Completed', 'Cancelled'];\r\nconst insuranceOptions = ['Yes', 'No'];\r\nconst paymentStatuses = ['Paid', 'Unpaid', 'Pending'];\r\n\r\nconst AddLabTest = ({ closeModal, patients = [], doctors = [], clinics = [], laboratories = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicId: '',\r\n    testName: '',\r\n    testCategory: '',\r\n    testDescription: '',\r\n    sampleType: '',\r\n    sampleCollectionDate: '',\r\n    sampleCollectedBy: '',\r\n    testStatus: 'Pending',\r\n    result: {},\r\n    laboratoryId: '',\r\n    testCost: 0,\r\n    insuranceCovered: '',\r\n    paymentStatus: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const labTestData = {\r\n      ...form,\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/labtests`, labTestData);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(p => (\r\n          <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(d => (\r\n          <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic\"\r\n        name=\"clinicId\"\r\n        value={form.clinicId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {clinics.map(c => (\r\n          <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Test Name\"\r\n        name=\"testName\"\r\n        value={form.testName}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Test Category\"\r\n        name=\"testCategory\"\r\n        value={form.testCategory}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Test Description\"\r\n        name=\"testDescription\"\r\n        value={form.testDescription}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <TextField\r\n        label=\"Sample Type\"\r\n        name=\"sampleType\"\r\n        value={form.sampleType}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Sample Collection Date\"\r\n        name=\"sampleCollectionDate\"\r\n        type=\"datetime-local\"\r\n        value={form.sampleCollectionDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Sample Collected By\"\r\n        name=\"sampleCollectedBy\"\r\n        value={form.sampleCollectedBy}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Test Status\"\r\n        name=\"testStatus\"\r\n        value={form.testStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {statuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Laboratory\"\r\n        name=\"laboratoryId\"\r\n        value={form.laboratoryId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {laboratories.map(l => (\r\n          <MenuItem key={l.id} value={l.id}>{l.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Test Cost\"\r\n        name=\"testCost\"\r\n        type=\"number\"\r\n        value={form.testCost}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Insurance Covered\"\r\n        name=\"insuranceCovered\"\r\n        value={form.insuranceCovered}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {insuranceOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Payment Status\"\r\n        name=\"paymentStatus\"\r\n        value={form.paymentStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {paymentStatuses.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Create Lab Test'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddLabTest;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['Pending', 'In Progress', 'Completed', 'Cancelled'];\r\nconst insuranceOptions = ['Yes', 'No'];\r\nconst paymentStatuses = ['Paid', 'Unpaid', 'Pending'];\r\nconst sampleConditions = ['Normal', 'Hemolyzed', 'Lipemic', 'Icteric', 'Clotted'];\r\nconst urgencyLevels = ['Routine', 'Urgent', 'Stat'];\r\nconst resultDeliveryMethods = ['Email', 'Phone', 'In Person', 'Portal'];\r\n\r\nconst EditLabTest = ({ closeModal, testLab = {}, patients = [], doctors = [], clinics = [], laboratories = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicId: '',\r\n    testName: '',\r\n    testCategory: '',\r\n    testDescription: '',\r\n    sampleType: '',\r\n    sampleCondition: '',\r\n    sampleCollectionDate: '',\r\n    sampleCollectedBy: '',\r\n    urgencyLevel: '',\r\n    testStatus: 'Pending',\r\n    result: {},\r\n    laboratoryId: '',\r\n    testCost: 0,\r\n    insuranceCovered: '',\r\n    paymentStatus: '',\r\n    resultDeliveryMethod: '',\r\n    resultDeliveryDate: '',\r\n    comments: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (testLab) {\r\n      setForm({\r\n        patientId: testLab.patientId || '',\r\n        doctorId: testLab.doctorId || '',\r\n        clinicId: testLab.clinicId || '',\r\n        testName: testLab.testName || '',\r\n        testCategory: testLab.testCategory || '',\r\n        testDescription: testLab.testDescription || '',\r\n        sampleType: testLab.sampleType || '',\r\n        sampleCondition: testLab.sampleCondition || '',\r\n        sampleCollectionDate: testLab.sampleCollectionDate ? testLab.sampleCollectionDate.slice(0, 16) : '',\r\n        sampleCollectedBy: testLab.sampleCollectedBy || '',\r\n        urgencyLevel: testLab.urgencyLevel || '',\r\n        testStatus: testLab.testStatus || 'Pending',\r\n        result: testLab.result || {},\r\n        laboratoryId: testLab.laboratoryId || '',\r\n        testCost: testLab.testCost || 0,\r\n        insuranceCovered: testLab.insuranceCovered || '',\r\n        paymentStatus: testLab.paymentStatus || '',\r\n        resultDeliveryMethod: testLab.resultDeliveryMethod || '',\r\n        resultDeliveryDate: testLab.resultDeliveryDate ? testLab.resultDeliveryDate.slice(0, 16) : '',\r\n        comments: testLab.comments || '',\r\n      });\r\n    }\r\n  }, [testLab]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const labTestData = {\r\n      ...form,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/labtests/${testLab.id}`, labTestData);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(p => (\r\n          <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(d => (\r\n          <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic\"\r\n        name=\"clinicId\"\r\n        value={form.clinicId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {clinics.map(c => (\r\n          <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Test Name\"\r\n        name=\"testName\"\r\n        value={form.testName}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Test Category\"\r\n        name=\"testCategory\"\r\n        value={form.testCategory}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Test Description\"\r\n        name=\"testDescription\"\r\n        value={form.testDescription}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <TextField\r\n        label=\"Sample Type\"\r\n        name=\"sampleType\"\r\n        value={form.sampleType}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Sample Collection Date\"\r\n        name=\"sampleCollectionDate\"\r\n        type=\"datetime-local\"\r\n        value={form.sampleCollectionDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Sample Collected By\"\r\n        name=\"sampleCollectedBy\"\r\n        value={form.sampleCollectedBy}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Test Status\"\r\n        name=\"testStatus\"\r\n        value={form.testStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {statuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Laboratory\"\r\n        name=\"laboratoryId\"\r\n        value={form.laboratoryId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {laboratories.map(l => (\r\n          <MenuItem key={l.id} value={l.id}>{l.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Test Cost\"\r\n        name=\"testCost\"\r\n        type=\"number\"\r\n        value={form.testCost}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Insurance Covered\"\r\n        name=\"insuranceCovered\"\r\n        value={form.insuranceCovered}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {insuranceOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Payment Status\"\r\n        name=\"paymentStatus\"\r\n        value={form.paymentStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {paymentStatuses.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Sample Condition\"\r\n        name=\"sampleCondition\"\r\n        value={form.sampleCondition}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {sampleConditions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Urgency Level\"\r\n        name=\"urgencyLevel\"\r\n        value={form.urgencyLevel}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {urgencyLevels.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Result Delivery Method\"\r\n        name=\"resultDeliveryMethod\"\r\n        value={form.resultDeliveryMethod}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {resultDeliveryMethods.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Result Delivery Date\"\r\n        name=\"resultDeliveryDate\"\r\n        type=\"datetime-local\"\r\n        value={form.resultDeliveryDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Comments\"\r\n        name=\"comments\"\r\n        value={form.comments}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Save Changes'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditLabTest;","import React, { useRef, useState } from 'react';\r\nimport {\r\n  Dialog, DialogTitle, DialogContent, DialogActions, Button,\r\n  Grid, Typography, Chip, Divider, Box, Paper, Stack, Tooltip\r\n} from '@mui/material';\r\n\r\nconst ViewLabTest = ({\r\n  open,\r\n  onClose,\r\n  testLab,\r\n  getPatientName,\r\n  getDoctorName\r\n}) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadedFile, setUploadedFile] = useState(testLab?.document || null);\r\n  const fileInputRef = useRef();\r\n\r\n  if (!testLab) return null;\r\n\r\n  // Handle file upload\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    setUploading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      await fetch(`/api/labtests/${testLab.id}/upload`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      // Optionally update UI or fetch new document info here\r\n      setUploadedFile({ name: file.name, url: `/labtest/${file.name}` });\r\n    } catch (err) {\r\n      alert('Upload failed');\r\n    }\r\n    setUploading(false);\r\n  };\r\n\r\n  // Handle download\r\n  const handleDownload = () => {\r\n    if (uploadedFile && uploadedFile.url) {\r\n      const link = document.createElement('a');\r\n      link.href = uploadedFile.url;\r\n      link.download = uploadedFile.name;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n      <DialogTitle sx={{ background: '#e3f2fd', fontWeight: 700, fontSize: 22 }}>\r\n        <i className=\"fas fa-vials\" style={{ color: '#1976d2', marginRight: 10 }} />\r\n        Lab Test Details\r\n      </DialogTitle>\r\n      <DialogContent dividers sx={{ background: '#f8fafc' }}>\r\n        <Paper elevation={0} sx={{ p: 2, mb: 2, bgcolor: '#fff', borderRadius: 2 }}>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Tooltip title=\"Patient\">\r\n              <i className=\"fas fa-user\" style={{ color: '#1976d2', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle1\" fontWeight={600}>\r\n              {getPatientName ? getPatientName(testLab.patientId) : testLab.patientId}\r\n            </Typography>\r\n            <Chip\r\n              label={testLab.testStatus}\r\n              color={\r\n                testLab.testStatus === 'Completed'\r\n                  ? 'success'\r\n                  : testLab.testStatus === 'Pending'\r\n                  ? 'warning'\r\n                  : 'default'\r\n              }\r\n              size=\"small\"\r\n              sx={{ ml: 2 }}\r\n            />\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Tooltip title=\"Doctor\">\r\n              <i className=\"fas fa-user-md\" style={{ color: '#388e3c', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle2\">{getDoctorName ? getDoctorName(testLab.doctorId) : testLab.doctorId}</Typography>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Tooltip title=\"Test Name\">\r\n              <i className=\"fas fa-flask\" style={{ color: '#d32f2f', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle2\">{testLab.testName}</Typography>\r\n          </Stack>\r\n        </Paper>\r\n        <Divider sx={{ mb: 2 }} />\r\n\r\n        {/* Upload/Download Document Section */}\r\n        <Box sx={{ mb: 2, p: 2, bgcolor: '#f5f5f5', borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n            <i className=\"fas fa-file-upload\" style={{ marginRight: 8, color: '#1976d2' }} />\r\n            Lab Test Document\r\n          </Typography>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n              style={{ display: 'none' }}\r\n              ref={fileInputRef}\r\n              onChange={handleFileUpload}\r\n            />\r\n            <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => fileInputRef.current.click()}\r\n                disabled={uploading}\r\n                startIcon={<i className=\"fas fa-upload\"></i>}\r\n              >\r\n                {uploading ? 'Uploading...' : 'Upload Document'}\r\n              </Button>\r\n              {uploadedFile && (\r\n                <>\r\n                  <Typography variant=\"body2\" sx={{ ml: 1 }}>\r\n                    {uploadedFile.name}\r\n                  </Typography>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={handleDownload}\r\n                    startIcon={<i className=\"fas fa-download\"></i>}\r\n                  >\r\n                    Download\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Stack>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Category:</strong> {testLab.testCategory}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Status:</strong>{' '}\r\n              <Chip\r\n                label={testLab.testStatus}\r\n                color={\r\n                  testLab.testStatus === 'Completed'\r\n                    ? 'success'\r\n                    : testLab.testStatus === 'Pending'\r\n                    ? 'warning'\r\n                    : 'default'\r\n                }\r\n                size=\"small\"\r\n              />\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Sample Type:</strong> {testLab.sampleType}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Sample Date:</strong> {testLab.sampleCollectionDate ? new Date(testLab.sampleCollectionDate).toLocaleString() : '-'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Collected By:</strong> {testLab.sampleCollectedBy}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Laboratory:</strong> {testLab.laboratoryId}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Test Cost:</strong> {testLab.testCost}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Insurance Covered:</strong> {testLab.insuranceCovered}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Payment Status:</strong> {testLab.paymentStatus}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Description:</strong>\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 2, color: '#1976d2' }}>\r\n              {testLab.testDescription || '-'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Result:</strong>\r\n            </Typography>\r\n            <Box sx={{\r\n              background: '#f1f8e9',\r\n              borderRadius: 1,\r\n              p: 1,\r\n              fontFamily: 'monospace',\r\n              fontSize: 14,\r\n              color: '#388e3c',\r\n              mb: 2,\r\n              minHeight: 32\r\n            }}>\r\n              {testLab.result && Object.keys(testLab.result).length > 0\r\n                ? <pre style={{ margin: 0, background: 'none', fontFamily: 'inherit' }}>{JSON.stringify(testLab.result, null, 2)}</pre>\r\n                : 'No result yet'}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider sx={{ my: 2 }} />\r\n        <Box sx={{ mt: 2, textAlign: 'right' }}>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            <i className=\"fas fa-clock\" style={{ marginRight: 4 }} />\r\n            Created: {testLab.createdAt ? new Date(testLab.createdAt).toLocaleString() : '-'}\r\n            <br />\r\n            <i className=\"fas fa-sync-alt\" style={{ marginRight: 4 }} />\r\n            Updated: {testLab.updatedAt ? new Date(testLab.updatedAt).toLocaleString() : '-'}\r\n          </Typography>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions sx={{ background: '#f8fafc' }}>\r\n        <Button onClick={onClose} color=\"primary\" variant=\"contained\" sx={{ minWidth: 100 }}>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ViewLabTest;","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './LabTest.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LoadJSFiles } from '../init';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport labTestHTTPService from '../../main/services/labTestHTTPService';\r\n\r\n\r\nimport testlabHTTPService from '../../main/services/testlabHTTPService';\r\nimport { Button, Chip, LinearProgress, Link, Typography, Menu, MenuItem, IconButton, Box, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\n\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport CurrentUser from '../../main/config/user';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport AddLabTest from './AddLabTest';\r\nimport EditLabTest from './EditLabTest';\r\nimport ViewLabTest from './ViewLabTest';\r\nimport jsPDF from 'jspdf';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst LabTest = () => {\r\n\r\n  const [labTests, setLabTests] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [viewModalOpen, setViewModalOpen] = useState(false);\r\n  const [viewedItem, setViewedItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllIncomes()\r\n    // Fetch patients and doctors\r\n    fetch(`${BASE_URL}/patients`)\r\n      .then(res => res.json())\r\n      .then(data => setPatients(data));\r\n    fetch(`${BASE_URL}/doctors`)\r\n      .then(res => res.json())\r\n      .then(data => setDoctors(data));\r\n  }, []);\r\n\r\n\r\n  const getAllIncomes = () => {\r\n    setLoading(true);\r\n    testlabHTTPService.getAllTestLab()\r\n      .then(response => {\r\n        setLabTests(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllIncomes()\r\n    //forceUpdate()\r\n  }\r\n\r\n  const removeLabTestAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      testlabHTTPService.removeTestLab(data).then(data => {\r\n        getAllIncomes()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateLabTestAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //  resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n    getAllIncomes()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    getAllIncomes()\r\n  }\r\n\r\n  // Helper functions to get full names\r\n  const getPatientName = (id) => {\r\n    const pat = patients.find(p => p.id === id);\r\n    return pat ? pat.fullName : `ID: ${id}`;\r\n  };\r\n  const getDoctorName = (id) => {\r\n    const doc = doctors.find(d => d.id === id);\r\n    return doc ? doc.fullName : `ID: ${id}`;\r\n  };\r\n\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={(event) => handleMenuOpen(event, params.row)}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleMenuClose}\r\n      >\r\n        <MenuItem onClick={() => handleMenuAction('view')}>View</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('edit')}>Edit</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('delete')}>Delete</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('download')}>Download</MenuItem>\r\n        <MenuItem onClick={() => handleMenuAction('download-pdf')}>Download PDF</MenuItem>\r\n        <MenuItem>\r\n          <label style={{ cursor: 'pointer', margin: 0 }}>\r\n            Upload Lab Report\r\n            <input\r\n              type=\"file\"\r\n              hidden\r\n              onChange={handleUploadReport}\r\n            />\r\n          </label>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n   const columns = [\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 250,\r\n      renderCell: (params) => (\r\n        <span>{getPatientName(params.value)}</span>\r\n      )\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor',\r\n      width: 250,\r\n      renderCell: (params) => (\r\n        <span>{getDoctorName(params.value)}</span>\r\n      )\r\n    },\r\n    { field: 'testName', headerName: 'Test Name', width: 180 },\r\n    {\r\n      field: 'testCategory',\r\n      headerName: 'Category',\r\n      width: 130,\r\n      renderCell: ({ value }) => (\r\n        <Chip\r\n          label={value}\r\n          color={\r\n            value === 'Blood'\r\n              ? 'primary'\r\n              : value === 'Urine'\r\n              ? 'success'\r\n              : value === 'Radiology'\r\n              ? 'info'\r\n              : value === 'Biopsy'\r\n              ? 'secondary'\r\n              : 'default'\r\n          }\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'sampleCollectionDate',\r\n      headerName: 'Sample Date',\r\n      width: 140,\r\n      valueFormatter: ({ value }) => new Date(value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'testStatus',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: ({ value }) => (\r\n        <Chip\r\n          label={value || 'Unknown'}\r\n          color={\r\n            value === 'Completed'\r\n              ? 'success'\r\n              : value === 'Pending'\r\n              ? 'warning'\r\n              : value === 'In Progress'\r\n              ? 'info'\r\n              : value === 'Cancelled'\r\n              ? 'error'\r\n              : 'default'\r\n          }\r\n          size=\"small\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 300,\r\n      renderCell: renderActionsMenu\r\n    }\r\n  ];\r\n\r\n  const handleMenuOpen = (event, row) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedRow(row);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  const handleMenuAction = (action) => {\r\n    if (action === 'view') {\r\n      setViewedItem(selectedRow);\r\n      handleMenuClose();\r\n      setViewModalOpen(true);\r\n    }\r\n    if (action === 'edit') {\r\n      setUpdatedItem(selectedRow);\r\n      handleMenuClose();\r\n      setEditModalOpen(true);\r\n    }\r\n    if (action === 'delete') {\r\n      // ...your delete logic...\r\n      handleMenuClose();\r\n    }\r\n    if (action === 'download') {\r\n      // Download lab test as JSON file\r\n      const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(selectedRow, null, 2));\r\n      const downloadAnchorNode = document.createElement('a');\r\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n      downloadAnchorNode.setAttribute(\"download\", `labtest_${selectedRow.id || 'data'}.json`);\r\n      document.body.appendChild(downloadAnchorNode);\r\n      downloadAnchorNode.click();\r\n      downloadAnchorNode.remove();\r\n      handleMenuClose();\r\n    }\r\n    if (action === 'download-pdf') {\r\n      // Download lab test as a nicely formatted PDF\r\n      const doc = new jsPDF();\r\n      doc.setFontSize(20);\r\n      doc.setTextColor('#1976d2');\r\n      doc.text('Lab Test Report', 105, 18, { align: 'center' });\r\n\r\n      doc.setFontSize(12);\r\n      doc.setTextColor('#333');\r\n      let y = 32;\r\n\r\n      // Add patient and doctor info at the top\r\n      doc.setFont(undefined, 'bold');\r\n      doc.text('Patient:', 14, y);\r\n      doc.setFont(undefined, 'normal');\r\n      doc.text(getPatientName(selectedRow.patientId), 40, y);\r\n      y += 8;\r\n      doc.setFont(undefined, 'bold');\r\n      doc.text('Doctor:', 14, y);\r\n      doc.setFont(undefined, 'normal');\r\n      doc.text(getDoctorName(selectedRow.doctorId), 40, y);\r\n      y += 10;\r\n\r\n      // Draw a line\r\n      doc.setDrawColor(200, 200, 200);\r\n      doc.line(14, y, 196, y);\r\n      y += 8;\r\n\r\n      // Add main test info as key-value pairs\r\n      const fields = [\r\n        { label: 'Test Name', value: selectedRow.testName },\r\n        { label: 'Category', value: selectedRow.testCategory },\r\n        { label: 'Sample Date', value: selectedRow.sampleCollectionDate ? new Date(selectedRow.sampleCollectionDate).toLocaleDateString() : '' },\r\n        { label: 'Status', value: selectedRow.testStatus },\r\n        { label: 'Result', value: selectedRow.result ? (typeof selectedRow.result === 'object' ? JSON.stringify(selectedRow.result, null, 2) : selectedRow.result) : '' },\r\n        { label: 'Notes', value: selectedRow.notes || '' }\r\n      ];\r\n\r\n      fields.forEach(f => {\r\n        if (f.value) {\r\n          doc.setFont(undefined, 'bold');\r\n          doc.text(`${f.label}:`, 14, y);\r\n          doc.setFont(undefined, 'normal');\r\n          // Handle long text wrapping\r\n          const splitText = doc.splitTextToSize(String(f.value), 160);\r\n          doc.text(splitText, 40, y);\r\n          y += 8 + (splitText.length - 1) * 6;\r\n          if (y > 270) { doc.addPage(); y = 20; }\r\n        }\r\n      });\r\n\r\n      // Footer\r\n      doc.setFontSize(10);\r\n      doc.setTextColor('#888');\r\n      doc.text(`Generated on ${new Date().toLocaleString()}`, 14, 290);\r\n\r\n      doc.save(`labtest_${selectedRow.id || 'data'}.pdf`);\r\n      handleMenuClose();\r\n    }\r\n    handleMenuClose();\r\n  };\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length === 1) {\r\n      setUpdatedItemId(e[0]);\r\n      const selectedItem = labTests.find(item => item.id === e[0]);\r\n      setUpdatedItem(selectedItem);\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e);\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const bulkDelete = () => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete the selected items?\");\r\n    if (confirmDelete) {\r\n      console.log('Deleting selected items:', updatedItemIds);\r\n      // Add logic to delete selected items\r\n    }\r\n  };\r\n\r\n  const exportSelected = () => {\r\n    console.log('Exporting selected items:', updatedItemIds);\r\n    // Add logic to export selected items to CSV or Excel\r\n  };\r\n\r\n  const handleUploadReport = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      console.log('Uploaded file:', file);\r\n      // Add logic to upload and analyze the report\r\n    }\r\n  };\r\n\r\n  const analyzeRadiograph = (image) => {\r\n    console.log('Analyzing radiograph:', image);\r\n    // Placeholder for AI analysis logic\r\n    // Call AI API or model to analyze the image\r\n  };\r\n\r\n  const matchDiagnosisCode = (description) => {\r\n    console.log('Matching diagnosis code for:', description);\r\n    // Placeholder for ICD10 integration logic\r\n    // Call API or use dataset to find matching codes\r\n  };\r\n\r\n  // Example widget summary data\r\n  const totalLabTests = labTests.length;\r\n  const completedTests = labTests.filter(t => t.testStatus === 'Completed').length;\r\n  const pendingTests = labTests.filter(t => t.testStatus === 'Pending').length;\r\n  const categories = {};\r\n  labTests.forEach(t => {\r\n    categories[t.testCategory] = (categories[t.testCategory] || 0) + 1;\r\n  });\r\n\r\n  // Example chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [{\r\n      data: Object.values(categories),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [{\r\n      label: 'Tests per Category',\r\n      data: Object.values(categories),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(categories),\r\n    datasets: [\r\n      {\r\n        label: 'Completed',\r\n        data: Object.keys(categories).map(cat => labTests.filter(t => t.testCategory === cat && t.testStatus === 'Completed').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Pending',\r\n        data: Object.keys(categories).map(cat => labTests.filter(t => t.testCategory === cat && t.testStatus === 'Pending').length),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      {/* Page Title */}\r\n      <Box sx={{ p: 2 }}>\r\n        <Typography variant=\"h4\" fontWeight={700} color=\"primary\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <i className=\"fas fa-vials\" style={{ marginRight: 10 }} />\r\n          Quick Test\r\n        </Typography>\r\n      </Box>\r\n      {/* Widgets row */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Lab Tests</Typography>\r\n          <Typography variant=\"h6\">{totalLabTests}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Completed</Typography>\r\n          <Typography variant=\"h6\">{completedTests}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Pending</Typography>\r\n          <Typography variant=\"h6\">{pendingTests}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts row */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Lab Tests by Category</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Tests per Category</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Status Trends by Category</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            gap: 2,\r\n            mb: 2,\r\n            justifyContent: 'flex-start', // or 'center' to center the buttons\r\n          }}\r\n        >\r\n          <Button\r\n            type=\"button\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#addPayment\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            sx={{ minWidth: 150 }}\r\n            startIcon={<i className=\"fas fa-plus\"></i>}\r\n          >\r\n            Create Lab Test\r\n          </Button>\r\n          <Button\r\n            onClick={e => updateLabTestAction(e, updatedItem)}\r\n            type=\"button\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#edit\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            sx={{ minWidth: 120 }}\r\n            startIcon={<i className=\"fas fa-edit\"></i>}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            onClick={e => removeLabTestAction(e, updatedItemId)}\r\n            type=\"button\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            sx={{ minWidth: 120 }}\r\n            startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n          >\r\n            Remove\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => getAllIncomes()}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            sx={{ minWidth: 120 }}\r\n            startIcon={<i className=\"fas fa-refresh\"></i>}\r\n          >\r\n            Reload\r\n          </Button>\r\n          <Button\r\n            onClick={bulkDelete}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            sx={{ minWidth: 150 }}\r\n          >\r\n            Delete Selected\r\n          </Button>\r\n          <Button\r\n            onClick={exportSelected}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            sx={{ minWidth: 150 }}\r\n          >\r\n            Export Selected\r\n          </Button>\r\n        </Box>\r\n        <br /><br />\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ width: '100%' }}>\r\n            <DataGrid\r\n              rows={labTests}\r\n              columns={columns}\r\n              pageSize={10} // Show 10 rows visible\r\n              rowsPerPageOptions={[10, 15, 20]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n              autoHeight // Remove vertical scroll, fit to 10 rows\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <Dialog open={editModalOpen} onClose={() => setEditModalOpen(false)} maxWidth=\"lg\" fullWidth>\r\n          <DialogTitle>Edit Lab Test</DialogTitle>\r\n          <DialogContent>\r\n            <EditLabTest\r\n              closeModal={() => setEditModalOpen(false)}\r\n              testLab={updatedItem}\r\n              patients={patients}\r\n              doctors={doctors}\r\n              // pass clinics, laboratories if needed\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditModalOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <ViewLabTest\r\n          open={viewModalOpen}\r\n          onClose={() => setViewModalOpen(false)}\r\n          testLab={viewedItem}\r\n          getPatientName={getPatientName}\r\n          getDoctorName={getDoctorName}\r\n        />\r\n\r\n        <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddLabTest closeModal={closeModalAdd} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button onClick={closeModalAdd} ref={closeButtonAdd} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"edit\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <EditLabTest closeModal={closeButtonEdit} testLab={updatedItem} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" ref={closeButtonEdit} onClick={closeModalEdit} class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nLabTest.propTypes = {};\r\n\r\nLabTest.defaultProps = {};\r\n\r\nexport default LabTest;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllInvoice = () => {\r\n    return http.get(`${BASE_URL}/api/invoice`)\r\n}\r\nconst createInvoice = data => {\r\n    return http.post(`${BASE_URL}/api/invoice`, data);\r\n};\r\n\r\nconst editInvoice = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/invoice/${id}`, data);\r\n};\r\n\r\nconst removeInvoice = id => {\r\n    return http.delete(`${BASE_URL}/api/invoice/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllInvoice,\r\n    createInvoice,\r\n    editInvoice,\r\n    removeInvoice\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddInvoice.css';\r\nimport medicamentValidation from '../../main/validations/medicamentValidation';\r\nimport { useForm } from 'react-hook-form';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nconst AddInvoice = () => {\r\n  const initialState = {\r\n    date: '',\r\n    patient: '',\r\n    result: '',\r\n    name: '',\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [testLab, setTestLab] = useState(initialState);\r\n  const [patients, setPatients] = useState([]);\r\n  const onSubmit = (data) => {\r\n    //saveAppointement(data)\r\n    // AppointementTestService.create(data)\r\n    setTestLab(initialState)\r\n    // showMessage('Confirmation', appointementMessage.add, 'success')\r\n  }\r\n\r\n  const saveAppointement = (data) => {\r\n\r\n    /*appointementHTTPService.create(data)\r\n      .then(response => {\r\n        setTestLab(initialState)\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });*/\r\n\r\n  };\r\n\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setTestLab({ ...testLab, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //LoadJSFiles()\r\n    getAllPatients()\r\n  }, []);\r\n\r\n  const getAllPatients = () => {\r\n\r\n    patientHTTPService.getAllPatients()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n\r\n      })\r\n      .catch(e => {\r\n        //showMessage('Confirmation', e, 'info')\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"AddMedicament\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" role=\"form\" enctype=\"multipart/form-data\" method=\"post\" accept-charset=\"utf-8\">\r\n\r\n        <div class=\"form-body\">\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Invoice:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={testLab.name}\r\n                ref={register({ required: true })}\r\n                type=\"text\" data-toggle=\"tooltip\"\r\n                name=\"name\" class=\"form-control test\"\r\n              />\r\n\r\n              <div className=\"error text-danger\">\r\n                {errors.name && medicamentValidation.name}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Amount:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={testLab.result} ref={register({ required: true })}\r\n                type=\"text\" class=\"form-control\" autocomplete=\"off\" id=\"search-box\"\r\n                data-toggle=\"tooltip\" title=\"Nom de la compagnie\"\r\n                name=\"result\" required=\"\" >\r\n              </textarea>\r\n              <div className=\"error text-danger\">\r\n                {errors.result && medicamentValidation.result}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Tax:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={testLab.date} ref={register({ required: true })}\r\n                type=\"date\" name=\"date\" autocomplete=\"off\" id=\"search-group\" class=\"form-control\"\r\n                data-toggle=\"tooltip\" title=\"Nom de groupe \" required=\"\" />\r\n\r\n              <div className=\"error text-danger\">\r\n                {errors.date && medicamentValidation.date}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Date:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={testLab.patient} ref={register({ required: true })}\r\n                name=\"patient\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\">\r\n                {patients.map(response =>\r\n                  <option value={response?.id}>{response?.namepatient}</option>\r\n                )}\r\n              </select>\r\n\r\n              <div className=\"error text-danger\">\r\n                {errors.patient && medicamentValidation.patient}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Customer:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={testLab.patient} ref={register({ required: true })}\r\n                name=\"patient\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\">\r\n                {patients.map(response =>\r\n                  <option value={response?.id}>{response?.namepatient}</option>\r\n                )}\r\n              </select>\r\n\r\n              <div className=\"error text-danger\">\r\n                {errors.patient && medicamentValidation.patient}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n              <i className=\"fa fa-check\"></i>  Sauvegarder</button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nAddInvoice.propTypes = {};\r\n\r\nAddInvoice.defaultProps = {};\r\n\r\nexport default AddInvoice;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Invoice.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LoadJSFiles } from '../init';\r\nimport invoiceHTTPService from '../../main/services/invoiceHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientMessage from '../../main/messages/patientMessage';\r\nimport AddInvoice from '../AddInvoice/AddInvoice';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport SummaryWidget from '../SummaryWidget/SummaryWidget';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport CurrentUser from '../../main/config/user';\r\nconst Invoice = () => {\r\n\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllInvoices()\r\n  }, []);\r\n\r\n\r\n  const getAllInvoices = () => {\r\n    setLoading(true);\r\n    invoiceHTTPService.getAllInvoice()\r\n      .then(response => {\r\n        setInvoices(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n  };\r\n\r\n\r\n  const resfreshComponent = () => {\r\n    getAllInvoices()\r\n    forceUpdate()\r\n  }\r\n\r\n  const removeInvoiceAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n      showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success')\r\n      invoiceHTTPService.removeInvoice(data).then(data => {\r\n        resfreshComponent()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateInvoiceAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 200 },\r\n    { field: 'template', headerName: 'Certificate Template', width: 200 },\r\n    { field: 'patient', headerName: 'Patient Name', width: 200 },\r\n    { field: 'date', headerName: 'Issue Date', width: 200 },\r\n  ];\r\n\r\n\r\n\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n  const addProcedureToBill = (procedure) => {\r\n    console.log('Adding procedure:', procedure);\r\n    // Placeholder for adding a procedure to the bill\r\n  };\r\n\r\n  const applyDiscountOrInsurance = (discount, insurance) => {\r\n    console.log('Applying discount or insurance:', { discount, insurance });\r\n    // Placeholder for applying discounts or insurance\r\n  };\r\n\r\n  const updatePaymentStatus = (status) => {\r\n    console.log('Updating payment status to:', status);\r\n    // Placeholder for updating payment status\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        {\r\n          showChart &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>Chart</h4>\r\n              <br />\r\n\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {showFilter &&\r\n          <div className=\"row\">\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n\r\n            <SummaryWidget />\r\n          </div>\r\n        }\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Invoices\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addPayment\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n        <Button onClick={e => updateInvoiceAction(e, updatedItemId)} type=\"button\" data-toggle=\"modal\" data-target=\"#editMedicament\"><i class=\"fas fa-edit\"></i> Edit</Button>\r\n        <Button onClick={e => removeInvoiceAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n        <Button type=\"button\" onClick={() => setShowFilter(!showFilter)} ><i class=\"fas fa-bar-chart\"></i> Show/Hide Summary</Button>\r\n        <Button type=\"button\" onClick={() => setShowChart(!showChart)} ><i class=\"fas fa-pie-chart\"></i> Show/Hide Analytics</Button>\r\n        <Button type=\"button\" onClick={() => getAllInvoices()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n        <Button type=\"button\" onClick={e => removeAll(e)} ><i class=\"fas fa-eraser\"></i> Remove All</Button>\r\n        <br /><br />\r\n        <table id=\"example1\" className=\"table table-striped table-bordered\">\r\n          <thead class=\" text-primary\">\r\n\r\n            <tr>\r\n              <th>Invoice</th>\r\n              <th>Amount</th>\r\n              <th> Tax</th>\r\n              <th>Date </th>\r\n              <th>Customer</th>\r\n\r\n              <th>Status</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {loading ? \"loading...\" :\r\n              invoices.map(item =>\r\n                <tr>\r\n                  <td>INV002</td>\r\n                  <td>1000$</td>\r\n                  <td>110$</td>\r\n                  <td>11/11/2022</td>\r\n                  <td> {item.client}</td>\r\n                  <td>UNPAID</td>\r\n                  <td>\r\n                    <button type=\"button\" data-toggle=\"modal\" data-target=\"#viewPatient\" class=\"btn btn-warning btn-sm\"><i class=\"fas fa-eye\"></i></button>\r\n                    <button onClick={e => updateInvoiceAction(e, item)} type=\"button\" data-toggle=\"modal\" data-target=\"#editPatient\" class=\"btn btn-warning btn-sm\"><i class=\"fas fa-edit\"></i>view</button>\r\n                    <button onClick={e => removeInvoiceAction(e, item.id)} type=\"button\" class=\"btn btn-danger btn-sm\"><i class=\"fas fa-trash-alt\"></i></button>\r\n                  </td>\r\n\r\n                </tr>\r\n              )}\r\n\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"modal fade\" id=\"addPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddInvoice />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"editPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"modal fade\" id=\"viewPayment\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Voir</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nInvoice.propTypes = {};\r\n\r\nInvoice.defaultProps = {};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem, Stack\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst certificateTypes = [\r\n  'Medical Fitness', 'Dental Clearance', 'Vaccination', 'Other'\r\n];\r\n\r\nconst AddCertificate = ({ closeModal }) => {\r\n  const [form, setForm] = useState({\r\n    certificateNumber: '',\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicId: '',\r\n    certificateType: '',\r\n    issueDate: '',\r\n    validUntil: '',\r\n    diagnosis: '',\r\n    treatmentDetails: '',\r\n    recommendations: '',\r\n    attachments: '',\r\n    signature: '',\r\n    status: 'Issued',\r\n    notes: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Add state for select box data\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${BASE_URL}/patients`).then(res => setPatients(res.data)).catch(() => setPatients([]));\r\n    axios.get(`${BASE_URL}/doctors`).then(res => setDoctors(res.data)).catch(() => setDoctors([]));\r\n    axios.get(`${BASE_URL}/clinics`).then(res => setClinics(res.data)).catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    // Validation\r\n    if (\r\n      !form.patientId ||\r\n      !form.doctorId ||\r\n      !form.clinicId ||\r\n      !form.certificateType ||\r\n      !form.diagnosis ||\r\n      !form.treatmentDetails ||\r\n      !form.signature\r\n    ) {\r\n      alert('Please fill all required fields.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      certificateNumber: form.certificateNumber,\r\n      patientId: Number(form.patientId),\r\n      doctorId: Number(form.doctorId),\r\n      clinicId: Number(form.clinicId),\r\n      certificateType: form.certificateType,\r\n      issueDate: new Date(form.issueDate),\r\n      validUntil: new Date(form.validUntil),\r\n      diagnosis: form.diagnosis,\r\n      treatmentDetails: form.treatmentDetails,\r\n      recommendations: form.recommendations,\r\n      attachments: form.attachments ? [form.attachments] : [],\r\n      signature: form.signature,\r\n      status: form.status,\r\n      notes: form.notes\r\n    };\r\n\r\n    console.log('Sent object:', data);\r\n\r\n    try {\r\n      await axios.post(`${BASE_URL}/certificates`, data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        label=\"Certificate Number\"\r\n        name=\"certificateNumber\"\r\n        value={form.certificateNumber}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(patient => (\r\n          <MenuItem key={patient.id} value={patient.id}>\r\n            {patient.fullName || patient.name || patient.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(doctor => (\r\n          <MenuItem key={doctor.id} value={doctor.id}>\r\n            {doctor.fullName || doctor.name || doctor.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic\"\r\n        name=\"clinicId\"\r\n        value={form.clinicId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {clinics.map(clinic => (\r\n          <MenuItem key={clinic.id} value={clinic.id}>\r\n            {clinic.name || clinic.clinicName || clinic.id}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Certificate Type\"\r\n        name=\"certificateType\"\r\n        value={form.certificateType}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {certificateTypes.map(type => (\r\n          <MenuItem key={type} value={type}>{type}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Issue Date\"\r\n        name=\"issueDate\"\r\n        type=\"date\"\r\n        value={form.issueDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Valid Until\"\r\n        name=\"validUntil\"\r\n        type=\"date\"\r\n        value={form.validUntil}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Diagnosis\"\r\n        name=\"diagnosis\"\r\n        value={form.diagnosis}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Treatment Details\"\r\n        name=\"treatmentDetails\"\r\n        value={form.treatmentDetails}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Recommendations\"\r\n        name=\"recommendations\"\r\n        value={form.recommendations}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Attachment URL\"\r\n        name=\"attachments\"\r\n        value={form.attachments}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Signature\"\r\n        name=\"signature\"\r\n        value={form.signature}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Status\"\r\n        name=\"status\"\r\n        value={form.status}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        <MenuItem value=\"Issued\">Issued</MenuItem>\r\n        <MenuItem value=\"Active\">Active</MenuItem>\r\n        <MenuItem value=\"Expired\">Expired</MenuItem>\r\n      </TextField>\r\n      <TextField\r\n        label=\"Notes\"\r\n        name=\"notes\"\r\n        value={form.notes}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Create Certificate'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddCertificate;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditCertificate.css';\r\nimport certificateHTTPService from '../../main/services/certificateHTTPService';\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditCertificate = (props) => {\r\n\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [certificate, setCertificate] = useState(props.certificate);\r\n  const [patients, setPatients] = useState([]);\r\n  useEffect(() => {\r\n    setCertificate(props.certificate)\r\n    patientHTTPService.getAllPatients()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', CurrentUser.ERR_MSG, 'success')\r\n      });\r\n  }, [props.certificate]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //GroupeTestService.update(props.certificate, data)\r\n    certificateHTTPService.editCertificate(props.certificate.id, data).then(data => {\r\n      props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCertificate({ ...certificate, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"EditCertificate\">\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Date:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={certificate?.date} ref={register({ required: true })}\r\n                type=\"date\" id=\"date\" name=\"date\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Patient:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={certificate?.patient} ref={register({ required: true })}\r\n                name=\"patient\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\">\r\n                {patients.map(response =>\r\n                  <option value={response?.id}>{response?.namepatient}</option>\r\n                )}\r\n              </select>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Template:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={certificate?.template} ref={register({ required: true })}\r\n                name=\"template\" class=\"form-control\" rows=\"3\">\r\n                <option value=\"1\">template</option>\r\n              </select>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Content:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={certificate?.content} placeholder=\"Content\" ref={register({ required: true })}\r\n                name=\"content\" class=\"form-control\" rows=\"3\"></textarea>\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group\">\r\n            <div >\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n\r\n    </div>)\r\n};\r\n\r\nEditCertificate.propTypes = {};\r\n\r\nEditCertificate.defaultProps = {};\r\n\r\nexport default EditCertificate;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Certificates.css';\r\nimport AddCertificate from './AddCertificate';\r\nimport EditCertificate from '../EditCertificate/EditCertificate';\r\nimport certificateHTTPService from '../../main/services/certificateHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport { LoadJSFiles } from './../init';\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport {\r\n  Button, CircularProgress, LinearProgress, Typography, Chip, Menu, MenuItem, IconButton, Box, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Stack, Drawer, Snackbar, Alert, Skeleton, Tooltip as MuiTooltip\r\n} from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport TemplateIcon from '@mui/icons-material/Description';\r\nimport SignatureIcon from '@mui/icons-material/BorderColor';\r\nimport jsPDF from 'jspdf';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst Certificates = () => {\r\n  // State\r\n  const [loading, setLoading] = useState(true);\r\n  const [skeleton, setSkeleton] = useState(true);\r\n  const [certificates, setCertificates] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [drawerCertificate, setDrawerCertificate] = useState(null);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [bulkSelection, setBulkSelection] = useState([]);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'info' });\r\n  const [editRowsModel, setEditRowsModel] = useState({});\r\n  const [filter, setFilter] = useState({\r\n    type: '', status: '', patient: '', doctor: '', clinic: '', from: '', to: ''\r\n  });\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const userRole = 'admin'; // Simulate role\r\n\r\n  // Fetch data\r\n  useEffect(() => {\r\n    LoadJSFiles();\r\n    getAllCertificates();\r\n    fetch(`${BASE_URL}/patients`).then(res => res.json()).then(setPatients);\r\n    fetch(`${BASE_URL}/doctors`).then(res => res.json()).then(setDoctors);\r\n    fetch(`${BASE_URL}/clinics`).then(res => res.json()).then(setClinics);\r\n  }, []);\r\n\r\n  const getAllCertificates = () => {\r\n    setLoading(true);\r\n    setSkeleton(true);\r\n    certificateHTTPService.getAllCertificate()\r\n      .then(response => {\r\n        setCertificates(response.data);\r\n        setTimeout(() => setSkeleton(false), 800);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', 'Failed to load certificates', 'warning');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  // Filtering\r\n  const filteredCertificates = certificates.filter(c => {\r\n    const matchesType = filter.type ? c.certificateType === filter.type : true;\r\n    const matchesStatus = filter.status ? c.status === filter.status : true;\r\n    const matchesPatient = filter.patient ? c.patientId === filter.patient : true;\r\n    const matchesDoctor = filter.doctor ? c.doctorId === filter.doctor : true;\r\n    const matchesClinic = filter.clinic ? c.clinicId === filter.clinic : true;\r\n    const matchesFrom = filter.from ? new Date(c.issueDate) >= new Date(filter.from) : true;\r\n    const matchesTo = filter.to ? new Date(c.issueDate) <= new Date(filter.to) : true;\r\n    return matchesType && matchesStatus && matchesPatient && matchesDoctor && matchesClinic && matchesFrom && matchesTo;\r\n  });\r\n\r\n  // Helper functions\r\n  const getPatientName = id => patients.find(p => p.id === id)?.fullName || 'Patient not found';\r\n  const getDoctorName = id => doctors.find(d => d.id === id)?.fullName || 'Doctor not found';\r\n  const getClinicName = id => clinics.find(c => c.id === id)?.name || 'Clinic not found';\r\n\r\n  // Inline editing\r\n  const handleEditRowsModelChange = (model) => setEditRowsModel(model);\r\n  const handleRowEditCommit = async (id) => {\r\n    const changes = editRowsModel[id];\r\n    if (changes) {\r\n      const updated = { ...certificates.find(c => c.id === id), ...Object.fromEntries(Object.entries(changes).map(([k, v]) => [k, v.value])) };\r\n      await certificateHTTPService.updateCertificate(id, updated);\r\n      setSnackbar({ open: true, message: 'Certificate updated', severity: 'success' });\r\n      getAllCertificates();\r\n    }\r\n  };\r\n\r\n  // Bulk actions\r\n  const handleBulkDelete = async () => {\r\n    await Promise.all(bulkSelection.map(id => certificateHTTPService.removeCertificate(id)));\r\n    setSnackbar({ open: true, message: 'Certificates deleted', severity: 'success' });\r\n    getAllCertificates();\r\n  };\r\n  const handleBulkStatus = async (status) => {\r\n    await Promise.all(bulkSelection.map(id => certificateHTTPService.updateCertificate(id, { status })));\r\n    setSnackbar({ open: true, message: `Marked selected as ${status}`, severity: 'success' });\r\n    getAllCertificates();\r\n  };\r\n\r\n  // Export\r\n  const exportToExcel = () => {\r\n    const csvContent = [\r\n      Object.keys(certificates[0] || {}).join(','),\r\n      ...certificates.map(c => Object.values(c).join(','))\r\n    ].join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'application/vnd.ms-excel' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'certificates.xlsx';\r\n    a.click();\r\n    setSnackbar({ open: true, message: 'Exported to Excel', severity: 'success' });\r\n  };\r\n  const exportToPDF = () => {\r\n    window.print();\r\n    setSnackbar({ open: true, message: 'Print dialog opened for PDF export', severity: 'info' });\r\n  };\r\n\r\n  // Actions menu for each row\r\n  const renderActionsMenu = (params) => (\r\n    <div>\r\n      <IconButton onClick={(event) => { setAnchorEl(event.currentTarget); setSelectedRow(params.row); }}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\r\n        <MenuItem onClick={() => { setDrawerCertificate(selectedRow); setDrawerOpen(true); setAnchorEl(null); }}>View</MenuItem>\r\n        {userRole === 'admin' && (\r\n          <MenuItem onClick={async () => { await certificateHTTPService.removeCertificate(selectedRow.id); setSnackbar({ open: true, message: 'Deleted', severity: 'success' }); getAllCertificates(); setAnchorEl(null); }}>Delete</MenuItem>\r\n        )}\r\n        <MenuItem\r\n          onClick={() => {\r\n            exportCertificateToPDF(selectedRow);\r\n            setAnchorEl(null);\r\n          }}\r\n        >\r\n          Download\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n\r\n  // Columns for Certificates table\r\n  const columns = [\r\n    { field: 'certificateNumber', headerName: 'Certificate #', width: 150, editable: false },\r\n    {\r\n      field: 'certificateType',\r\n      headerName: 'Type',\r\n      width: 150,\r\n      editable: false,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 220,\r\n      renderCell: (params) => (<span>{getPatientName(params.value)}</span>)\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor',\r\n      width: 220,\r\n      renderCell: (params) => (<span>{getDoctorName(params.value)}</span>)\r\n    },\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: 220,\r\n      renderCell: (params) => (<span>{getClinicName(params.value)}</span>)\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      editable: userRole === 'admin',\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Active'\r\n              ? 'success'\r\n              : params.value === 'Expired'\r\n                ? 'error'\r\n                : 'default'\r\n          }\r\n          size=\"small\"\r\n          variant=\"filled\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'issueDate',\r\n      headerName: 'Issued On',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={new Date(params.value).toLocaleDateString()}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'validUntil',\r\n      headerName: 'Valid Until',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={new Date(params.value).toLocaleDateString()}\r\n          color=\"info\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          sx={{ fontWeight: 600 }}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'recommendations',\r\n      headerName: 'Recommendations',\r\n      width: 200,\r\n      renderCell: (params) =>\r\n        params.value ? (\r\n          <Chip\r\n            label={params.value}\r\n            color=\"warning\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            sx={{ fontWeight: 600 }}\r\n          />\r\n        ) : (\r\n          <span>-</span>\r\n        )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      renderCell: renderActionsMenu\r\n    }\r\n  ];\r\n\r\n  // Chart data\r\n  const types = certificates.reduce((acc, c) => {\r\n    acc[c.certificateType] = (acc[c.certificateType] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const doughnutData = {\r\n    labels: Object.keys(types),\r\n    datasets: [{\r\n      data: Object.values(types),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n  const barData = {\r\n    labels: Object.keys(types),\r\n    datasets: [{\r\n      label: 'Certificates per Type',\r\n      data: Object.values(types),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n  const lineData = {\r\n    labels: Object.keys(types),\r\n    datasets: [\r\n      {\r\n        label: 'Active',\r\n        data: Object.keys(types).map(type => certificates.filter(c => c.certificateType === type && c.status === 'Active').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Expired',\r\n        data: Object.keys(types).map(type => certificates.filter(c => c.certificateType === type && c.status === 'Expired').length),\r\n        borderColor: '#e53935',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  // Loading skeletons\r\n  if (skeleton) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={60} sx={{ mb: 2 }} />\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={300} sx={{ mb: 2 }} />\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={500} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Add this function inside the Certificates component, before the return statement:\r\n  const handleCreateCertificate = async (certificateData) => {\r\n    try {\r\n      await certificateHTTPService.createCertificate(certificateData);\r\n      setSnackbar({ open: true, message: 'Certificate created successfully', severity: 'success' });\r\n      getAllCertificates();\r\n    } catch (error) {\r\n      setSnackbar({ open: true, message: 'Failed to create certificate', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  // Add this function inside the Certificates component, before the return statement:\r\n  const exportCertificateToPDF = (certificate) => {\r\n    const doc = new jsPDF({\r\n      orientation: 'portrait',\r\n      unit: 'pt',\r\n      format: 'A4'\r\n    });\r\n\r\n    // Header\r\n    doc.setFillColor('#1976d2');\r\n    doc.rect(0, 0, 595, 80, 'F');\r\n    doc.setFontSize(28);\r\n    doc.setTextColor('#fff');\r\n    doc.setFont('times', 'bold');\r\n    doc.text('Dentic Clinic', 40, 50);\r\n\r\n    // Certificate Title\r\n    doc.setFontSize(22);\r\n    doc.setTextColor('#1976d2');\r\n    doc.setFont('times', 'bold');\r\n    doc.text('Medical Certificate', 200, 120);\r\n\r\n    // Decorative line\r\n    doc.setDrawColor('#1976d2');\r\n    doc.setLineWidth(2);\r\n    doc.line(40, 130, 555, 130);\r\n\r\n    // Paragraph content\r\n    doc.setFontSize(13);\r\n    doc.setTextColor('#222');\r\n    let y = 170;\r\n    const leftMargin = 40;\r\n    const maxWidth = 515;\r\n\r\n    const patientName = getPatientName(certificate.patientId);\r\n    const doctorName = getDoctorName(certificate.doctorId);\r\n    const clinicName = getClinicName(certificate.clinicId);\r\n    const issueDate = new Date(certificate.issueDate).toLocaleDateString();\r\n    const validUntil = new Date(certificate.validUntil).toLocaleDateString();\r\n\r\n    // Compose the certificate paragraph with bold for important info\r\n    const paragraph =\r\n      `This is to certify that ${patientName} has been examined and treated at ${clinicName} by Dr. ${doctorName} on ${issueDate}. Diagnosis: ${certificate.diagnosis}. Treatment provided: ${certificate.treatmentDetails}.` +\r\n      (certificate.recommendations ? ` Recommendations: ${certificate.recommendations}.` : '') +\r\n      ` This certificate is valid until ${validUntil}.`;\r\n\r\n    // Split the paragraph into lines that fit the page width\r\n    const lines = doc.splitTextToSize(paragraph, maxWidth);\r\n\r\n    // Print the paragraph (all normal font)\r\n    doc.setFont('times', 'normal');\r\n    doc.text(lines, leftMargin, y, { maxWidth });\r\n\r\n    // Optionally, highlight important info in bold by overprinting (simple approach)\r\n    // You can bold the patient, doctor, clinic, diagnosis, treatment, and dates by calculating their positions in the lines array if needed.\r\n\r\n    // Notes\r\n    if (certificate.notes) {\r\n      y += lines.length * 18 + 15;\r\n      doc.setFont('times', 'bold');\r\n      doc.text('Notes:', leftMargin, y);\r\n      doc.setFont('times', 'normal');\r\n      const notesLines = doc.splitTextToSize(certificate.notes, maxWidth - 60);\r\n      doc.text(notesLines, leftMargin + 60, y);\r\n    }\r\n\r\n    // Signature area\r\n    y = 500;\r\n    doc.setDrawColor('#1976d2');\r\n    doc.line(400, y, 555, y);\r\n    doc.setFontSize(16);\r\n    doc.setTextColor('#1976d2');\r\n    doc.setFont('times', 'italic');\r\n    doc.text(doctorName, 420, y + 18);\r\n\r\n    // Label under signature\r\n    doc.setFont('times', 'normal');\r\n    doc.setFontSize(12);\r\n    doc.setTextColor('#222');\r\n    doc.text('Doctor Signature', 420, y + 36);\r\n\r\n    // Footer\r\n    doc.setFontSize(10);\r\n    doc.setTextColor('#888');\r\n    doc.setFont('times', 'normal');\r\n    doc.text('This certificate was generated electronically by Dentic Clinic.', 40, 800);\r\n\r\n    doc.save(`certificate_${certificate.certificateNumber}.pdf`);\r\n    setSnackbar({ open: true, message: 'Certificate exported as PDF', severity: 'success' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Certificates\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          {/* Page Title */}\r\n          <Typography variant=\"h4\" gutterBottom sx={{ mb: 3, mt: 2, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <AssignmentIcon sx={{ mr: 1 }} /> Manage Certificates\r\n          </Typography>\r\n\r\n          {/* Widgets row */}\r\n          <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2, flexWrap: 'wrap' }}>\r\n            <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n              <Typography variant=\"subtitle2\" color=\"primary\">Total Certificates</Typography>\r\n              <Typography variant=\"h6\">{certificates.length}</Typography>\r\n            </Box>\r\n            <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n              <Typography variant=\"subtitle2\" color=\"success.main\">Active</Typography>\r\n              <Typography variant=\"h6\">{certificates.filter(c => c.status === 'Active').length}</Typography>\r\n            </Box>\r\n            <Box sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n              <Typography variant=\"subtitle2\" color=\"error.main\">Expired</Typography>\r\n              <Typography variant=\"h6\">{certificates.filter(c => c.status === 'Expired').length}</Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Charts row */}\r\n          <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n            <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n              <Typography variant=\"subtitle1\" align=\"center\">Certificates by Type</Typography>\r\n              <Doughnut data={doughnutData} />\r\n            </Box>\r\n            <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n              <Typography variant=\"subtitle1\" align=\"center\">Certificates per Type</Typography>\r\n              <Bar data={barData} />\r\n            </Box>\r\n            <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n              <Typography variant=\"subtitle1\" align=\"center\">Status Trends by Type</Typography>\r\n              <Line data={lineData} />\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* Action Buttons */}\r\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2 }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<TemplateIcon />}\r\n              onClick={() => setAddDialogOpen(true)}\r\n            >\r\n              Create Certificate\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<DownloadIcon />}\r\n              onClick={exportToExcel}\r\n            >\r\n              Export Excel\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              startIcon={<PrintIcon />}\r\n              onClick={exportToPDF}\r\n            >\r\n              Export PDF\r\n            </Button>\r\n          </Stack>\r\n\r\n          {/* Advanced Filters */}\r\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2 }}>\r\n            <TextField\r\n              label=\"Type\"\r\n              select\r\n              value={filter.type}\r\n              onChange={e => setFilter(f => ({ ...f, type: e.target.value }))}\r\n              size=\"small\"\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">All Types</MenuItem>\r\n              {Object.keys(types).map(type => (\r\n                <MenuItem key={type} value={type}>{type}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              label=\"Status\"\r\n              select\r\n              value={filter.status}\r\n              onChange={e => setFilter(f => ({ ...f, status: e.target.value }))}\r\n              size=\"small\"\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">All Statuses</MenuItem>\r\n              <MenuItem value=\"Active\">Active</MenuItem>\r\n              <MenuItem value=\"Expired\">Expired</MenuItem>\r\n            </TextField>\r\n            <TextField\r\n              label=\"Patient\"\r\n              select\r\n              value={filter.patient}\r\n              onChange={e => setFilter(f => ({ ...f, patient: e.target.value }))}\r\n              size=\"small\"\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">All Patients</MenuItem>\r\n              {patients.map(p => (\r\n                <MenuItem key={p.id} value={p.id}>{p.fullName}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              label=\"Doctor\"\r\n              select\r\n              value={filter.doctor}\r\n              onChange={e => setFilter(f => ({ ...f, doctor: e.target.value }))}\r\n              size=\"small\"\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">All Doctors</MenuItem>\r\n              {doctors.map(d => (\r\n                <MenuItem key={d.id} value={d.id}>{d.fullName}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              label=\"Clinic\"\r\n              select\r\n              value={filter.clinic}\r\n              onChange={e => setFilter(f => ({ ...f, clinic: e.target.value }))}\r\n              size=\"small\"\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"\">All Clinics</MenuItem>\r\n              {clinics.map(c => (\r\n                <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              label=\"From\"\r\n              type=\"date\"\r\n              value={filter.from}\r\n              onChange={e => setFilter(f => ({ ...f, from: e.target.value }))}\r\n              size=\"small\"\r\n              InputLabelProps={{ shrink: true }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"To\"\r\n              type=\"date\"\r\n              value={filter.to}\r\n              onChange={e => setFilter(f => ({ ...f, to: e.target.value }))}\r\n              size=\"small\"\r\n              InputLabelProps={{ shrink: true }}\r\n              fullWidth\r\n            />\r\n          </Stack>\r\n\r\n          {/* DataGrid */}\r\n          {loading ? <LinearProgress /> : (\r\n            <div style={{ width: '100%' }}>\r\n              <DataGrid\r\n                rows={filteredCertificates}\r\n                columns={columns}\r\n                pageSize={10}\r\n                rowsPerPageOptions={[10, 15, 20]}\r\n                checkboxSelection\r\n                onRowSelectionModelChange={setBulkSelection}\r\n                components={{ Toolbar: GridToolbar }}\r\n                autoHeight\r\n                editMode=\"row\"\r\n                onRowEditCommit={handleRowEditCommit}\r\n                onEditRowsModelChange={handleEditRowsModelChange}\r\n                aria-label=\"Certificates Table\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {/* Add Certificate Dialog */}\r\n          <Dialog open={addDialogOpen} onClose={() => setAddDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n            <DialogTitle>\r\n              <TemplateIcon sx={{ mr: 1 }} /> Create Certificate\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <AddCertificate\r\n                closeModal={() => setAddDialogOpen(false)}\r\n                onCreate={handleCreateCertificate}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => setAddDialogOpen(false)} color=\"secondary\">Close</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          {/* Edit Certificate Dialog */}\r\n          <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n            <DialogTitle>\r\n              <TemplateIcon sx={{ mr: 1 }} /> Edit Certificate\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <EditCertificate closeModal={() => { setEditDialogOpen(false); getAllCertificates(); }} certificate={selectedRow} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => setEditDialogOpen(false)} color=\"secondary\">Close</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          {/* Certificate Preview Drawer */}\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={drawerOpen}\r\n            onClose={() => setDrawerOpen(false)}\r\n            PaperProps={{ sx: { width: { xs: 320, sm: 480 } } }}\r\n          >\r\n            <Box sx={{ p: 3, maxWidth: 480 }}>\r\n              {drawerCertificate && (\r\n                <>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Certificate Preview\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\">Type: {drawerCertificate.certificateType}</Typography>\r\n                  <Typography variant=\"subtitle2\">Patient: {getPatientName(drawerCertificate.patientId)}</Typography>\r\n                  <Typography variant=\"subtitle2\">Doctor: {getDoctorName(drawerCertificate.doctorId)}</Typography>\r\n                  <Typography variant=\"subtitle2\">Clinic: {getClinicName(drawerCertificate.clinicId)}</Typography>\r\n                  <Typography variant=\"subtitle2\">Diagnosis: {drawerCertificate.diagnosis}</Typography>\r\n                  <Typography variant=\"subtitle2\">Treatment: {drawerCertificate.treatmentDetails}</Typography>\r\n                  <Typography variant=\"subtitle2\">Recommendations: {drawerCertificate.recommendations}</Typography>\r\n                  <Typography variant=\"subtitle2\">Status: {drawerCertificate.status}</Typography>\r\n                  <Typography variant=\"subtitle2\">Issued: {new Date(drawerCertificate.issueDate).toLocaleDateString()}</Typography>\r\n                  <Typography variant=\"subtitle2\">Valid Until: {new Date(drawerCertificate.validUntil).toLocaleDateString()}</Typography>\r\n                  <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Notes:</Typography>\r\n                  <Typography variant=\"body2\">{drawerCertificate.notes}</Typography>\r\n                  <Stack direction=\"row\" spacing={2} sx={{ mt: 3 }}>\r\n                    <Button variant=\"outlined\" startIcon={<PrintIcon />} onClick={() => exportCertificateToPDF(drawerCertificate)}>Export PDF</Button>\r\n                    <Button variant=\"outlined\" startIcon={<DownloadIcon />} onClick={exportToExcel}>Download Excel</Button>\r\n                    <Button variant=\"outlined\" startIcon={<ShareIcon />} onClick={() => setSnackbar({ open: true, message: 'Share not implemented', severity: 'info' })}>Share</Button>\r\n                  </Stack>\r\n                </>\r\n              )}\r\n            </Box>\r\n          </Drawer>\r\n\r\n          {/* Snackbar Notifications */}\r\n          <Snackbar\r\n            open={snackbar.open}\r\n            autoHideDuration={3000}\r\n            onClose={() => setSnackbar(s => ({ ...s, open: false }))}\r\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n          >\r\n            <Alert onClose={() => setSnackbar(s => ({ ...s, open: false }))} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n              {snackbar.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCertificates.propTypes = {};\r\nCertificates.defaultProps = {};\r\nexport default Certificates;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport useForceUpdate from 'use-force-update';\r\n\r\nimport AddConsultation from './AddConsultation';\r\nimport EditConsultation from './EditConsultation';\r\nimport { LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport CurrentUser from '../../main/config/user';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst Consultations = () => {\r\n  const [consultations, setConsultations] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  const retrieveConsultations = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/consultations`)\r\n      .then(response => setConsultations(response.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const refresh = () => {\r\n    retrieveConsultations();\r\n    forceUpdate();\r\n  };\r\n\r\n  const closeModalEdit = () => {\r\n    refresh();\r\n    closeButtonEdit.current.click();\r\n  };\r\n\r\n  const closeModalAdd = () => {\r\n    refresh();\r\n    closeButtonAdd.current.click();\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveConsultations();\r\n  }, []);\r\n\r\n  const update = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data);\r\n    refresh();\r\n  };\r\n\r\n  const remove = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(CurrentUser.DELETE_MSG)) {\r\n      axios.delete(`${BASE_URL}/consultations/${id}`).then(() => refresh());\r\n    }\r\n  };\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length === 1) {\r\n      setUpdatedItemId(e[0]);\r\n      const selected = consultations.find(item => item.id === e[0]);\r\n      setUpdatedItem(selected);\r\n    }\r\n    setUpdatedItemIds(e);\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'appointmentId', headerName: 'Appointment ID', width: 220 },\r\n    { field: 'patientId', headerName: 'Patient ID', width: 220 },\r\n    { field: 'doctorId', headerName: 'Doctor ID', width: 220 },\r\n    { field: 'clinicId', headerName: 'Clinic ID', width: 220 },\r\n    {\r\n      field: 'consultationDate',\r\n      headerName: 'Date',\r\n      width: 160,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    { field: 'consultationType', headerName: 'Type', width: 130 },\r\n    { field: 'reasonForVisit', headerName: 'Reason', width: 200 },\r\n    {\r\n      field: 'symptoms',\r\n      headerName: 'Symptoms',\r\n      width: 180,\r\n      renderCell: (params) => params.value?.join(', ')\r\n    },\r\n    {\r\n      field: 'diagnosis',\r\n      headerName: 'Diagnosis',\r\n      width: 180,\r\n      renderCell: (params) => params.value?.diagnosisName\r\n    },\r\n    {\r\n      field: 'prescribedMedications',\r\n      headerName: 'Medications',\r\n      width: 200,\r\n      renderCell: (params) => params.value?.map(m => `${m.medicamentName} (${m.dosage})`).join(', ')\r\n    },\r\n    {\r\n      field: 'recommendedTreatments',\r\n      headerName: 'Treatments',\r\n      width: 180,\r\n      renderCell: (params) => params.value?.map(t => t.treatmentName).join(', ')\r\n    },\r\n    {\r\n      field: 'labTestsOrdered',\r\n      headerName: 'Lab Tests',\r\n      width: 150,\r\n      renderCell: (params) => params.value?.map(l => l.testName).join(', ')\r\n    },\r\n    { field: 'consultationNotes', headerName: 'Notes', width: 250 },\r\n    { field: 'followUpRequired', headerName: 'Follow-up', width: 120 },\r\n    {\r\n      field: 'followUpDate',\r\n      headerName: 'Follow-up Date',\r\n      width: 160,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleString() : 'N/A'\r\n    },\r\n    { field: 'consultationFee', headerName: 'Fee ($)', width: 100 },\r\n    { field: 'paymentStatus', headerName: 'Payment', width: 120 },\r\n    {\r\n      field: 'attachments',\r\n      headerName: 'Attachments',\r\n      width: 150,\r\n      renderCell: (params) => params.value?.length ? (\r\n        <a href={params.value[0]} target=\"_blank\" rel=\"noopener noreferrer\">View</a>\r\n      ) : \"None\"\r\n    },\r\n    { field: 'status', headerName: 'Status', width: 130 },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Created At',\r\n      width: 160,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'updatedAt',\r\n      headerName: 'Updated At',\r\n      width: 160,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-stethoscope\"></i> Consultations</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <button type=\"button\" className=\"btn btn-success btn-sm\" data-toggle=\"modal\" data-target=\"#addConsultation\">\r\n          <i className=\"far fa-plus-square\"></i> Create\r\n        </button>\r\n        <button onClick={e => update(e, updatedItem)} type=\"button\" data-toggle=\"modal\" data-target=\"#editConsultation\" className=\"btn btn-warning btn-sm\">\r\n          <i className=\"fas fa-edit\"></i> Edit\r\n        </button>\r\n        <button onClick={e => remove(e, updatedItemId)} type=\"button\" className=\"btn btn-danger btn-sm\">\r\n          <i className=\"fas fa-trash-alt\"></i> Remove\r\n        </button>\r\n\r\n        {loading ? <LinearProgress /> : (\r\n          <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n              rows={consultations}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Consultation Modal */}\r\n        <div className=\"modal fade\" id=\"addConsultation\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">New Consultation</h5>\r\n                <button onClick={refresh} type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* <AddConsultation closeModal={closeModalAdd} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button onClick={refresh} ref={closeButtonAdd} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Consultation Modal */}\r\n        <div className=\"modal fade\" id=\"editConsultation\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Consultation</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\"><span>&times;</span></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* <EditConsultation consultation={updatedItem} closeModal={closeModalEdit} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button onClick={refresh} ref={closeButtonEdit} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Consultations;\r\n","\r\nconst certificateTemplateValidation = {\r\n    name: 'Sequelize.STRING',\r\n    content: 'Sequelize.STRING'\r\n}\r\nexport default certificateTemplateValidation;","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllCertificationTemplate = () => {\r\n    return http.get(`${BASE_URL}/certificate-templates`)\r\n}\r\nconst createCertificationTemplate = data => {\r\n    return http.post(`${BASE_URL}/certificate-templates`, data);\r\n};\r\n\r\nconst editCertificationTemplate = (id, data) => {\r\n    return http.put(`${BASE_URL}/certificate-templates/${id}`, data);\r\n};\r\n\r\nconst removeCertificationTemplate = id => {\r\n    return http.delete(`${BASE_URL}/certificate-templates/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllCertificationTemplate,\r\n    createCertificationTemplate,\r\n    editCertificationTemplate,\r\n    removeCertificationTemplate\r\n};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddCertificateTemplate.css';\r\nimport appointementValidation from '../../main/validations/appointementValidation';\r\nimport { useForm } from 'react-hook-form';\r\nimport certificateTemplateValidation from '../../main/validations/certificationtemplateValidation';\r\nimport certificationtemplatetHTTPServiceCopy from '../../main/services/certificationtemplatetHTTPService copy';\r\n\r\n\r\nconst AddCertificateTemplate = (props) => {\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [certificateTemplate, setCertificateTemplate] = useState();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data)\r\n    certificationtemplatetHTTPServiceCopy.createCertificationTemplate(data).then(data => {\r\n      setCertificateTemplate(initialState)\r\n      props.closeModal()\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCertificateTemplate({ ...certificateTemplate, [name]: value });\r\n  };\r\n\r\n  const initialState = {\r\n    name: '',\r\n    content: ''\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddCertificateTemplate\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Title:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={certificateTemplate?.name} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n              <div className=\"error text-danger\">\r\n                {errors.date && certificateTemplateValidation.name}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Content:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={certificateTemplate?.content} ref={register({ required: true })}\r\n                type=\"text\" name=\"content\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n              </textarea>\r\n              <div className=\"error text-danger\">\r\n                {errors.content && certificateTemplateValidation.content}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <div >\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nAddCertificateTemplate.propTypes = {};\r\n\r\nAddCertificateTemplate.defaultProps = {};\r\n\r\nexport default AddCertificateTemplate;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './EditCertificateTemplate.css';\r\nimport certificationtemplatetHTTPServiceCopy from '../../main/services/certificationtemplatetHTTPService copy';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\nimport { useForm } from 'react-hook-form';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst EditCertificateTemplate = (props) => {\r\n\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [certificateTemplate, setCertificate] = useState(props.certificateTemplate);\r\n  const [patients, setPatients] = useState([]);\r\n  useEffect(() => {\r\n    setCertificate(props.certificateTemplate)\r\n    patientHTTPService.getAllPatients()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n\r\n      })\r\n      .catch(e => {\r\n        // showMessage('Confirmation', e, 'info')\r\n      });\r\n  }, [props.certificateTemplate]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //GroupeTestService.update(props.certificateTemplate, data)\r\n    certificationtemplatetHTTPServiceCopy.editCertificationTemplate(props.certificateTemplate.id, data).then(data => {\r\n      props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCertificate({ ...certificateTemplate, [name]: value });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"EditCertificateTemplate\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Title:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={certificateTemplate?.name} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Content:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={certificateTemplate?.content} ref={register({ required: true })}\r\n                type=\"text\" name=\"content\" id=\"patient_id\" onkeyup=\"if (!window.__cfRLUnblockHandlers) return false; loadName(this.value);\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n              </textarea>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <div >\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\nEditCertificateTemplate.propTypes = {};\r\n\r\nEditCertificateTemplate.defaultProps = {};\r\n\r\nexport default EditCertificateTemplate;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './CertificateTemplates.css';\r\nimport AddCertificateTemplate from '../AddCertificateTemplate/AddCertificateTemplate'\r\nimport EditCertificationTemplate from '../EditCertificateTemplate/EditCertificateTemplate'\r\nimport certificateTemplateValidation from '../../main/validations/certificationtemplateValidation';\r\nimport certificationtemplatetHTTPServiceCopy from '../../main/services/certificationtemplatetHTTPService copy';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport certificateHTTPService from '../../main/services/certificateHTTPService';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport CurrentUser from '../../main/config/user';\r\nconst CertificateTemplates = () => {\r\n\r\n  const [certificateTemplate, setCertificateTemplate] = useState([]);\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    //LoadJSFiles()\r\n    getAllPatient()\r\n  }, []);\r\n\r\n\r\n  const getAllPatient = () => {\r\n    setLoading(true);\r\n    certificationtemplatetHTTPServiceCopy.getAllCertificationTemplate()\r\n      .then(response => {\r\n        console.log(response.data)\r\n        setCertificateTemplate(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n  };\r\n\r\n\r\n  const removeActivityAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      certificationtemplatetHTTPServiceCopy.removeCertificationTemplate(data).then(data => {\r\n        getAllPatient()\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updateActivityAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    getAllPatient()\r\n    closeButtonEdit.current.click()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    getAllPatient()\r\n    closeButtonAdd.current.click()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 200 },\r\n    { field: 'name', headerName: 'Certificate Template Name', width: 200 },\r\n    { field: 'description', headerName: 'Description', width: 200 },\r\n  ];\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length === 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = certificateTemplate.find(item => item.id === e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n  const createTemplate = (templateDetails) => {\r\n    console.log('Creating template:', templateDetails);\r\n    // Placeholder for creating a reusable certificate template\r\n  };\r\n\r\n  const designCertificateLayout = (layoutDetails) => {\r\n    console.log('Designing certificate layout:', layoutDetails);\r\n    // Placeholder for designing certificate layout\r\n  };\r\n\r\n  const applyTemplateToGenerateCertificate = (templateId, data) => {\r\n    console.log('Applying template to generate certificate:', { templateId, data });\r\n    // Placeholder for applying template to generate certificates dynamically\r\n  };\r\n\r\n  return (\r\n    <div className=\"CertificateTemplates\">\r\n      <div className=\"card\">\r\n\r\n        <div className=\"card-body\">\r\n\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            <i className=\"menu-icon fa fa-bars\"></i>   Manage Certificate Templates\r\n          </Typography>\r\n          <br />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => createTemplate({\r\n              name: 'Template 1',\r\n              format: 'PDF',\r\n            })}\r\n          >\r\n            Create Template\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => designCertificateLayout({\r\n              text: 'Certificate of Achievement',\r\n              logo: 'logo.png',\r\n              signatures: ['signature1.png', 'signature2.png'],\r\n            })}\r\n            style={{ marginLeft: '10px' }}\r\n          >\r\n            Design Layout\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"info\"\r\n            onClick={() => applyTemplateToGenerateCertificate('template1', { name: 'John Doe', date: '2025-07-13' })}\r\n            style={{ marginLeft: '10px' }}\r\n          >\r\n            Generate Certificate\r\n          </Button>\r\n          <br /><br />\r\n\r\n          {loading ?\r\n            <LinearProgress />\r\n            : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n              rows={certificateTemplate}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[6]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            /></div>}\r\n\r\n\r\n          <div class=\"modal fade\" id=\"addMedicament\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">New</h5>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <AddCertificateTemplate closeModal={closeModalAdd} />\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" ref={closeButtonAdd} class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"modal fade\" id=\"edit\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                  <EditCertificationTemplate closeModal={closeModalEdit} certificateTemplate={updatedItem} />\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" ref={closeButtonEdit} class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nCertificateTemplates.propTypes = {};\r\n\r\nCertificateTemplates.defaultProps = {};\r\n\r\nexport default CertificateTemplates;\r\n","import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  PointElement,\r\n  LineElement,\r\n  RadialLinearScale\r\n} from 'chart.js';\r\nimport { Bar, Pie, Doughnut, Line, PolarArea, Radar, Scatter, Bubble } from 'react-chartjs-2';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  PointElement,\r\n  LineElement,\r\n  RadialLinearScale\r\n);\r\n\r\nconst MedicamentAnalytics = () => {\r\n  const [medicaments, setMedicaments] = useState([]);\r\n  const [charts, setCharts] = useState({\r\n    bar: { labels: [], datasets: [] },\r\n    pie: { labels: [], datasets: [] },\r\n    doughnut: { labels: [], datasets: [] },\r\n    line: { labels: [], datasets: [] },\r\n    polar: { labels: [], datasets: [] },\r\n    radar: { labels: [], datasets: [] },\r\n    scatter: { datasets: [] },\r\n    bubble: { datasets: [] },\r\n    typePie: { labels: [], datasets: [] }\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(`${BASE_URL}/medicaments`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setMedicaments(data);\r\n        prepareCharts(data);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', \"HTTP_ERR_MESSAGE\", 'warning');\r\n      });\r\n  }, []);\r\n\r\n  const prepareCharts = (data) => {\r\n    // 1. Bar: Count by Category\r\n    const categoryCounts = {};\r\n    data.forEach(m => {\r\n      categoryCounts[m.category || 'Unknown'] = (categoryCounts[m.category || 'Unknown'] || 0) + 1;\r\n    });\r\n    // 2. Pie: Manufacturer\r\n    const manufacturerCounts = {};\r\n    data.forEach(m => {\r\n      manufacturerCounts[m.manufacturerName || 'Unknown'] = (manufacturerCounts[m.manufacturerName || 'Unknown'] || 0) + 1;\r\n    });\r\n    // 3. Doughnut: Type\r\n    const typeCounts = {};\r\n    data.forEach(m => {\r\n      typeCounts[m.type || 'Unknown'] = (typeCounts[m.type || 'Unknown'] || 0) + 1;\r\n    });\r\n    // 4. Line: Added per Month\r\n    const monthCounts = {};\r\n    data.forEach(m => {\r\n      const month = new Date(m.createdAt).toLocaleString('default', { month: 'short', year: 'numeric' });\r\n      monthCounts[month] = (monthCounts[month] || 0) + 1;\r\n    });\r\n    const months = Object.keys(monthCounts);\r\n\r\n    // 5. PolarArea: Stock Status\r\n    const stockCounts = {};\r\n    data.forEach(m => {\r\n      stockCounts[m.stockStatus || 'Unknown'] = (stockCounts[m.stockStatus || 'Unknown'] || 0) + 1;\r\n    });\r\n\r\n    // 6. Radar: Active Ingredient\r\n    const ingredientCounts = {};\r\n    data.forEach(m => {\r\n      (m.activeIngredients || []).forEach(a => {\r\n        ingredientCounts[a] = (ingredientCounts[a] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    // 7. Scatter: Price vs. Stock\r\n    const scatterData = data.map(m => ({\r\n      x: m.price || Math.floor(Math.random() * 100),\r\n      y: m.stock || Math.floor(Math.random() * 500)\r\n    }));\r\n\r\n    // 8. Bubble: Price by Category\r\n    const bubbleData = Object.keys(categoryCounts).map(cat => ({\r\n      x: cat,\r\n      y: categoryCounts[cat],\r\n      r: categoryCounts[cat] * 2\r\n    }));\r\n\r\n    // 9. Pie: Type\r\n    setCharts({\r\n      bar: {\r\n        labels: Object.keys(categoryCounts),\r\n        datasets: [{\r\n          label: 'Category',\r\n          data: Object.values(categoryCounts),\r\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        }]\r\n      },\r\n      pie: {\r\n        labels: Object.keys(manufacturerCounts),\r\n        datasets: [{\r\n          label: 'Manufacturer',\r\n          data: Object.values(manufacturerCounts),\r\n          backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f', '#7b1fa2', '#0288d1'],\r\n        }]\r\n      },\r\n      doughnut: {\r\n        labels: Object.keys(typeCounts),\r\n        datasets: [{\r\n          label: 'Type',\r\n          data: Object.values(typeCounts),\r\n          backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#009688', '#8bc34a'],\r\n        }]\r\n      },\r\n      line: {\r\n        labels: months,\r\n        datasets: [{\r\n          label: 'Added',\r\n          data: months.map(m => monthCounts[m]),\r\n          borderColor: '#1976d2',\r\n          backgroundColor: 'rgba(25, 118, 210, 0.2)',\r\n          fill: true,\r\n        }]\r\n      },\r\n      polar: {\r\n        labels: Object.keys(stockCounts),\r\n        datasets: [{\r\n          label: 'Stock Status',\r\n          data: Object.values(stockCounts),\r\n          backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f', '#7b1fa2', '#0288d1'],\r\n        }]\r\n      },\r\n      radar: {\r\n        labels: Object.keys(ingredientCounts),\r\n        datasets: [{\r\n          label: 'Active Ingredients',\r\n          data: Object.values(ingredientCounts),\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n        }]\r\n      },\r\n      scatter: {\r\n        datasets: [{\r\n          label: 'Price vs Stock',\r\n          data: scatterData,\r\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        }]\r\n      },\r\n      bubble: {\r\n        datasets: [{\r\n          label: 'Price by Category',\r\n          data: bubbleData,\r\n          backgroundColor: 'rgba(255, 206, 86, 0.5)',\r\n        }]\r\n      },\r\n      typePie: {\r\n        labels: Object.keys(typeCounts),\r\n        datasets: [{\r\n          label: 'Type',\r\n          data: Object.values(typeCounts),\r\n          backgroundColor: ['#1976d2', '#d32f2f', '#7b1fa2', '#388e3c'],\r\n        }]\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"MedicamentAnalytics\">\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '32px',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\r\n          margin: '24px 0'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gap: '30px'\r\n          }}\r\n        >\r\n          <div>\r\n            <h5>Medicaments by Category (Bar)</h5>\r\n            <Bar options={chartBarOption} data={charts.bar} />\r\n          </div>\r\n          <div>\r\n            <h5>Medicaments by Manufacturer (Pie)</h5>\r\n            <Pie data={charts.pie} />\r\n          </div>\r\n          <div>\r\n            <h5>Medicaments by Type (Doughnut)</h5>\r\n            <Doughnut data={charts.doughnut} />\r\n          </div>\r\n          <div>\r\n            <h5>Added per Month (Line)</h5>\r\n            <Line data={charts.line} />\r\n          </div>\r\n          <div>\r\n            <h5>Stock Status (PolarArea)</h5>\r\n            <PolarArea data={charts.polar} />\r\n          </div>\r\n          <div>\r\n            <h5>Active Ingredients (Radar)</h5>\r\n            <Radar data={charts.radar} />\r\n          </div>\r\n          <div>\r\n            <h5>Price vs Stock (Scatter)</h5>\r\n            <Scatter data={charts.scatter} />\r\n          </div>\r\n          <div>\r\n            <h5>Price by Category (Bubble)</h5>\r\n            <Bubble data={charts.bubble} />\r\n          </div>\r\n          <div>\r\n            <h5>Medicaments by Type (Pie)</h5>\r\n            <Pie data={charts.typePie} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicamentAnalytics;","import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  PointElement,\r\n  LineElement,\r\n  RadialLinearScale // <-- Add this import\r\n} from 'chart.js';\r\nimport { Bar, Pie, Doughnut, Line, PolarArea, Radar, Scatter, Bubble } from 'react-chartjs-2';\r\nimport { chartBarOption } from '../../main/config/chart.bar';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n// Register RadialLinearScale for PolarArea and Radar charts\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n  PointElement,\r\n  LineElement,\r\n  RadialLinearScale // <-- Register here\r\n);\r\n\r\nconst PatientAnalytics = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [charts, setCharts] = useState({\r\n    bar: { labels: [], datasets: [] },\r\n    pie: { labels: [], datasets: [] },\r\n    doughnut: { labels: [], datasets: [] },\r\n    line: { labels: [], datasets: [] },\r\n    polar: { labels: [], datasets: [] },\r\n    radar: { labels: [], datasets: [] },\r\n    scatter: { datasets: [] },\r\n    bubble: { datasets: [] },\r\n    genderPie: { labels: [], datasets: [] }\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(`${BASE_URL}/patients`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setPatients(data);\r\n        prepareCharts(data);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', \"HTTP_ERR_MESSAGE\", 'warning');\r\n      });\r\n  }, []);\r\n\r\n  // Helper to get full name by id\r\n  const getPatientName = (id) => {\r\n    const pat = patients.find(p => p.id === id);\r\n    return pat ? pat.fullName : id;\r\n  };\r\n\r\n  const prepareCharts = (data) => {\r\n    // 1. Bar: Insurance (show fullName in tooltip)\r\n    const insuranceCounts = {};\r\n    data.forEach(p => {\r\n      insuranceCounts[p.insuranceId] = (insuranceCounts[p.insuranceId] || 0) + 1;\r\n    });\r\n    // 2. Pie: Blood Type\r\n    const bloodTypeCounts = {};\r\n    data.forEach(p => {\r\n      bloodTypeCounts[p.bloodType] = (bloodTypeCounts[p.bloodType] || 0) + 1;\r\n    });\r\n    // 3. Doughnut: City\r\n    const cityCounts = {};\r\n    data.forEach(p => {\r\n      const city = p.address?.city || 'Unknown';\r\n      cityCounts[city] = (cityCounts[city] || 0) + 1;\r\n    });\r\n    // 4. Line: Registrations per Month\r\n    const monthCounts = {};\r\n    data.forEach(p => {\r\n      const month = new Date(p.createdAt).toLocaleString('default', { month: 'short', year: 'numeric' });\r\n      monthCounts[month] = (monthCounts[month] || 0) + 1;\r\n    });\r\n    const months = Object.keys(monthCounts);\r\n\r\n    // 5. PolarArea: Payment Status\r\n    const paymentStatusCounts = {};\r\n    data.forEach(p => {\r\n      paymentStatusCounts[p.paymentStatus || 'Unknown'] = (paymentStatusCounts[p.paymentStatus || 'Unknown'] || 0) + 1;\r\n    });\r\n\r\n    // 6. Radar: Allergies\r\n    const allergyCounts = {};\r\n    data.forEach(p => {\r\n      (p.allergies || []).forEach(a => {\r\n        allergyCounts[a] = (allergyCounts[a] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    // 7. Scatter: Age vs. Amount (if available)\r\n    const scatterData = data.map(p => ({\r\n      x: p.age || Math.floor(Math.random() * 60) + 18,\r\n      y: p.amount || Math.floor(Math.random() * 1000)\r\n    }));\r\n\r\n    // 8. Bubble: Amount by Blood Type\r\n    const bubbleData = Object.keys(bloodTypeCounts).map(bt => ({\r\n      x: bt,\r\n      y: bloodTypeCounts[bt],\r\n      r: bloodTypeCounts[bt] * 2\r\n    }));\r\n\r\n    // 9. Pie: Gender\r\n    const genderCounts = {};\r\n    data.forEach(p => {\r\n      genderCounts[p.gender || 'Unknown'] = (genderCounts[p.gender || 'Unknown'] || 0) + 1;\r\n    });\r\n\r\n    setCharts({\r\n      bar: {\r\n        labels: Object.keys(insuranceCounts),\r\n        datasets: [{\r\n          label: 'Insurance',\r\n          data: Object.values(insuranceCounts),\r\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        }]\r\n      },\r\n      pie: {\r\n        labels: Object.keys(bloodTypeCounts),\r\n        datasets: [{\r\n          label: 'Blood Type',\r\n          data: Object.values(bloodTypeCounts),\r\n          backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f', '#7b1fa2', '#0288d1'],\r\n        }]\r\n      },\r\n      doughnut: {\r\n        labels: Object.keys(cityCounts),\r\n        datasets: [{\r\n          label: 'City',\r\n          data: Object.values(cityCounts),\r\n          backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe', '#ffce56', '#009688', '#8bc34a'],\r\n        }]\r\n      },\r\n      line: {\r\n        labels: months,\r\n        datasets: [{\r\n          label: 'Registrations',\r\n          data: months.map(m => monthCounts[m]),\r\n          borderColor: '#1976d2',\r\n          backgroundColor: 'rgba(25, 118, 210, 0.2)',\r\n          fill: true,\r\n        }]\r\n      },\r\n      polar: {\r\n        labels: Object.keys(paymentStatusCounts),\r\n        datasets: [{\r\n          label: 'Payment Status',\r\n          data: Object.values(paymentStatusCounts),\r\n          backgroundColor: ['#1976d2', '#388e3c', '#fbc02d', '#d32f2f', '#7b1fa2', '#0288d1'],\r\n        }]\r\n      },\r\n      radar: {\r\n        labels: Object.keys(allergyCounts),\r\n        datasets: [{\r\n          label: 'Allergies',\r\n          data: Object.values(allergyCounts),\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n        }]\r\n      },\r\n      scatter: {\r\n        datasets: [{\r\n          label: 'Age vs Amount',\r\n          data: scatterData,\r\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        }]\r\n      },\r\n      bubble: {\r\n        datasets: [{\r\n          label: 'Amount by Blood Type',\r\n          data: bubbleData,\r\n          backgroundColor: 'rgba(255, 206, 86, 0.5)',\r\n        }]\r\n      },\r\n      genderPie: {\r\n        labels: Object.keys(genderCounts),\r\n        datasets: [{\r\n          label: 'Gender',\r\n          data: Object.values(genderCounts),\r\n          backgroundColor: ['#1976d2', '#d32f2f', '#7b1fa2', '#388e3c'],\r\n        }]\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"PatientAnalytics\">\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: '12px',\r\n          padding: '32px',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\r\n          margin: '24px 0'\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gap: '30px'\r\n          }}\r\n        >\r\n          <div>\r\n            <h5>Patients by Insurance (Bar)</h5>\r\n            <Bar options={chartBarOption} data={charts.bar} />\r\n          </div>\r\n          <div>\r\n            <h5>Patients by Blood Type (Pie)</h5>\r\n            <Pie data={charts.pie} />\r\n          </div>\r\n          <div>\r\n            <h5>Patients by City (Doughnut)</h5>\r\n            <Doughnut data={charts.doughnut} />\r\n          </div>\r\n          <div>\r\n            <h5>Registrations per Month (Line)</h5>\r\n            <Line data={charts.line} />\r\n          </div>\r\n          <div>\r\n            <h5>Payment Status (PolarArea)</h5>\r\n            <PolarArea data={charts.polar} />\r\n          </div>\r\n          <div>\r\n            <h5>Allergies (Radar)</h5>\r\n            <Radar data={charts.radar} />\r\n          </div>\r\n          <div>\r\n            <h5>Age vs Amount (Scatter)</h5>\r\n            <Scatter data={charts.scatter} />\r\n          </div>\r\n          <div>\r\n            <h5>Amount by Blood Type (Bubble)</h5>\r\n            <Bubble data={charts.bubble} />\r\n          </div>\r\n          <div>\r\n            <h5>Patients by Gender (Pie)</h5>\r\n            <Pie data={charts.genderPie} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientAnalytics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SaleAnalytics.css';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: 'Chart.js Bar Chart',\r\n    },\r\n  },\r\n};\r\n\r\nconst labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\nexport const data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: [1, 2, 3, 4],\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n    },\r\n    {\r\n      label: 'Dataset 2',\r\n      data: [1, 2, 3, 4],\r\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n    },\r\n  ],\r\n};\r\nconst SaleAnalytics = () => (\r\n  <div className=\"SaleAnalytics\">\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <strong className=\"card-title\">Sales Analytics</strong>\r\n      </div>\r\n      <div className=\"card-body\">\r\n\r\n        <Bar options={options} data={data} />\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nSaleAnalytics.propTypes = {};\r\n\r\nSaleAnalytics.defaultProps = {};\r\n\r\nexport default SaleAnalytics;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllService = () => {\r\n    return http.get(`${BASE_URL}/api/service`)\r\n}\r\nconst createService = (filename, data) => {\r\n    return http.post(`${BASE_URL}/api/service/${filename}`, data);\r\n};\r\n\r\nconst uploadFile = (data) => {\r\n    return http.post(`${BASE_URL}/api/service/image/uploadfile`, data);\r\n};\r\n\r\nconst editService = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/service/${id}`, data);\r\n};\r\n\r\nconst removeService = id => {\r\n    return http.delete(`${BASE_URL}/api/service/${id}`);\r\n};\r\n\r\nexport default {\r\n    getAllService,\r\n    createService,\r\n    editService,\r\n    removeService,\r\n    uploadFile\r\n};","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddService.css';\r\nimport appointementValidation from '../../main/validations/appointementValidation';\r\nimport { useForm } from 'react-hook-form';\r\nimport serviceHTTPService from '../../main/services/serviceHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport appointementMessage from '../../main/messages/appointementMessage';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst AddService = (props) => {\r\n\r\n  const initialState = {\r\n    name: '',\r\n    description: '',\r\n    status: '',\r\n    file: null,\r\n    fileName: ''\r\n  };\r\n\r\n  useEffect(() => {\r\n    setService({ 'file': null });\r\n    setService(initialState)\r\n  }, []);\r\n\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [service, setService] = useState(initialState);\r\n\r\n  const onSubmit = (data) => {\r\n    const formData = new FormData(document.getElementById(\"addService\"));\r\n\r\n    // Update the formData object \r\n    /* formData.append(\r\n      \"file\",\r\n      service.file,\r\n      'file'\r\n    ); */\r\n\r\n\r\n    //setService({ 'fileName': formData.get('file').name })\r\n\r\n    console.log(formData.get('file').name)\r\n\r\n    serviceHTTPService.uploadFile(formData).then(data => { })\r\n    serviceHTTPService.createService(formData.get('file').name, data).then(data => {\r\n      setService(initialState)\r\n      showMessage('Confirmation', CurrentUser.CREATE_MSG, 'success')\r\n      props.closeModal()\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  const handleFileChange = event => {\r\n\r\n    setService({ 'file': event.target.files[0] });\r\n    // setService({ 'fileName': event.target.files[0].name });\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setService({ ...service, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"AddService\">\r\n      <form id=\"addService\" onSubmit={handleSubmit(onSubmit)} enctype=\"multipart/form-data\" class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Image:</font></font></label>\r\n          <div class=\"col-md-12\">\r\n            <input ref={register({ required: true })} name=\"file\" type=\"file\" onChange={handleFileChange} />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Service Name:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input value={service.name} onChange={handleInputChange} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n              <div className=\"error text-danger\">\r\n                {errors.date && appointementValidation.date}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Description:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea value={service.description} onChange={handleInputChange} ref={register({ required: false })}\r\n                type=\"text\" name=\"description\" id=\"service_id\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Status:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select value={service.status} onChange={handleInputChange} ref={register({ required: true })}\r\n                name=\"status\" class=\"form-control\" rows=\"3\">\r\n                <option>Active</option>\r\n                <option>Inactive</option>\r\n              </select>\r\n              <div className=\"error text-danger\">\r\n                {errors.status && appointementValidation.status}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\" col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nAddService.propTypes = {};\r\n\r\nAddService.defaultProps = {};\r\n\r\nexport default AddService;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './EditService.css';\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport showMessage from '../../libraries/messages/messages'\r\nimport { useForm } from 'react-hook-form';\r\nconst EditService = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [groupe, setGroupe] = useState(props.service);\r\n\r\n  useEffect(() => {\r\n    setGroupe(props.service)\r\n  }, [props.service]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    // GroupeTestService.update(props.service, data)\r\n    // showMessage('Confirmation', 'groupeMessage.edit', 'success')\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setGroupe({ ...groupe, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditGroupe\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Nom du groupe</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={groupe.groupe_name} ref={register({ required: true })}\r\n              id=\"text\" name=\"groupe_name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\"><i class=\"far fa-save\"></i>Sauvegarder</button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nEditService.propTypes = {};\r\n\r\nEditService.defaultProps = {};\r\n\r\nexport default EditService;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Services.css';\r\nimport AddService from '../AddService/AddService';\r\nimport EditService from '../EditService/EditService'\r\nimport { LoadJSFiles } from '../init';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport serviceHTTPService from '../../main/services/serviceHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\nconst Services = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllPatient()\r\n  }, []);\r\n\r\n\r\n  const getAllPatient = () => {\r\n    // setLoading(true);\r\n    serviceHTTPService.getAllService()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n        // setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n  const removePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      serviceHTTPService.removeService(data).then(data => {\r\n        resfreshComponent()\r\n        showMessage('Confirmation', CurrentUser.REMOVE_MSG, 'success')\r\n      }).catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n    }\r\n  }\r\n\r\n  const updatePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n    getAllPatient()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    getAllPatient()\r\n  }\r\n  const resfreshComponent = () => {\r\n    getAllPatient()\r\n    //forceUpdate()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 20 },\r\n    { field: 'name', headerName: 'Service Name', width: 200 },\r\n    { field: 'status', headerName: 'Status', width: 200 }]\r\n\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = patients.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Services\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addPatient\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n\r\n        <Button onClick={e => removePatientAction(e, updatedItemIds)} type=\"button\" ><i class=\"fas fa-trash-alt\"></i> Remove</Button>\r\n        <Button type=\"button\" onClick={() => getAllPatient()}><i class=\"fas fa-refresh\"></i> Reload</Button>\r\n\r\n        <br /><br />\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={patients}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar }}\r\n          /></div>}\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button onClick={resfreshComponent} type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddService closeModal={closeModalAdd} />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button onClick={resfreshComponent} ref={closeButtonAdd} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"modal fade\" id=\"editPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonEdit} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nServices.propTypes = {};\r\n\r\nServices.defaultProps = {};\r\n\r\nexport default Services;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getOpeningHourPage = () => {\r\n    return http.get(`${BASE_URL}/api/frontoffice/openinghours`)\r\n}\r\n\r\nconst editOpeningHourPage = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/frontoffice/openinghours/${id}`, data);\r\n};\r\n\r\n\r\nconst getBlogPage = () => {\r\n    return http.get(`${BASE_URL}/api/frontoffice/blogs`)\r\n}\r\n\r\nconst editBlogPage = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/frontoffice/blogs/${id}`, data);\r\n};\r\n\r\n\r\nconst getHomePage = () => {\r\n    return http.get(`${BASE_URL}/api/frontoffice/homepage`)\r\n}\r\n\r\nconst editHomePage = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/frontoffice/homepage/${id}`, data);\r\n};\r\n\r\n\r\nconst getServicePage = () => {\r\n    return http.get(`${BASE_URL}/api/frontoffice/services`)\r\n}\r\n\r\nconst editServicePage = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/frontoffice/services/${id}`, data);\r\n};\r\n\r\n\r\nconst getContactPage = () => {\r\n    return http.get(`${BASE_URL}/api/frontoffice`)\r\n}\r\n\r\nconst editContactPage = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/frontoffice/${id}`, data);\r\n};\r\n\r\n\r\n\r\nexport default {\r\n    getOpeningHourPage,\r\n    editContactPage,\r\n    getContactPage,\r\n    editServicePage,\r\n    getServicePage,\r\n    editOpeningHourPage,\r\n    editBlogPage,\r\n    getHomePage,\r\n    editHomePage,\r\n    getBlogPage\r\n};","\r\nimport PropTypes from 'prop-types';\r\nimport './EditOpeningHourPage.css';\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport React, { useEffect, useState } from 'react';\r\nimport showMessage from '../../libraries/messages/messages'\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport CurrentUser from '../../main/config/user';\r\nconst EditOpeningHourPage = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [frontOffice, setFrontOffice] = useState(props.frontOffice);\r\n\r\n  useEffect(() => {\r\n    setFrontOffice(props.frontOffice)\r\n  }, [props.frontOffice]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //GroupeTestService.update(props.frontOffice, data)\r\n    frontOfficeHTTPService.editOpeningHourPage(props.frontOffice.id, data).then(data => {\r\n      // props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setFrontOffice({ ...frontOffice, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditGroupe\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Title</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.title} ref={register({ required: true })}\r\n              id=\"text\" name=\"title\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Sub title</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.subtitle} ref={register({ required: true })}\r\n              id=\"text\" name=\"subtitle\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\"><i class=\"far fa-save\"></i>Save </button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nEditOpeningHourPage.propTypes = {};\r\n\r\nEditOpeningHourPage.defaultProps = {};\r\n\r\nexport default EditOpeningHourPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './OpeningHourPage.css';\r\nimport EditOpeningHourPage from '../EditOpeningHourPage/EditOpeningHourPage'\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport { Button, Typography } from '@mui/material';\r\nconst OpeningHourPage = () => {\r\n  const [frontOffice, setFrontOffice] = useState({});\r\n\r\n  useEffect(() => {\r\n    retrieveEvents()\r\n  }, []);\r\n\r\n\r\n  const retrieveEvents = () => {\r\n    frontOfficeHTTPService.getOpeningHourPage()\r\n      .then(response => {\r\n\r\n        setFrontOffice(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n\r\n  const update = (e, data) => {\r\n    e.preventDefault();\r\n    setFrontOffice(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n  return (\r\n    <div className=\"FrontOffice\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n\r\n            <div className=\"card-body\">\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                <i className=\"menu-icon fa fa-bars\"></i>   Opening Hours\r\n              </Typography>\r\n              <div className=\"table-responsive\">\r\n\r\n                <Button onClick={e => update(e, frontOffice)} type=\"button\" data-toggle=\"modal\" data-target=\"#editFrontOffice\" ><i class=\"fas fa-edit\"></i> Edit </Button>\r\n\r\n\r\n                <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item\">Title : {frontOffice?.title}</li>\r\n                  <li class=\"list-group-item\">Sub Title : {frontOffice?.subtitle} </li>\r\n\r\n\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal fade\" id=\"editFrontOffice\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <EditOpeningHourPage frontOffice={frontOffice} />\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"modal fade\" id=\"preview\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Preview</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <iframe src=\"https://dentic-client.herokuapp.com/opening\" height=\"420\" width=\"750\" title=\"Iframe Example\"></iframe>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nOpeningHourPage.propTypes = {};\r\n\r\nOpeningHourPage.defaultProps = {};\r\n\r\nexport default OpeningHourPage;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './EditContactPage.css';\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport React, { useEffect, useState } from 'react';\r\nimport showMessage from '../../libraries/messages/messages'\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport CurrentUser from '../../main/config/user';\r\nconst EditContactPage = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [frontOffice, setfrontOffice] = useState(props.frontOffice);\r\n\r\n  useEffect(() => {\r\n    setfrontOffice(props.frontOffice)\r\n  }, [props.frontOffice]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //GroupeTestService.update(props.frontOffice, data)\r\n    frontOfficeHTTPService.editContactPage(props.frontOffice.id, data).then(data => {\r\n      props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setfrontOffice({ ...frontOffice, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditGroupe\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Email</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.email} ref={register({ required: true })}\r\n              id=\"text\" name=\"name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Subject</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.subject} ref={register({ required: true })}\r\n              id=\"text\" name=\"name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Message</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.message} ref={register({ required: true })}\r\n              id=\"text\" name=\"name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">send</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.sendButton} ref={register({ required: true })}\r\n              id=\"text\" name=\"name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Name</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.name} ref={register({ required: true })}\r\n              id=\"text\" name=\"name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\"><i class=\"far fa-save\"></i>Save </button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nEditContactPage.propTypes = {};\r\n\r\nEditContactPage.defaultProps = {};\r\n\r\nexport default EditContactPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactPage.css';\r\nimport EditContactPage from '../EditContactPage/EditContactPage'\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport { Button, Typography } from '@mui/material';\r\nconst ContactPage = () => {\r\n  const [frontOffice, setFrontOffice] = useState({});\r\n\r\n  useEffect(() => {\r\n    retrieveEvents()\r\n  }, []);\r\n\r\n\r\n  const retrieveEvents = () => {\r\n    frontOfficeHTTPService.getContactPage()\r\n      .then(response => {\r\n\r\n        setFrontOffice(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"FrontOffice\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n\r\n            <div className=\"card-body\">\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                <i className=\"menu-icon fa fa-bars\"></i>   Contact\r\n              </Typography>\r\n              <div className=\"table-responsive\">\r\n\r\n                <Button type=\"button\" data-toggle=\"modal\" data-target=\"#editFrontOffice\" ><i class=\"fas fa-edit\"></i> Edit </Button>\r\n                <Button type=\"button\" data-toggle=\"modal\" data-target=\"#preview\" ><i class=\"fas fa-eye\"></i> Preview </Button>\r\n\r\n\r\n\r\n                <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item\">Email Label: {frontOffice?.email}</li>\r\n                  <li class=\"list-group-item\">Subject Label: {frontOffice?.subject} </li>\r\n                  <li class=\"list-group-item\">Message Label: {frontOffice?.message} </li>\r\n                  <li class=\"list-group-item\">Button Label :  {frontOffice?.sendButton} Title </li>\r\n                  <li class=\"list-group-item\">Name Label : {frontOffice?.name}  </li>\r\n\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal fade\" id=\"editFrontOffice\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <EditContactPage frontOffice={frontOffice} />\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"modal fade\" id=\"preview\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Preview</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <iframe src=\"https://dentic-client.herokuapp.com/contact\" height=\"420\" width=\"750\" title=\"Iframe Example\"></iframe>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nContactPage.propTypes = {};\r\n\r\nContactPage.defaultProps = {};\r\n\r\nexport default ContactPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './ServicePage.css';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { Button, Typography, TextField, Paper, Stack, Alert } from '@mui/material';\r\n\r\nconst ServicePage = () => {\r\n  const [services, setServices] = useState([]);\r\n  const [textarea, setTextarea] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [success, setSuccess] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch services on mount\r\n  useEffect(() => {\r\n    fetchServices();\r\n  }, []);\r\n\r\n  const fetchServices = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const res = await axios.get(BASE_URL + '/services');\r\n      setServices(res.data.services || []);\r\n      setTextarea((res.data.services || []).join('\\n'));\r\n    } catch (e) {\r\n      setError('Failed to load services.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditMode(true);\r\n    setSuccess('');\r\n    setError('');\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditMode(false);\r\n    setTextarea(services.join('\\n'));\r\n    setSuccess('');\r\n    setError('');\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setTextarea(e.target.value);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n    try {\r\n      const updatedServices = textarea\r\n        .split('\\n')\r\n        .map(s => s.trim())\r\n        .filter(Boolean);\r\n      await axios.post(BASE_URL + '/services', { services: updatedServices });\r\n      setServices(updatedServices);\r\n      setEditMode(false);\r\n      setSuccess('Services updated successfully.');\r\n    } catch (e) {\r\n      setError('Failed to update services.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ maxWidth: 700, mx: 'auto', mt: 6, p: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        <i className=\"menu-icon fa fa-bars\"></i> Services\r\n      </Typography>\r\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n      {success && <Alert severity=\"success\" sx={{ mb: 2 }}>{success}</Alert>}\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Services List\"\r\n          multiline\r\n          minRows={8}\r\n          value={textarea}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          disabled={!editMode || loading}\r\n          helperText=\"One service per line\"\r\n        />\r\n        {!editMode ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleEdit}\r\n            disabled={loading}\r\n            sx={{ width: 120 }}\r\n          >\r\n            Edit\r\n          </Button>\r\n        ) : (\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              onClick={handleSave}\r\n              disabled={loading}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={handleCancel}\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        )}\r\n      </Stack>\r\n      {!editMode && (\r\n        <ul className=\"list-group list-group-flush\" style={{ marginTop: 24 }}>\r\n          {services.map((s, idx) => (\r\n            <li className=\"list-group-item\" key={idx}>\r\n              {s}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ServicePage;\r\n","\r\nimport PropTypes from 'prop-types';\r\nimport './EditBlogPage.css';\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport React, { useEffect, useState } from 'react';\r\nimport showMessage from '../../libraries/messages/messages'\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport CurrentUser from '../../main/config/user';\r\nconst EditBlogPage = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [frontOffice, setFrontOffice] = useState(props.frontOffice);\r\n\r\n  useEffect(() => {\r\n    setFrontOffice(props.frontOffice)\r\n  }, [props.frontOffice]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    //GroupeTestService.update(props.frontOffice, data)\r\n    frontOfficeHTTPService.editBlogPage(props.frontOffice.id, data).then(data => {\r\n      //props.closeModal()\r\n      showMessage('Confirmation', CurrentUser.UPDATE_MSG, 'success')\r\n    })\r\n\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setFrontOffice({ ...frontOffice, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditGroupe\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Title</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.title} ref={register({ required: true })}\r\n              id=\"text\" name=\"title\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Sub title</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={frontOffice.subtitle} ref={register({ required: true })}\r\n              id=\"text\" name=\"subtitle\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\"><i class=\"far fa-save\"></i>Save </button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nEditBlogPage.propTypes = {};\r\n\r\nEditBlogPage.defaultProps = {};\r\n\r\nexport default EditBlogPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BlogPage.css';\r\nimport EditBlogPage from '../EditBlogPage/EditBlogPage'\r\nimport frontOfficeHTTPService from '../../main/services/frontOfficeHTTPService';\r\nimport { Button, Typography } from '@mui/material';\r\nconst BlogPage = () => {\r\n  const [frontOffice, setFrontOffice] = useState({});\r\n\r\n  useEffect(() => {\r\n    retrieveEvents()\r\n  }, []);\r\n\r\n\r\n  const retrieveEvents = () => {\r\n    frontOfficeHTTPService.getBlogPage()\r\n      .then(response => {\r\n\r\n        setFrontOffice(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const update = (e, data) => {\r\n    e.preventDefault();\r\n    setFrontOffice(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"FrontOffice\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n\r\n            <div className=\"card-body\">\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                <i className=\"menu-icon fa fa-bars\"></i>   Blog Page\r\n              </Typography>\r\n              <div className=\"table-responsive\">\r\n                <Button onClick={e => update(e, frontOffice)} type=\"button\" data-toggle=\"modal\" data-target=\"#editFrontOffice\" ><i class=\"fas fa-edit\"></i> Edit </Button>\r\n\r\n\r\n                <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item\"> Title : {frontOffice?.title}</li>\r\n                  <li class=\"list-group-item\">sub Title : {frontOffice?.subtitle} </li>\r\n\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal fade\" id=\"editFrontOffice\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <EditBlogPage frontOffice={frontOffice} />\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"modal fade\" id=\"preview\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n              <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Preview</h5>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                      <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <iframe src=\"https://dentic-client.herokuapp.com/blog\" height=\"420\" width=\"750\" title=\"Iframe Example\"></iframe>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nBlogPage.propTypes = {};\r\n\r\nBlogPage.defaultProps = {};\r\n\r\nexport default BlogPage;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AddTestimonial.css';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst AddTestimonial = () => {\r\n\r\n  const initialState = {\r\n    name: '',\r\n    date: '',\r\n    status: ''\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [service, setService] = useState(initialState);\r\n\r\n  const onSubmit = (data) => {\r\n    /* serviceHTTPService.createService(data).then(data => {\r\n\r\n    }) */\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setService({ ...service, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"AddService\">\r\n      <form onSubmit={handleSubmit(onSubmit)} class=\"form-horizontal\" target=\"_blank\" name=\"p_info\" method=\"post\" accept-charset=\"utf-8\">\r\n        <div class=\"form-body\">\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Service Name:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <input onChange={handleInputChange} value={service?.name} ref={register({ required: true })}\r\n                type=\"text\" id=\"date\" name=\"name\" class=\"form-control datepicker3 hasDatepicker\" autocomplete=\"off\" required=\"\" />\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><span class=\"text-danger\"><font  ><font  >*</font></font></span><font  ><font  > Description:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <textarea onChange={handleInputChange} value={service?.description} ref={register({ required: false })}\r\n                type=\"text\" name=\"description\" id=\"patient_id\" class=\"form-control\" autocomplete=\"off\" required=\"\" >\r\n              </textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"col-md-3 control-label\"><font  ><font  >Status:</font></font></label>\r\n            <div class=\"col-md-12\">\r\n              <select onChange={handleInputChange} value={service?.status} ref={register({ required: true })}\r\n                name=\"status\" class=\"form-control\" rows=\"3\">\r\n                <option>Active</option>\r\n                <option>Inactive</option>\r\n              </select>\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"form-group row\">\r\n            <div class=\"offset-4 col-8\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\">\r\n                <i className=\"fa fa-check\"></i><font><font> Save</font></font></button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nAddTestimonial.propTypes = {};\r\n\r\nAddTestimonial.defaultProps = {};\r\n\r\nexport default AddTestimonial;\r\n","import React, { useEffect, useState } from 'react';\r\nimport showMessage from '../../libraries/messages/messages'\r\nimport { useForm } from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\nimport './EditTestimonial.css';\r\n\r\nconst EditTestimonial = (props) => {\r\n  const { register, handleSubmit, errors } = useForm() // initialise the hook\r\n  const [groupe, setGroupe] = useState(props.testimonial);\r\n\r\n  useEffect(() => {\r\n    setGroupe(props.testimonial)\r\n  }, [props.testimonial]);\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    // GroupeTestService.update(props.testimonial, data)\r\n    // showMessage('Confirmation', 'groupeMessage.edit', 'success')\r\n  }\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setGroupe({ ...groupe, [name]: value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"EditGroupe\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-4 col-form-label\">Nom du groupe</label>\r\n          <div class=\"col-8\">\r\n            <input onChange={handleInputChange} value={groupe?.groupe_name} ref={register({ required: true })}\r\n              id=\"text\" name=\"groupe_name\" type=\"text\" class=\"form-control\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-4 col-8\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary\"><i class=\"far fa-save\"></i>Sauvegarder</button>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nEditTestimonial.propTypes = {};\r\n\r\nEditTestimonial.defaultProps = {};\r\n\r\nexport default EditTestimonial;\r\n","import http from \"../../libraries/axios/axios\";\r\nimport BASE_URL from \"../urls/urls\";\r\n\r\nconst getAllTestimonials = () => {\r\n    return http.get(`${BASE_URL}/api/testimonials`)\r\n}\r\nconst createTestimonials = data => {\r\n    return http.post(`${BASE_URL}/api/testimonials`, data);\r\n};\r\n\r\nconst editTestimonials = (id, data) => {\r\n    return http.put(`${BASE_URL}/api/testimonials/${id}`, data);\r\n};\r\n\r\nconst removeTestimonials = id => {\r\n    return http.delete(`${BASE_URL}/api/testimonials/${id}`);\r\n};\r\n\r\nconst removeAllTestimonialss = id => {\r\n    return http.delete(`${BASE_URL}/api/testimonials`);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    getAllTestimonials,\r\n    createTestimonials,\r\n    editTestimonials,\r\n    removeTestimonials,\r\n    removeAllTestimonialss\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Testimonial.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport AddTestimonial from '../AddTestimonial/AddTestimonial';\r\nimport EditTestimonial from '../EditTestimonial/EditTestimonial';\r\nimport { Button, LinearProgress, Typography } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport testimonialsHTTPService from '../../main/services/testimonialsHTTPService';\r\nimport showMessage from '../../libraries/messages/messages';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst Testimonial = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllPatient()\r\n  }, []);\r\n\r\n\r\n  const getAllPatient = () => {\r\n    // setLoading(true);\r\n    testimonialsHTTPService.getAllTestimonials()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n        // setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Error', CurrentUser.ERR_MSG, 'warning')\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n  const removePatientAction = (e, data) => {\r\n\r\n  }\r\n\r\n  const updatePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n    getAllPatient()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    getAllPatient()\r\n  }\r\n  const resfreshComponent = () => {\r\n    getAllPatient()\r\n    //forceUpdate()\r\n  }\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = patients.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n    { field: 'name', headerName: 'Fullname', width: 200 },\r\n    { field: 'image', headerName: 'Email', width: 200 },\r\n    { field: 'quote', headerName: 'Birth date', width: 200 },\r\n    { field: 'telephone', headerName: 'Telephone', width: 200 },\r\n  ];\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Testimonials\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addPatient\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={patients}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar, showQuickFilter: true }}\r\n          /></div>}\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button onClick={resfreshComponent} type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <AddTestimonial />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button onClick={resfreshComponent} ref={closeButtonAdd} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"modal fade\" id=\"editPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <EditTestimonial />\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonEdit} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nTestimonial.propTypes = {};\r\n\r\nTestimonial.defaultProps = {};\r\n\r\nexport default Testimonial;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Schedule.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport { Typography, Button, LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\n\r\nconst Schedule = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllPatient()\r\n  }, []);\r\n\r\n\r\n  const getAllPatient = () => {\r\n    // setLoading(true);\r\n    /* patientHTTPService.getAllPatient()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n        // setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      }); */\r\n  };\r\n\r\n\r\n\r\n\r\n  const removePatientAction = (e, data) => {\r\n    /*  e.preventDefault();\r\n     var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n     if (r) {\r\n       showMessage('Confirmation', patientMessage.delete, 'success')\r\n       patientHTTPService.removePatient(data).then(data => {\r\n         resfreshComponent()\r\n       }).catch(e => {\r\n         showMessage('Confirmation', e, 'warning')\r\n       });\r\n     } */\r\n  }\r\n\r\n  const updatePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n    getAllPatient()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    getAllPatient()\r\n  }\r\n  const resfreshComponent = () => {\r\n    getAllPatient()\r\n    //forceUpdate()\r\n  }\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = patients.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e)\r\n\r\n  }\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n    { field: 'namepatient', headerName: 'Fullname', width: 200 },\r\n    { field: 'emailpatient', headerName: 'Email', width: 200 },\r\n    { field: 'birth', headerName: 'Birth date', width: 200 },\r\n    { field: 'telephone', headerName: 'Telephone', width: 200 },\r\n  ];\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bars\"></i>   Schedule\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addPatient\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={patients}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar, showQuickFilter: true }}\r\n          /></div>}\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button onClick={resfreshComponent} type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button onClick={resfreshComponent} ref={closeButtonAdd} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"modal fade\" id=\"editPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonEdit} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nSchedule.propTypes = {};\r\n\r\nSchedule.defaultProps = {};\r\n\r\nexport default Schedule;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './NewsLetter.css';\r\nimport { LoadJSFiles } from '../init';\r\nimport { Typography, Button, LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\n\r\nconst NewsLetter = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    LoadJSFiles()\r\n    getAllPatient()\r\n  }, []);\r\n\r\n\r\n  const getAllPatient = () => {\r\n    // setLoading(true);\r\n    /* patientHTTPService.getAllPatient()\r\n      .then(response => {\r\n        setPatients(response.data);\r\n        // setLoading(false);\r\n      })\r\n      .catch(e => {\r\n        showMessage('Confirmation', e, 'info')\r\n      }); */\r\n  };\r\n\r\n\r\n\r\n\r\n  const removePatientAction = (e, data) => {\r\n    /*  e.preventDefault();\r\n     var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n     if (r) {\r\n       showMessage('Confirmation', patientMessage.delete, 'success')\r\n       patientHTTPService.removePatient(data).then(data => {\r\n         resfreshComponent()\r\n       }).catch(e => {\r\n         showMessage('Confirmation', e, 'warning')\r\n       });\r\n     } */\r\n  }\r\n\r\n  const updatePatientAction = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data)\r\n    //resfreshComponent()\r\n  }\r\n\r\n  const closeModalEdit = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonEdit.current.click()\r\n    getAllPatient()\r\n  }\r\n\r\n  const closeModalAdd = (data) => {\r\n    //resfreshComponent()\r\n    closeButtonAdd.current.click()\r\n    getAllPatient()\r\n  }\r\n  const resfreshComponent = () => {\r\n    getAllPatient()\r\n    //forceUpdate()\r\n  }\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 50 },\r\n    { field: 'namepatient', headerName: 'Fullname', width: 200 },\r\n    { field: 'emailpatient', headerName: 'Email', width: 200 },\r\n    { field: 'birth', headerName: 'Birth date', width: 200 },\r\n    { field: 'telephone', headerName: 'Telephone', width: 200 },\r\n  ];\r\n\r\n  const handleRowSelection = (e) => {\r\n    /* if (e.length == 1) {\r\n\r\n      setUpdatedItemId(e[0])\r\n      const selectedItem = patients.find(item => item.id == e[0])\r\n      setUpdatedItem(selectedItem)\r\n      console.log(updatedItem);\r\n    }\r\n    setUpdatedItemIds(e) */\r\n\r\n  }\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const removeAll = (e) => {\r\n    e.preventDefault();\r\n    var r = window.confirm(\"Etes-vous sûr que vous voulez supprimer ?\");\r\n    if (r) {\r\n\r\n      /*   certificateHTTPService.removeAllCertificates().then(data => {\r\n          getAllPatient()\r\n        }) */\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\r\n      <div className=\"card-body\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <i className=\"menu-icon fa fa-bats\"></i>   Newsletters\r\n        </Typography>\r\n        <br />\r\n        <Button type=\"button\" data-toggle=\"modal\" data-target=\"#addMedicament\" ><i class=\"fas fa-plus\"></i> Create </Button>\r\n        {loading ?\r\n          <LinearProgress />\r\n          : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n            rows={patients}\r\n            columns={columns}\r\n            pageSize={5}\r\n            rowsPerPageOptions={[6]}\r\n            checkboxSelection\r\n            onSelectionModelChange={handleRowSelection}\r\n            components={{ Toolbar: GridToolbar, showQuickFilter: true }}\r\n          /></div>}\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"modal fade\" id=\"addPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Nouveau</h5>\r\n                <button onClick={resfreshComponent} type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button onClick={resfreshComponent} ref={closeButtonAdd} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div class=\"modal fade\" id=\"editPatient\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Edit</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button ref={closeButtonEdit} type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nNewsLetter.propTypes = {};\r\n\r\nNewsLetter.defaultProps = {};\r\n\r\nexport default NewsLetter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport patientHTTPService from '../../main/services/patientHTTPService';\r\n\r\nconst SearchPatient = (props) => {\r\n    const [projects, setProjects] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        searchProject(props.match.params.input)\r\n    }, []);\r\n    const columns = [\r\n        {\r\n            field: 'id', headerName: '#', description: 'The identification used by the person with access to the online service.', width: 20\r\n        },\r\n        { field: 'namepatient', headerName: 'Full Name', width: 200 },\r\n        { field: 'emailpatient', headerName: 'Email', width: 200 },\r\n        { field: 'birth', headerName: 'Date of Birth', width: 200 },\r\n        { field: 'telephone', headerName: 'Telephone', width: 200 },\r\n        { field: 'address', headerName: 'Address', width: 200 },\r\n    ];\r\n\r\n\r\n    const searchProject = (title) => {\r\n        setLoading(true)\r\n        patientHTTPService.searchPatient(title).then(data => {\r\n            console.log(data.data)\r\n            setProjects(data.data);\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"card\">\r\n\r\n            <div className=\"card-header\">\r\n                <h4><i class=\"menu-icon fa fa-search\"></i> Search Results</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                {loading ?\r\n                    <LinearProgress />\r\n                    : <div style={{ height: 430, width: '100%' }}><DataGrid\r\n                        rows={projects}\r\n                        columns={columns}\r\n                        pageSize={5}\r\n                        rowsPerPageOptions={[6]}\r\n                        checkboxSelection\r\n\r\n                        components={{ Toolbar: GridToolbar }}\r\n                    /></div>}\r\n\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n};\r\n\r\nSearchPatient.propTypes = {};\r\n\r\nSearchPatient.defaultProps = {};\r\n\r\nexport default SearchPatient;","import React from 'react';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst Profile = () => {\r\n  const user = CurrentUser.USER_DETAIL;\r\n\r\n  return (\r\n    <div\r\n      className=\"Profile\"\r\n      style={{\r\n        width: 100 + '%', // Full width of parent/container\r\n        maxWidth: 520,    // Increased max width for better layout\r\n        minWidth: 320,    // Minimum width for mobile\r\n        margin: '40px auto',\r\n        padding: 0,\r\n        background: 'linear-gradient(135deg, #e3f2fd 0%, #fff 100%)',\r\n        borderRadius: 24,\r\n        boxShadow: '0 8px 32px rgba(25, 118, 210, 0.10)',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: 24,\r\n          boxShadow: '0 2px 12px rgba(25, 118, 210, 0.08)',\r\n          padding: 36,\r\n          textAlign: 'center',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: 24,\r\n            right: 24,\r\n            background: '#e3f2fd',\r\n            borderRadius: '50%',\r\n            width: 38,\r\n            height: 38,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            boxShadow: '0 1px 4px rgba(25,118,210,0.08)',\r\n            cursor: 'pointer',\r\n          }}\r\n          title=\"Edit Profile\"\r\n        >\r\n          <i className=\"fas fa-user-edit\" style={{ color: '#1976d2', fontSize: 18 }}></i>\r\n        </div>\r\n        <div style={{ marginBottom: 18 }}>\r\n          <img\r\n            className=\"rounded-circle\"\r\n            alt=\"Profile\"\r\n            src=\"images/admin.png\"\r\n            style={{\r\n              width: 120,\r\n              height: 120,\r\n              objectFit: 'cover',\r\n              borderRadius: '50%',\r\n              border: '5px solid #1976d2',\r\n              boxShadow: '0 4px 16px rgba(25,118,210,0.12)',\r\n              marginBottom: 8,\r\n            }}\r\n          />\r\n        </div>\r\n        <h2 style={{ margin: '10px 0 2px', color: '#1976d2', fontWeight: 800, letterSpacing: 0.5 }}>\r\n          {user.name}\r\n        </h2>\r\n        <div\r\n          style={{\r\n            color: '#fff',\r\n            background: '#1976d2',\r\n            display: 'inline-block',\r\n            borderRadius: 8,\r\n            padding: '2px 16px',\r\n            fontSize: 15,\r\n            fontWeight: 600,\r\n            marginBottom: 18,\r\n            marginTop: 4,\r\n            letterSpacing: 0.2,\r\n          }}\r\n        >\r\n          {user.role}\r\n        </div>\r\n        <div\r\n          style={{\r\n            textAlign: 'left',\r\n            margin: '0 auto',\r\n            maxWidth: 320,\r\n            marginTop: 18,\r\n            fontSize: 16,\r\n          }}\r\n        >\r\n          <div style={{ marginBottom: 14, display: 'flex', alignItems: 'center' }}>\r\n            <i className=\"fas fa-birthday-cake\" style={{ color: '#1976d2', marginRight: 10 }}></i>\r\n            <span style={{ fontWeight: 600, color: '#1976d2', minWidth: 90 }}>Birth date:</span>\r\n            <span style={{ marginLeft: 8 }}>{user.birthday?.substring(0, 10) || '-'}</span>\r\n          </div>\r\n          <div style={{ marginBottom: 14, display: 'flex', alignItems: 'center' }}>\r\n            <i className=\"fas fa-envelope\" style={{ color: '#1976d2', marginRight: 10 }}></i>\r\n            <span style={{ fontWeight: 600, color: '#1976d2', minWidth: 90 }}>Email:</span>\r\n            <span style={{ marginLeft: 8 }}>{user.email}</span>\r\n          </div>\r\n          <div style={{ marginBottom: 14, display: 'flex', alignItems: 'center' }}>\r\n            <i className=\"fas fa-phone\" style={{ color: '#1976d2', marginRight: 10 }}></i>\r\n            <span style={{ fontWeight: 600, color: '#1976d2', minWidth: 90 }}>Telephone:</span>\r\n            <span style={{ marginLeft: 8 }}>{user.telephone}</span>\r\n          </div>\r\n          <div style={{ marginBottom: 14, display: 'flex', alignItems: 'center' }}>\r\n            <i className=\"fas fa-map-marker-alt\" style={{ color: '#1976d2', marginRight: 10 }}></i>\r\n            <span style={{ fontWeight: 600, color: '#1976d2', minWidth: 90 }}>Address:</span>\r\n            <span style={{ marginLeft: 8 }}>{user.address}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack, FormControlLabel, Checkbox } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['Pending', 'Confirmed', 'Completed', 'No-show', 'Cancelled'];\r\nconst types = ['Consultation', 'Follow-up', 'Emergency', 'Routine', 'Other'];\r\n\r\nconst AddAppointment = ({ closeModal, doctors = [], patients = [], clinics = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicLocationId: '',\r\n    appointmentDate: '',\r\n    startTime: '',\r\n    endTime: '',\r\n    status: 'Pending',\r\n    appointmentType: '',\r\n    reasonForVisit: '',\r\n    notes: '',\r\n    roomNumber: '',\r\n    isFirstVisit: false,\r\n    followUpDate: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value, type, checked } = e.target;\r\n    setForm(f => ({\r\n      ...f,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      await axios.post(`${BASE_URL}/appointments`, form);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(p => (\r\n          <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(d => (\r\n          <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic Location\"\r\n        name=\"clinicLocationId\"\r\n        value={form.clinicLocationId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {clinics.map(c => (\r\n          <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Appointment Date\"\r\n        name=\"appointmentDate\"\r\n        type=\"date\"\r\n        value={form.appointmentDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <TextField\r\n          label=\"Start Time\"\r\n          name=\"startTime\"\r\n          type=\"time\"\r\n          value={form.startTime}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"End Time\"\r\n          name=\"endTime\"\r\n          type=\"time\"\r\n          value={form.endTime}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n      </Stack>\r\n      <TextField\r\n        select\r\n        label=\"Status\"\r\n        name=\"status\"\r\n        value={form.status}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {statuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Appointment Type\"\r\n        name=\"appointmentType\"\r\n        value={form.appointmentType}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {types.map(t => (\r\n          <MenuItem key={t} value={t}>{t}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Reason for Visit\"\r\n        name=\"reasonForVisit\"\r\n        value={form.reasonForVisit}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Notes\"\r\n        name=\"notes\"\r\n        value={form.notes}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <TextField\r\n        label=\"Room Number\"\r\n        name=\"roomNumber\"\r\n        value={form.roomNumber}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={form.isFirstVisit}\r\n            onChange={handleChange}\r\n            name=\"isFirstVisit\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Is First Visit\"\r\n      />\r\n      <TextField\r\n        label=\"Follow Up Date\"\r\n        name=\"followUpDate\"\r\n        type=\"date\"\r\n        value={form.followUpDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Add Appointment'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddAppointment;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack, FormControlLabel, Checkbox } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['Pending', 'Confirmed', 'Completed', 'No-show', 'Cancelled'];\r\nconst types = ['Consultation', 'Follow-up', 'Emergency', 'Routine', 'Other'];\r\nconst paymentStatuses = ['Unpaid', 'Paid', 'Pending', 'Partial'];\r\n\r\nconst EditAppointment = ({ appointment, closeModal, doctors = [], patients = [], clinics = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    clinicLocationId: '',\r\n    appointmentDate: '',\r\n    startTime: '',\r\n    endTime: '',\r\n    status: 'Pending',\r\n    appointmentType: '',\r\n    reasonForVisit: '',\r\n    notes: '',\r\n    roomNumber: '',\r\n    isFirstVisit: false,\r\n    followUpDate: '',\r\n    paymentStatus: 'Unpaid',\r\n    paymentAmount: '',\r\n    insuranceProvider: '',\r\n    insuranceNumber: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (appointment) {\r\n      setForm({\r\n        patientId: appointment.patientId || '',\r\n        doctorId: appointment.doctorId || '',\r\n        clinicLocationId: appointment.clinicLocationId || '',\r\n        appointmentDate: appointment.appointmentDate || '',\r\n        startTime: appointment.startTime || '',\r\n        endTime: appointment.endTime || '',\r\n        status: appointment.status || 'Pending',\r\n        appointmentType: appointment.appointmentType || '',\r\n        reasonForVisit: appointment.reasonForVisit || '',\r\n        notes: appointment.notes || '',\r\n        roomNumber: appointment.roomNumber || '',\r\n        isFirstVisit: !!appointment.isFirstVisit,\r\n        followUpDate: appointment.followUpDate || '',\r\n        paymentStatus: appointment.paymentStatus || 'Unpaid',\r\n        paymentAmount: appointment.paymentAmount || '',\r\n        insuranceProvider: appointment.insuranceProvider || '',\r\n        insuranceNumber: appointment.insuranceNumber || '',\r\n      });\r\n    }\r\n  }, [appointment]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value, type, checked } = e.target;\r\n    setForm(f => ({\r\n      ...f,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      await axios.put(`${BASE_URL}/appointments/${appointment.id}`, form);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Patient\"\r\n        name=\"patientId\"\r\n        value={form.patientId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {patients.map(p => (\r\n          <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Doctor\"\r\n        name=\"doctorId\"\r\n        value={form.doctorId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {doctors.map(d => (\r\n          <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic Location\"\r\n        name=\"clinicLocationId\"\r\n        value={form.clinicLocationId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {clinics.map(c => (\r\n          <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Appointment Date\"\r\n        name=\"appointmentDate\"\r\n        type=\"date\"\r\n        value={form.appointmentDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <TextField\r\n          label=\"Start Time\"\r\n          name=\"startTime\"\r\n          type=\"time\"\r\n          value={form.startTime}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"End Time\"\r\n          name=\"endTime\"\r\n          type=\"time\"\r\n          value={form.endTime}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n      </Stack>\r\n      <TextField\r\n        select\r\n        label=\"Status\"\r\n        name=\"status\"\r\n        value={form.status}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {statuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Appointment Type\"\r\n        name=\"appointmentType\"\r\n        value={form.appointmentType}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {types.map(t => (\r\n          <MenuItem key={t} value={t}>{t}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Reason for Visit\"\r\n        name=\"reasonForVisit\"\r\n        value={form.reasonForVisit}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Notes\"\r\n        name=\"notes\"\r\n        value={form.notes}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <TextField\r\n        label=\"Room Number\"\r\n        name=\"roomNumber\"\r\n        value={form.roomNumber}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={form.isFirstVisit}\r\n            onChange={handleChange}\r\n            name=\"isFirstVisit\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Is First Visit\"\r\n      />\r\n      <TextField\r\n        label=\"Follow Up Date\"\r\n        name=\"followUpDate\"\r\n        type=\"date\"\r\n        value={form.followUpDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Payment Status\"\r\n        name=\"paymentStatus\"\r\n        value={form.paymentStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {paymentStatuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Payment Amount\"\r\n        name=\"paymentAmount\"\r\n        type=\"number\"\r\n        value={form.paymentAmount}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Insurance Provider\"\r\n        name=\"insuranceProvider\"\r\n        value={form.insuranceProvider}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Insurance Number\"\r\n        name=\"insuranceNumber\"\r\n        value={form.insuranceNumber}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Save Changes'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditAppointment;","import React from 'react';\r\nimport {\r\n  Dialog, DialogTitle, DialogContent, DialogActions, Button,\r\n  Grid, Typography, Chip, Divider, Box, Paper, Tooltip, Stack\r\n} from '@mui/material';\r\n\r\nconst ViewAppointment = ({\r\n  open,\r\n  onClose,\r\n  appointment,\r\n  getPatientName,\r\n  getDoctorName,\r\n  getClinicName\r\n}) => {\r\n  if (!appointment) return null;\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle sx={{ background: '#e3f2fd', fontWeight: 700, fontSize: 22 }}>\r\n        <i className=\"fas fa-calendar-check\" style={{ color: '#1976d2', marginRight: 10 }} />\r\n        Appointment Details\r\n      </DialogTitle>\r\n      <DialogContent dividers sx={{ background: '#f8fafc' }}>\r\n        <Paper elevation={0} sx={{ p: 2, mb: 2, bgcolor: '#fff', borderRadius: 2 }}>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Tooltip title=\"Patient\">\r\n              <i className=\"fas fa-user\" style={{ color: '#1976d2', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle1\" fontWeight={600}>\r\n              {getPatientName(appointment.patientId)}\r\n            </Typography>\r\n            <Chip\r\n              label={appointment.status}\r\n              color={\r\n                appointment.status === 'Completed'\r\n                  ? 'success'\r\n                  : appointment.status === 'Confirmed'\r\n                  ? 'primary'\r\n                  : appointment.status === 'Pending'\r\n                  ? 'warning'\r\n                  : appointment.status === 'No-show'\r\n                  ? 'error'\r\n                  : 'default'\r\n              }\r\n              size=\"small\"\r\n              sx={{ ml: 2 }}\r\n            />\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Tooltip title=\"Doctor\">\r\n              <i className=\"fas fa-user-md\" style={{ color: '#388e3c', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle2\">{getDoctorName(appointment.doctorId)}</Typography>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <Tooltip title=\"Clinic\">\r\n              <i className=\"fas fa-hospital\" style={{ color: '#d32f2f', fontSize: 18 }} />\r\n            </Tooltip>\r\n            <Typography variant=\"subtitle2\">{getClinicName(appointment.clinicLocationId)}</Typography>\r\n          </Stack>\r\n        </Paper>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Date:</strong> {appointment.appointmentDate}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Time:</strong> {appointment.startTime} - {appointment.endTime}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Room:</strong> {appointment.roomNumber || '-'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Type:</strong> {appointment.appointmentType}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>First Visit:</strong> {appointment.isFirstVisit ? 'Yes' : 'No'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Follow Up Date:</strong> {appointment.followUpDate || '-'}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Reason for Visit:</strong>\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 2, color: '#1976d2' }}>\r\n              {appointment.reasonForVisit || '-'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              <strong>Notes:</strong>\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ color: '#555' }}>\r\n              {appointment.notes || '-'}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider sx={{ my: 2 }} />\r\n        <Box sx={{ mt: 2, textAlign: 'right' }}>\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            <i className=\"fas fa-clock\" style={{ marginRight: 4 }} />\r\n            Created: {appointment.createdAt ? new Date(appointment.createdAt).toLocaleString() : '-'}\r\n            <br />\r\n            <i className=\"fas fa-sync-alt\" style={{ marginRight: 4 }} />\r\n            Updated: {appointment.updatedAt ? new Date(appointment.updatedAt).toLocaleString() : '-'}\r\n          </Typography>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions sx={{ background: '#f8fafc' }}>\r\n        <Button onClick={onClose} color=\"primary\" variant=\"contained\" sx={{ minWidth: 100 }}>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ViewAppointment;","/**\r\n * Appointments Component\r\n * \r\n * This component manages the appointments list and provides features such as:\r\n * - Viewing, editing, deleting, and archiving appointments.\r\n * - Searching and filtering appointments.\r\n * - Exporting appointments to a CSV file.\r\n * - Bulk actions like delete and archive.\r\n * - Dark mode toggle for better user experience.\r\n * - Dynamic menu actions for each appointment.\r\n * \r\n * Props: None\r\n * State:\r\n * - appointmentsList: Array of appointments fetched from the server.\r\n * - updatedItem: The currently selected appointment for editing.\r\n * - loading: Boolean indicating whether data is being loaded.\r\n * - searchQuery: String for filtering appointments.\r\n * - isDarkMode: Boolean for toggling dark mode.\r\n * - anchorEl: DOM element for the menu anchor.\r\n * - selectedRow: The currently selected appointment row.\r\n * - updatedItemIds: Array of selected appointment IDs for bulk actions.\r\n * \r\n * Functions:\r\n * - retrieveAppointments: Fetches the list of appointments from the server.\r\n * - handleSearch: Filters appointments based on the search query.\r\n * - handleExport: Exports the appointments list to a CSV file.\r\n * - handleBulkDelete: Deletes selected appointments.\r\n * - handleBulkArchive: Archives selected appointments.\r\n * - handleMenuAction: Handles actions like view, edit, delete, etc., from the menu.\r\n * - handleRowSelection: Tracks selected rows in the DataGrid.\r\n * \r\n * Dependencies:\r\n * - Material-UI for UI components.\r\n * - Axios for HTTP requests.\r\n * - FileSaver for exporting CSV files.\r\n */\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Appointments.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { TextField, Button, Switch, FormControlLabel, Select, MenuItem, FormControl, Chip, Card, CardContent, Typography, Grid, Paper, List, ListItem, ListItemText, Divider, Box, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\nimport { LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport CurrentUser from '../../main/config/user';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { Menu, MenuItem as MuiMenuItem, IconButton } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { saveAs } from 'file-saver';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport AddAppointment from './AddAppointment';\r\nimport EditAppointment from './EditAppointment';\r\nimport ViewAppointment from './ViewAppointment';\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\n\r\n\r\nexport const Appointments = () => {\r\n  const [appointmentsList, setAppointments] = useState([]);\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const forceUpdate = useForceUpdate();\r\n  const [loading, setLoading] = useState(false);\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n  const [updatedItemIds, setUpdatedItemIds] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [viewMode, setViewMode] = useState('table'); // 'table' or 'cards'\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [viewModalOpen, setViewModalOpen] = useState(false);\r\n  const [viewedItem, setViewedItem] = useState(null);\r\n\r\n  const retrieveAppointments = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/appointments`)\r\n      .then(response => {\r\n        setAppointments(response.data);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const resfresh = () => {\r\n    retrieveAppointments();\r\n    forceUpdate();\r\n  };\r\n\r\n  const closeModalEdit = () => {\r\n    resfresh();\r\n    closeButtonEdit.current.click();\r\n  };\r\n\r\n  const closeModalAdd = () => {\r\n    resfresh();\r\n    closeButtonAdd.current.click();\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveAppointments();\r\n    axios.get(`${BASE_URL}/doctors`).then(res => setDoctors(res.data));\r\n    axios.get(`${BASE_URL}/patients`).then(res => setPatients(res.data));\r\n    axios.get(`${BASE_URL}/clinics`).then(res => setClinics(res.data));\r\n  }, []);\r\n\r\n  // Helper functions to get names\r\n  const getDoctorName = (id) => {\r\n    const doc = doctors.find(d => d.id === id);\r\n    return doc ? doc.fullName : 'Doctor not found';\r\n  };\r\n  const getPatientName = (id) => {\r\n    const pat = patients.find(p => p.id === id);\r\n    return pat ? pat.fullName : 'Patient not found';\r\n  };\r\n  const getClinicName = (id) => {\r\n    const clinic = clinics.find(c => c.id === id);\r\n    return clinic && clinic.name ? clinic.name : 'Clinic not found';\r\n  };\r\n\r\n  const update = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data);\r\n    resfresh();\r\n  };\r\n\r\n  const remove = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(CurrentUser.DELETE_MSG)) {\r\n      axios.delete(`${BASE_URL}/events/${id}`).then(() => resfresh());\r\n    }\r\n  };\r\n\r\n  const handleMenuOpen = (event, row) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedRow(row);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedRow(null);\r\n  };\r\n\r\n  // Update handleMenuAction to implement all features\r\n  const handleMenuAction = (action) => {\r\n    if (action === 'view') {\r\n      setViewedItem(selectedRow);\r\n      handleMenuClose();\r\n      setViewModalOpen(true);\r\n    }\r\n    if (action === 'edit') {\r\n      setUpdatedItem(selectedRow);\r\n      handleMenuClose();\r\n      setEditModalOpen(true);\r\n    }\r\n    if (action === 'delete') {\r\n      handleMenuClose();\r\n      if (window.confirm('Are you sure you want to delete this appointment?')) {\r\n        axios.delete(`${BASE_URL}/appointments/${selectedRow.id}`)\r\n          .then(() => {\r\n            resfresh();\r\n            alert('Appointment deleted.');\r\n          })\r\n          .catch(() => alert('Failed to delete appointment.'));\r\n      }\r\n    }\r\n    if (action === 'archive') {\r\n      handleMenuClose();\r\n      axios.put(`${BASE_URL}/appointments/${selectedRow.id}/archive`)\r\n        .then(() => {\r\n          resfresh();\r\n          alert('Appointment archived.');\r\n        })\r\n        .catch(() => alert('Failed to archive appointment.'));\r\n    }\r\n    if (action === 'reschedule') {\r\n      handleMenuClose();\r\n      setUpdatedItem(selectedRow);\r\n      setEditModalOpen(true);\r\n    }\r\n    if (action === 'complete') {\r\n      handleMenuClose();\r\n      // Mark as Completed feature\r\n      axios.put(`${BASE_URL}/appointments/${selectedRow.id}/completed`, { status: 'Completed' })\r\n        .then(() => {\r\n          resfresh();\r\n          alert('Appointment marked as completed.');\r\n        })\r\n        .catch(() => alert('Failed to update status.'));\r\n    }\r\n    if (action === 'export') {\r\n      handleMenuClose();\r\n      handleExport();\r\n    }\r\n    if (action === 'sync') {\r\n      handleMenuClose();\r\n      syncWithGoogleCalendar();\r\n    }\r\n    if (action === 'reminder') {\r\n      handleMenuClose();\r\n      sendReminder(selectedRow.id, 'Email');\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    const csvContent = [\r\n      ['ID', 'Patient ID', 'Doctor ID', 'Clinic Location', 'Date', 'Start Time', 'End Time', 'Status', 'Type', 'Reason', 'Notes'],\r\n      ...appointmentsList.map(a => [\r\n        a.id, a.patientId, a.doctorId, a.clinicLocationId, a.appointmentDate, a.startTime, a.endTime, a.status, a.appointmentType, a.reasonForVisit, a.notes\r\n      ])\r\n    ].map(e => e.join(\",\")).join(\"\\n\");\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    saveAs(blob, 'appointments.csv');\r\n  };\r\n\r\n  const handleBulkDelete = () => {\r\n    if (window.confirm('Are you sure you want to delete the selected appointments?')) {\r\n      updatedItemIds.forEach(id => {\r\n        axios.delete(`${BASE_URL}/appointments/${id}`)\r\n          .then(() => resfresh())\r\n          .catch(e => console.error(e));\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBulkArchive = () => {\r\n    if (window.confirm('Are you sure you want to archive the selected appointments?')) {\r\n      updatedItemIds.forEach(id => {\r\n        console.log(`Archiving appointment with ID: ${id}`);\r\n        // Add logic to archive appointments\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendReminder = (id, type) => {\r\n    axios.post(`${BASE_URL}/appointments/${id}/reminder`, { type }).then(() => {\r\n      alert(`Reminder sent via ${type}`);\r\n    });\r\n  };\r\n\r\n  const updateStatus = (id, status) => {\r\n    axios.put(`${BASE_URL}/appointments/${id}/status`, { status }).then(() => resfresh());\r\n  };\r\n\r\n  const syncWithGoogleCalendar = () => {\r\n    alert('Syncing with Google Calendar...');\r\n    // Add logic to integrate with Google Calendar API\r\n  };\r\n\r\n  const checkAvailability = (doctorId, date, time) => {\r\n    axios.post(`${BASE_URL}/availability`, { doctorId, date, time }).then((response) => {\r\n      alert(response.data.available ? 'Time slot is available' : 'Time slot is not available');\r\n    });\r\n  };\r\n\r\n  const predictNoShow = (appointmentId) => {\r\n    axios.get(`${BASE_URL}/appointments/${appointmentId}/predict-no-show`).then((response) => {\r\n      alert(`No-show probability: ${response.data.probability}%`);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <span>{getPatientName(params.value)}</span>\r\n      )\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <span>{getDoctorName(params.value)}</span>\r\n      )\r\n    },\r\n    {\r\n      field: 'clinicLocationId',\r\n      headerName: 'Clinic',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <span>{getClinicName(params.value)}</span>\r\n      )\r\n    },\r\n    {\r\n      field: 'appointmentDate',\r\n      headerName: 'Date',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"info\" variant=\"outlined\" />\r\n      )\r\n    },\r\n    {\r\n      field: 'startTime',\r\n      headerName: 'Start Time',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"primary\" variant=\"outlined\" />\r\n      )\r\n    },\r\n    {\r\n      field: 'endTime',\r\n      headerName: 'End Time',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"primary\" variant=\"outlined\" />\r\n      )\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Completed'\r\n              ? 'success'\r\n              : params.value === 'Confirmed'\r\n              ? 'primary'\r\n              : params.value === 'Pending'\r\n              ? 'warning'\r\n              : params.value === 'No-show'\r\n              ? 'error'\r\n              : params.value === 'Archived'\r\n              ? 'secondary'\r\n              : 'default'\r\n          }\r\n          variant=\"filled\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 220,\r\n      renderCell: (params) => (\r\n        <div>\r\n          <IconButton\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleMenuOpen(event, params.row)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}\r\n          >\r\n            <MuiMenuItem onClick={() => handleMenuAction('view')}>View</MuiMenuItem>\r\n            <MuiMenuItem onClick={() => handleMenuAction('delete')}>Delete</MuiMenuItem>\r\n            <MuiMenuItem onClick={() => handleMenuAction('archive')}>Archive</MuiMenuItem>\r\n            <MuiMenuItem onClick={() => handleMenuAction('reschedule')}>Reschedule</MuiMenuItem>\r\n            <MuiMenuItem onClick={() => handleMenuAction('complete')}>Mark as Completed</MuiMenuItem>\r\n          </Menu>\r\n        </div>\r\n      )\r\n    },\r\n  ];\r\n\r\n  // Card view for appointments\r\n  const renderCardView = () => (\r\n    <Grid container spacing={2}>\r\n      {appointmentsList.map((appt) => (\r\n        <Grid item xs={12} sm={6} md={4} key={appt.id}>\r\n          <Card variant=\"outlined\" style={{ marginBottom: 16 }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                {getPatientName(appt.patientId)}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Doctor:</strong> {getDoctorName(appt.doctorId)}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Clinic:</strong> {getClinicName(appt.clinicLocationId)}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Date:</strong> {appt.appointmentDate}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Time:</strong> {appt.startTime} - {appt.endTime}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Status:</strong> {appt.status}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Type:</strong> {appt.appointmentType}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Reason:</strong> {appt.reasonForVisit}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Notes:</strong> {appt.notes}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n\r\n  // Calendar view for appointments\r\n  const renderCalendarView = () => {\r\n    // Group appointments by date\r\n    const grouped = {};\r\n    appointmentsList.forEach(appt => {\r\n      if (!grouped[appt.appointmentDate]) grouped[appt.appointmentDate] = [];\r\n      grouped[appt.appointmentDate].push(appt);\r\n    });\r\n\r\n    const dates = Object.keys(grouped).sort();\r\n\r\n    return (\r\n      <div style={{ marginTop: 24 }}>\r\n        <Typography variant=\"h5\" gutterBottom>Calendar View</Typography>\r\n        <Grid container spacing={2}>\r\n          {dates.map(date => (\r\n            <Grid item xs={12} sm={6} md={4} key={date}>\r\n              <Paper elevation={3} style={{ padding: 16 }}>\r\n                <Typography variant=\"subtitle1\" color=\"primary\" gutterBottom>\r\n                  {date}\r\n                </Typography>\r\n                {grouped[date].map(appt => (\r\n                  <Card key={appt.id} variant=\"outlined\" style={{ marginBottom: 8 }}>\r\n                    <CardContent>\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Patient:</strong> {getPatientName(appt.patientId)}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Doctor:</strong> {getDoctorName(appt.doctorId)}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Time:</strong> {appt.startTime} - {appt.endTime}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Status:</strong> {appt.status}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // List view for appointments\r\n  const renderListView = () => (\r\n    <Box sx={{ marginTop: 2 }}>\r\n      <Typography variant=\"h5\" gutterBottom>List View</Typography>\r\n      <List>\r\n        {appointmentsList.map((appt, idx) => (\r\n          <React.Fragment key={appt.id}>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary={`${getPatientName(appt.patientId)} with ${getDoctorName(appt.doctorId)}`}\r\n                secondary={\r\n                  <>\r\n                    <span><strong>Date:</strong> {appt.appointmentDate}</span><br />\r\n                    <span><strong>Time:</strong> {appt.startTime} - {appt.endTime}</span><br />\r\n                    <span><strong>Status:</strong> {appt.status}</span><br />\r\n                    <span><strong>Clinic:</strong> {getClinicName(appt.clinicLocationId)}</span>\r\n                  </>\r\n                }\r\n              />\r\n            </ListItem>\r\n            {idx < appointmentsList.length - 1 && <Divider />}\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  // Timeline view for appointments (simple vertical timeline)\r\n  const renderTimelineView = () => {\r\n    // Create a copy before sorting to avoid mutating state\r\n    const sortedAppointments = [...appointmentsList].sort(\r\n      (a, b) =>\r\n        new Date(a.appointmentDate + ' ' + a.startTime) -\r\n        new Date(b.appointmentDate + ' ' + b.startTime)\r\n    );\r\n\r\n    return (\r\n      <Box sx={{ marginTop: 2 }}>\r\n        <Typography variant=\"h5\" gutterBottom>Timeline View</Typography>\r\n        <div style={{ borderLeft: '2px solid #1976d2', paddingLeft: 24 }}>\r\n          {sortedAppointments.map(appt => (\r\n            <div key={appt.id} style={{ marginBottom: 32, position: 'relative' }}>\r\n              <div style={{\r\n                position: 'absolute',\r\n                left: -32,\r\n                top: 0,\r\n                background: '#1976d2',\r\n                color: '#fff',\r\n                borderRadius: '50%',\r\n                width: 24,\r\n                height: 24,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                fontSize: 14\r\n              }}>\r\n                {appt.appointmentDate.split('-')[2]}\r\n              </div>\r\n              <Typography variant=\"subtitle1\" color=\"primary\">\r\n                {appt.appointmentDate} {appt.startTime} - {appt.endTime}\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                <strong>Patient:</strong> {getPatientName(appt.patientId)}<br />\r\n                <strong>Doctor:</strong> {getDoctorName(appt.doctorId)}<br />\r\n                <strong>Status:</strong> {appt.status}\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Widget summary data\r\n  const totalAppointments = appointmentsList.length;\r\n  const completed = appointmentsList.filter(a => a.status === 'Completed').length;\r\n  const pending = appointmentsList.filter(a => a.status === 'Pending').length;\r\n  const confirmed = appointmentsList.filter(a => a.status === 'Confirmed').length;\r\n  const noShow = appointmentsList.filter(a => a.status === 'No-show').length;\r\n\r\n  // Prepare chart data\r\n  const doughnutData = {\r\n    labels: ['Completed', 'Pending', 'Confirmed', 'No-show'],\r\n    datasets: [{\r\n      data: [completed, pending, confirmed, noShow],\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(\r\n      appointmentsList.reduce((acc, appt) => {\r\n        acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n        acc[appt.appointmentDate]++;\r\n        return acc;\r\n      }, {})\r\n    ),\r\n    datasets: [{\r\n      label: 'Appointments per Day',\r\n      data: Object.values(\r\n        appointmentsList.reduce((acc, appt) => {\r\n          acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n          acc[appt.appointmentDate]++;\r\n          return acc;\r\n        }, {})\r\n      ),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(\r\n      appointmentsList.reduce((acc, appt) => {\r\n        acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n        acc[appt.appointmentDate]++;\r\n        return acc;\r\n      }, {})\r\n    ),\r\n    datasets: [\r\n      {\r\n        label: 'Completed',\r\n        data: Object.keys(\r\n          appointmentsList.reduce((acc, appt) => {\r\n            acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n            return acc;\r\n          }, {})\r\n        ).map(date => appointmentsList.filter(a => a.appointmentDate === date && a.status === 'Completed').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Pending',\r\n        data: Object.keys(\r\n          appointmentsList.reduce((acc, appt) => {\r\n            acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n            return acc;\r\n          }, {})\r\n        ).map(date => appointmentsList.filter(a => a.appointmentDate === date && a.status === 'Pending').length),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Confirmed',\r\n        data: Object.keys(\r\n          appointmentsList.reduce((acc, appt) => {\r\n            acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n            return acc;\r\n          }, {})\r\n        ).map(date => appointmentsList.filter(a => a.appointmentDate === date && a.status === 'Confirmed').length),\r\n        borderColor: '#1976d2',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'No-show',\r\n        data: Object.keys(\r\n          appointmentsList.reduce((acc, appt) => {\r\n            acc[appt.appointmentDate] = acc[appt.appointmentDate] || 0;\r\n            return acc;\r\n          }, {})\r\n        ).map(date => appointmentsList.filter(a => a.appointmentDate === date && a.status === 'No-show').length),\r\n        borderColor: '#e53935',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const filteredAppointments = appointmentsList.filter(appt => {\r\n    const q = searchQuery.trim().toLowerCase();\r\n    if (!q) return true;\r\n    // You can add more fields as needed for filtering\r\n    return (\r\n      getPatientName(appt.patientId).toLowerCase().includes(q) ||\r\n      getDoctorName(appt.doctorId).toLowerCase().includes(q) ||\r\n      getClinicName(appt.clinicLocationId).toLowerCase().includes(q) ||\r\n      (appt.appointmentType && appt.appointmentType.toLowerCase().includes(q)) ||\r\n      (appt.reasonForVisit && appt.reasonForVisit.toLowerCase().includes(q)) ||\r\n      (appt.status && appt.status.toLowerCase().includes(q)) ||\r\n      (appt.appointmentDate && appt.appointmentDate.toLowerCase().includes(q)) ||\r\n      (appt.startTime && appt.startTime.toLowerCase().includes(q)) ||\r\n      (appt.endTime && appt.endTime.toLowerCase().includes(q))\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={`card ${isDarkMode ? 'dark-mode' : ''}`}>\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"menu-icon fas fa-calendar-check\"></i> Appointments</h4>\r\n      </div>\r\n\r\n      {/* Widget summary */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total</Typography>\r\n          <Typography variant=\"h6\">{totalAppointments}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Completed</Typography>\r\n          <Typography variant=\"h6\">{completed}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Pending</Typography>\r\n          <Typography variant=\"h6\">{pending}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#f3e5f5', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Confirmed</Typography>\r\n          <Typography variant=\"h6\">{confirmed}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"error.main\">No-show</Typography>\r\n          <Typography variant=\"h6\">{noShow}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Appointments by Status</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Appointments per Day</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Status Trends Over Time</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', mb: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<i className=\"fas fa-plus\"></i>}\r\n            data-toggle=\"modal\"\r\n            data-target=\"#addAppointment\"\r\n            style={{ minWidth: 150 }}\r\n          >\r\n            Add Appointment\r\n          </Button>\r\n          <Button\r\n            onClick={handleExport}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ minWidth: 120 }}\r\n          >\r\n            Export\r\n          </Button>\r\n          <Button\r\n            onClick={handleBulkArchive}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ minWidth: 160 }}\r\n          >\r\n            Archive Selected\r\n          </Button>\r\n          <Button\r\n            onClick={resfresh}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ minWidth: 120 }}\r\n            startIcon={<i className=\"fas fa-sync-alt\"></i>}\r\n          >\r\n            Reload\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* View Mode Buttons */}\r\n        <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\r\n          <Button\r\n            variant={viewMode === 'table' ? 'contained' : 'outlined'}\r\n            color=\"primary\"\r\n            onClick={() => setViewMode('table')}\r\n            size=\"small\"\r\n          >\r\n            Table View\r\n          </Button>\r\n          <Button\r\n            variant={viewMode === 'cards' ? 'contained' : 'outlined'}\r\n            color=\"primary\"\r\n            onClick={() => setViewMode('cards')}\r\n            size=\"small\"\r\n          >\r\n            Card View\r\n          </Button>\r\n          <Button\r\n            variant={viewMode === 'calendar' ? 'contained' : 'outlined'}\r\n            color=\"primary\"\r\n            onClick={() => setViewMode('calendar')}\r\n            size=\"small\"\r\n          >\r\n            Calendar View\r\n          </Button>\r\n          <Button\r\n            variant={viewMode === 'list' ? 'contained' : 'outlined'}\r\n            color=\"primary\"\r\n            onClick={() => setViewMode('list')}\r\n            size=\"small\"\r\n          >\r\n            List View\r\n          </Button>\r\n          <Button\r\n            variant={viewMode === 'timeline' ? 'contained' : 'outlined'}\r\n            color=\"primary\"\r\n            onClick={() => setViewMode('timeline')}\r\n            size=\"small\"\r\n          >\r\n            Timeline View\r\n          </Button>\r\n        </Box>\r\n\r\n        <TextField\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={searchQuery}\r\n          onChange={handleSearch}\r\n        />\r\n\r\n        \r\n\r\n        {loading ? <LinearProgress /> : (\r\n          <div style={{ width: '100%' }}>\r\n            {viewMode === 'table' ? (\r\n              <DataGrid\r\n                rows={filteredAppointments}\r\n                getRowId={(row) => row.id}\r\n                columns={columns}\r\n                pageSize={10}\r\n                rowsPerPageOptions={[10, 15, 20]}\r\n                checkboxSelection\r\n                autoHeight\r\n                components={{ Toolbar: GridToolbar }}\r\n              />\r\n            ) : viewMode === 'cards' ? (\r\n              renderCardView()\r\n            ) : viewMode === 'calendar' ? (\r\n              renderCalendarView()\r\n            ) : viewMode === 'list' ? (\r\n              renderListView()\r\n            ) : (\r\n              renderTimelineView()\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Appointment Modal */}\r\n        <div className=\"modal fade\" id=\"addAppointment\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">New Appointment</h5>\r\n                <button onClick={resfresh} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n               <AddAppointment closeModal={closeModalAdd} doctors={doctors} patients={patients} clinics={clinics} onSuccess={resfresh} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button onClick={resfresh} ref={closeButtonAdd} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Appointment Modal */}\r\n        <Dialog open={editModalOpen} onClose={() => setEditModalOpen(false)} maxWidth=\"lg\" fullWidth>\r\n          <DialogTitle>Edit Appointment</DialogTitle>\r\n          <DialogContent>\r\n            <EditAppointment\r\n              appointment={updatedItem}\r\n              closeModal={() => setEditModalOpen(false)}\r\n              doctors={doctors}\r\n              patients={patients}\r\n              clinics={clinics}\r\n              onSuccess={() => {\r\n                resfresh();\r\n                setEditModalOpen(false);\r\n              }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditModalOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* View Appointment Modal */}\r\n        <ViewAppointment\r\n          open={viewModalOpen}\r\n          onClose={() => setViewModalOpen(false)}\r\n          appointment={viewedItem}\r\n          getPatientName={getPatientName}\r\n          getDoctorName={getDoctorName}\r\n          getClinicName={getClinicName}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './CaseStudies.css';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { LinearProgress, Tooltip, Button, TextField } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport CurrentUser from '../../main/config/user';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { saveAs } from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport const CaseStudies = () => {\r\n  const [caseStudies, setCaseStudies] = useState([]);\r\n  const [filteredCaseStudies, setFilteredCaseStudies] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [updatedItem, setUpdatedItem] = useState({});\r\n  const [updatedItemId, setUpdatedItemId] = useState(0);\r\n\r\n  const closeButtonEdit = useRef(null);\r\n  const closeButtonAdd = useRef(null);\r\n  const forceUpdate = useForceUpdate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const retrieveCaseStudies = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/casestudies`)\r\n      .then(response => {\r\n        setCaseStudies(response.data);\r\n        setFilteredCaseStudies(response.data);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const resfresh = () => {\r\n    retrieveCaseStudies();\r\n    forceUpdate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveCaseStudies();\r\n  }, []);\r\n\r\n  const update = (e, data) => {\r\n    e.preventDefault();\r\n    setUpdatedItem(data);\r\n    resfresh();\r\n  };\r\n\r\n  const remove = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(CurrentUser.DELETE_MSG)) {\r\n      axios.delete(`${BASE_URL}/casestudies/${id}`).then(() => resfresh());\r\n    }\r\n  };\r\n\r\n  const handleRowSelection = (e) => {\r\n    if (e.length === 1) {\r\n      setUpdatedItemId(e[0]);\r\n      const selected = caseStudies.find(item => item.id === e[0]);\r\n      setUpdatedItem(selected);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const query = e.target.value.toLowerCase();\r\n    setSearchQuery(query);\r\n    const filtered = caseStudies.filter(cs =>\r\n      cs.title.toLowerCase().includes(query) ||\r\n      cs.description.toLowerCase().includes(query)\r\n    );\r\n    setFilteredCaseStudies(filtered);\r\n  };\r\n\r\n  const exportToCSV = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(filteredCaseStudies);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'CaseStudies');\r\n    const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], { type: 'application/octet-stream' });\r\n    saveAs(data, 'CaseStudies.xlsx');\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 90 },\r\n    { field: 'patientId', headerName: 'Patient ID', width: 200 },\r\n    { field: 'doctorId', headerName: 'Doctor ID', width: 200 },\r\n    { field: 'title', headerName: 'Title', width: 200 },\r\n    { field: 'description', headerName: 'Description', width: 250 },\r\n    {\r\n      field: 'proceduresPerformed',\r\n      headerName: 'Procedures',\r\n      width: 200,\r\n      renderCell: (params) => params.value.join(', ')\r\n    },\r\n    { field: 'outcome', headerName: 'Outcome', width: 250 },\r\n    {\r\n      field: 'researchFiles',\r\n      headerName: 'Files',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Tooltip title=\"View Research File\">\r\n          <Button href={params.value[0]} target=\"_blank\" rel=\"noopener noreferrer\" variant=\"contained\" color=\"primary\">\r\n            View PDF\r\n          </Button>\r\n        </Tooltip>\r\n      )\r\n    },\r\n    { field: 'status', headerName: 'Status', width: 130 },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Created At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'updatedAt',\r\n      headerName: 'Updated At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"menu-icon fas fa-file-medical-alt\"></i> Case Studies</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <div style={{ marginBottom: '20px', display: 'flex', justifyContent: 'space-between' }}>\r\n          <TextField\r\n            label=\"Search Case Studies\"\r\n            variant=\"outlined\"\r\n            value={searchQuery}\r\n            onChange={handleSearch}\r\n            style={{ width: '300px' }}\r\n          />\r\n          <Button onClick={exportToCSV} variant=\"contained\" color=\"primary\">\r\n            Export to CSV\r\n          </Button>\r\n        </div>\r\n\r\n        <Tooltip title=\"Create New Case Study\">\r\n          <Button type=\"button\" variant=\"contained\" color=\"success\" data-toggle=\"modal\" data-target=\"#addCaseStudy\">\r\n            <i className=\"far fa-plus-square\"></i> Create\r\n          </Button>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit Selected Case Study\">\r\n          <Button onClick={e => update(e, updatedItem)} type=\"button\" variant=\"contained\" color=\"warning\" data-toggle=\"modal\" data-target=\"#editCaseStudy\">\r\n            <i className=\"fas fa-edit\"></i> Edit\r\n          </Button>\r\n        </Tooltip>\r\n        <Tooltip title=\"Remove Selected Case Study\">\r\n          <Button onClick={e => remove(e, updatedItemId)} type=\"button\" variant=\"contained\" color=\"error\">\r\n            <i className=\"fas fa-trash-alt\"></i> Remove\r\n          </Button>\r\n        </Tooltip>\r\n\r\n        {loading ? <LinearProgress /> : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredCaseStudies}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[6]}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Case Study Modal */}\r\n        <div className=\"modal fade\" id=\"addCaseStudy\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">New Case Study</h5>\r\n                <button onClick={resfresh} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* AddCaseStudy component can be added here */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <Button onClick={resfresh} ref={closeButtonAdd} type=\"button\" variant=\"contained\" color=\"secondary\" data-dismiss=\"modal\">Close</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Case Study Modal */}\r\n        <div className=\"modal fade\" id=\"editCaseStudy\" tabIndex=\"-1\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Case Study</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* EditCaseStudy component can be added here */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <Button onClick={resfresh} ref={closeButtonEdit} type=\"button\" variant=\"contained\" color=\"secondary\" data-dismiss=\"modal\">Close</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CaseStudies;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Chip, Stack, Box } from '@mui/material';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst plans = ['Basic', 'Standard', 'Premium'];\r\nconst statuses = ['Active', 'Inactive', 'Expired', 'Cancelled'];\r\nconst defaultBenefits = [\r\n  \"Free Cleanings\",\r\n  \"Discounted Treatments\",\r\n  \"Priority Booking\",\r\n  \"Emergency Support\"\r\n];\r\n\r\n // Adjust as needed\r\n\r\nconst CreateMembership = ({ onSuccess, onCancel }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '', // Add patientId to form state\r\n    membershipPlan: 'Basic',\r\n    benefits: [],\r\n    validityPeriod: {\r\n      startDate: '',\r\n      endDate: ''\r\n    },\r\n    paymentStatus: 'Active',\r\n    renewalDate: '',\r\n    lastPaymentAmount: 0,\r\n    lastPaymentDate: '',\r\n  });\r\n  const [benefitInput, setBenefitInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    if (name.startsWith('validityPeriod.')) {\r\n      setForm(f => ({\r\n        ...f,\r\n        validityPeriod: {\r\n          ...f.validityPeriod,\r\n          [name.split('.')[1]]: value\r\n        }\r\n      }));\r\n    } else {\r\n      setForm(f => ({ ...f, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleAddBenefit = () => {\r\n    if (benefitInput && !form.benefits.includes(benefitInput)) {\r\n      setForm(f => ({ ...f, benefits: [...f.benefits, benefitInput] }));\r\n      setBenefitInput('');\r\n    }\r\n  };\r\n\r\n  const handleRemoveBenefit = (benefit) => {\r\n    setForm(f => ({ ...f, benefits: f.benefits.filter(b => b !== benefit) }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const objToSend = {\r\n      membershipPlan: form.membershipPlan,\r\n      benefits: form.benefits,\r\n      validityPeriod: {\r\n        startDate: form.validityPeriod.startDate,\r\n        endDate: form.validityPeriod.endDate\r\n      },\r\n      paymentStatus: form.paymentStatus,\r\n      renewalDate: form.renewalDate,\r\n      lastPaymentAmount: form.lastPaymentAmount,\r\n      lastPaymentDate: form.lastPaymentDate,\r\n    };\r\n    console.log('Membership object to send:', objToSend); // Show object before sending\r\n    try {\r\n      await axios.post(`${BASE_URL}/memberships`, objToSend);\r\n      if (onSuccess) onSuccess();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Membership Plan\"\r\n        name=\"membershipPlan\"\r\n        value={form.membershipPlan}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {plans.map(plan => (\r\n          <MenuItem key={plan} value={plan}>{plan}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <Box sx={{ my: 2 }}>\r\n        <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\">\r\n          {form.benefits.map(b => (\r\n            <Chip\r\n              key={b}\r\n              label={b}\r\n              onDelete={() => handleRemoveBenefit(b)}\r\n              sx={{ mb: 1 }}\r\n            />\r\n          ))}\r\n        </Stack>\r\n        <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ mt: 1 }}>\r\n          <TextField\r\n            label=\"Add Benefit\"\r\n            value={benefitInput}\r\n            onChange={e => setBenefitInput(e.target.value)}\r\n            size=\"small\"\r\n            onKeyDown={e => { if (e.key === 'Enter') { e.preventDefault(); handleAddBenefit(); } }}\r\n          />\r\n          <Button variant=\"outlined\" onClick={handleAddBenefit} size=\"small\">Add</Button>\r\n          <Button\r\n            variant=\"text\"\r\n            size=\"small\"\r\n            onClick={() => setForm(f => ({ ...f, benefits: [...f.benefits, ...defaultBenefits.filter(db => !f.benefits.includes(db)) ] }))}\r\n          >\r\n            Add Defaults\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <TextField\r\n          label=\"Start Date\"\r\n          name=\"validityPeriod.startDate\"\r\n          type=\"date\"\r\n          value={form.validityPeriod.startDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"End Date\"\r\n          name=\"validityPeriod.endDate\"\r\n          type=\"date\"\r\n          value={form.validityPeriod.endDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n      </Stack>\r\n      <TextField\r\n        select\r\n        label=\"Payment Status\"\r\n        name=\"paymentStatus\"\r\n        value={form.paymentStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {statuses.map(status => (\r\n          <MenuItem key={status} value={status}>{status}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Renewal Date\"\r\n        name=\"renewalDate\"\r\n        type=\"date\"\r\n        value={form.renewalDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        margin=\"normal\"\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        label=\"Last Payment Amount\"\r\n        name=\"lastPaymentAmount\"\r\n        type=\"number\"\r\n        value={form.lastPaymentAmount}\r\n        onChange={handleChange}\r\n        margin=\"normal\"\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        label=\"Last Payment Date\"\r\n        name=\"lastPaymentDate\"\r\n        type=\"date\"\r\n        value={form.lastPaymentDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        margin=\"normal\"\r\n        fullWidth\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Create'}\r\n        </Button>\r\n        {onCancel && (\r\n          <Button variant=\"outlined\" onClick={onCancel} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        )}\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateMembership;","import React, { useState, useEffect } from 'react';\r\nimport { TextField, MenuItem, Stack, Button } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n // Replace with your API URL\r\n\r\nconst planOptions = ['Premium', 'Standard', 'Basic'];\r\nconst statusOptions = ['Active', 'Inactive', 'Expired', 'Cancelled'];\r\n\r\nconst EditMembership = ({ membership, closeModal, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    membershipPlan: '',\r\n    paymentStatus: '',\r\n    benefits: [],\r\n    validityPeriod: { startDate: '', endDate: '' },\r\n    renewalDate: '',\r\n    lastPaymentAmount: '',\r\n    lastPaymentDate: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (membership) {\r\n      setForm({\r\n        membershipPlan: membership.membershipPlan || '',\r\n        paymentStatus: membership.paymentStatus || '',\r\n        benefits: membership.benefits || [],\r\n        validityPeriod: {\r\n          startDate: membership.validityPeriod?.startDate || '',\r\n          endDate: membership.validityPeriod?.endDate || ''\r\n        },\r\n        renewalDate: membership.renewalDate || '',\r\n        lastPaymentAmount: membership.lastPaymentAmount || '',\r\n        lastPaymentDate: membership.lastPaymentDate || ''\r\n      });\r\n    }\r\n  }, [membership]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    if (name === 'startDate' || name === 'endDate') {\r\n      setForm(f => ({\r\n        ...f,\r\n        validityPeriod: { ...f.validityPeriod, [name]: value }\r\n      }));\r\n    } else if (name === 'benefits') {\r\n      setForm(f => ({\r\n        ...f,\r\n        benefits: value.split(',').map(b => b.trim())\r\n      }));\r\n    } else {\r\n      setForm(f => ({ ...f, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      ...form,\r\n      id: membership.id,\r\n      validityPeriod: {\r\n        startDate: form.validityPeriod.startDate,\r\n        endDate: form.validityPeriod.endDate\r\n      }\r\n    };\r\n    await axios.put(`${BASE_URL}/memberships/${membership.id}`, data);\r\n    if (onSuccess) onSuccess();\r\n    if (closeModal) closeModal();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        select\r\n        label=\"Membership Plan\"\r\n        name=\"membershipPlan\"\r\n        value={form.membershipPlan}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {planOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Payment Status\"\r\n        name=\"paymentStatus\"\r\n        value={form.paymentStatus}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {statusOptions.map(opt => (\r\n          <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Benefits (comma separated)\"\r\n        name=\"benefits\"\r\n        value={form.benefits.join(', ')}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n        <TextField\r\n          label=\"Start Date\"\r\n          name=\"startDate\"\r\n          type=\"date\"\r\n          value={form.validityPeriod.startDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"End Date\"\r\n          name=\"endDate\"\r\n          type=\"date\"\r\n          value={form.validityPeriod.endDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n        />\r\n      </Stack>\r\n      <TextField\r\n        label=\"Renewal Date\"\r\n        name=\"renewalDate\"\r\n        type=\"date\"\r\n        value={form.renewalDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Last Payment Amount\"\r\n        name=\"lastPaymentAmount\"\r\n        type=\"number\"\r\n        value={form.lastPaymentAmount}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Last Payment Date\"\r\n        name=\"lastPaymentDate\"\r\n        type=\"date\"\r\n        value={form.lastPaymentDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Save Changes\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditMembership;","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, IconButton, Menu, MenuItem, Chip, Stack, Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Divider, Box } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport CreateMembership from './CreateMembership';\r\nimport EditMembership from './EditMembership';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n\r\nconst planColors = {\r\n  Premium: 'success',\r\n  Standard: 'primary',\r\n  Basic: 'default'\r\n};\r\n\r\nconst statusColors = {\r\n  Active: 'success',\r\n  Inactive: 'default',\r\n  Expired: 'warning',\r\n  Cancelled: 'error'\r\n};\r\n\r\nconst Memberships = () => {\r\n  const [memberships, setMemberships] = useState([]);\r\n  const [selectedMembership, setSelectedMembership] = useState(null);\r\n  const [selectedMembershipId, setSelectedMembershipId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // For actions menu\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Add state for view dialog\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\r\n  const [viewMembership, setViewMembership] = useState(null);\r\n\r\n  const closeButtonAdd = useRef(null);\r\n  const closeButtonEdit = useRef(null);\r\n\r\n  // Fetch memberships from /memberships endpoint\r\n  const fetchMemberships = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/memberships`)\r\n      .then(res => setMemberships(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMemberships();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchMemberships();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const membership = memberships.find(m => m.id === ids[0]);\r\n      setSelectedMembership(membership);\r\n      setSelectedMembershipId(ids[0]);\r\n    } else {\r\n      setSelectedMembership(null);\r\n      setSelectedMembershipId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedMembershipId && window.confirm('Are you sure you want to delete this membership?')) {\r\n      axios.delete(`${BASE_URL}/memberships/${selectedMembershipId}`)\r\n        .then(() => refresh());\r\n    }\r\n  };\r\n\r\n  // Actions menu handlers\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  // Edit from actions menu\r\n  const handleEditMenu = () => {\r\n    setSelectedMembership(actionRow);\r\n    setSelectedMembershipId(actionRow.id);\r\n    document.querySelector('[data-target=\"#editMembershipModal\"]').click();\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleDeleteRow = () => {\r\n    if (actionRow && window.confirm('Are you sure you want to delete this membership?')) {\r\n      axios.delete(`${BASE_URL}/memberships/${actionRow.id}`)\r\n        .then(() => refresh());\r\n    }\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleSuccess = () => {\r\n    setOpen(false);\r\n    // Optionally refresh memberships list here\r\n  };\r\n\r\n  // Add handler for view action\r\n  const handleViewMenu = () => {\r\n    setViewMembership(actionRow);\r\n    setViewDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'membershipPlan',\r\n      headerName: 'Plan',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={planColors[params.value] || 'default'}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'paymentStatus',\r\n      headerName: 'Payment Status',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={statusColors[params.value] || 'default'}\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n        />\r\n      )\r\n    },\r\n    { \r\n      field: 'benefits', \r\n      headerName: 'Benefits', \r\n      width: 300,\r\n      renderCell: (params) => (\r\n        <Stack direction=\"row\" spacing={0.5} flexWrap=\"wrap\">\r\n          {params.value?.map((b, i) => (\r\n            <Chip key={i} label={b} size=\"small\" variant=\"outlined\" />\r\n          ))}\r\n        </Stack>\r\n      )\r\n    },\r\n    {\r\n      field: 'validityStart',\r\n      headerName: 'Start Date',\r\n      width: 140,\r\n      valueGetter: (params) => params.row.validityPeriod?.startDate,\r\n      renderCell: (params) =>\r\n        params.value ? (\r\n          <Chip\r\n            label={new Date(params.value).toLocaleDateString()}\r\n            color=\"info\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          />\r\n        ) : ''\r\n    },\r\n    {\r\n      field: 'validityEnd',\r\n      headerName: 'End Date',\r\n      width: 140,\r\n      valueGetter: (params) => params.row.validityPeriod?.endDate,\r\n      renderCell: (params) =>\r\n        params.value ? (\r\n          <Chip\r\n            label={new Date(params.value).toLocaleDateString()}\r\n            color=\"warning\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          />\r\n        ) : ''\r\n    },\r\n    {\r\n      field: 'renewalDate',\r\n      headerName: 'Renewal Date',\r\n      width: 140,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleDateString() : ''\r\n    },\r\n    {\r\n      field: 'lastPaymentAmount',\r\n      headerName: 'Last Payment ($)',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value ? `$${params.value}` : '$0'}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'lastPaymentDate',\r\n      headerName: 'Last Payment Date',\r\n      width: 160,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleDateString() : ''\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 90,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"action-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleActionClick(event, params.row)}\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-id-card-alt\"></i> Memberships</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            startIcon={<i className=\"far fa-plus-square\"></i>}\r\n            onClick={() => setOpen(true)}\r\n          >\r\n            Add Membership\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            startIcon={<i className=\"fas fa-edit\"></i>}\r\n            data-toggle=\"modal\"\r\n            data-target=\"#editMembershipModal\"\r\n            disabled={!selectedMembership}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n            onClick={handleDelete}\r\n            disabled={!selectedMembershipId}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Stack>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={memberships}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              id=\"action-menu\"\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleViewMenu}>View</MenuItem>\r\n              <MenuItem onClick={handleEditMenu}>Edit</MenuItem>\r\n              <MenuItem onClick={handleDeleteRow}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Edit Membership Modal */}\r\n        <div className=\"modal fade\" id=\"editMembershipModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Membership</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <EditMembership\r\n                  membership={selectedMembership}\r\n                  closeModal={() => closeButtonEdit.current.click()}\r\n                  onSuccess={refresh}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonEdit}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Dialog open={open} onClose={() => setOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Create Membership</DialogTitle>\r\n          <DialogContent>\r\n            <CreateMembership onSuccess={handleSuccess} onCancel={() => setOpen(false)} />\r\n          </DialogContent>\r\n        </Dialog>\r\n\r\n        {/* View Membership Dialog */}\r\n        <Dialog open={viewDialogOpen} onClose={() => setViewDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n              <i className=\"fas fa-id-card-alt\" style={{ color: '#1976d2', fontSize: 22 }} />\r\n              <span>Membership Details</span>\r\n            </Stack>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {viewMembership ? (\r\n              <Box\r\n                sx={{\r\n                  bgcolor: '#fafdff',\r\n                  borderRadius: 2,\r\n                  boxShadow: 1,\r\n                  p: { xs: 2, sm: 3 },\r\n                  minWidth: 320,\r\n                  minHeight: 200\r\n                }}\r\n              >\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n                  <Chip\r\n                    label={viewMembership.membershipPlan}\r\n                    color={planColors[viewMembership.membershipPlan] || 'default'}\r\n                    icon={<i className=\"fas fa-crown\" />}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={viewMembership.paymentStatus}\r\n                    color={statusColors[viewMembership.paymentStatus] || 'default'}\r\n                    icon={<i className=\"fas fa-credit-card\" />}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Status: ${viewMembership.status || '-'}`}\r\n                    color={statusColors[viewMembership.status] || 'default'}\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant=\"subtitle1\" fontWeight={600} sx={{ mb: 1 }}>\r\n                  Benefits:\r\n                </Typography>\r\n                <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\" sx={{ mb: 2 }}>\r\n                  {(viewMembership.benefits || []).map((b, i) => (\r\n                    <Chip key={i} label={b} color=\"info\" variant=\"outlined\" size=\"small\" sx={{ mb: 1 }} />\r\n                  ))}\r\n                </Stack>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2 }}>\r\n                  <Chip\r\n                    label={`Start: ${viewMembership.validityPeriod?.startDate ? new Date(viewMembership.validityPeriod.startDate).toLocaleDateString() : '-'}`}\r\n                    color=\"info\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`End: ${viewMembership.validityPeriod?.endDate ? new Date(viewMembership.validityPeriod.endDate).toLocaleDateString() : '-'}`}\r\n                    color=\"warning\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Renewal: ${viewMembership.renewalDate ? new Date(viewMembership.renewalDate).toLocaleDateString() : '-'}`}\r\n                    color=\"primary\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2 }}>\r\n                  <Chip\r\n                    label={`Last Payment: ${viewMembership.lastPaymentAmount ? `$${viewMembership.lastPaymentAmount}` : '-'}`}\r\n                    color=\"success\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                  <Chip\r\n                    label={`Last Payment Date: ${viewMembership.lastPaymentDate ? new Date(viewMembership.lastPaymentDate).toLocaleDateString() : '-'}`}\r\n                    color=\"default\"\r\n                    sx={{ fontWeight: 600, fontSize: 15 }}\r\n                  />\r\n                </Stack>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No membership selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewDialogOpen(false)} color=\"secondary\" variant=\"outlined\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Memberships;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst operationTypes = ['Surgical', 'Non-Surgical', 'Diagnostic', 'Other'];\r\nconst anesthesiaTypes = ['Local', 'General', 'Sedation', 'None'];\r\nconst followUpOptions = ['Yes', 'No'];\r\nconst statusOptions = ['Scheduled', 'Completed', 'Cancelled'];\r\n\r\nconst AddOperation = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    operationType: '',\r\n    procedureName: '',\r\n    operationDate: '',\r\n    duration: '',\r\n    anesthesiaType: '',\r\n    complications: '',\r\n    postOperationInstructions: '',\r\n    followUpRequired: 'No',\r\n    followUpDate: '',\r\n    status: 'Scheduled'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      operationType: form.operationType,\r\n      procedureName: form.procedureName,\r\n      operationDate: new Date(form.operationDate).toISOString(),\r\n      duration: Number(form.duration),\r\n      anesthesiaType: form.anesthesiaType,\r\n      complications: form.complications,\r\n      postOperationInstructions: form.postOperationInstructions,\r\n      followUpRequired: form.followUpRequired,\r\n      followUpDate: form.followUpDate ? new Date(form.followUpDate).toISOString() : null,\r\n      status: form.status,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/operations`, data);\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          select\r\n          label=\"Operation Type\"\r\n          name=\"operationType\"\r\n          value={form.operationType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {operationTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Procedure Name\"\r\n          name=\"procedureName\"\r\n          value={form.procedureName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Operation Date & Time\"\r\n          name=\"operationDate\"\r\n          type=\"datetime-local\"\r\n          value={form.operationDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Duration (minutes)\"\r\n          name=\"duration\"\r\n          type=\"number\"\r\n          value={form.duration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Anesthesia Type\"\r\n          name=\"anesthesiaType\"\r\n          value={form.anesthesiaType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {anesthesiaTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Complications\"\r\n          name=\"complications\"\r\n          value={form.complications}\r\n          onChange={handleChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Post-Operation Instructions\"\r\n          name=\"postOperationInstructions\"\r\n          value={form.postOperationInstructions}\r\n          onChange={handleChange}\r\n          multiline\r\n          rows={2}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Follow-Up Required\"\r\n          name=\"followUpRequired\"\r\n          value={form.followUpRequired}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {followUpOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        {form.followUpRequired === 'Yes' && (\r\n          <TextField\r\n            label=\"Follow-Up Date & Time\"\r\n            name=\"followUpDate\"\r\n            type=\"datetime-local\"\r\n            value={form.followUpDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            required\r\n            fullWidth\r\n          />\r\n        )}\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Operation'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddOperation;","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst operationTypes = ['Surgical', 'Non-Surgical', 'Diagnostic', 'Other'];\r\nconst anesthesiaTypes = ['Local', 'General', 'Sedation', 'None'];\r\nconst followUpOptions = ['Yes', 'No'];\r\nconst statusOptions = ['Scheduled', 'Completed', 'Cancelled'];\r\n\r\nconst EditOperation = ({ operation, closeModal, onEdit }) => {\r\n  const [form, setForm] = useState({\r\n    operationType: '',\r\n    procedureName: '',\r\n    operationDate: '',\r\n    duration: '',\r\n    anesthesiaType: '',\r\n    complications: '',\r\n    postOperationInstructions: '',\r\n    followUpRequired: 'No',\r\n    followUpDate: '',\r\n    status: 'Scheduled'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (operation) {\r\n      setForm({\r\n        operationType: operation.operationType || '',\r\n        procedureName: operation.procedureName || '',\r\n        operationDate: operation.operationDate ? operation.operationDate.slice(0, 16) : '',\r\n        duration: operation.duration || '',\r\n        anesthesiaType: operation.anesthesiaType || '',\r\n        complications: operation.complications || '',\r\n        postOperationInstructions: operation.postOperationInstructions || '',\r\n        followUpRequired: operation.followUpRequired || 'No',\r\n        followUpDate: operation.followUpDate ? operation.followUpDate.slice(0, 16) : '',\r\n        status: operation.status || 'Scheduled'\r\n      });\r\n    }\r\n  }, [operation]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      operationType: form.operationType,\r\n      procedureName: form.procedureName,\r\n      operationDate: new Date(form.operationDate).toISOString(),\r\n      duration: Number(form.duration),\r\n      anesthesiaType: form.anesthesiaType,\r\n      complications: form.complications,\r\n      postOperationInstructions: form.postOperationInstructions,\r\n      followUpRequired: form.followUpRequired,\r\n      followUpDate: form.followUpDate ? new Date(form.followUpDate).toISOString() : null,\r\n      status: form.status,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/operations/${operation.id}`, data);\r\n      if (onEdit) onEdit(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          select\r\n          label=\"Operation Type\"\r\n          name=\"operationType\"\r\n          value={form.operationType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {operationTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Procedure Name\"\r\n          name=\"procedureName\"\r\n          value={form.procedureName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Operation Date & Time\"\r\n          name=\"operationDate\"\r\n          type=\"datetime-local\"\r\n          value={form.operationDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Duration (minutes)\"\r\n          name=\"duration\"\r\n          type=\"number\"\r\n          value={form.duration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Anesthesia Type\"\r\n          name=\"anesthesiaType\"\r\n          value={form.anesthesiaType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {anesthesiaTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Complications\"\r\n          name=\"complications\"\r\n          value={form.complications}\r\n          onChange={handleChange}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Post-Operation Instructions\"\r\n          name=\"postOperationInstructions\"\r\n          value={form.postOperationInstructions}\r\n          onChange={handleChange}\r\n          multiline\r\n          rows={2}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Follow-Up Required\"\r\n          name=\"followUpRequired\"\r\n          value={form.followUpRequired}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {followUpOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        {form.followUpRequired === 'Yes' && (\r\n          <TextField\r\n            label=\"Follow-Up Date & Time\"\r\n            name=\"followUpDate\"\r\n            type=\"datetime-local\"\r\n            value={form.followUpDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            required\r\n            fullWidth\r\n          />\r\n        )}\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditOperation;","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, Chip, IconButton, Menu, MenuItem, Button, Dialog, DialogTitle, DialogContent, DialogActions, Box } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddOperation from './AddOperation'; // Make sure this path is correct\r\nimport EditOperation from './EditOperation'; // <-- Import your EditOperation component\r\n\r\nconst Operations = () => {\r\n  const [operations, setOperations] = useState([]);\r\n  const [selectedOperation, setSelectedOperation] = useState(null);\r\n  const [selectedOperationId, setSelectedOperationId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // For actions menu\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Material-UI modal state\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false); // <-- Add edit modal state\r\n\r\n  const fetchOperations = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/operations`)\r\n      .then(res => setOperations(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOperations();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchOperations();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const op = operations.find(op => op.id === ids[0]);\r\n      setSelectedOperation(op);\r\n      setSelectedOperationId(ids[0]);\r\n    } else {\r\n      setSelectedOperation(null);\r\n      setSelectedOperationId(null);\r\n    }\r\n  };\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleActionEdit = () => {\r\n    setSelectedOperation(actionRow);\r\n    setSelectedOperationId(actionRow.id);\r\n    setEditOpen(true); // <-- Open edit modal\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionDelete = () => {\r\n    setSelectedOperation(actionRow);\r\n    setSelectedOperationId(actionRow.id);\r\n    if (actionRow?.id && window.confirm('Are you sure you want to delete this operation?')) {\r\n      axios.delete(`${BASE_URL}/operations/${actionRow.id}`)\r\n        .then(() => refresh());\r\n    }\r\n    handleActionClose();\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'operationType', headerName: 'Type', width: 150 },\r\n    { field: 'procedureName', headerName: 'Procedure', width: 200 },\r\n    {\r\n      field: 'operationDate',\r\n      headerName: 'Date',\r\n      width: 180,\r\n      valueFormatter: params => new Date(params.value).toLocaleString()\r\n    },\r\n    { field: 'duration', headerName: 'Duration (min)', width: 150 },\r\n    { field: 'anesthesiaType', headerName: 'Anesthesia', width: 150 },\r\n    { field: 'complications', headerName: 'Complications', width: 200 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Completed'\r\n              ? 'success'\r\n              : params.value === 'Scheduled'\r\n              ? 'primary'\r\n              : params.value === 'Cancelled'\r\n              ? 'error'\r\n              : 'default'\r\n          }\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'followUpRequired',\r\n      headerName: 'Follow-Up Required',\r\n      width: 170\r\n    },\r\n    {\r\n      field: 'followUpDate',\r\n      headerName: 'Follow-Up Date',\r\n      width: 180,\r\n      valueFormatter: params => params.value ? new Date(params.value).toLocaleString() : ''\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-procedures\"></i> Operations</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        {/* Material-UI Add Operation Button */}\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"success\"\r\n          sx={{ mb: 2, mr: 2 }}\r\n          onClick={() => setAddOpen(true)}\r\n          startIcon={<i className=\"far fa-plus-square\"></i>}\r\n        >\r\n          Add Operation\r\n        </Button>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={operations}\r\n              getRowId={row => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleActionEdit}>Edit</MenuItem>\r\n              <MenuItem onClick={handleActionDelete}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Material-UI Add Operation Dialog */}\r\n        <Dialog open={addOpen} onClose={() => setAddOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Add New Operation</DialogTitle>\r\n          <DialogContent>\r\n            <AddOperation\r\n              closeModal={() => setAddOpen(false)}\r\n              onCreate={refresh}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAddOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Material-UI Edit Operation Dialog */}\r\n        <Dialog open={editOpen} onClose={() => setEditOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Edit Operation</DialogTitle>\r\n          <DialogContent>\r\n            <EditOperation\r\n              operation={selectedOperation}\r\n              closeModal={() => setEditOpen(false)}\r\n              onEdit={refresh}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Operations;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, TextField, Button, Stack, Dialog, DialogTitle, DialogContent, DialogActions, Typography, Divider, IconButton, Menu, MenuItem, Box, Chip, Avatar } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst initialForm = {\r\n  name: '',\r\n  address: '',\r\n  city: '',\r\n  state: '',\r\n  zipCode: '',\r\n  country: '',\r\n  contactNumber: '',\r\n  email: '',\r\n  workingHours: {},\r\n  doctorsAvailable: [],\r\n};\r\n\r\nconst Clinic = () => {\r\n  const [clinics, setClinics] = useState([]);\r\n  const [selectedClinic, setSelectedClinic] = useState(null);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [form, setForm] = useState(initialForm);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [menuRowId, setMenuRowId] = useState(null);\r\n\r\n  const closeButtonAdd = useRef(null);\r\n  const closeButtonEdit = useRef(null);\r\n\r\n  const fetchClinics = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/clinics`)\r\n      .then(res => setClinics(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchClinics();\r\n  }, []);\r\n\r\n  const refresh = () => fetchClinics();\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const clinic = clinics.find(c => c.id === ids[0]);\r\n      setSelectedClinic(clinic);\r\n      setSelectedId(ids[0]);\r\n    } else {\r\n      setSelectedClinic(null);\r\n      setSelectedId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedId && window.confirm('Are you sure you want to delete this clinic?')) {\r\n      axios.delete(`${BASE_URL}/clinics/${selectedId}`).then(() => refresh());\r\n    }\r\n  };\r\n\r\n  // Create Clinic Feature\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleAddClinic = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    axios.post(`${BASE_URL}/clinics`, form)\r\n      .then(() => {\r\n        setAddOpen(false);\r\n        setForm(initialForm);\r\n        refresh();\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const handleViewClinic = (clinic) => {\r\n    setSelectedClinic(clinic);\r\n    setViewOpen(true);\r\n  };\r\n\r\n  const handleMenuOpen = (event, rowId) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setMenuRowId(rowId);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setMenuRowId(null);\r\n  };\r\n\r\n  const handleMenuEdit = () => {\r\n    const clinic = clinics.find(c => c.id === menuRowId);\r\n    setSelectedClinic(clinic);\r\n    setForm(clinic); // Pre-fill form with clinic data\r\n    setSelectedId(menuRowId);\r\n    setEditOpen(true);\r\n    handleMenuClose();\r\n  };\r\n\r\n  const handleMenuDelete = () => {\r\n    setSelectedId(menuRowId);\r\n    handleDelete();\r\n    handleMenuClose();\r\n  };\r\n\r\n  const handleMenuView = () => {\r\n    const clinic = clinics.find(c => c.id === menuRowId);\r\n    setSelectedClinic(clinic);\r\n    setViewOpen(true);\r\n    handleMenuClose();\r\n  };\r\n\r\n  // Edit Clinic handler\r\n  const handleEditClinic = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    axios.put(`${BASE_URL}/clinics/${selectedId}`, form)\r\n      .then(() => {\r\n        setEditOpen(false);\r\n        setForm(initialForm);\r\n        refresh();\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'name', headerName: 'Clinic Name', width: 220 },\r\n    { field: 'address', headerName: 'Address', width: 250 },\r\n    {\r\n      field: 'city',\r\n      headerName: 'City',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"primary\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'state',\r\n      headerName: 'State',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"info\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    { \r\n      field: 'zipCode', \r\n      headerName: 'Zip Code', \r\n      width: 110 \r\n    },\r\n    {\r\n      field: 'country',\r\n      headerName: 'Country',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"success\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'contactNumber',\r\n      headerName: 'Contact Number',\r\n      width: 160,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"secondary\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'email',\r\n      headerName: 'Email',\r\n      width: 220,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"default\" size=\"small\" sx={{ fontWeight: 600 }} />\r\n      )\r\n    },\r\n    {\r\n      field: 'workingHours',\r\n      headerName: 'Working Hours',\r\n      width: 400,\r\n      renderCell: (params) => {\r\n        const wh = params.value || {};\r\n        return (\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n            {Object.entries(wh).map(([day, hours]) => (\r\n              <Chip\r\n                key={day}\r\n                label={`${day.charAt(0).toUpperCase() + day.slice(1)}: ${hours}`}\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                sx={{ mb: 0.5 }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"clinic-row-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(e) => handleMenuOpen(e, params.row.id)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-clinic-medical\"></i> Clinics</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          startIcon={<i className=\"far fa-plus-square\"></i>}\r\n          onClick={() => setAddOpen(true)}\r\n          sx={{ mr: 1 }}\r\n        >\r\n          Add Clinic\r\n        </Button>\r\n\r\n       \r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 480, width: '100%', marginTop: 10 }}>\r\n            <DataGrid\r\n              rows={clinics}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Clinic Modal */}\r\n        {addOpen && (\r\n          <Dialog open={addOpen} onClose={() => setAddOpen(false)} maxWidth=\"md\" fullWidth>\r\n            <form onSubmit={handleAddClinic}>\r\n              <DialogTitle>Add Clinic</DialogTitle>\r\n              <DialogContent dividers>\r\n                <Stack spacing={2}>\r\n                  <TextField label=\"Clinic Name\" name=\"name\" value={form.name} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"Address\" name=\"address\" value={form.address} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"City\" name=\"city\" value={form.city} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"State\" name=\"state\" value={form.state} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"Zip Code\" name=\"zipCode\" value={form.zipCode} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"Country\" name=\"country\" value={form.country} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"Contact Number\" name=\"contactNumber\" value={form.contactNumber} onChange={handleFormChange} required fullWidth />\r\n                  <TextField label=\"Email\" name=\"email\" value={form.email} onChange={handleFormChange} required fullWidth />\r\n                  {/* Add more fields for workingHours and doctorsAvailable if needed */}\r\n                </Stack>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n                  {loading ? 'Saving...' : 'Create Clinic'}\r\n                </Button>\r\n                <Button variant=\"outlined\" onClick={() => setAddOpen(false)} disabled={loading}>\r\n                  Cancel\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n          </Dialog>\r\n        )}\r\n\r\n        {/* View Clinic Modal */}\r\n        <Dialog open={viewOpen} onClose={() => setViewOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n              <Avatar sx={{ bgcolor: \"#1976d2\", width: 48, height: 48 }}>\r\n                <i className=\"fas fa-clinic-medical\" style={{ fontSize: 28, color: \"#fff\" }}></i>\r\n              </Avatar>\r\n              <Typography variant=\"h5\" color=\"primary\">{selectedClinic?.name || \"Clinic Details\"}</Typography>\r\n            </Box>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            {selectedClinic ? (\r\n              <Box sx={{ p: 2 }}>\r\n                <Stack spacing={2}>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">General Info</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Typography><b>Address:</b> {selectedClinic.address}</Typography>\r\n                    <Typography><b>City:</b> {selectedClinic.city}</Typography>\r\n                    <Typography><b>State:</b> {selectedClinic.state}</Typography>\r\n                    <Typography><b>Zip Code:</b> {selectedClinic.zipCode}</Typography>\r\n                    <Typography><b>Country:</b> {selectedClinic.country}</Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">Contact</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Typography><b>Contact Number:</b> <Chip label={selectedClinic.contactNumber} color=\"info\" /></Typography>\r\n                    <Typography><b>Email:</b> <Chip label={selectedClinic.email} color=\"success\" /></Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">Working Hours</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Box component=\"ul\" sx={{ pl: 2, mb: 0 }}>\r\n                      {selectedClinic.workingHours && Object.entries(selectedClinic.workingHours).map(([day, hours]) => (\r\n                        <li key={day}>\r\n                          <Chip label={`${day.charAt(0).toUpperCase() + day.slice(1)}: ${hours}`} color=\"primary\" sx={{ mr: 1, mb: 1 }} />\r\n                        </li>\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      <b>Created At:</b> {selectedClinic.createdAt ? new Date(selectedClinic.createdAt).toLocaleString() : '-'}<br />\r\n                      <b>Updated At:</b> {selectedClinic.updatedAt ? new Date(selectedClinic.updatedAt).toLocaleString() : '-'}\r\n                    </Typography>\r\n                  </Box>\r\n                </Stack>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No clinic selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"primary\" variant=\"contained\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Edit Clinic Modal (MUI Dialog) */}\r\n        <Dialog open={editOpen} onClose={() => setEditOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <form onSubmit={handleEditClinic}>\r\n            <DialogTitle>Edit Clinic</DialogTitle>\r\n            <DialogContent dividers>\r\n              <Stack spacing={2}>\r\n                <TextField label=\"Clinic Name\" name=\"name\" value={form.name} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"Address\" name=\"address\" value={form.address} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"City\" name=\"city\" value={form.city} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"State\" name=\"state\" value={form.state} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"Zip Code\" name=\"zipCode\" value={form.zipCode} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"Country\" name=\"country\" value={form.country} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"Contact Number\" name=\"contactNumber\" value={form.contactNumber} onChange={handleFormChange} required fullWidth />\r\n                <TextField label=\"Email\" name=\"email\" value={form.email} onChange={handleFormChange} required fullWidth />\r\n                {/* Add more fields for workingHours and doctorsAvailable if needed */}\r\n              </Stack>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"info\" disabled={loading}>\r\n                {loading ? 'Saving...' : 'Update Clinic'}\r\n              </Button>\r\n              <Button variant=\"outlined\" onClick={() => setEditOpen(false)} disabled={loading}>\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n\r\n        <Menu\r\n          id=\"clinic-row-menu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleMenuClose}\r\n        >\r\n          <MenuItem onClick={handleMenuView}>View</MenuItem>\r\n          <MenuItem onClick={handleMenuEdit}>Edit</MenuItem>\r\n          <MenuItem onClick={handleMenuDelete}>Delete</MenuItem>\r\n        </Menu>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Clinic;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst severityOptions = ['Mild', 'Moderate', 'Severe'];\r\n\r\nconst CreateDiagnosis = ({ open, onClose, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    diagnosisDate: '',\r\n    condition: '',\r\n    severity: 'Mild',\r\n    notes: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch patients and doctors from backend\r\n    axios.get(`${BASE_URL}/patients`)\r\n      .then(res => setPatients(res.data))\r\n      .catch(() => setPatients([]));\r\n    axios.get(`${BASE_URL}/doctors`)\r\n      .then(res => setDoctors(res.data))\r\n      .catch(() => setDoctors([]));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...form,\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/diagnoses`, data);\r\n      if (onSuccess) onSuccess();\r\n      if (onClose) onClose();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Add Diagnosis</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField\r\n            select\r\n            label=\"Patient\"\r\n            name=\"patientId\"\r\n            value={form.patientId}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          >\r\n            {patients.map(p => (\r\n              <MenuItem key={p.id} value={p.id}>\r\n                {p.fullName || p.name || p.id}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Doctor\"\r\n            name=\"doctorId\"\r\n            value={form.doctorId}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          >\r\n            {doctors.map(d => (\r\n              <MenuItem key={d.id} value={d.id}>\r\n                {d.fullName || d.name || d.id}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Diagnosis Date\"\r\n            name=\"diagnosisDate\"\r\n            type=\"datetime-local\"\r\n            value={form.diagnosisDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Condition\"\r\n            name=\"condition\"\r\n            value={form.condition}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Severity\"\r\n            name=\"severity\"\r\n            value={form.severity}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {severityOptions.map(opt => (\r\n              <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Notes\"\r\n            name=\"notes\"\r\n            value={form.notes}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n              {loading ? 'Saving...' : 'Create Diagnosis'}\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={onClose} disabled={loading}>\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CreateDiagnosis;","import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport {\r\n  LinearProgress, Chip, Menu, MenuItem, Button, IconButton, Box, Typography, Drawer, Snackbar, Alert, TextField, Stack, Skeleton, Tooltip\r\n} from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport { saveAs } from 'file-saver';\r\nimport { Doughnut, Bar, Line, Pie } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport CreateDiagnosis from './CreateDiagnosis';\r\nimport BASE_URL from '../../main/urls/urls';\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\n\r\nconst Diagnoses = () => {\r\n  const [diagnoses, setDiagnoses] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [skeleton, setSkeleton] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [severityFilter, setSeverityFilter] = useState('');\r\n  const [conditionFilter, setConditionFilter] = useState('');\r\n  const [doctorFilter, setDoctorFilter] = useState('');\r\n  const [dateRange, setDateRange] = useState({ from: '', to: '' });\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [drawerDiagnosis, setDrawerDiagnosis] = useState(null);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'info' });\r\n  const [editRowsModel, setEditRowsModel] = useState({});\r\n  const [auditTrail, setAuditTrail] = useState({});\r\n  const [chartFilter, setChartFilter] = useState({ condition: '', severity: '' });\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n\r\n  // Simulate user role\r\n  const userRole = 'admin'; // or 'doctor', 'viewer', etc.\r\n\r\n  // Fetch diagnoses\r\n  const fetchDiagnoses = useCallback(() => {\r\n    setLoading(true);\r\n    setSkeleton(true);\r\n    axios.get(`${BASE_URL}/diagnoses`)\r\n      .then((res) => {\r\n        setDiagnoses(res.data);\r\n        setTimeout(() => setSkeleton(false), 800); // Simulate skeleton loading\r\n      })\r\n      .catch(() => setSnackbar({ open: true, message: 'Failed to load diagnoses', severity: 'error' }))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchDiagnoses();\r\n  }, [fetchDiagnoses]);\r\n\r\n  // Filtering logic\r\n  const filteredDiagnoses = diagnoses.filter(diagnosis => {\r\n    const matchesSeverity = severityFilter ? diagnosis.severity === severityFilter : true;\r\n    const matchesCondition = conditionFilter ? diagnosis.condition === conditionFilter : true;\r\n    const matchesDoctor = doctorFilter ? (diagnosis.doctorName || '').toLowerCase().includes(doctorFilter.toLowerCase()) : true;\r\n    const matchesSearch = Object.values(diagnosis).some(value =>\r\n      value?.toString().toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    const matchesDate =\r\n      (!dateRange.from || new Date(diagnosis.diagnosisDate) >= new Date(dateRange.from)) &&\r\n      (!dateRange.to || new Date(diagnosis.diagnosisDate) <= new Date(dateRange.to));\r\n    const matchesChart =\r\n      (!chartFilter.condition || diagnosis.condition === chartFilter.condition) &&\r\n      (!chartFilter.severity || diagnosis.severity === chartFilter.severity);\r\n    return matchesSeverity && matchesCondition && matchesDoctor && matchesSearch && matchesDate && matchesChart;\r\n  });\r\n\r\n  // Inline editing\r\n  const handleEditRowsModelChange = (model) => {\r\n    setEditRowsModel(model);\r\n  };\r\n  const handleRowEditCommit = async (id) => {\r\n    const changes = editRowsModel[id];\r\n    if (changes) {\r\n      const updated = { ...diagnoses.find(d => d.id === id), ...Object.fromEntries(Object.entries(changes).map(([k, v]) => [k, v.value])) };\r\n      await axios.put(`${BASE_URL}/diagnoses/${id}`, updated);\r\n      setAuditTrail(a => ({\r\n        ...a,\r\n        [id]: [...(a[id] || []), { date: new Date().toISOString(), user: 'CurrentUser', changes }]\r\n      }));\r\n      setSnackbar({ open: true, message: 'Diagnosis updated', severity: 'success' });\r\n      fetchDiagnoses();\r\n    }\r\n  };\r\n\r\n  // Bulk status update\r\n  const handleBulkStatusUpdate = async (status) => {\r\n    await Promise.all(selectedIds.map(id =>\r\n      axios.patch(`${BASE_URL}/diagnoses/${id}`, { severity: status })\r\n    ));\r\n    setSnackbar({ open: true, message: `Marked selected as ${status}`, severity: 'success' });\r\n    fetchDiagnoses();\r\n  };\r\n\r\n  // Export to Excel (simple CSV for demo)\r\n  const exportToExcel = () => {\r\n    const csvContent = [\r\n      Object.keys(diagnoses[0] || {}).join(','),\r\n      ...diagnoses.map(diagnosis => Object.values(diagnosis).join(','))\r\n    ].join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'application/vnd.ms-excel' });\r\n    saveAs(blob, 'diagnoses.xlsx');\r\n    setSnackbar({ open: true, message: 'Exported to Excel', severity: 'success' });\r\n  };\r\n\r\n  // Export to PDF (simple print for demo)\r\n  const exportToPDF = () => {\r\n    window.print();\r\n    setSnackbar({ open: true, message: 'Print dialog opened for PDF export', severity: 'info' });\r\n  };\r\n\r\n  // Chart interactivity\r\n  const handleChartClick = (elems, chart) => {\r\n    if (elems.length > 0) {\r\n      const idx = elems[0].index;\r\n      const label = chart.data.labels[idx];\r\n      setChartFilter({ ...chartFilter, condition: label });\r\n    }\r\n  };\r\n\r\n  // Columns with inline editing and role-based actions\r\n  const columns = [\r\n    {\r\n      field: 'diagnosisDate',\r\n      headerName: 'Date',\r\n      width: 160,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'condition',\r\n      headerName: 'Condition',\r\n      width: 200,\r\n      editable: userRole === 'admin',\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'severity',\r\n      headerName: 'Severity',\r\n      width: 120,\r\n      editable: userRole === 'admin' || userRole === 'doctor',\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Severe'\r\n              ? 'error'\r\n              : params.value === 'Moderate'\r\n              ? 'warning'\r\n              : 'success'\r\n          }\r\n          variant=\"outlined\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'doctorName',\r\n      headerName: 'Doctor',\r\n      width: 180\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <Tooltip title=\"View Details\">\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setDrawerDiagnosis(params.row);\r\n                setDrawerOpen(true);\r\n              }}\r\n              aria-label=\"View details\"\r\n            >\r\n              <i className=\"fas fa-eye\"></i>\r\n            </IconButton>\r\n          </Tooltip>\r\n          {(userRole === 'admin' || userRole === 'doctor') && (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={e => {\r\n                setActionAnchorEl(e.currentTarget);\r\n                setActionRow(params.row);\r\n              }}\r\n              aria-label=\"More actions\"\r\n            >\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          )}\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Chart data calculations (place before your component return)\r\n  const conditionCounts = diagnoses.reduce((acc, d) => {\r\n    const cond = d.condition || 'Other';\r\n    acc[cond] = (acc[cond] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const severityCounts = diagnoses.reduce((acc, d) => {\r\n    const sev = d.severity || 'Other';\r\n    acc[sev] = (acc[sev] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const doctorCounts = diagnoses.reduce((acc, d) => {\r\n    const doc = d.doctorName || 'Unknown';\r\n    acc[doc] = (acc[doc] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const dateCounts = diagnoses.reduce((acc, d) => {\r\n    const date = d.diagnosisDate ? new Date(d.diagnosisDate).toLocaleDateString() : 'Unknown';\r\n    acc[date] = (acc[date] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const doughnutData = {\r\n    labels: Object.keys(conditionCounts),\r\n    datasets: [{\r\n      data: Object.values(conditionCounts),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n  const pieData = {\r\n    labels: Object.keys(severityCounts),\r\n    datasets: [{\r\n      data: Object.values(severityCounts),\r\n      backgroundColor: ['#43a047', '#ffa000', '#e53935', '#1976d2'],\r\n    }]\r\n  };\r\n  const barData = {\r\n    labels: Object.keys(doctorCounts),\r\n    datasets: [{\r\n      label: 'Diagnoses per Doctor',\r\n      data: Object.values(doctorCounts),\r\n      backgroundColor: '#1976d2',\r\n    }]\r\n  };\r\n  const lineData = {\r\n    labels: Object.keys(dateCounts),\r\n    datasets: [{\r\n      label: 'Diagnoses per Date',\r\n      data: Object.values(dateCounts),\r\n      borderColor: '#e53935',\r\n      backgroundColor: 'rgba(229,57,53,0.2)',\r\n      fill: true,\r\n      tension: 0.4,\r\n    }]\r\n  };\r\n\r\n  // Responsive skeletons\r\n  if (skeleton) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={60} sx={{ mb: 2 }} />\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={300} sx={{ mb: 2 }} />\r\n        <Skeleton variant=\"rectangular\" width=\"100%\" height={500} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-notes-medical\"></i> Diagnoses</h4>\r\n      </div>\r\n\r\n      {/* Widgets row */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2, flexWrap: 'wrap' }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center', minWidth: 120 }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Diagnoses</Typography>\r\n          <Typography variant=\"h6\">{diagnoses.length}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center', minWidth: 120 }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Mild</Typography>\r\n          <Typography variant=\"h6\">{diagnoses.filter(d => d.severity === 'Mild').length}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center', minWidth: 120 }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Moderate</Typography>\r\n          <Typography variant=\"h6\">{diagnoses.filter(d => d.severity === 'Moderate').length}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center', minWidth: 120 }}>\r\n          <Typography variant=\"subtitle2\" color=\"error.main\">Severe</Typography>\r\n          <Typography variant=\"h6\">{diagnoses.filter(d => d.severity === 'Severe').length}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts Section - MOVE HERE, just below widgets and above filters/table */}\r\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 4, mb: 4, mt: 2, justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Diagnoses by Condition</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Diagnoses by Severity</Typography>\r\n          <Pie data={pieData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Diagnoses per Doctor</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fce4ec', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Diagnoses Over Time</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        {/* Create Diagnosis Button */}\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"success\"\r\n          sx={{ mb: 2 }}\r\n          onClick={() => setAddDialogOpen(true)}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create Diagnosis\r\n        </Button>\r\n\r\n        {/* Advanced Filters */}\r\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2 }}>\r\n          <TextField\r\n            label=\"Search\"\r\n            value={searchQuery}\r\n            onChange={e => setSearchQuery(e.target.value)}\r\n            size=\"small\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            label=\"Severity\"\r\n            select\r\n            value={severityFilter}\r\n            onChange={e => setSeverityFilter(e.target.value)}\r\n            size=\"small\"\r\n            fullWidth\r\n          >\r\n            <MenuItem value=\"\">All Severities</MenuItem>\r\n            <MenuItem value=\"Mild\">Mild</MenuItem>\r\n            <MenuItem value=\"Moderate\">Moderate</MenuItem>\r\n            <MenuItem value=\"Severe\">Severe</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            label=\"Condition\"\r\n            select\r\n            value={conditionFilter}\r\n            onChange={e => setConditionFilter(e.target.value)}\r\n            size=\"small\"\r\n            fullWidth\r\n          >\r\n            <MenuItem value=\"\">All Conditions</MenuItem>\r\n            {Object.keys(conditionCounts).map(cond => (\r\n              <MenuItem key={cond} value={cond}>{cond}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Doctor\"\r\n            value={doctorFilter}\r\n            onChange={e => setDoctorFilter(e.target.value)}\r\n            size=\"small\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            label=\"From\"\r\n            type=\"date\"\r\n            value={dateRange.from}\r\n            onChange={e => setDateRange(r => ({ ...r, from: e.target.value }))}\r\n            size=\"small\"\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            label=\"To\"\r\n            type=\"date\"\r\n            value={dateRange.to}\r\n            onChange={e => setDateRange(r => ({ ...r, to: e.target.value }))}\r\n            size=\"small\"\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n          />\r\n        </Stack>\r\n\r\n        {/* DataGrid with inline editing */}\r\n        {loading ? <LinearProgress /> : (\r\n          <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredDiagnoses}\r\n              getRowId={row => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5, 10, 20]}\r\n              checkboxSelection\r\n              onRowSelectionModelChange={ids => setSelectedIds(ids)}\r\n              components={{ Toolbar: GridToolbar }}\r\n              editMode=\"row\"\r\n              onRowEditCommit={handleRowEditCommit}\r\n              onEditRowsModelChange={handleEditRowsModelChange}\r\n              aria-label=\"Diagnoses Table\"\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={() => setActionAnchorEl(null)}\r\n            >\r\n              {(userRole === 'admin' || userRole === 'doctor') && (\r\n                <MenuItem onClick={() => {\r\n                  setDrawerDiagnosis(actionRow);\r\n                  setDrawerOpen(true);\r\n                  setActionAnchorEl(null);\r\n                }}>View</MenuItem>\r\n              )}\r\n              {userRole === 'admin' && (\r\n                <MenuItem onClick={async () => {\r\n                  await axios.delete(`${BASE_URL}/diagnoses/${actionRow.id}`);\r\n                  setSnackbar({ open: true, message: 'Diagnosis deleted', severity: 'success' });\r\n                  fetchDiagnoses();\r\n                  setActionAnchorEl(null);\r\n                }}>Delete</MenuItem>\r\n              )}\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Detailed Drawer View */}\r\n        <Drawer\r\n          anchor=\"right\"\r\n          open={drawerOpen}\r\n          onClose={() => setDrawerOpen(false)}\r\n          PaperProps={{ sx: { width: { xs: 320, sm: 480 } } }}\r\n        >\r\n          <Box sx={{ p: 3, maxWidth: 480 }}>\r\n            {drawerDiagnosis && (\r\n              <>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Diagnosis Details\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">Condition: {drawerDiagnosis.condition}</Typography>\r\n                <Typography variant=\"subtitle2\">Severity: {drawerDiagnosis.severity}</Typography>\r\n                <Typography variant=\"subtitle2\">Doctor: {drawerDiagnosis.doctorName}</Typography>\r\n                <Typography variant=\"subtitle2\">Date: {new Date(drawerDiagnosis.diagnosisDate).toLocaleString()}</Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Results:</Typography>\r\n                <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>{drawerDiagnosis.diagnosisResults}</Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Notes:</Typography>\r\n                <Typography variant=\"body2\">{drawerDiagnosis.notes}</Typography>\r\n                {/* Audit Trail */}\r\n                <Typography variant=\"subtitle2\" sx={{ mt: 2 }}>Audit Trail:</Typography>\r\n                <Box sx={{ maxHeight: 120, overflow: 'auto', bgcolor: '#f5f5f5', p: 1, borderRadius: 1 }}>\r\n                  {(auditTrail[drawerDiagnosis.id] || []).length === 0\r\n                    ? <Typography variant=\"caption\">No changes yet.</Typography>\r\n                    : auditTrail[drawerDiagnosis.id].map((entry, idx) => (\r\n                      <Typography key={idx} variant=\"caption\" sx={{ display: 'block' }}>\r\n                        {entry.date}: {entry.user} changed {Object.keys(entry.changes).join(', ')}\r\n                      </Typography>\r\n                    ))}\r\n                </Box>\r\n                <Stack direction=\"row\" spacing={2} sx={{ mt: 3 }}>\r\n                  <Button variant=\"outlined\" startIcon={<PrintIcon />} onClick={exportToPDF}>Print</Button>\r\n                  <Button variant=\"outlined\" startIcon={<DownloadIcon />} onClick={exportToExcel}>Download Excel</Button>\r\n                </Stack>\r\n              </>\r\n            )}\r\n          </Box>\r\n        </Drawer>\r\n\r\n        {/* Snackbar Notifications */}\r\n        <Snackbar\r\n          open={snackbar.open}\r\n          autoHideDuration={3000}\r\n          onClose={() => setSnackbar(s => ({ ...s, open: false }))}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n        >\r\n          <Alert onClose={() => setSnackbar(s => ({ ...s, open: false }))} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n            {snackbar.message}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {/* Add Diagnosis Dialog - NEW SECTION */}\r\n        <CreateDiagnosis\r\n          open={addDialogOpen}\r\n          onClose={() => setAddDialogOpen(false)}\r\n          onSuccess={() => {\r\n            setAddDialogOpen(false);\r\n            // Refresh diagnoses data\r\n            fetchDiagnoses();\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diagnoses;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['In Service', 'Out of Service', 'Maintenance Due', 'In Maintenance', 'Retired'];\r\n\r\nconst AddEquipmentMaintenance = ({ open, onClose, technicians = [], clinics = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    clinicId: '',\r\n    equipmentName: '',\r\n    modelNumber: '',\r\n    manufacturer: '',\r\n    purchaseDate: '',\r\n    lastServiceDate: '',\r\n    nextServiceDue: '',\r\n    status: 'In Service',\r\n    assignedTechnician: '',\r\n    maintenanceNotes: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...form,\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/equipments`, data);\r\n      if (onSuccess) onSuccess();\r\n      if (onClose) onClose();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Add Equipment Maintenance</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField\r\n            select\r\n            label=\"Clinic\"\r\n            name=\"clinicId\"\r\n            value={form.clinicId}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          >\r\n            {clinics.map(c => (\r\n              <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Equipment Name\"\r\n            name=\"equipmentName\"\r\n            value={form.equipmentName}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Model Number\"\r\n            name=\"modelNumber\"\r\n            value={form.modelNumber}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Manufacturer\"\r\n            name=\"manufacturer\"\r\n            value={form.manufacturer}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Purchase Date\"\r\n            name=\"purchaseDate\"\r\n            type=\"date\"\r\n            value={form.purchaseDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Last Service Date\"\r\n            name=\"lastServiceDate\"\r\n            type=\"date\"\r\n            value={form.lastServiceDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Next Service Due\"\r\n            name=\"nextServiceDue\"\r\n            type=\"date\"\r\n            value={form.nextServiceDue}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Status\"\r\n            name=\"status\"\r\n            value={form.status}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {statuses.map(s => (\r\n              <MenuItem key={s} value={s}>{s}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Assigned Technician\"\r\n            name=\"assignedTechnician\"\r\n            value={form.assignedTechnician}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {technicians.map(t => (\r\n              <MenuItem key={t.id} value={t.id}>{t.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Maintenance Notes\"\r\n            name=\"maintenanceNotes\"\r\n            value={form.maintenanceNotes}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n              {loading ? 'Saving...' : 'Create'}\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={onClose} disabled={loading}>\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddEquipmentMaintenance;","import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statuses = ['In Service', 'Out of Service', 'Maintenance Due', 'In Maintenance', 'Retired'];\r\n\r\nconst EditEquipmentMaintenance = ({ open, onClose, equipment = {}, technicians = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    clinicId: '',\r\n    equipmentName: '',\r\n    modelNumber: '',\r\n    manufacturer: '',\r\n    purchaseDate: '',\r\n    lastServiceDate: '',\r\n    nextServiceDue: '',\r\n    status: 'In Service',\r\n    assignedTechnician: '',\r\n    maintenanceNotes: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch clinics from /clinics endpoint\r\n    axios.get(`${BASE_URL}/clinics`)\r\n      .then(res => setClinics(res.data))\r\n      .catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (equipment) {\r\n      setForm({\r\n        clinicId: equipment.clinicId || '',\r\n        equipmentName: equipment.equipmentName || '',\r\n        modelNumber: equipment.modelNumber || '',\r\n        manufacturer: equipment.manufacturer || '',\r\n        purchaseDate: equipment.purchaseDate ? equipment.purchaseDate.slice(0, 10) : '',\r\n        lastServiceDate: equipment.lastServiceDate ? equipment.lastServiceDate.slice(0, 10) : '',\r\n        nextServiceDue: equipment.nextServiceDue ? equipment.nextServiceDue.slice(0, 10) : '',\r\n        status: equipment.status || 'In Service',\r\n        assignedTechnician: equipment.assignedTechnician || '',\r\n        maintenanceNotes: equipment.maintenanceNotes || '',\r\n      });\r\n    }\r\n  }, [equipment]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...form,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/equipments/${equipment.id}`, data);\r\n      if (onSuccess) onSuccess();\r\n      if (onClose) onClose();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Edit Equipment Maintenance</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField\r\n            select\r\n            label=\"Clinic\"\r\n            name=\"clinicId\"\r\n            value={form.clinicId}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          >\r\n            {clinics.map(c => (\r\n              <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Equipment Name\"\r\n            name=\"equipmentName\"\r\n            value={form.equipmentName}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Model Number\"\r\n            name=\"modelNumber\"\r\n            value={form.modelNumber}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Manufacturer\"\r\n            name=\"manufacturer\"\r\n            value={form.manufacturer}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Purchase Date\"\r\n            name=\"purchaseDate\"\r\n            type=\"date\"\r\n            value={form.purchaseDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Last Service Date\"\r\n            name=\"lastServiceDate\"\r\n            type=\"date\"\r\n            value={form.lastServiceDate}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            label=\"Next Service Due\"\r\n            name=\"nextServiceDue\"\r\n            type=\"date\"\r\n            value={form.nextServiceDue}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Status\"\r\n            name=\"status\"\r\n            value={form.status}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {statuses.map(s => (\r\n              <MenuItem key={s} value={s}>{s}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Assigned Technician\"\r\n            name=\"assignedTechnician\"\r\n            value={form.assignedTechnician}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {technicians.map(t => (\r\n              <MenuItem key={t.id} value={t.id}>{t.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Maintenance Notes\"\r\n            name=\"maintenanceNotes\"\r\n            value={form.maintenanceNotes}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n              {loading ? 'Saving...' : 'Save Changes'}\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={onClose} disabled={loading}>\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditEquipmentMaintenance;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  DataGrid, GridToolbar\r\n} from '@mui/x-data-grid';\r\nimport {\r\n  LinearProgress, IconButton, Menu, MenuItem, Chip, Button, Dialog, DialogTitle, DialogContent, DialogActions,\r\n  Drawer, TextField, Select, InputLabel, FormControl, Box, Snackbar, Alert, Tooltip, useMediaQuery,\r\n  Typography\r\n} from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\r\nimport QrCodeIcon from '@mui/icons-material/QrCode';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport UploadIcon from '@mui/icons-material/Upload';\r\nimport AssignmentIndIcon from '@mui/icons-material/AssignmentInd';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddEquipmentMaintenance from './AddEquipmentMaintenance';\r\nimport EditEquipmentMaintenance from './EditEquipmentMaintenance';\r\n\r\nconst statusColors = {\r\n  'In Service': 'success',\r\n  'Out of Service': 'error',\r\n  'Maintenance Due': 'warning',\r\n  'In Maintenance': 'info',\r\n  'Retired': 'default',\r\n};\r\n\r\nconst EquipmentMaintenance = () => {\r\n  const [maintenanceData, setMaintenanceData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Feature states\r\n  const [scheduleDialogOpen, setScheduleDialogOpen] = useState(false);\r\n  const [historyDrawerOpen, setHistoryDrawerOpen] = useState(false);\r\n  const [selectedHistory, setSelectedHistory] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState('');\r\n  const [filterTechnician, setFilterTechnician] = useState('');\r\n  const [filterClinic, setFilterClinic] = useState('');\r\n  const [bulkSelection, setBulkSelection] = useState([]);\r\n  const [assignDialogOpen, setAssignDialogOpen] = useState(false);\r\n  const [fileDialogOpen, setFileDialogOpen] = useState(false);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n  const [qrDialogOpen, setQrDialogOpen] = useState(false);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [editEquipment, setEditEquipment] = useState(null);\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\r\n  const [viewEquipment, setViewEquipment] = useState(null);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [maintenanceDialogOpen, setMaintenanceDialogOpen] = useState(false);\r\n  const [selectedEquipment, setSelectedEquipment] = useState(null);\r\n  const [maintenanceDate, setMaintenanceDate] = useState('');\r\n  const [maintenanceType, setMaintenanceType] = useState('');\r\n  const [maintenanceNotes, setMaintenanceNotes] = useState('');\r\n  const isMobile = useMediaQuery('(max-width:600px)');\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // Fetch clinics for displaying full name\r\n    axios.get(`${BASE_URL}/clinics`)\r\n      .then(res => setClinics(res.data))\r\n      .catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/equipments`)\r\n      .then((res) => setMaintenanceData(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const getClinicName = (id) => {\r\n    const c = clinics.find(cl => cl.id === id);\r\n    return c ? c.name : id;\r\n  };\r\n\r\n  // --- Actions ---\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditEquipment(actionRow);\r\n    setEditDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!actionRow) return;\r\n    if (!window.confirm(`Are you sure you want to delete equipment \"${actionRow.equipmentName}\"?`)) {\r\n      handleActionClose();\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      await axios.delete(`${BASE_URL}/equipments/${actionRow.id}`);\r\n      setNotification({ open: true, message: 'Equipment deleted successfully.', severity: 'success' });\r\n      fetchData();\r\n    } catch (err) {\r\n      setNotification({ open: true, message: 'Failed to delete equipment.', severity: 'error' });\r\n    } finally {\r\n      setLoading(false);\r\n      handleActionClose();\r\n    }\r\n  };\r\n\r\n  const handleViewHistory = () => {\r\n    setSelectedHistory(actionRow.maintenanceHistory || []);\r\n    setHistoryDrawerOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleScheduleMaintenance = () => {\r\n    setScheduleDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleAssignTechnician = () => {\r\n    setAssignDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleFileDialog = () => {\r\n    setFileDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleQrDialog = () => {\r\n    setQrDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleAddDialog = () => {\r\n    setAddDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleView = () => {\r\n    setViewEquipment(actionRow);\r\n    setViewDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  // --- Bulk Actions ---\r\n  const handleBulkDelete = () => {\r\n    setNotification({ open: true, message: `Deleted ${bulkSelection.length} items`, severity: 'success' });\r\n    // Implement backend call\r\n  };\r\n\r\n  const handleBulkStatusUpdate = (status) => {\r\n    setNotification({ open: true, message: `Updated status for ${bulkSelection.length} items`, severity: 'success' });\r\n    // Implement backend call\r\n  };\r\n\r\n  // --- Export/Import ---\r\n  const handleExport = () => {\r\n    setNotification({ open: true, message: 'Exported equipment data (CSV/Excel)', severity: 'success' });\r\n    // Implement export logic\r\n  };\r\n\r\n  const handleImport = (e) => {\r\n    setNotification({ open: true, message: 'Imported equipment data', severity: 'success' });\r\n    // Implement import logic\r\n  };\r\n\r\n  // --- Add Maintenance ---\r\n  const maintenanceTypes = [\r\n    'Routine Check',\r\n    'Repair',\r\n    'Calibration',\r\n    'Cleaning',\r\n    'Software Update',\r\n    'Other'\r\n  ];\r\n\r\n  const handleAddMaintenance = async () => {\r\n    if (!selectedEquipment) return;\r\n    setLoading(true);\r\n    try {\r\n      const newHistory = [\r\n        ...(selectedEquipment.maintenanceHistory || []),\r\n        {\r\n          date: maintenanceDate,\r\n          type: maintenanceType,\r\n          notes: maintenanceNotes\r\n        }\r\n      ];\r\n      await axios.put(`${BASE_URL}/equipments/${selectedEquipment.id}`, {\r\n        ...selectedEquipment,\r\n        maintenanceHistory: newHistory,\r\n        status: 'In Maintenance' // <-- Set status to \"In Maintenance\"\r\n      });\r\n      setNotification({ open: true, message: 'Maintenance record added.', severity: 'success' });\r\n      fetchData();\r\n    } catch (err) {\r\n      setNotification({ open: true, message: 'Failed to add maintenance record.', severity: 'error' });\r\n    } finally {\r\n      setLoading(false);\r\n      setMaintenanceDialogOpen(false);\r\n      setMaintenanceDate('');\r\n      setMaintenanceType('');\r\n      setMaintenanceNotes('');\r\n    }\r\n  };\r\n\r\n  const handleAddMaintenanceDialog = () => {\r\n    setSelectedEquipment(actionRow);\r\n    setMaintenanceDialogOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  // --- Search/Filter ---\r\n  const filteredData = maintenanceData.filter(row =>\r\n    (!search || row.equipmentName?.toLowerCase().includes(search.toLowerCase()))\r\n    && (!filterStatus || row.status === filterStatus)\r\n    && (!filterTechnician || row.assignedTechnician === filterTechnician)\r\n    && (!filterClinic || row.clinicId === filterClinic)\r\n  );\r\n\r\n  // --- Status/Date Alerts ---\r\n  const isOverdue = (row) => {\r\n    if (!row.nextServiceDue) return false;\r\n    return new Date(row.nextServiceDue) < new Date() && row.status !== 'Retired';\r\n  };\r\n\r\n  // --- Columns ---\r\n  const columns = [\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: isMobile ? 120 : 230,\r\n      renderCell: (params) => getClinicName(params.value)\r\n    },\r\n    { field: 'equipmentName', headerName: 'Equipment', width: isMobile ? 100 : 180 },\r\n    { field: 'modelNumber', headerName: 'Model #', width: isMobile ? 80 : 130 },\r\n    { field: 'manufacturer', headerName: 'Manufacturer', width: isMobile ? 90 : 150 },\r\n    {\r\n      field: 'purchaseDate',\r\n      headerName: 'Purchased On',\r\n      width: isMobile ? 90 : 140,\r\n      renderCell: (params) => dateChip(params.value, 'info')\r\n    },\r\n    {\r\n      field: 'lastServiceDate',\r\n      headerName: 'Last Serviced',\r\n      width: isMobile ? 90 : 140,\r\n      renderCell: (params) => dateChip(params.value, 'success')\r\n    },\r\n    {\r\n      field: 'nextServiceDue',\r\n      headerName: 'Next Service Due',\r\n      width: isMobile ? 100 : 150,\r\n      renderCell: (params) => (\r\n        <Tooltip title={isOverdue(params.row) ? 'Overdue!' : ''}>\r\n          <span>\r\n            {dateChip(params.value, isOverdue(params.row) ? 'error' : 'warning')}\r\n            {isOverdue(params.row) && <Chip label=\"Overdue\" color=\"error\" size=\"small\" sx={{ ml: 1 }} />}\r\n          </span>\r\n        </Tooltip>\r\n      )\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: isMobile ? 90 : 140,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={statusColors[params.value] || 'default'}\r\n          size=\"small\"\r\n          variant={isOverdue(params.row) ? 'filled' : 'outlined'}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: isMobile ? 60 : 120,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"action-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleActionClick(event, params.row)}\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  function dateChip(value, color = 'default') {\r\n    return value ? (\r\n      <Chip\r\n        label={new Date(value).toLocaleDateString()}\r\n        color={color}\r\n        size=\"small\"\r\n        variant=\"outlined\"\r\n      />\r\n    ) : '';\r\n  }\r\n\r\n  // --- Responsive Box ---\r\n  const containerSx = isMobile\r\n    ? { p: 1, width: '100vw', maxWidth: '100vw', bgcolor: '#fff' } // <-- add bgcolor\r\n    : { p: 3, maxWidth: 1200, mx: 'auto', bgcolor: '#fff' };       // <-- add bgcolor\r\n\r\n  return (\r\n    <Box sx={containerSx}>\r\n      <div className=\"card-header\" style={{ marginBottom: 24 }}>\r\n        <h4><i className=\"fas fa-tools\"></i> Equipment Maintenance</h4>\r\n      </div>\r\n      <Box\r\n        sx={{\r\n          mb: 2,\r\n          mt: 2, // Add margin top between title and filters\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          gap: 2,\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <TextField\r\n          label=\"Search Equipment\"\r\n          size=\"small\"\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n          sx={{ minWidth: 180 }}\r\n        />\r\n        <FormControl size=\"small\" sx={{ minWidth: 120 }}>\r\n          <InputLabel>Status</InputLabel>\r\n          <Select\r\n            value={filterStatus}\r\n            label=\"Status\"\r\n            onChange={e => setFilterStatus(e.target.value)}\r\n          >\r\n            <MenuItem value=\"\">All</MenuItem>\r\n            {Object.keys(statusColors).map(s => (\r\n              <MenuItem key={s} value={s}>{s}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl size=\"small\" sx={{ minWidth: 120 }}>\r\n          <InputLabel>Technician</InputLabel>\r\n          <Select\r\n            value={filterTechnician}\r\n            label=\"Technician\"\r\n            onChange={e => setFilterTechnician(e.target.value)}\r\n          >\r\n            <MenuItem value=\"\">All</MenuItem>\r\n            {/* {technicians.map(t => (\r\n              <MenuItem key={t.id} value={t.id}>{t.name}</MenuItem>\r\n            ))} */}\r\n          </Select>\r\n        </FormControl>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          startIcon={<DownloadIcon />}\r\n          sx={{ minWidth: 170, height: 40, fontWeight: 600 }}\r\n          onClick={handleExport}\r\n        >\r\n          Export\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ minWidth: 170, height: 40, fontWeight: 600 }}\r\n          onClick={handleBulkDelete}\r\n          disabled={bulkSelection.length === 0}\r\n        >\r\n          Delete Selected\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ minWidth: 170, height: 40, fontWeight: 600 }}\r\n          onClick={() => handleBulkStatusUpdate('Under Maintenance')}\r\n          disabled={bulkSelection.length === 0}\r\n        >\r\n          Mark as In Maintenance\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ minWidth: 170, height: 40, fontWeight: 600 }}\r\n          onClick={() => setAddDialogOpen(true)}\r\n        >\r\n          <i className=\"fas fa-plus\" style={{ marginRight: 8 }}></i> Create Equipment\r\n        </Button>\r\n      </Box>\r\n      <div className=\"card-body\">\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: isMobile ? 400 : 600, width: '100%' }}>\r\n            <DataGrid\r\n              rows={filteredData}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={isMobile ? 5 : 10}\r\n              rowsPerPageOptions={[5, 10, 20]}\r\n              checkboxSelection\r\n              components={{ Toolbar: GridToolbar }}\r\n              onSelectionModelChange={setBulkSelection}\r\n              sx={{\r\n                '& .MuiDataGrid-row': {\r\n                  bgcolor: (theme) => theme.palette.background.paper,\r\n                },\r\n                '& .MuiDataGrid-row.Mui-selected': {\r\n                  bgcolor: (theme) => theme.palette.action.selected,\r\n                },\r\n              }}\r\n            />\r\n            <Menu\r\n              id=\"action-menu\"\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleEdit}>Edit</MenuItem>\r\n              <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n              <MenuItem onClick={handleView}>View</MenuItem>\r\n              <MenuItem onClick={handleScheduleMaintenance}>Schedule Maintenance</MenuItem>\r\n              <MenuItem onClick={handleAddMaintenanceDialog}>Add Maintenance</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Schedule Maintenance Dialog */}\r\n      <Dialog open={scheduleDialogOpen} onClose={() => setScheduleDialogOpen(false)} maxWidth=\"xs\" fullWidth>\r\n        <DialogTitle>Schedule Maintenance</DialogTitle>\r\n        <DialogContent>\r\n          <TextField label=\"Date\" type=\"date\" fullWidth margin=\"normal\" InputLabelProps={{ shrink: true }} />\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Technician</InputLabel>\r\n            <Select label=\"Technician\">\r\n              {/* {technicians.map(t => (\r\n                <MenuItem key={t.id} value={t.id}>{t.name}</MenuItem>\r\n              ))} */}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField label=\"Notes\" fullWidth margin=\"normal\" multiline rows={2} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setScheduleDialogOpen(false)}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={() => { setScheduleDialogOpen(false); setNotification({ open: true, message: 'Maintenance scheduled', severity: 'success' }); }}>Schedule</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Maintenance History Drawer */}\r\n      <Drawer anchor=\"right\" open={historyDrawerOpen} onClose={() => setHistoryDrawerOpen(false)}>\r\n        <Box sx={{ width: isMobile ? 280 : 400, p: 2 }}>\r\n          <Typography variant=\"h6\" gutterBottom>Maintenance History</Typography>\r\n          {selectedHistory.length === 0 ? (\r\n            <Typography>No history available.</Typography>\r\n          ) : (\r\n            selectedHistory.map((h, idx) => (\r\n              <Box key={idx} sx={{ mb: 2, p: 1, border: '1px solid #eee', borderRadius: 1 }}>\r\n                <Typography variant=\"subtitle2\">{h.date ? new Date(h.date).toLocaleDateString() : '-'}</Typography>\r\n                <Typography variant=\"body2\">Technician: {h.technician || '-'}</Typography>\r\n                <Typography variant=\"body2\">Notes: {h.notes || '-'}</Typography>\r\n              </Box>\r\n            ))\r\n          )}\r\n        </Box>\r\n      </Drawer>\r\n\r\n      {/* Assign Technician Dialog */}\r\n      <Dialog open={assignDialogOpen} onClose={() => setAssignDialogOpen(false)} maxWidth=\"xs\" fullWidth>\r\n        <DialogTitle>Assign Technician</DialogTitle>\r\n        <DialogContent>\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Technician</InputLabel>\r\n            <Select label=\"Technician\">\r\n              {/* {technicians.map(t => (\r\n                <MenuItem key={t.id} value={t.id}>{t.name}</MenuItem>\r\n              ))} */}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setAssignDialogOpen(false)}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={() => { setAssignDialogOpen(false); setNotification({ open: true, message: 'Technician assigned', severity: 'success' }); }}>Assign</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* File Attachment Dialog */}\r\n      <Dialog open={fileDialogOpen} onClose={() => setFileDialogOpen(false)} maxWidth=\"xs\" fullWidth>\r\n        <DialogTitle>Attach File</DialogTitle>\r\n        <DialogContent>\r\n          <Button variant=\"contained\" component=\"label\" startIcon={<UploadFileIcon />}>\r\n            Upload File\r\n            <input type=\"file\" hidden />\r\n          </Button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setFileDialogOpen(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* QR Code Dialog */}\r\n      <Dialog open={qrDialogOpen} onClose={() => setQrDialogOpen(false)} maxWidth=\"xs\" fullWidth>\r\n        <DialogTitle>Equipment QR Code</DialogTitle>\r\n        <DialogContent>\r\n          {/* Replace with real QR code */}\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: 120 }}>\r\n            <QrCodeIcon sx={{ fontSize: 80 }} />\r\n          </Box>\r\n          <Typography align=\"center\" variant=\"caption\">Scan to identify equipment</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setQrDialogOpen(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Add Equipment Maintenance Dialog */}\r\n      <AddEquipmentMaintenance\r\n        open={addDialogOpen}\r\n        onClose={() => setAddDialogOpen(false)}\r\n        technicians={[]}\r\n        clinics={[]} // Pass your clinics array here\r\n        onSuccess={fetchData}\r\n      />\r\n\r\n      {/* Edit Equipment Dialog */}\r\n      <EditEquipmentMaintenance\r\n        open={editDialogOpen}\r\n        onClose={() => setEditDialogOpen(false)}\r\n        equipment={editEquipment}\r\n        technicians={[]}\r\n        clinics={[]} // Pass your clinics array here\r\n        onSuccess={fetchData}\r\n      />\r\n\r\n      {/* View Equipment Dialog */}\r\n      <Dialog open={viewDialogOpen} onClose={() => setViewDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <i className=\"fas fa-tools\" style={{ color: '#1976d2', fontSize: 24 }} />\r\n            <span>Equipment Details</span>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {viewEquipment ? (\r\n            <Box sx={{\r\n              display: 'flex',\r\n              flexDirection: { xs: 'column', md: 'row' },\r\n              gap: 4,\r\n              py: 2\r\n            }}>\r\n              {/* Left: Main Info */}\r\n              <Box sx={{ flex: 1, minWidth: 260 }}>\r\n                <Typography variant=\"h6\" sx={{ color: '#1976d2', mb: 2 }}>\r\n                  {viewEquipment.equipmentName}\r\n                </Typography>\r\n                <Box component=\"ul\" sx={{ listStyle: 'none', p: 0, m: 0 }}>\r\n                  <li>\r\n                    <b>Clinic:</b> {getClinicName(viewEquipment.clinicId)}\r\n                  </li>\r\n                  <li>\r\n                    <b>Model Number:</b> {viewEquipment.modelNumber || <span style={{ color: '#888' }}>-</span>}\r\n                  </li>\r\n                  <li>\r\n                    <b>Manufacturer:</b> {viewEquipment.manufacturer || <span style={{ color: '#888' }}>-</span>}\r\n                  </li>\r\n                  <li>\r\n                    <b>Purchase Date:</b> {viewEquipment.purchaseDate ? new Date(viewEquipment.purchaseDate).toLocaleDateString() : <span style={{ color: '#888' }}>-</span>}\r\n                  </li>\r\n                  <li>\r\n                    <b>Last Service Date:</b> {viewEquipment.lastServiceDate ? new Date(viewEquipment.lastServiceDate).toLocaleDateString() : <span style={{ color: '#888' }}>-</span>}\r\n                  </li>\r\n                  <li>\r\n                    <b>Next Service Due:</b> {viewEquipment.nextServiceDue ? new Date(viewEquipment.nextServiceDue).toLocaleDateString() : <span style={{ color: '#888' }}>-</span>}\r\n                  </li>\r\n                  <li>\r\n                    <b>Status:</b>{' '}\r\n                    <Chip\r\n                      label={viewEquipment.status}\r\n                      color={statusColors[viewEquipment.status] || 'default'}\r\n                      size=\"small\"\r\n                      sx={{ fontWeight: 600 }}\r\n                    />\r\n                  </li>\r\n                </Box>\r\n              </Box>\r\n              {/* Right: Visual/Extra Info */}\r\n              <Box sx={{\r\n                flex: 1,\r\n                minWidth: 260,\r\n                bgcolor: '#f5faff',\r\n                borderRadius: 2,\r\n                p: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: 1,\r\n                boxShadow: 1\r\n              }}>\r\n                <Typography variant=\"subtitle1\" sx={{ color: '#1976d2', mb: 1 }}>\r\n                  Additional Info\r\n                </Typography>\r\n                <Box>\r\n                  <b>Assigned Technician:</b> {viewEquipment.assignedTechnician || <span style={{ color: '#888' }}>-</span>}\r\n                </Box>\r\n                <Box>\r\n                  <b>Notes:</b>\r\n                  <Typography variant=\"body2\" sx={{ color: '#444', mt: 0.5 }}>\r\n                    {viewEquipment.maintenanceNotes || <span style={{ color: '#888' }}>No notes.</span>}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          ) : (\r\n            <Typography>No equipment selected.</Typography>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setViewDialogOpen(false)} color=\"secondary\" variant=\"outlined\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Add Maintenance Dialog */}\r\n      <Dialog open={maintenanceDialogOpen} onClose={() => setMaintenanceDialogOpen(false)} maxWidth=\"xs\" fullWidth>\r\n        <DialogTitle>Add Maintenance Record</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            label=\"Date\"\r\n            type=\"date\"\r\n            value={maintenanceDate}\r\n            onChange={e => setMaintenanceDate(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <FormControl fullWidth margin=\"normal\">\r\n            <InputLabel>Type</InputLabel>\r\n            <Select\r\n              value={maintenanceType}\r\n              label=\"Type\"\r\n              onChange={e => setMaintenanceType(e.target.value)}\r\n            >\r\n              {maintenanceTypes.map(type => (\r\n                <MenuItem key={type} value={type}>{type}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            label=\"Notes\"\r\n            value={maintenanceNotes}\r\n            onChange={e => setMaintenanceNotes(e.target.value)}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            multiline\r\n            rows={2}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setMaintenanceDialogOpen(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={handleAddMaintenance}\r\n            disabled={!maintenanceDate || !maintenanceType}\r\n            sx={{ fontWeight: 600, minWidth: 100 }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Snackbar Notifications */}\r\n      <Snackbar\r\n        open={notification.open}\r\n        autoHideDuration={3000}\r\n        onClose={() => setNotification({ ...notification, open: false })}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={() => setNotification({ ...notification, open: false })} severity={notification.severity} sx={{ width: '100%' }}>\r\n          {notification.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EquipmentMaintenance;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, MenuItem, Stack, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statusOptions = ['Active', 'Expired', 'Pending'];\r\n\r\nconst AddInsurance = ({ open, onClose, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    providerName: '',\r\n    policyNumber: '',\r\n    coverageDetails: {\r\n      maxAnnualCoverage: '',\r\n      treatmentCoverage: '',\r\n      medicationCoverage: '',\r\n      consultationCoverage: ''\r\n    },\r\n    validFrom: '',\r\n    validUntil: '',\r\n    status: 'Active'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    if (name in form.coverageDetails) {\r\n      setForm(f => ({\r\n        ...f,\r\n        coverageDetails: { ...f.coverageDetails, [name]: value }\r\n      }));\r\n    } else {\r\n      setForm(f => ({ ...f, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      ...form,\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      coverageDetails: {\r\n        maxAnnualCoverage: Number(form.coverageDetails.maxAnnualCoverage),\r\n        treatmentCoverage: Number(form.coverageDetails.treatmentCoverage),\r\n        medicationCoverage: Number(form.coverageDetails.medicationCoverage),\r\n        consultationCoverage: Number(form.coverageDetails.consultationCoverage)\r\n      },\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/insurances`, data);\r\n      if (onSuccess) onSuccess();\r\n      if (onClose) onClose();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Add Insurance Policy</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <TextField\r\n            label=\"Patient ID\"\r\n            name=\"patientId\"\r\n            value={form.patientId}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Provider Name\"\r\n            name=\"providerName\"\r\n            value={form.providerName}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Policy Number\"\r\n            name=\"policyNumber\"\r\n            value={form.policyNumber}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>Coverage Details</Typography>\r\n          <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n            <TextField\r\n              label=\"Max Annual Coverage\"\r\n              name=\"maxAnnualCoverage\"\r\n              type=\"number\"\r\n              value={form.coverageDetails.maxAnnualCoverage}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Treatment (%)\"\r\n              name=\"treatmentCoverage\"\r\n              type=\"number\"\r\n              value={form.coverageDetails.treatmentCoverage}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Medication (%)\"\r\n              name=\"medicationCoverage\"\r\n              type=\"number\"\r\n              value={form.coverageDetails.medicationCoverage}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Consultation (%)\"\r\n              name=\"consultationCoverage\"\r\n              type=\"number\"\r\n              value={form.coverageDetails.consultationCoverage}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </Stack>\r\n          <TextField\r\n            label=\"Valid From\"\r\n            name=\"validFrom\"\r\n            type=\"date\"\r\n            value={form.validFrom}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            label=\"Valid Until\"\r\n            name=\"validUntil\"\r\n            type=\"date\"\r\n            value={form.validUntil}\r\n            onChange={handleChange}\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Status\"\r\n            name=\"status\"\r\n            value={form.status}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          >\r\n            {statusOptions.map(opt => (\r\n              <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n              {loading ? 'Saving...' : 'Create Insurance'}\r\n            </Button>\r\n            <Button variant=\"outlined\" onClick={onClose} disabled={loading}>\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddInsurance;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport {\r\n  LinearProgress, Chip, IconButton, Menu, MenuItem, Box, Typography, Button,\r\n  Dialog, DialogTitle, DialogContent, Paper, Stack, Tooltip, Divider\r\n} from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddInsurance from './AddInsurance';\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst InsuranceInfo = () => {\r\n  const [insuranceData, setInsuranceData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n\r\n  // For actions menu\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n  const [coverageModalOpen, setCoverageModalOpen] = useState(false);\r\n  const [coverageModalData, setCoverageModalData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/insurances`)\r\n      .then((res) => setInsuranceData(res.data))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  // Feature: Verify Coverage\r\n  const verifyCoverage = async (insuranceId, serviceType) => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/insurances/${insuranceId}/coverage/${serviceType}`);\r\n      setCoverageModalData({\r\n        title: `Coverage for ${serviceType}`,\r\n        content: res.data && typeof res.data.coverage !== 'undefined'\r\n          ? `${res.data.coverage}%`\r\n          : 'Coverage information not available.'\r\n      });\r\n      setCoverageModalOpen(true);\r\n    } catch (err) {\r\n      setCoverageModalData({\r\n        title: 'Error',\r\n        content: 'Failed to verify coverage.'\r\n      });\r\n      setCoverageModalOpen(true);\r\n    }\r\n  };\r\n\r\n  // Feature: Generate Claim\r\n  const generateClaim = async (insuranceId, claimDetails) => {\r\n    try {\r\n      await axios.post(`${BASE_URL}/insurances/${insuranceId}/claims`, claimDetails);\r\n      setCoverageModalData({\r\n        title: 'Claim',\r\n        content: 'Claim generated successfully!'\r\n      });\r\n      setCoverageModalOpen(true);\r\n    } catch (err) {\r\n      setCoverageModalData({\r\n        title: 'Error',\r\n        content: 'Failed to generate claim.'\r\n      });\r\n      setCoverageModalOpen(true);\r\n    }\r\n  };\r\n\r\n  // Feature: View Coverage (all details)\r\n  const viewCoverage = (coverageDetails) => {\r\n    if (!coverageDetails) {\r\n      setCoverageModalData({\r\n        title: 'Coverage Details',\r\n        content: 'No coverage details available.'\r\n      });\r\n    } else {\r\n      let content = '';\r\n      if (typeof coverageDetails === 'object') {\r\n        Object.entries(coverageDetails).forEach(([key, value]) => {\r\n          const label = key\r\n            .replace(/([A-Z])/g, ' $1')\r\n            .replace(/^./, str => str.toUpperCase())\r\n            .replace('Coverage', ' Coverage');\r\n          content += `${label}: ${value}%\\n`;\r\n        });\r\n      } else {\r\n        content = 'No coverage details available.';\r\n      }\r\n      setCoverageModalData({\r\n        title: 'Coverage Details',\r\n        content: content.trim()\r\n      });\r\n    }\r\n    setCoverageModalOpen(true);\r\n  };\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  // Widget summary data\r\n  const totalInsurances = insuranceData.length;\r\n  const activeInsurances = insuranceData.filter(i => i.status === 'Active').length;\r\n  const expiredInsurances = insuranceData.filter(i => i.status === 'Expired').length;\r\n  const providers = insuranceData.reduce((acc, i) => {\r\n    acc[i.providerName] = (acc[i.providerName] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(providers),\r\n    datasets: [{\r\n      data: Object.values(providers),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(providers),\r\n    datasets: [{\r\n      label: 'Policies per Provider',\r\n      data: Object.values(providers),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(providers),\r\n    datasets: [\r\n      {\r\n        label: 'Active',\r\n        data: Object.keys(providers).map(provider => insuranceData.filter(i => i.providerName === provider && i.status === 'Active').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Expired',\r\n        data: Object.keys(providers).map(provider => insuranceData.filter(i => i.providerName === provider && i.status === 'Expired').length),\r\n        borderColor: '#e53935',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'providerName', headerName: 'Provider', width: 160 },\r\n    { field: 'policyNumber', headerName: 'Policy No.', width: 180 },\r\n    {\r\n      field: 'validFrom',\r\n      headerName: 'Valid From',\r\n      width: 120,\r\n      valueFormatter: ({ value }) => new Date(value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'validUntil',\r\n      headerName: 'Valid Until',\r\n      width: 120,\r\n      valueFormatter: ({ value }) => new Date(value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: ({ value }) => (\r\n        <Chip\r\n          label={value}\r\n          color={value === 'Active' ? 'success' : 'default'}\r\n          size=\"small\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      renderCell: (params) => (\r\n        <Tooltip title=\"Actions\">\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n            color=\"primary\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )\r\n    }\r\n  ];\r\n\r\n  // Enhanced View Coverage Modal\r\n  const CoverageModalContent = ({ coverageDetails, insurance }) => {\r\n    if (!coverageDetails || typeof coverageDetails !== 'object') {\r\n      return (\r\n        <Box sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography color=\"error\" fontWeight={600} sx={{ mb: 2 }}>\r\n            <i className=\"fas fa-exclamation-circle\" style={{ marginRight: 8 }} />\r\n            No coverage details available.\r\n          </Typography>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    // Prepare main coverage chips\r\n    const mainChips = [\r\n      {\r\n        label: `Consultation: ${coverageDetails.consultationCoverage ?? 'N/A'}%`,\r\n        color: 'primary',\r\n        icon: <i className=\"fas fa-user-md\" />\r\n      },\r\n      {\r\n        label: `Treatment: ${coverageDetails.treatmentCoverage ?? 'N/A'}%`,\r\n        color: 'success',\r\n        icon: <i className=\"fas fa-stethoscope\" />\r\n      },\r\n      {\r\n        label: `Medication: ${coverageDetails.medicationCoverage ?? 'N/A'}%`,\r\n        color: 'info',\r\n        icon: <i className=\"fas fa-pills\" />\r\n      }\r\n    ];\r\n\r\n    // Prepare additional info\r\n    const additional = Object.entries(coverageDetails).filter(\r\n      ([key]) => !['consultationCoverage', 'treatmentCoverage', 'medicationCoverage'].includes(key)\r\n    );\r\n\r\n    return (\r\n      <Box sx={{\r\n        p: { xs: 1, sm: 3 },\r\n        bgcolor: '#fafdff',\r\n        borderRadius: 2,\r\n        boxShadow: 1,\r\n        minHeight: 200\r\n      }}>\r\n        <Typography variant=\"h5\" color=\"primary\" fontWeight={700} gutterBottom sx={{ mb: 2 }}>\r\n          <i className=\"fas fa-eye\" style={{ marginRight: 10 }} />\r\n          Coverage Details\r\n        </Typography>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n          <Chip label={`Provider: ${insurance?.providerName || 'N/A'}`} color=\"primary\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n          <Chip label={`Policy No: ${insurance?.policyNumber || 'N/A'}`} color=\"info\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n          <Chip label={`Patient: ${insurance?.patientFullName || 'N/A'}`} color=\"success\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n          <Chip label={`Status: ${insurance?.status || 'N/A'}`} color={insurance?.status === 'Active' ? 'success' : 'default'} sx={{ fontWeight: 600, fontSize: 15 }} />\r\n        </Stack>\r\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n          <Chip label={`Valid From: ${insurance?.validFrom ? new Date(insurance.validFrom).toLocaleDateString() : 'N/A'}`} color=\"default\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n          <Chip label={`Valid Until: ${insurance?.validUntil ? new Date(insurance.validUntil).toLocaleDateString() : 'N/A'}`} color=\"default\" sx={{ fontWeight: 600, fontSize: 15 }} />\r\n        </Stack>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Typography variant=\"subtitle1\" fontWeight={600} sx={{ mb: 1 }}>\r\n          Coverage Percentages:\r\n        </Typography>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 2, flexWrap: 'wrap' }}>\r\n          {mainChips.map((chip) => (\r\n            <Chip\r\n              key={chip.label}\r\n              label={chip.label}\r\n              color={chip.color}\r\n              icon={chip.icon}\r\n              sx={{ fontWeight: 600, fontSize: 16, minWidth: 170, mb: 1 }}\r\n            />\r\n          ))}\r\n        </Stack>\r\n        {additional.length > 0 && (\r\n          <>\r\n            <Divider sx={{ mb: 2 }} />\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 1, fontWeight: 600 }}>\r\n              Additional Info:\r\n            </Typography>\r\n            <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n              {additional.map(([key, value]) => (\r\n                <Chip\r\n                  key={key}\r\n                  label={`${key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}: ${value}`}\r\n                  color=\"warning\"\r\n                  variant=\"outlined\"\r\n                  sx={{ fontWeight: 600, fontSize: 15, mb: 1, mr: 1 }}\r\n                />\r\n              ))}\r\n            </Stack>\r\n          </>\r\n        )}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={4} sx={{ p: 3, bgcolor: '#f5f7fa', minHeight: '100vh' }}>\r\n      <Box sx={{ mb: 3 }}>\r\n        <Typography variant=\"h4\" color=\"primary\" fontWeight={700} gutterBottom>\r\n          <i className=\"fas fa-shield-alt\" style={{ marginRight: 10 }} /> Insurance Records\r\n        </Typography>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 3 }}>\r\n          <Paper sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }} elevation={2}>\r\n            <Typography variant=\"subtitle2\" color=\"primary\">Total Policies</Typography>\r\n            <Typography variant=\"h6\">{totalInsurances}</Typography>\r\n          </Paper>\r\n          <Paper sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }} elevation={2}>\r\n            <Typography variant=\"subtitle2\" color=\"success.main\">Active</Typography>\r\n            <Typography variant=\"h6\">{activeInsurances}</Typography>\r\n          </Paper>\r\n          <Paper sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center' }} elevation={2}>\r\n            <Typography variant=\"subtitle2\" color=\"error.main\">Expired</Typography>\r\n            <Typography variant=\"h6\">{expiredInsurances}</Typography>\r\n          </Paper>\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Paper sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }} elevation={1}>\r\n          <Typography variant=\"subtitle1\" align=\"center\" fontWeight={600}>Policies by Provider</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Paper>\r\n        <Paper sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }} elevation={1}>\r\n          <Typography variant=\"subtitle1\" align=\"center\" fontWeight={600}>Policies per Provider</Typography>\r\n          <Bar data={barData} />\r\n        </Paper>\r\n        <Paper sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }} elevation={1}>\r\n          <Typography variant=\"subtitle1\" align=\"center\" fontWeight={600}>Status Trends by Provider</Typography>\r\n          <Line data={lineData} />\r\n        </Paper>\r\n      </Box>\r\n\r\n      <Box className=\"card-body\" sx={{ mt: 2 }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, fontWeight: 600, boxShadow: 2 }}\r\n          onClick={() => setAddDialogOpen(true)}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create Insurance\r\n        </Button>\r\n\r\n        {loading ? (\r\n          <LinearProgress sx={{ my: 3 }} />\r\n        ) : (\r\n          <Box sx={{ height: 550, width: '100%', bgcolor: '#fff', borderRadius: 2, boxShadow: 1 }}>\r\n            <DataGrid\r\n              rows={insuranceData}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5, 10]}\r\n              checkboxSelection\r\n              components={{ Toolbar: GridToolbar }}\r\n              sx={{\r\n                border: 0,\r\n                '& .MuiDataGrid-columnHeaders': { bgcolor: '#f5f5f5', fontWeight: 700 },\r\n                '& .MuiDataGrid-row': { bgcolor: '#f9f9f9' },\r\n                '& .MuiDataGrid-cell': { fontSize: 15 }\r\n              }}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={() => {\r\n                viewCoverage(actionRow.coverageDetails);\r\n                handleActionClose();\r\n              }}>\r\n                <i className=\"fas fa-eye\" style={{ marginRight: 8, color: '#ffa000' }} />\r\n                View Coverage\r\n              </MenuItem>\r\n              <MenuItem onClick={() => {\r\n                setCoverageModalData({\r\n                  title: 'Policy Details',\r\n                  content: `Policy Number: ${actionRow.policyNumber}`\r\n                });\r\n                setCoverageModalOpen(true);\r\n                handleActionClose();\r\n              }}>\r\n                <i className=\"fas fa-id-card\" style={{ marginRight: 8, color: '#8e24aa' }} />\r\n                View Policy Details\r\n              </MenuItem>\r\n              <MenuItem onClick={() => {\r\n                setCoverageModalData({\r\n                  title: 'Download',\r\n                  content: `Download for policy ${actionRow.policyNumber} started.`\r\n                });\r\n                setCoverageModalOpen(true);\r\n                handleActionClose();\r\n              }}>\r\n                <i className=\"fas fa-download\" style={{ marginRight: 8, color: '#00bcd4' }} />\r\n                Download Policy PDF\r\n              </MenuItem>\r\n              <MenuItem onClick={() => {\r\n                setCoverageModalData({\r\n                  title: 'Renewal Reminder',\r\n                  content: `Send renewal reminder to ${actionRow.patientFullName}`\r\n                });\r\n                setCoverageModalOpen(true);\r\n                handleActionClose();\r\n              }}>\r\n                <i className=\"fas fa-bell\" style={{ marginRight: 8, color: '#e53935' }} />\r\n                Send Renewal Reminder\r\n              </MenuItem>\r\n            </Menu>\r\n          </Box>\r\n        )}\r\n        <Dialog open={coverageModalOpen} onClose={() => setCoverageModalOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle sx={{ fontWeight: 700 }}>{coverageModalData?.title}</DialogTitle>\r\n          <DialogContent>\r\n            {coverageModalData?.title === 'Coverage Details' && actionRow ? (\r\n              <CoverageModalContent coverageDetails={actionRow.coverageDetails} insurance={actionRow} />\r\n            ) : (\r\n              <Typography sx={{ fontSize: 16, color: '#1976d2', fontWeight: 600 }}>\r\n                {coverageModalData?.content}\r\n              </Typography>\r\n            )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Box>\r\n\r\n      <AddInsurance\r\n        open={addDialogOpen}\r\n        onClose={() => setAddDialogOpen(false)}\r\n        onSuccess={() => {\r\n          setAddDialogOpen(false);\r\n          axios.get(`${BASE_URL}/insurances`)\r\n            .then((res) => setInsuranceData(res.data));\r\n        }}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default InsuranceInfo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport {\r\n  LinearProgress,\r\n  Chip,\r\n  Typography,\r\n  Link\r\n} from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst LegalCompliance = () => {\r\n  const [records, setRecords] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/legalcompliance`)\r\n      .then((res) => setRecords(res.data))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'patientId', headerName: 'Patient ID', width: 250 },\r\n    { field: 'documentType', headerName: 'Document Type', width: 150 },\r\n    {\r\n      field: 'signedDate',\r\n      headerName: 'Signed Date',\r\n      width: 140,\r\n      valueFormatter: ({ value }) => new Date(value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'expiryDate',\r\n      headerName: 'Expiry Date',\r\n      width: 140,\r\n      valueFormatter: ({ value }) =>\r\n        value ? new Date(value).toLocaleDateString() : 'N/A'\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: ({ value }) => (\r\n        <Chip\r\n          label={value}\r\n          color={value === 'Signed' ? 'success' : 'warning'}\r\n          size=\"small\"\r\n        />\r\n      )\r\n    },\r\n    {\r\n      field: 'documentUrl',\r\n      headerName: 'View Document',\r\n      width: 180,\r\n      renderCell: ({ value }) => (\r\n        <Link href={value} target=\"_blank\" rel=\"noopener\">\r\n          View PDF\r\n        </Link>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-file-signature\"></i> Legal Compliance Documents</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 500, width: '100%' }}>\r\n            <DataGrid\r\n              rows={records}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5, 10]}\r\n              checkboxSelection\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LegalCompliance;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n\r\nconst Loyalty = () => {\r\n  const [loyaltyData, setLoyaltyData] = useState([]);\r\n  const [selectedLoyalty, setSelectedLoyalty] = useState(null);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const closeButtonAdd = useRef(null);\r\n  const closeButtonEdit = useRef(null);\r\n\r\n  const fetchLoyalty = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/loyalty`)\r\n      .then(res => {\r\n        // Parse JSON strings inside data before setting state\r\n        const parsedData = res.data.map(item => ({\r\n          ...item,\r\n          earnedFrom: JSON.parse(item.earnedFrom),\r\n          redeemedRewards: JSON.parse(item.redeemedRewards),\r\n        }));\r\n        setLoyaltyData(parsedData);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLoyalty();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchLoyalty();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const item = loyaltyData.find(i => i.id === ids[0]);\r\n      setSelectedLoyalty(item);\r\n      setSelectedId(ids[0]);\r\n    } else {\r\n      setSelectedLoyalty(null);\r\n      setSelectedId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedId && window.confirm('Are you sure you want to delete this loyalty record?')) {\r\n      axios.delete(`${BASE_URL}/loyalty/${selectedId}`).then(() => refresh());\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'patientId', headerName: 'Patient ID', width: 220 },\r\n    { field: 'points', headerName: 'Total Points', width: 120 },\r\n    {\r\n      field: 'earnedFrom',\r\n      headerName: 'Points Earned From',\r\n      width: 400,\r\n      renderCell: (params) => {\r\n        return params.value.map((entry, index) => (\r\n          <div key={index}>\r\n            {entry.activity}: {entry.pointsEarned} pts ({new Date(entry.date).toLocaleDateString()})\r\n          </div>\r\n        ));\r\n      }\r\n    },\r\n    {\r\n      field: 'redeemedRewards',\r\n      headerName: 'Redeemed Rewards',\r\n      width: 400,\r\n      renderCell: (params) => {\r\n        return params.value.length > 0 ? (\r\n          params.value.map((reward, idx) => (\r\n            <div key={idx}>\r\n              {reward.rewardName}: {reward.pointsUsed} pts ({new Date(reward.redeemedDate).toLocaleDateString()})\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <span>No rewards redeemed</span>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Created At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'updatedAt',\r\n      headerName: 'Updated At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-gift\"></i> Loyalty Points</h4>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#addLoyaltyModal\"\r\n        >\r\n          <i className=\"far fa-plus-square\"></i> Add Loyalty\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning btn-sm\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#editLoyaltyModal\"\r\n          disabled={!selectedLoyalty}\r\n        >\r\n          <i className=\"fas fa-edit\"></i> Edit\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm\"\r\n          onClick={handleDelete}\r\n          disabled={!selectedId}\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i> Remove\r\n        </button>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 480, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={loyaltyData}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Loyalty Modal */}\r\n        <div className=\"modal fade\" id=\"addLoyaltyModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Add Loyalty Points</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* <AddLoyaltyForm closeModal={() => closeButtonAdd.current.click()} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Loyalty Modal */}\r\n        <div className=\"modal fade\" id=\"editLoyaltyModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Loyalty Points</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* <EditLoyaltyForm loyalty={selectedLoyalty} closeModal={() => closeButtonEdit.current.click()} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonEdit}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loyalty;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\n\r\nconst BASE_URL = 'https://your-api-url.com'; // replace with your API base URL\r\n\r\nconst Marketing = () => {\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [selectedCampaign, setSelectedCampaign] = useState(null);\r\n  const [selectedCampaignId, setSelectedCampaignId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const closeButtonAdd = useRef(null);\r\n  const closeButtonEdit = useRef(null);\r\n\r\n  const fetchCampaigns = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/marketing`)\r\n      .then(res => setCampaigns(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCampaigns();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchCampaigns();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const campaign = campaigns.find(c => c.id === ids[0]);\r\n      setSelectedCampaign(campaign);\r\n      setSelectedCampaignId(ids[0]);\r\n    } else {\r\n      setSelectedCampaign(null);\r\n      setSelectedCampaignId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedCampaignId && window.confirm('Are you sure you want to delete this campaign?')) {\r\n      axios.delete(`${BASE_URL}/marketing/${selectedCampaignId}`)\r\n        .then(() => refresh());\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'campaignName', headerName: 'Campaign Name', width: 200 },\r\n    { field: 'campaignType', headerName: 'Type', width: 130 },\r\n    {\r\n      field: 'targetAudience',\r\n      headerName: 'Target Audience',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        const ta = params.value || {};\r\n        return `Age: ${ta.ageGroup || '-'}, Last Visit: ${ta.lastVisitDate || '-'}, Treatment: ${ta.treatmentHistory || '-'}`;\r\n      }\r\n    },\r\n    { field: 'messageTemplate', headerName: 'Message', width: 250 },\r\n    {\r\n      field: 'scheduleDate',\r\n      headerName: 'Scheduled Date',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    { field: 'status', headerName: 'Status', width: 130 },\r\n    {\r\n      field: 'performanceMetrics',\r\n      headerName: 'Performance',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        const metrics = params.value || {};\r\n        return `Open Rate: ${metrics.openRate ?? '-'}, Click-Through: ${metrics.clickThroughRate ?? '-'}, Conversion: ${metrics.conversionRate ?? '-'}`;\r\n      }\r\n    },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Created At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    },\r\n    {\r\n      field: 'updatedAt',\r\n      headerName: 'Updated At',\r\n      width: 180,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleString()\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-bullhorn\"></i> Marketing Campaigns</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success btn-sm\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#addCampaignModal\"\r\n        >\r\n          <i className=\"far fa-plus-square\"></i> Create Campaign\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning btn-sm\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#editCampaignModal\"\r\n          disabled={!selectedCampaign}\r\n        >\r\n          <i className=\"fas fa-edit\"></i> Edit\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger btn-sm\"\r\n          onClick={handleDelete}\r\n          disabled={!selectedCampaignId}\r\n        >\r\n          <i className=\"fas fa-trash-alt\"></i> Delete\r\n        </button>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 480, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={campaigns}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Campaign Modal */}\r\n        <div className=\"modal fade\" id=\"addCampaignModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Create New Campaign</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* AddMarketingForm component here */}\r\n                {/* <AddMarketingForm closeModal={() => closeButtonAdd.current.click()} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Campaign Modal */}\r\n        <div className=\"modal fade\" id=\"editCampaignModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Campaign</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* EditMarketingForm component here */}\r\n                {/* <EditMarketingForm campaign={selectedCampaign} closeModal={() => closeButtonEdit.current.click()} /> */}\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonEdit}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Marketing;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack, Box, Chip, Typography } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst roles = [\"Admin\", \"Dentist\", \"Assistant\", \"Receptionist\", \"Accountant\"];\r\nconst permissionsList = [\r\n  \"View Patients\", \"Edit Patients\", \"View Appointments\", \"Edit Appointments\",\r\n  \"View Billing\", \"Edit Billing\", \"Manage Inventory\", \"Manage Staff\"\r\n];\r\nconst daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\nconst statusOptions = [\"Active\", \"Inactive\"];\r\n\r\nconst AddStaff = ({ closeModal }) => {\r\n  const [form, setForm] = useState({\r\n    fullName: '',\r\n    role: '',\r\n    email: '',\r\n    phone: '',\r\n    shiftSchedule: {\r\n      Mon: { start: '', end: '' },\r\n      Tue: { start: '', end: '' },\r\n      Wed: { start: '', end: '' },\r\n      Thu: { start: '', end: '' },\r\n      Fri: { start: '', end: '' },\r\n      Sat: { start: '', end: '' },\r\n      Sun: { start: '', end: '' }\r\n    },\r\n    permissions: [],\r\n    status: 'Active'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleScheduleChange = (day, field, value) => {\r\n    setForm(f => ({\r\n      ...f,\r\n      shiftSchedule: {\r\n        ...f.shiftSchedule,\r\n        [day]: { ...f.shiftSchedule[day], [field]: value }\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handlePermissionToggle = perm => {\r\n    setForm(f => ({\r\n      ...f,\r\n      permissions: f.permissions.includes(perm)\r\n        ? f.permissions.filter(p => p !== perm)\r\n        : [...f.permissions, perm]\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const staffData = {\r\n      fullName: form.fullName,\r\n      role: form.role,\r\n      email: form.email,\r\n      phone: form.phone,\r\n      shiftSchedule: form.shiftSchedule,\r\n      permissions: form.permissions,\r\n      status: form.status,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/staff`, staffData);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} autoComplete=\"off\" sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Full Name\"\r\n          name=\"fullName\"\r\n          value={form.fullName}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Role\"\r\n          name=\"role\"\r\n          value={form.role}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        >\r\n          {roles.map(role => (\r\n            <MenuItem key={role} value={role}>{role}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          type=\"email\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Phone\"\r\n          name=\"phone\"\r\n          value={form.phone}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        />\r\n        <Box>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>Shift Schedule</Typography>\r\n          <Stack spacing={1}>\r\n            {daysOfWeek.map(day => (\r\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={day}>\r\n                <Typography sx={{ width: 40 }}>{day}</Typography>\r\n                <TextField\r\n                  label=\"Start\"\r\n                  type=\"time\"\r\n                  size=\"small\"\r\n                  value={form.shiftSchedule[day].start}\r\n                  onChange={e => handleScheduleChange(day, 'start', e.target.value)}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  sx={{ width: 120 }}\r\n                />\r\n                <TextField\r\n                  label=\"End\"\r\n                  type=\"time\"\r\n                  size=\"small\"\r\n                  value={form.shiftSchedule[day].end}\r\n                  onChange={e => handleScheduleChange(day, 'end', e.target.value)}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  sx={{ width: 120 }}\r\n                />\r\n              </Stack>\r\n            ))}\r\n          </Stack>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>Permissions</Typography>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n            {permissionsList.map(perm => (\r\n              <Chip\r\n                key={perm}\r\n                label={perm}\r\n                color={form.permissions.includes(perm) ? \"primary\" : \"default\"}\r\n                variant={form.permissions.includes(perm) ? \"filled\" : \"outlined\"}\r\n                onClick={() => handlePermissionToggle(perm)}\r\n                sx={{ cursor: 'pointer' }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Add Staff'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddStaff;","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Stack, Typography, Chip, Box } from '@mui/material';\r\n\r\nconst daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n\r\nconst ViewStaff = ({ staff, open, onClose }) => {\r\n  if (!staff) return null;\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>View Staff Member</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Stack spacing={2}>\r\n          <Typography><strong>Full Name:</strong> {staff.fullName}</Typography>\r\n          <Typography><strong>Role:</strong> {staff.role}</Typography>\r\n          <Typography><strong>Email:</strong> {staff.email}</Typography>\r\n          <Typography><strong>Phone:</strong> {staff.phone}</Typography>\r\n          <Typography><strong>Status:</strong> {staff.status}</Typography>\r\n          <Box>\r\n            <Typography sx={{ mb: 1 }}><strong>Shift Schedule:</strong></Typography>\r\n            <Stack spacing={0.5}>\r\n              {daysOfWeek.map(day => (\r\n                <Box key={day} sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                  <Typography sx={{ width: 40 }}>{day}</Typography>\r\n                  <Chip\r\n                    label={\r\n                      staff.shiftSchedule?.[day]?.start && staff.shiftSchedule?.[day]?.end\r\n                        ? `${staff.shiftSchedule[day].start} - ${staff.shiftSchedule[day].end}`\r\n                        : 'Off'\r\n                    }\r\n                    color={staff.shiftSchedule?.[day]?.start ? \"primary\" : \"default\"}\r\n                    size=\"small\"\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Stack>\r\n          </Box>\r\n          <Box>\r\n            <Typography sx={{ mb: 1 }}><strong>Permissions:</strong></Typography>\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n              {(staff.permissions || []).map(perm => (\r\n                <Chip key={perm} label={perm} color=\"success\" size=\"small\" />\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n        </Stack>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant=\"outlined\" color=\"primary\">Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ViewStaff;","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack, Chip, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst roles = [\"Admin\", \"Dentist\", \"Assistant\", \"Receptionist\", \"Accountant\"];\r\nconst permissionsList = [\r\n  \"View Patients\", \"Edit Patients\", \"View Appointments\", \"Edit Appointments\",\r\n  \"View Billing\", \"Edit Billing\", \"Manage Inventory\", \"Manage Staff\"\r\n];\r\nconst daysOfWeek = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\nconst statusOptions = [\"Active\", \"Inactive\", \"On Leave\"];\r\n\r\nconst EditStaff = ({ staff, closeModal }) => {\r\n  const [form, setForm] = useState({\r\n    fullName: '',\r\n    role: '',\r\n    email: '',\r\n    phone: '',\r\n    shiftSchedule: {\r\n      Mon: { start: '', end: '' },\r\n      Tue: { start: '', end: '' },\r\n      Wed: { start: '', end: '' },\r\n      Thu: { start: '', end: '' },\r\n      Fri: { start: '', end: '' },\r\n      Sat: { start: '', end: '' },\r\n      Sun: { start: '', end: '' }\r\n    },\r\n    permissions: [],\r\n    status: 'Active'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (staff) {\r\n      setForm({\r\n        fullName: staff.fullName || '',\r\n        role: staff.role || '',\r\n        email: staff.email || '',\r\n        phone: staff.phone || '',\r\n        shiftSchedule: staff.shiftSchedule || {\r\n          Mon: { start: '', end: '' },\r\n          Tue: { start: '', end: '' },\r\n          Wed: { start: '', end: '' },\r\n          Thu: { start: '', end: '' },\r\n          Fri: { start: '', end: '' },\r\n          Sat: { start: '', end: '' },\r\n          Sun: { start: '', end: '' }\r\n        },\r\n        permissions: staff.permissions || [],\r\n        status: staff.status || 'Active'\r\n      });\r\n    }\r\n  }, [staff]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleScheduleChange = (day, field, value) => {\r\n    setForm(f => ({\r\n      ...f,\r\n      shiftSchedule: {\r\n        ...f.shiftSchedule,\r\n        [day]: { ...f.shiftSchedule[day], [field]: value }\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handlePermissionToggle = perm => {\r\n    setForm(f => ({\r\n      ...f,\r\n      permissions: f.permissions.includes(perm)\r\n        ? f.permissions.filter(p => p !== perm)\r\n        : [...f.permissions, perm]\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const staffData = {\r\n      fullName: form.fullName,\r\n      role: form.role,\r\n      email: form.email,\r\n      phone: form.phone,\r\n      shiftSchedule: form.shiftSchedule,\r\n      permissions: form.permissions,\r\n      status: form.status,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/staff/${staff.id}`, staffData);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} autoComplete=\"off\" sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Full Name\"\r\n          name=\"fullName\"\r\n          value={form.fullName}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Role\"\r\n          name=\"role\"\r\n          value={form.role}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        >\r\n          {roles.map(role => (\r\n            <MenuItem key={role} value={role}>{role}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          type=\"email\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Phone\"\r\n          name=\"phone\"\r\n          value={form.phone}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        />\r\n        <Box>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>Shift Schedule</Typography>\r\n          <Stack spacing={1}>\r\n            {daysOfWeek.map(day => (\r\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\" key={day}>\r\n                <Typography sx={{ width: 40 }}>{day}</Typography>\r\n                <TextField\r\n                  label=\"Start\"\r\n                  type=\"time\"\r\n                  size=\"small\"\r\n                  value={form.shiftSchedule[day].start}\r\n                  onChange={e => handleScheduleChange(day, 'start', e.target.value)}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  sx={{ width: 120 }}\r\n                />\r\n                <TextField\r\n                  label=\"End\"\r\n                  type=\"time\"\r\n                  size=\"small\"\r\n                  value={form.shiftSchedule[day].end}\r\n                  onChange={e => handleScheduleChange(day, 'end', e.target.value)}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  sx={{ width: 120 }}\r\n                />\r\n              </Stack>\r\n            ))}\r\n          </Stack>\r\n        </Box>\r\n        <Box>\r\n          <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>Permissions</Typography>\r\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n            {permissionsList.map(perm => (\r\n              <Chip\r\n                key={perm}\r\n                label={perm}\r\n                color={form.permissions.includes(perm) ? \"primary\" : \"default\"}\r\n                variant={form.permissions.includes(perm) ? \"filled\" : \"outlined\"}\r\n                onClick={() => handlePermissionToggle(perm)}\r\n                sx={{ cursor: 'pointer' }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          required\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditStaff;","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, IconButton, Menu, MenuItem, Chip, Box, Typography, Button } from '@mui/material'; // <-- Add Chip import\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddStaff from './AddStaff';\r\nimport ViewStaff from './ViewStaff'; // Add this import at the top\r\nimport EditStaff from './EditStaff'; // Add this import at the top\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst Staff = () => {\r\n  const [staffList, setStaffList] = useState([]);\r\n  const [selectedStaff, setSelectedStaff] = useState(null);\r\n  const [selectedStaffId, setSelectedStaffId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n  const [viewOpen, setViewOpen] = useState(false); // Add this state\r\n\r\n  const closeButtonAdd = useRef(null);\r\n  const closeButtonEdit = useRef(null);\r\n\r\n  const fetchStaff = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/staff`)\r\n      .then(res => setStaffList(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStaff();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchStaff();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const staffMember = staffList.find(s => s.id === ids[0]);\r\n      setSelectedStaff(staffMember);\r\n      setSelectedStaffId(ids[0]);\r\n    } else {\r\n      setSelectedStaff(null);\r\n      setSelectedStaffId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedStaffId && window.confirm('Are you sure you want to delete this staff member?')) {\r\n      axios.delete(`${BASE_URL}/staff/${selectedStaffId}`)\r\n        .then(() => refresh());\r\n    }\r\n  };\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleActionEdit = () => {\r\n    setSelectedStaff(actionRow);\r\n    setSelectedStaffId(actionRow.id);\r\n    document.querySelector('[data-target=\"#editStaffModal\"]').click();\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionDelete = () => {\r\n    setSelectedStaff(actionRow);\r\n    setSelectedStaffId(actionRow.id);\r\n    handleDelete();\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionView = () => {\r\n    setSelectedStaff(actionRow);\r\n    setViewOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  // Widget summary data\r\n  const totalStaff = staffList.length;\r\n  const activeStaff = staffList.filter(s => s.status === 'Active').length;\r\n  const onLeaveStaff = staffList.filter(s => s.status === 'On Leave').length;\r\n  const inactiveStaff = staffList.filter(s => s.status === 'Inactive').length;\r\n\r\n  // Group by role\r\n  const roleCounts = staffList.reduce((acc, s) => {\r\n    const role = s.role || 'Other';\r\n    acc[role] = (acc[role] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(roleCounts),\r\n    datasets: [{\r\n      data: Object.values(roleCounts),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(roleCounts),\r\n    datasets: [{\r\n      label: 'Staff per Role',\r\n      data: Object.values(roleCounts),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(roleCounts),\r\n    datasets: [\r\n      {\r\n        label: 'Active',\r\n        data: Object.keys(roleCounts).map(role => staffList.filter(s => (s.role || 'Other') === role && s.status === 'Active').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'On Leave',\r\n        data: Object.keys(roleCounts).map(role => staffList.filter(s => (s.role || 'Other') === role && s.status === 'On Leave').length),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Inactive',\r\n        data: Object.keys(roleCounts).map(role => staffList.filter(s => (s.role || 'Other') === role && s.status === 'Inactive').length),\r\n        borderColor: '#e53935',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'fullName', headerName: 'Full Name', width: 200 },\r\n    { field: 'role', headerName: 'Role', width: 130 },\r\n    { field: 'email', headerName: 'Email', width: 230 },\r\n    { field: 'phone', headerName: 'Phone', width: 150 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Active'\r\n              ? 'success'\r\n              : params.value === 'Inactive'\r\n              ? 'default'\r\n              : params.value === 'On Leave'\r\n              ? 'warning'\r\n              : 'primary'\r\n          }\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-user-md\"></i> Staff</h4>\r\n      </div>\r\n\r\n      {/* Widgets row */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Staff</Typography>\r\n          <Typography variant=\"h6\">{totalStaff}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Active</Typography>\r\n          <Typography variant=\"h6\">{activeStaff}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">On Leave</Typography>\r\n          <Typography variant=\"h6\">{onLeaveStaff}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#ffebee', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"error.main\">Inactive</Typography>\r\n          <Typography variant=\"h6\">{inactiveStaff}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts row */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Staff by Role</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Staff per Role</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Status Trends by Role</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<i className=\"far fa-plus-square\"></i>}\r\n            onClick={() => document.querySelector('[data-target=\"#addStaffModal\"]').click()}\r\n            sx={{ fontWeight: 600, minWidth: 120 }}\r\n          >\r\n            Add Staff\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<i className=\"fas fa-edit\"></i>}\r\n            onClick={() => document.querySelector('[data-target=\"#editStaffModal\"]').click()}\r\n            disabled={!selectedStaff}\r\n            sx={{ fontWeight: 600, minWidth: 120 }}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n            onClick={handleDelete}\r\n            disabled={!selectedStaffId}\r\n            sx={{ fontWeight: 600, minWidth: 120 }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Box>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 480, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={staffList}\r\n              getRowId={row => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleActionView}>View</MenuItem>\r\n              <MenuItem onClick={handleActionEdit}>Edit</MenuItem>\r\n              <MenuItem onClick={handleActionDelete}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Staff Modal */}\r\n        <div className=\"modal fade\" id=\"addStaffModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Add New Staff</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* AddStaff form component here */}\r\n                <AddStaff closeModal={() => closeButtonAdd.current.click()} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonAdd}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit Staff Modal */}\r\n        <div className=\"modal fade\" id=\"editStaffModal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Edit Staff</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {/* EditStaff form component here */}\r\n                <EditStaff staff={selectedStaff} closeModal={() => closeButtonEdit.current.click()} />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={refresh}\r\n                  ref={closeButtonEdit}\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* View Staff Dialog */}\r\n        <ViewStaff\r\n          staff={selectedStaff}\r\n          open={viewOpen}\r\n          onClose={() => setViewOpen(false)}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Staff;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst anesthesiaTypes = ['Local', 'General', 'Sedation', 'None'];\r\nconst statusOptions = ['Scheduled', 'Completed', 'Cancelled'];\r\n\r\nconst AddProcedure = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    procedureName: '',\r\n    procedureDate: '',\r\n    duration: '',\r\n    anesthesiaType: '',\r\n    notes: '',\r\n    status: 'Scheduled'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      procedureName: form.procedureName,\r\n      procedureDate: new Date(form.procedureDate).toISOString(),\r\n      duration: Number(form.duration),\r\n      anesthesiaType: form.anesthesiaType,\r\n      notes: form.notes,\r\n      status: form.status,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    console.log('Procedure object to send:', data); // Show object before sending\r\n    try {\r\n      await axios.post(`${BASE_URL}/procedures`, data);\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Procedure Name\"\r\n          name=\"procedureName\"\r\n          value={form.procedureName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Procedure Date & Time\"\r\n          name=\"procedureDate\"\r\n          type=\"datetime-local\"\r\n          value={form.procedureDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Duration (minutes)\"\r\n          name=\"duration\"\r\n          type=\"number\"\r\n          value={form.duration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Anesthesia Type\"\r\n          name=\"anesthesiaType\"\r\n          value={form.anesthesiaType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {anesthesiaTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Notes\"\r\n          name=\"notes\"\r\n          value={form.notes}\r\n          onChange={handleChange}\r\n          multiline\r\n          rows={2}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Procedure'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddProcedure;","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst anesthesiaTypes = ['Local', 'General', 'Sedation', 'None'];\r\nconst statusOptions = ['Scheduled', 'Completed', 'Cancelled'];\r\n\r\nconst EditProcedure = ({ procedure, closeModal, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    procedureName: '',\r\n    procedureDate: '',\r\n    duration: '',\r\n    anesthesiaType: '',\r\n    notes: '',\r\n    status: 'Scheduled'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (procedure) {\r\n      setForm({\r\n        procedureName: procedure.procedureName || '',\r\n        procedureDate: procedure.procedureDate\r\n          ? new Date(procedure.procedureDate).toISOString().slice(0, 16)\r\n          : '',\r\n        duration: procedure.duration || '',\r\n        anesthesiaType: procedure.anesthesiaType || '',\r\n        notes: procedure.notes || '',\r\n        status: procedure.status || 'Scheduled'\r\n      });\r\n    }\r\n  }, [procedure]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      procedureName: form.procedureName,\r\n      procedureDate: new Date(form.procedureDate).toISOString(),\r\n      duration: Number(form.duration),\r\n      anesthesiaType: form.anesthesiaType,\r\n      notes: form.notes,\r\n      status: form.status,\r\n      updatedAt: now\r\n    };\r\n    console.log('Procedure object to update:', data); // Show object before sending\r\n    try {\r\n      await axios.put(`${BASE_URL}/procedures/${procedure.id}`, data);\r\n      if (onSuccess) onSuccess(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Procedure Name\"\r\n          name=\"procedureName\"\r\n          value={form.procedureName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Procedure Date & Time\"\r\n          name=\"procedureDate\"\r\n          type=\"datetime-local\"\r\n          value={form.procedureDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Duration (minutes)\"\r\n          name=\"duration\"\r\n          type=\"number\"\r\n          value={form.duration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Anesthesia Type\"\r\n          name=\"anesthesiaType\"\r\n          value={form.anesthesiaType}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {anesthesiaTypes.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Notes\"\r\n          name=\"notes\"\r\n          value={form.notes}\r\n          onChange={handleChange}\r\n          multiline\r\n          rows={2}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditProcedure;","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, Chip, IconButton, Menu, MenuItem, Button, Dialog, DialogTitle, DialogContent, DialogActions, Stack } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddProcedure from './AddProcedure';\r\nimport EditProcedure from './EditProcedure';\r\n\r\nconst ViewProcedure = ({ procedure, onClose }) => {\r\n  if (!procedure) return null;\r\n  return (\r\n    <Dialog open={!!procedure} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>View Procedure</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Stack spacing={2} sx={{ mt: 1 }}>\r\n          <div><strong>Name:</strong> {procedure.procedureName}</div>\r\n          <div><strong>Duration:</strong> {procedure.duration} mins</div>\r\n          <div><strong>Anesthesia:</strong> {procedure.anesthesiaType}</div>\r\n          <div><strong>Status:</strong> {procedure.status}</div>\r\n        </Stack>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} variant=\"outlined\" color=\"primary\">Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nconst Procedures = () => {\r\n  const [procedures, setProcedures] = useState([]);\r\n  const [selectedProcedure, setSelectedProcedure] = useState(null);\r\n  const [selectedProcedureId, setSelectedProcedureId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n\r\n  // For actions menu\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Material-UI modal state\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n\r\n  const fetchProcedures = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/procedures`)\r\n      .then(res => setProcedures(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProcedures();\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchProcedures();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const proc = procedures.find(p => p.id === ids[0]);\r\n      setSelectedProcedure(proc);\r\n      setSelectedProcedureId(ids[0]);\r\n    } else {\r\n      setSelectedProcedure(null);\r\n      setSelectedProcedureId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedProcedureId && window.confirm('Delete selected procedure?')) {\r\n      axios.delete(`${BASE_URL}/procedures/${selectedProcedureId}`)\r\n        .then(() => refresh());\r\n    }\r\n  };\r\n\r\n  // Actions menu handlers\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleActionEdit = () => {\r\n    setSelectedProcedure(actionRow);\r\n    setSelectedProcedureId(actionRow.id);\r\n    setEditOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionDelete = () => {\r\n    setSelectedProcedure(actionRow);\r\n    setSelectedProcedureId(actionRow.id);\r\n    handleDelete();\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionView = () => {\r\n    setSelectedProcedure(actionRow);\r\n    setViewOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'procedureName', headerName: 'Procedure Name', width: 150 },\r\n    { field: 'duration', headerName: 'Duration (mins)', width: 130 },\r\n    { field: 'anesthesiaType', headerName: 'Anesthesia Type', width: 150 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Completed'\r\n              ? 'success'\r\n              : params.value === 'Scheduled'\r\n              ? 'primary'\r\n              : params.value === 'Cancelled'\r\n              ? 'error'\r\n              : 'default'\r\n          }\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-procedures\"></i> Procedures</h4>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <Stack direction=\"row\" spacing={2} sx={{ mb: 2 }}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => setAddOpen(true)}\r\n            startIcon={<i className=\"far fa-plus-square\"></i>}\r\n          >\r\n            Add Procedure\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={() => setEditOpen(true)}\r\n            startIcon={<i className=\"fas fa-edit\"></i>}\r\n            disabled={!selectedProcedure}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={handleDelete}\r\n            startIcon={<i className=\"fas fa-trash-alt\"></i>}\r\n            disabled={!selectedProcedureId}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Stack>\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={procedures}\r\n              getRowId={row => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleActionView}>\r\n                <i className=\"fas fa-eye\" style={{ marginRight: 8, color: '#1976d2' }} />\r\n                View Procedure\r\n              </MenuItem>\r\n              <MenuItem onClick={handleActionEdit}>\r\n                <i className=\"fas fa-edit\" style={{ marginRight: 8, color: '#ffa000' }} />\r\n                Edit Procedure\r\n              </MenuItem>\r\n              <MenuItem onClick={handleActionDelete}>\r\n                <i className=\"fas fa-trash-alt\" style={{ marginRight: 8, color: '#e53935' }} />\r\n                Delete Procedure\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Material-UI Add Procedure Dialog */}\r\n        <Dialog open={addOpen} onClose={() => setAddOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Add New Procedure</DialogTitle>\r\n          <DialogContent>\r\n            <AddProcedure\r\n              closeModal={() => setAddOpen(false)}\r\n              onCreate={refresh}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAddOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Material-UI Edit Procedure Dialog */}\r\n        <Dialog open={editOpen} onClose={() => setEditOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>Edit Procedure</DialogTitle>\r\n          <DialogContent>\r\n            <EditProcedure\r\n              procedure={selectedProcedure}\r\n              closeModal={() => setEditOpen(false)}\r\n              onSuccess={refresh}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Material-UI View Procedure Dialog */}\r\n        <ViewProcedure\r\n          procedure={viewOpen ? selectedProcedure : null}\r\n          onClose={() => setViewOpen(false)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Procedures;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst statusOptions = ['Planned', 'In Progress', 'Completed', 'Cancelled'];\r\n\r\nconst AddTreatmentPlan = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    description: '',\r\n    estimatedDuration: '',\r\n    status: 'Planned'\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch patients\r\n    axios.get(`${BASE_URL}/patients`)\r\n      .then(res => setPatients(res.data))\r\n      .catch(() => setPatients([]));\r\n    // Fetch doctors\r\n    axios.get(`${BASE_URL}/doctors`)\r\n      .then(res => setDoctors(res.data))\r\n      .catch(() => setDoctors([]));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    const data = {\r\n      patientId: form.patientId,\r\n      doctorId: form.doctorId,\r\n      description: form.description,\r\n      estimatedDuration: Number(form.estimatedDuration),\r\n      status: form.status,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/treatmentplans`, data);\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          select\r\n          label=\"Patient\"\r\n          name=\"patientId\"\r\n          value={form.patientId}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {patients.map(patient => (\r\n            <MenuItem key={patient.id} value={patient.id}>\r\n              {patient.fullName || patient.name || patient.id}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Doctor\"\r\n          name=\"doctorId\"\r\n          value={form.doctorId}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {doctors.map(doctor => (\r\n            <MenuItem key={doctor.id} value={doctor.id}>\r\n              {doctor.fullName || doctor.name || doctor.id}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          value={form.description}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Estimated Duration (days)\"\r\n          name=\"estimatedDuration\"\r\n          type=\"number\"\r\n          value={form.estimatedDuration}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          fullWidth\r\n        >\r\n          {statusOptions.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Treatment Plan'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddTreatmentPlan;","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LinearProgress, IconButton, Menu, MenuItem, Chip, Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddTreatmentPlan from './AddTreatmentPlan'; // Make sure this path is correct\r\n// import EditTreatmentPlan from './EditTreatmentPlan'; // Uncomment if you have this component\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst TreatmentPlans = () => {\r\n  const [treatmentPlans, setTreatmentPlans] = useState([]);\r\n  const [selectedPlan, setSelectedPlan] = useState(null);\r\n  const [selectedPlanId, setSelectedPlanId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n\r\n  // Modal state\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  // const [editOpen, setEditOpen] = useState(false); // Uncomment if you implement edit\r\n\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  const fetchTreatmentPlans = () => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/treatmentplans`)\r\n      .then(res => setTreatmentPlans(res.data))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTreatmentPlans();\r\n    axios.get(`${BASE_URL}/patients`).then(res => setPatients(res.data)).catch(() => setPatients([]));\r\n    axios.get(`${BASE_URL}/doctors`).then(res => setDoctors(res.data)).catch(() => setDoctors([]));\r\n  }, []);\r\n\r\n  const refresh = () => {\r\n    fetchTreatmentPlans();\r\n  };\r\n\r\n  const handleRowSelection = (ids) => {\r\n    if (ids.length === 1) {\r\n      const plan = treatmentPlans.find(p => p.id === ids[0]);\r\n      setSelectedPlan(plan);\r\n      setSelectedPlanId(ids[0]);\r\n    } else {\r\n      setSelectedPlan(null);\r\n      setSelectedPlanId(null);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedPlanId && window.confirm('Are you sure you want to delete this treatment plan?')) {\r\n      axios.delete(`${BASE_URL}/treatmentplans/${selectedPlanId}`)\r\n        .then(() => refresh());\r\n    }\r\n  };\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  // Uncomment and implement if you have EditTreatmentPlan\r\n  // const handleActionEdit = () => {\r\n  //   setSelectedPlan(actionRow);\r\n  //   setSelectedPlanId(actionRow.id);\r\n  //   setEditOpen(true);\r\n  //   handleActionClose();\r\n  // };\r\n\r\n  const handleActionDelete = () => {\r\n    setSelectedPlan(actionRow);\r\n    setSelectedPlanId(actionRow.id);\r\n    handleDelete();\r\n    handleActionClose();\r\n  };\r\n\r\n  // Helper functions to get names by id\r\n  const getPatientName = (id) => {\r\n    const patient = patients.find(p => p.id === id);\r\n    return patient ? (patient.fullName || patient.name || patient.id) : 'Unknown';\r\n  };\r\n  const getDoctorName = (id) => {\r\n    const doctor = doctors.find(d => d.id === id);\r\n    return doctor ? (doctor.fullName || doctor.name || doctor.id) : 'Unknown';\r\n  };\r\n\r\n  // Widget summary data\r\n  const totalPlans = treatmentPlans.length;\r\n  const completedPlans = treatmentPlans.filter(p => p.status === 'Completed').length;\r\n  const inProgressPlans = treatmentPlans.filter(p => p.status === 'In Progress').length;\r\n  const pendingPlans = treatmentPlans.filter(p => p.status === 'Pending').length;\r\n\r\n  // Group by treatment type (if available)\r\n  const typeCounts = treatmentPlans.reduce((acc, p) => {\r\n    const type = p.treatmentType || 'Other';\r\n    acc[type] = (acc[type] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  // Chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(typeCounts),\r\n    datasets: [{\r\n      data: Object.values(typeCounts),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(typeCounts),\r\n    datasets: [{\r\n      label: 'Plans per Treatment Type',\r\n      data: Object.values(typeCounts),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(typeCounts),\r\n    datasets: [\r\n      {\r\n        label: 'Completed',\r\n        data: Object.keys(typeCounts).map(type => treatmentPlans.filter(p => (p.treatmentType || 'Other') === type && p.status === 'Completed').length),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'In Progress',\r\n        data: Object.keys(typeCounts).map(type => treatmentPlans.filter(p => (p.treatmentType || 'Other') === type && p.status === 'In Progress').length),\r\n        borderColor: '#1976d2',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Pending',\r\n        data: Object.keys(typeCounts).map(type => treatmentPlans.filter(p => (p.treatmentType || 'Other') === type && p.status === 'Pending').length),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient Name',\r\n      width: 220,\r\n      valueGetter: (params) => getPatientName(params.row.patientId),\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor Name',\r\n      width: 220,\r\n      valueGetter: (params) => getDoctorName(params.row.doctorId),\r\n    },\r\n    { field: 'estimatedDuration', headerName: 'Est. Duration (days)', width: 160 },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 140,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'Completed'\r\n              ? 'success'\r\n              : params.value === 'In Progress'\r\n              ? 'primary'\r\n              : params.value === 'Pending'\r\n              ? 'warning'\r\n              : 'default'\r\n          }\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-notes-medical\"></i> Treatment Plans</h4>\r\n      </div>\r\n\r\n      {/* Widgets row */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Plans</Typography>\r\n          <Typography variant=\"h6\">{totalPlans}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Completed</Typography>\r\n          <Typography variant=\"h6\">{completedPlans}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#f3e5f5', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">In Progress</Typography>\r\n          <Typography variant=\"h6\">{inProgressPlans}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Pending</Typography>\r\n          <Typography variant=\"h6\">{pendingPlans}</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts row */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Plans by Treatment Type</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Plans per Treatment Type</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Status Trends by Type</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        {/* Material-UI Add Button */}\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"success\"\r\n          sx={{ mb: 2, mr: 2 }}\r\n          onClick={() => setAddOpen(true)}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Add Treatment Plan\r\n        </Button>\r\n\r\n        {/* ...other buttons for edit/delete if needed... */}\r\n\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%', marginTop: '10px' }}>\r\n            <DataGrid\r\n              rows={treatmentPlans}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              checkboxSelection\r\n              onSelectionModelChange={handleRowSelection}\r\n              components={{ Toolbar: GridToolbar }}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              {/* <MenuItem onClick={handleActionEdit}>Edit</MenuItem> */}\r\n              <MenuItem onClick={handleActionDelete}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n\r\n        {/* Material-UI Add Treatment Plan Dialog */}\r\n        <Dialog open={addOpen} onClose={() => setAddOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Add New Treatment Plan</DialogTitle>\r\n          <DialogContent>\r\n            <AddTreatmentPlan\r\n              closeModal={() => setAddOpen(false)}\r\n              onCreate={fetchTreatmentPlans}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAddOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreatmentPlans;\r\n","import React, { useState } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack, Chip } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst specializations = [\r\n  'General Dentist', 'Orthodontist', 'Periodontist', 'Endodontist', 'Prosthodontist', 'Oral Surgeon', 'Pediatric Dentist', 'Other'\r\n];\r\nconst daysOfWeek = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n\r\nconst AddDoctor = ({ closeModal, onCreate }) => {\r\n  const [form, setForm] = useState({\r\n    fullName: '',\r\n    licenseNumber: '',\r\n    specialization: '',\r\n    experienceYears: '',\r\n    consultationFee: '',\r\n    availableDays: [],\r\n    availableTimeSlots: [],\r\n    rating: 0\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [timeSlot, setTimeSlot] = useState({ startTime: '', endTime: '' });\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleDaysChange = e => {\r\n    setForm(f => ({ ...f, availableDays: e.target.value }));\r\n  };\r\n\r\n  const handleAddTimeSlot = () => {\r\n    if (timeSlot.startTime && timeSlot.endTime) {\r\n      setForm(f => ({\r\n        ...f,\r\n        availableTimeSlots: [...f.availableTimeSlots, { ...timeSlot }]\r\n      }));\r\n      setTimeSlot({ startTime: '', endTime: '' });\r\n    }\r\n  };\r\n\r\n  const handleRemoveTimeSlot = idx => {\r\n    setForm(f => ({\r\n      ...f,\r\n      availableTimeSlots: f.availableTimeSlots.filter((_, i) => i !== idx)\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const data = {\r\n      ...form,\r\n      experienceYears: Number(form.experienceYears),\r\n      consultationFee: Number(form.consultationFee),\r\n      rating: Number(form.rating)\r\n    };\r\n    try {\r\n      await axios.post(`${BASE_URL}/doctors`, data);\r\n      if (onCreate) onCreate(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Full Name\"\r\n          name=\"fullName\"\r\n          value={form.fullName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"License Number\"\r\n          name=\"licenseNumber\"\r\n          value={form.licenseNumber}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Specialization\"\r\n          name=\"specialization\"\r\n          value={form.specialization}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {specializations.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Experience (years)\"\r\n          name=\"experienceYears\"\r\n          type=\"number\"\r\n          value={form.experienceYears}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Consultation Fee ($)\"\r\n          name=\"consultationFee\"\r\n          type=\"number\"\r\n          value={form.consultationFee}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Available Days\"\r\n          name=\"availableDays\"\r\n          value={form.availableDays}\r\n          onChange={handleDaysChange}\r\n          SelectProps={{ multiple: true }}\r\n          required\r\n          fullWidth\r\n        >\r\n          {daysOfWeek.map(day => (\r\n            <MenuItem key={day} value={day}>{day}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Box>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <TextField\r\n              label=\"Start Time\"\r\n              name=\"startTime\"\r\n              type=\"time\"\r\n              value={timeSlot.startTime}\r\n              onChange={e => setTimeSlot(ts => ({ ...ts, startTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              sx={{ width: 140 }}\r\n            />\r\n            <TextField\r\n              label=\"End Time\"\r\n              name=\"endTime\"\r\n              type=\"time\"\r\n              value={timeSlot.endTime}\r\n              onChange={e => setTimeSlot(ts => ({ ...ts, endTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              sx={{ width: 140 }}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={handleAddTimeSlot}\r\n              disabled={!timeSlot.startTime || !timeSlot.endTime}\r\n            >\r\n              Add Slot\r\n            </Button>\r\n          </Stack>\r\n          <Box sx={{ mt: 1, display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n            {form.availableTimeSlots.map((slot, idx) => (\r\n              <Chip\r\n                key={idx}\r\n                label={`${slot.startTime} - ${slot.endTime}`}\r\n                onDelete={() => handleRemoveTimeSlot(idx)}\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n        <TextField\r\n          label=\"Rating\"\r\n          name=\"rating\"\r\n          type=\"number\"\r\n          inputProps={{ min: 0, max: 5, step: 0.1 }}\r\n          value={form.rating}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"success\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Create Doctor'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddDoctor;","import React, { useState, useEffect } from 'react';\r\nimport { Box, Button, TextField, MenuItem, Stack, Chip } from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst specializations = [\r\n  'General Dentist', 'Orthodontist', 'Periodontist', 'Endodontist', 'Prosthodontist', 'Oral Surgeon', 'Pediatric Dentist', 'Other'\r\n];\r\nconst daysOfWeek = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n\r\nconst EditDoctor = ({ doctor, closeModal, onEdit }) => {\r\n  const [form, setForm] = useState({\r\n    fullName: '',\r\n    licenseNumber: '',\r\n    specialization: '',\r\n    experienceYears: '',\r\n    consultationFee: '',\r\n    availableDays: [],\r\n    availableTimeSlots: [],\r\n    rating: 0\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [timeSlot, setTimeSlot] = useState({ startTime: '', endTime: '' });\r\n\r\n  useEffect(() => {\r\n    if (doctor) {\r\n      setForm({\r\n        fullName: doctor.fullName || '',\r\n        licenseNumber: doctor.licenseNumber || '',\r\n        specialization: doctor.specialization || '',\r\n        experienceYears: doctor.experienceYears || '',\r\n        consultationFee: doctor.consultationFee || '',\r\n        availableDays: doctor.availableDays || [],\r\n        availableTimeSlots: doctor.availableTimeSlots || [],\r\n        rating: doctor.rating || 0\r\n      });\r\n    }\r\n  }, [doctor]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleDaysChange = e => {\r\n    setForm(f => ({ ...f, availableDays: e.target.value }));\r\n  };\r\n\r\n  const handleAddTimeSlot = () => {\r\n    if (timeSlot.startTime && timeSlot.endTime) {\r\n      setForm(f => ({\r\n        ...f,\r\n        availableTimeSlots: [...f.availableTimeSlots, { ...timeSlot }]\r\n      }));\r\n      setTimeSlot({ startTime: '', endTime: '' });\r\n    }\r\n  };\r\n\r\n  const handleRemoveTimeSlot = idx => {\r\n    setForm(f => ({\r\n      ...f,\r\n      availableTimeSlots: f.availableTimeSlots.filter((_, i) => i !== idx)\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const data = {\r\n      ...form,\r\n      experienceYears: Number(form.experienceYears),\r\n      consultationFee: Number(form.consultationFee),\r\n      rating: Number(form.rating)\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/doctors/${doctor.id}`, data);\r\n      if (onEdit) onEdit(data);\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ p: 2 }}>\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Full Name\"\r\n          name=\"fullName\"\r\n          value={form.fullName}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"License Number\"\r\n          name=\"licenseNumber\"\r\n          value={form.licenseNumber}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Specialization\"\r\n          name=\"specialization\"\r\n          value={form.specialization}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        >\r\n          {specializations.map(opt => (\r\n            <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Experience (years)\"\r\n          name=\"experienceYears\"\r\n          type=\"number\"\r\n          value={form.experienceYears}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Consultation Fee ($)\"\r\n          name=\"consultationFee\"\r\n          type=\"number\"\r\n          value={form.consultationFee}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Available Days\"\r\n          name=\"availableDays\"\r\n          value={form.availableDays}\r\n          onChange={handleDaysChange}\r\n          SelectProps={{ multiple: true }}\r\n          required\r\n          fullWidth\r\n        >\r\n          {daysOfWeek.map(day => (\r\n            <MenuItem key={day} value={day}>{day}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <Box>\r\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n            <TextField\r\n              label=\"Start Time\"\r\n              name=\"startTime\"\r\n              type=\"time\"\r\n              value={timeSlot.startTime}\r\n              onChange={e => setTimeSlot(ts => ({ ...ts, startTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              sx={{ width: 140 }}\r\n            />\r\n            <TextField\r\n              label=\"End Time\"\r\n              name=\"endTime\"\r\n              type=\"time\"\r\n              value={timeSlot.endTime}\r\n              onChange={e => setTimeSlot(ts => ({ ...ts, endTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              sx={{ width: 140 }}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={handleAddTimeSlot}\r\n              disabled={!timeSlot.startTime || !timeSlot.endTime}\r\n            >\r\n              Add Slot\r\n            </Button>\r\n          </Stack>\r\n          <Box sx={{ mt: 1, display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n            {form.availableTimeSlots.map((slot, idx) => (\r\n              <Chip\r\n                key={idx}\r\n                label={`${slot.startTime} - ${slot.endTime}`}\r\n                onDelete={() => handleRemoveTimeSlot(idx)}\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n        <TextField\r\n          label=\"Rating\"\r\n          name=\"rating\"\r\n          type=\"number\"\r\n          inputProps={{ min: 0, max: 5, step: 0.1 }}\r\n          value={form.rating}\r\n          onChange={handleChange}\r\n          required\r\n          fullWidth\r\n        />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditDoctor;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport { LinearProgress, Rating, Typography, IconButton, Menu, MenuItem, Box, Chip, Button, Dialog, DialogTitle, DialogContent, DialogActions, Avatar, Divider, Stack } from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Doughnut, Bar, Line } from 'react-chartjs-2';\r\nimport { Chart, ArcElement, Tooltip as ChartTooltip, Legend as ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement } from 'chart.js';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport AddDoctor from './AddDoctor';\r\nimport EditDoctor from './EditDoctor';\r\n\r\nChart.register(ArcElement, ChartTooltip, ChartLegend, CategoryScale, LinearScale, BarElement, PointElement, LineElement);\r\n\r\nconst Doctors = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n  const [addOpen, setAddOpen] = useState(false);\r\n  const [editOpen, setEditOpen] = useState(false);\r\n  const [viewOpen, setViewOpen] = useState(false);\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get(`${BASE_URL}/doctors`)\r\n      .then((res) => setDoctors(res.data))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleActionEdit = () => {\r\n    setEditOpen(true);\r\n    setSelectedDoctor(actionRow);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleActionView = () => {\r\n    setSelectedDoctor(actionRow); // <-- Make sure to set selectedDoctor!\r\n    setViewOpen(true);\r\n    setActionAnchorEl(null);\r\n  };\r\n\r\n  const handleActionDelete = () => {\r\n    // Implement your delete logic here\r\n    handleActionClose();\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'licenseNumber', headerName: 'License #', width: 150 },\r\n    {\r\n      field: 'specialization',\r\n      headerName: 'Specialization',\r\n      width: 180,\r\n      renderCell: (params) => (\r\n        <Chip label={params.value} color=\"primary\" variant=\"outlined\" />\r\n      ),\r\n    },\r\n    {\r\n      field: 'experienceYears',\r\n      headerName: 'Experience (years)',\r\n      width: 160,\r\n      type: 'number',\r\n      renderCell: (params) => (\r\n        <Chip label={`${params.value} yrs`} color=\"success\" variant=\"outlined\" />\r\n      ),\r\n    },\r\n    {\r\n      field: 'consultationFee',\r\n      headerName: 'Fee ($)',\r\n      width: 120,\r\n      renderCell: (params) => (\r\n        <Chip label={`$${parseFloat(params.value).toFixed(2)}`} color=\"info\" variant=\"outlined\" />\r\n      ),\r\n    },\r\n    {\r\n      field: 'availableDays',\r\n      headerName: 'Available Days',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {params.value.map((day, idx) => (\r\n            <Chip key={idx} label={day} color=\"default\" size=\"small\" variant=\"outlined\" />\r\n          ))}\r\n        </Box>\r\n      ),\r\n    },\r\n    {\r\n      field: 'availableTimeSlots',\r\n      headerName: 'Time Slots',\r\n      width: 200,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n          {params.value.map((slot, index) => (\r\n            <Chip\r\n              key={index}\r\n              label={`${slot.startTime} - ${slot.endTime}`}\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n            />\r\n          ))}\r\n        </Box>\r\n      ),\r\n    },\r\n    {\r\n      field: 'rating',\r\n      headerName: 'Rating',\r\n      width: 160,\r\n      renderCell: (params) => (\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Rating value={params.value} precision={0.1} readOnly />\r\n          <Chip label={params.value} color=\"warning\" variant=\"outlined\" />\r\n        </Box>\r\n      ),\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 100,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={e => handleActionClick(e, params.row)}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // Widget summary data\r\n  const totalDoctors = doctors.length;\r\n  const specializations = doctors.reduce((acc, d) => {\r\n    acc[d.specialization] = (acc[d.specialization] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  const avgRating = doctors.length ? (doctors.reduce((sum, d) => sum + (d.rating || 0), 0) / doctors.length).toFixed(2) : 0;\r\n  const avgExperience = doctors.length ? (doctors.reduce((sum, d) => sum + (d.experienceYears || 0), 0) / doctors.length).toFixed(1) : 0;\r\n\r\n  // Chart data\r\n  const doughnutData = {\r\n    labels: Object.keys(specializations),\r\n    datasets: [{\r\n      data: Object.values(specializations),\r\n      backgroundColor: ['#43a047', '#ffa000', '#1976d2', '#e53935', '#8e24aa', '#00bcd4'],\r\n    }]\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(specializations),\r\n    datasets: [{\r\n      label: 'Doctors per Specialization',\r\n      data: Object.values(specializations),\r\n      backgroundColor: '#1976d2'\r\n    }]\r\n  };\r\n\r\n  const lineData = {\r\n    labels: Object.keys(specializations),\r\n    datasets: [\r\n      {\r\n        label: 'Average Rating',\r\n        data: Object.keys(specializations).map(spec =>\r\n          doctors.filter(d => d.specialization === spec).reduce((sum, d) => sum + (d.rating || 0), 0) /\r\n          (doctors.filter(d => d.specialization === spec).length || 1)\r\n        ),\r\n        borderColor: '#43a047',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Average Experience',\r\n        data: Object.keys(specializations).map(spec =>\r\n          doctors.filter(d => d.specialization === spec).reduce((sum, d) => sum + (d.experienceYears || 0), 0) /\r\n          (doctors.filter(d => d.specialization === spec).length || 1)\r\n        ),\r\n        borderColor: '#ffa000',\r\n        fill: false,\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h4><i className=\"fas fa-user-md\"></i> Doctors</h4>\r\n      </div>\r\n\r\n      {/* Widgets row */}\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, mt: 2 }}>\r\n        <Box sx={{ flex: 1, bgcolor: '#e3f2fd', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">Total Doctors</Typography>\r\n          <Typography variant=\"h6\">{totalDoctors}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#e8f5e9', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"success.main\">Avg. Rating</Typography>\r\n          <Typography variant=\"h6\">{avgRating}</Typography>\r\n        </Box>\r\n        <Box sx={{ flex: 1, bgcolor: '#fffde7', p: 2, borderRadius: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle2\" color=\"warning.main\">Avg. Experience</Typography>\r\n          <Typography variant=\"h6\">{avgExperience} yrs</Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Charts row */}\r\n      <Box sx={{ display: 'flex', gap: 4, mb: 4, mt: 2, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Doctors by Specialization</Typography>\r\n          <Doughnut data={doughnutData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Doctors per Specialization</Typography>\r\n          <Bar data={barData} />\r\n        </Box>\r\n        <Box sx={{ minWidth: 320, flex: 1, bgcolor: '#fafafa', p: 2, borderRadius: 2 }}>\r\n          <Typography variant=\"subtitle1\" align=\"center\">Rating & Experience Trends</Typography>\r\n          <Line data={lineData} />\r\n        </Box>\r\n      </Box>\r\n\r\n      <div className=\"card-body\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          sx={{ mb: 2, fontWeight: 600 }}\r\n          onClick={() => setAddOpen(true)}\r\n          startIcon={<i className=\"fas fa-plus\"></i>}\r\n        >\r\n          Create Doctor\r\n        </Button>\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 600, width: '100%' }}>\r\n            <DataGrid\r\n              rows={doctors}\r\n              getRowId={(row) => row.id}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5, 10]}\r\n              checkboxSelection\r\n              components={{ Toolbar: GridToolbar }}\r\n              rowHeight={110}\r\n            />\r\n            <Menu\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleActionView}>View</MenuItem>\r\n              <MenuItem onClick={() => {\r\n                setEditOpen(true);\r\n                setSelectedDoctor(actionRow);\r\n                handleActionClose();\r\n              }}>\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem onClick={handleActionDelete}>Delete</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        )}\r\n        <Dialog open={addOpen} onClose={() => setAddOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Create Doctor</DialogTitle>\r\n          <DialogContent>\r\n            <AddDoctor\r\n              closeModal={() => setAddOpen(false)}\r\n              onCreate={() => {\r\n                setAddOpen(false);\r\n                setLoading(true);\r\n                axios.get(`${BASE_URL}/doctors`)\r\n                  .then((res) => setDoctors(res.data))\r\n                  .finally(() => setLoading(false));\r\n              }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setAddOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Dialog open={editOpen} onClose={() => setEditOpen(false)} maxWidth=\"sm\" fullWidth>\r\n          <DialogTitle>Edit Doctor</DialogTitle>\r\n          <DialogContent>\r\n            <EditDoctor\r\n              doctor={selectedDoctor}\r\n              closeModal={() => setEditOpen(false)}\r\n              onEdit={() => {\r\n                setEditOpen(false);\r\n                setLoading(true);\r\n                axios.get(`${BASE_URL}/doctors`)\r\n                  .then((res) => setDoctors(res.data))\r\n                  .finally(() => setLoading(false));\r\n              }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setEditOpen(false)} color=\"secondary\">Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Dialog open={viewOpen} onClose={() => setViewOpen(false)} maxWidth=\"md\" fullWidth>\r\n          <DialogTitle>\r\n            <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n              <Avatar sx={{ bgcolor: \"#1976d2\", width: 56, height: 56 }}>\r\n                <i className=\"fas fa-user-md\" style={{ fontSize: 32, color: \"#fff\" }}></i>\r\n              </Avatar>\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                {selectedDoctor?.fullName || \"Doctor Details\"}\r\n              </Typography>\r\n            </Box>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            {selectedDoctor ? (\r\n              <Box sx={{ p: 2 }}>\r\n                <Stack spacing={2}>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">General Info</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Typography><b>License #:</b> {selectedDoctor.licenseNumber}</Typography>\r\n                    <Typography><b>Specialization:</b> <Chip label={selectedDoctor.specialization} color=\"primary\" /></Typography>\r\n                    <Typography><b>Experience:</b> <Chip label={`${selectedDoctor.experienceYears} yrs`} color=\"success\" /></Typography>\r\n                    <Typography><b>Consultation Fee:</b> <Chip label={`$${selectedDoctor.consultationFee}`} color=\"info\" /></Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">Availability</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Typography><b>Available Days:</b></Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 1 }}>\r\n                      {(selectedDoctor.availableDays || []).map((day, idx) => (\r\n                        <Chip key={idx} label={day} variant=\"outlined\" />\r\n                      ))}\r\n                    </Box>\r\n                    <Typography><b>Time Slots:</b></Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                      {(selectedDoctor.availableTimeSlots || []).map((slot, idx) => (\r\n                        <Chip key={idx} label={`${slot.startTime} - ${slot.endTime}`} color=\"secondary\" variant=\"outlined\" />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\">Rating</Typography>\r\n                    <Divider sx={{ mb: 1 }} />\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <Rating value={selectedDoctor.rating} precision={0.1} readOnly />\r\n                      <Chip label={selectedDoctor.rating} color=\"warning\" />\r\n                    </Box>\r\n                  </Box>\r\n                  <Divider />\r\n                  <Box>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      <b>Created At:</b> {selectedDoctor.createdAt ? new Date(selectedDoctor.createdAt).toLocaleString() : '-'}<br />\r\n                      <b>Updated At:</b> {selectedDoctor.updatedAt ? new Date(selectedDoctor.updatedAt).toLocaleString() : '-'}\r\n                    </Typography>\r\n                  </Box>\r\n                </Stack>\r\n              </Box>\r\n            ) : (\r\n              <Typography>No doctor selected.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setViewOpen(false)} color=\"primary\" variant=\"contained\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Doctors;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './ProfessionalOdontogram.css';\r\nimport axios from 'axios';\r\nimport { FaUserMd, FaUser, FaClinicMedical, FaCalendarAlt, FaIdBadge } from \"react-icons/fa\";\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst TOOTH_STATUSES = ['healthy', 'decayed', 'missing', 'filled'];\r\nconst TOOTH_SURFACES = ['mesial', 'distal', 'occlusal', 'buccal', 'lingual'];\r\n\r\nconst TOOTH_TYPES = [\r\n  'Molar', 'Molar', 'Premolar', 'Premolar', 'Canine', 'Incisor', 'Incisor', 'Incisor',\r\n  'Incisor', 'Incisor', 'Canine', 'Premolar', 'Premolar', 'Molar', 'Molar', 'Molar',\r\n  'Molar', 'Molar', 'Premolar', 'Premolar', 'Canine', 'Incisor', 'Incisor', 'Incisor',\r\n  'Incisor', 'Incisor', 'Canine', 'Premolar', 'Premolar', 'Molar', 'Molar', 'Molar'\r\n];\r\n\r\nconst getInitialTeeth = () =>\r\n  Array.from({ length: 32 }, (_, i) => ({\r\n    id: i + 1,\r\n    status: 'healthy',\r\n    surfaces: {},\r\n    notes: '',\r\n    images: [],\r\n    history: [],\r\n    type: TOOTH_TYPES[i],\r\n    procedure: '',\r\n    operation: '',\r\n    diagnosis: '',\r\n    treatmentSummary: '',\r\n  }));\r\n\r\nconst statusColors = {\r\n  healthy: '#4caf50',\r\n  decayed: '#f44336',\r\n  filled: '#ffeb3b',\r\n  missing: '#e0e0e0'\r\n};\r\n\r\nconst ProfessionalOdontogram = () => {\r\n  const [teeth, setTeeth] = useState(getInitialTeeth());\r\n  const [selectedTooth, setSelectedTooth] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [procedures, setProcedures] = useState([]);\r\n  const [operations, setOperations] = useState([]);\r\n  const [diagnoses, setDiagnoses] = useState([]);\r\n\r\n  // NEW: State for select box data\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [selectedPatient, setSelectedPatient] = useState('');\r\n  const [selectedDoctor, setSelectedDoctor] = useState('');\r\n  const [selectedClinic, setSelectedClinic] = useState('');\r\n  const [selectedAppointment, setSelectedAppointment] = useState('');\r\n  const [selectedMembership, setSelectedMembership] = useState('');\r\n  const [sentFormData, setSentFormData] = useState(null);\r\n  const [backendTeethHistory, setBackendTeethHistory] = useState([]); // <-- New state for backend teeth history\r\n\r\n  // Fetch select box data and lists\r\n  useEffect(() => {\r\n    fetch(`${BASE_URL}/procedures`)\r\n      .then(res => res.json())\r\n      .then(data => setProcedures(data))\r\n      .catch(() => setProcedures([]));\r\n    fetch(`${BASE_URL}/operations`)\r\n      .then(res => res.json())\r\n      .then(data => setOperations(data))\r\n      .catch(() => setOperations([]));\r\n    fetch(`${BASE_URL}/diagnoses`)\r\n      .then(res => res.json())\r\n      .then(data => setDiagnoses(data))\r\n      .catch(() => setDiagnoses([]));\r\n    fetch(`${BASE_URL}/patients`)\r\n      .then(res => res.json())\r\n      .then(data => setPatients(data))\r\n      .catch(() => setPatients([]));\r\n    fetch(`${BASE_URL}/doctors`)\r\n      .then(res => res.json())\r\n      .then(data => setDoctors(data))\r\n      .catch(() => setDoctors([]));\r\n    fetch(`${BASE_URL}/clinics`)\r\n      .then(res => res.json())\r\n      .then(data => setClinics(data))\r\n      .catch(() => setClinics([]));\r\n    fetch(`${BASE_URL}/appointments`)\r\n      .then(res => res.json())\r\n      .then(data => setAppointments(data))\r\n      .catch(() => setAppointments([]));\r\n  }, []);\r\n\r\n  // Fetch teeth data from backend when all filters are selected\r\n  useEffect(() => {\r\n    if (\r\n      selectedPatient &&\r\n      selectedDoctor &&\r\n      selectedClinic &&\r\n      selectedAppointment &&\r\n      selectedMembership\r\n    ) {\r\n      axios\r\n        .post(`${BASE_URL}/ondotogram/teeth`, {\r\n          patient: parseInt(selectedPatient, 10),\r\n          doctor: parseInt(selectedDoctor, 10),\r\n          clinic: parseInt(selectedClinic, 10),\r\n          appointment: parseInt(selectedAppointment, 10),\r\n          membership: isNaN(selectedMembership)\r\n            ? selectedMembership\r\n            : parseInt(selectedMembership, 10)\r\n        })\r\n        .then((res) => {\r\n          const backendTeeth = res.data;\r\n          setBackendTeethHistory(backendTeeth); // <-- Save for history display\r\n          setTeeth((prevTeeth) =>\r\n            prevTeeth.map((tooth) => {\r\n              const found = backendTeeth.find(\r\n                (t) => t.toothNumber === tooth.id\r\n              );\r\n              return found\r\n                ? {\r\n                    ...tooth,\r\n                    status: found.status,\r\n                    notes: found.notes,\r\n                    procedure: found.procedure,\r\n                    operation: found.operation,\r\n                    diagnosis: found.diagnosis,\r\n                    treatmentSummary: found.treatmentSummary\r\n                  }\r\n                : { ...tooth, status: 'healthy', notes: '', procedure: '', operation: '', diagnosis: '', treatmentSummary: '' };\r\n            })\r\n          );\r\n        })\r\n        .catch(() => {\r\n          setTeeth(getInitialTeeth());\r\n          setBackendTeethHistory([]);\r\n        });\r\n    }\r\n  }, [selectedPatient, selectedDoctor, selectedClinic, selectedAppointment, selectedMembership]);\r\n\r\n  // Tooltip content for a tooth\r\n  const getToothTooltip = (tooth) => {\r\n    return `\r\nTooth ${tooth.id}\r\nStatus: ${tooth.status}\r\nNotes: ${tooth.notes || '-'}\r\nProcedure: ${tooth.procedure || '-'}\r\nOperation: ${tooth.operation || '-'}\r\nDiagnosis: ${tooth.diagnosis || '-'}\r\nTreatment: ${tooth.treatmentSummary || '-'}\r\n    `.trim();\r\n  };\r\n\r\n  // SVG for tooth with color and cross for missing\r\n  const toothSVG = (type, status, id, isSelected) => {\r\n    let fill =\r\n      status === 'healthy'\r\n        ? statusColors.healthy\r\n        : status === 'decayed'\r\n        ? statusColors.decayed\r\n        : status === 'filled'\r\n        ? statusColors.filled\r\n        : status === 'missing'\r\n        ? statusColors.missing\r\n        : '#fff';\r\n\r\n    let numberColor = '#ff3b3b';\r\n\r\n    // Cross for missing\r\n    const cross = (\r\n      <>\r\n        <line x1=\"8\" y1=\"8\" x2=\"32\" y2=\"32\" stroke=\"#f44336\" strokeWidth=\"3\" />\r\n        <line x1=\"32\" y1=\"8\" x2=\"8\" y2=\"32\" stroke=\"#f44336\" strokeWidth=\"3\" />\r\n      </>\r\n    );\r\n\r\n    if (type === 'Molar') {\r\n      return (\r\n        <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\r\n          <ellipse cx=\"20\" cy=\"20\" rx=\"15\" ry=\"12\" fill={fill} stroke=\"#000\" strokeWidth=\"2\"/>\r\n          {status === 'missing' && cross}\r\n          <title>{getToothTooltip({id, status, ...teeth[id-1]})}</title>\r\n          <text x=\"20\" y=\"36\" textAnchor=\"middle\" fontSize=\"10\" fill={numberColor} fontWeight=\"bold\">{id}</text>\r\n        </svg>\r\n      );\r\n    }\r\n    if (type === 'Premolar') {\r\n      return (\r\n        <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\r\n          <ellipse cx=\"20\" cy=\"20\" rx=\"10\" ry=\"13\" fill={fill} stroke=\"#000\" strokeWidth=\"2\"/>\r\n          {status === 'missing' && cross}\r\n          <title>{getToothTooltip({id, status, ...teeth[id-1]})}</title>\r\n          <text x=\"20\" y=\"36\" textAnchor=\"middle\" fontSize=\"10\" fill={numberColor} fontWeight=\"bold\">{id}</text>\r\n        </svg>\r\n      );\r\n    }\r\n    if (type === 'Canine') {\r\n      return (\r\n        <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\r\n          <path d=\"M20 8 Q25 20 20 32 Q15 20 20 8\" fill={fill} stroke=\"#000\" strokeWidth=\"2\"/>\r\n          {status === 'missing' && cross}\r\n          <title>{getToothTooltip({id, status, ...teeth[id-1]})}</title>\r\n          <text x=\"20\" y=\"36\" textAnchor=\"middle\" fontSize=\"10\" fill={numberColor} fontWeight=\"bold\">{id}</text>\r\n        </svg>\r\n      );\r\n    }\r\n    // Incisor\r\n    return (\r\n      <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\r\n        <rect x=\"13\" y=\"10\" width=\"14\" height=\"20\" rx=\"7\" fill={fill} stroke=\"#000\" strokeWidth=\"2\"/>\r\n        {status === 'missing' && cross}\r\n        <title>{getToothTooltip({id, status, ...teeth[id-1]})}</title>\r\n        <text x=\"20\" y=\"36\" textAnchor=\"middle\" fontSize=\"10\" fill={numberColor} fontWeight=\"bold\">{id}</text>\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  // Render arch with tooltip and color\r\n  const renderArch = (teethSlice, arch) => {\r\n    const archRadius = 200;\r\n    const archCenterX = 300;\r\n    const archCenterY = arch === 'upper' ? 320 : 260;\r\n    return (\r\n      <g>\r\n        {teethSlice.map((tooth, idx) => {\r\n          const angle =\r\n            arch === 'upper'\r\n              ? Math.PI * (1 - idx / 15)\r\n              : -Math.PI * (idx / 15);\r\n          const x = archCenterX + archRadius * Math.cos(angle);\r\n          const y = archCenterY + archRadius * Math.sin(angle);\r\n\r\n          const isSelected = selectedTooth && selectedTooth.id === tooth.id;\r\n\r\n          return (\r\n            <g\r\n              key={tooth.id}\r\n              transform={`translate(${x},${y})`}\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => handleToothDetails(tooth)}\r\n              onMouseEnter={e => {\r\n                // Optional: highlight on hover\r\n                e.currentTarget.querySelector('ellipse,rect,path').setAttribute('stroke', '#1976d2');\r\n                e.currentTarget.querySelector('ellipse,rect,path').setAttribute('stroke-width', '3');\r\n              }}\r\n              onMouseLeave={e => {\r\n                e.currentTarget.querySelector('ellipse,rect,path').setAttribute('stroke', '#000');\r\n                e.currentTarget.querySelector('ellipse,rect,path').setAttribute('stroke-width', '2');\r\n              }}\r\n            >\r\n              {toothSVG(tooth.type, tooth.status, tooth.id, isSelected)}\r\n            </g>\r\n          );\r\n        })}\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const handleToothClick = (id) => {\r\n    console.log('Tooth clicked:', id);\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === id\r\n          ? {\r\n              ...tooth,\r\n              status:\r\n                TOOTH_STATUSES[\r\n                  (TOOTH_STATUSES.indexOf(tooth.status) + 1) %\r\n                    TOOTH_STATUSES.length\r\n                ],\r\n              history: [\r\n                ...tooth.history,\r\n                {\r\n                  date: new Date().toISOString(),\r\n                  status: tooth.status,\r\n                },\r\n              ],\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n  };\r\n\r\n  // Open modal for details\r\n  const handleToothDetails = (tooth) => {\r\n    setSelectedTooth(tooth);\r\n  };\r\n\r\n  // Update notes, surfaces, images\r\n  const handleModalChange = (field, value) => {\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? { ...tooth, [field]: value }\r\n          : tooth\r\n      )\r\n    );\r\n    setSelectedTooth((prev) =>\r\n      prev ? { ...prev, [field]: value } : prev\r\n    );\r\n  };\r\n\r\n  // Surface selection\r\n  const handleSurfaceToggle = (surface) => {\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? {\r\n              ...tooth,\r\n              surfaces: {\r\n                ...tooth.surfaces,\r\n                [surface]: !tooth.surfaces[surface],\r\n              },\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n  };\r\n\r\n  // Image upload\r\n  const handleImageUpload = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setTeeth((prev) =>\r\n      prev.map((tooth) =>\r\n        tooth.id === selectedTooth.id\r\n          ? {\r\n              ...tooth,\r\n              images: [\r\n                ...tooth.images,\r\n                ...files.map((file) => URL.createObjectURL(file)),\r\n              ],\r\n            }\r\n          : tooth\r\n      )\r\n    );\r\n  };\r\n\r\n  // Export odontogram as image\r\n  const handleExport = () => {\r\n    const odontogramEl = document.querySelector('.odontogram');\r\n    if (!odontogramEl) return;\r\n    import('html2canvas').then((html2canvas) => {\r\n      html2canvas.default(odontogramEl).then((canvas) => {\r\n        const link = document.createElement('a');\r\n        link.download = 'odontogram.png';\r\n        link.href = canvas.toDataURL();\r\n        link.click();\r\n      });\r\n    });\r\n  };\r\n\r\n  // Update the save button handler to send data to backend\r\n  const handleSaveToothDetails = async () => {\r\n    if (!selectedTooth) return;\r\n    const newHistoryItem = {\r\n      date: new Date().toLocaleString(),\r\n      status: selectedTooth.status,\r\n      notes: selectedTooth.notes,\r\n      procedure: selectedTooth.procedure,\r\n      operation: selectedTooth.operation,\r\n      diagnosis: selectedTooth.diagnosis,\r\n      treatmentSummary: selectedTooth.treatmentSummary,\r\n    };\r\n    setTeeth(prev =>\r\n      prev.map(tooth =>\r\n        tooth.id === selectedTooth.id\r\n          ? { ...tooth, history: [...tooth.history, newHistoryItem] }\r\n          : tooth\r\n      )\r\n    );\r\n    setSentFormData(newHistoryItem);\r\n\r\n    // Ensure IDs are integers (or null if not selected)\r\n    const payload = {\r\n      patient: selectedPatient ? parseInt(selectedPatient, 10) : null,\r\n      doctor: selectedDoctor ? parseInt(selectedDoctor, 10) : null,\r\n      clinic: selectedClinic ? parseInt(selectedClinic, 10) : null,\r\n      appointment: selectedAppointment ? parseInt(selectedAppointment, 10) : null,\r\n      membership: selectedMembership && !isNaN(selectedMembership) ? parseInt(selectedMembership, 10) : selectedMembership,\r\n      teeth: [\r\n        {\r\n          toothNumber: selectedTooth.id,\r\n          status: selectedTooth.status,\r\n          notes: selectedTooth.notes,\r\n          procedure: selectedTooth.procedure,\r\n          operation: selectedTooth.operation,\r\n          diagnosis: selectedTooth.diagnosis,\r\n          treatmentSummary: selectedTooth.treatmentSummary,\r\n        }\r\n      ]\r\n    };\r\n    console.log('Sending data:', payload);\r\n    try {\r\n      await axios.post(`${BASE_URL}/ondotogram`, payload);\r\n      //alert('Data saved successfully!');\r\n    } catch (error) {\r\n      alert('Failed to save data.');\r\n    }\r\n  };\r\n\r\n  // Add this helper at the top (or near your imports)\r\n  const formatDate = (dateStr) => {\r\n    if (!dateStr) return '-';\r\n    const d = new Date(dateStr);\r\n    if (isNaN(d)) return dateStr;\r\n    return d.toLocaleString();\r\n  };\r\n\r\n  // Show all backend history for all teeth when a patient is selected\r\n  const renderAllTeethHistoryTable = () => {\r\n    if (!selectedPatient || backendTeethHistory.length === 0) return null;\r\n    return (\r\n      <div style={{\r\n        width: '100%',\r\n        margin: '32px 0 0 0',\r\n        padding: '24px',\r\n        background: '#fff',\r\n        borderRadius: '16px',\r\n        border: '1.5px solid #90caf9',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 4px 24px rgba(25, 118, 210, 0.07)'\r\n      }}>\r\n        <div style={{ fontWeight: 'bold', color: '#1976d2', marginBottom: 12, fontSize: 20 }}>\r\n          All Teeth Treatment History for Patient\r\n        </div>\r\n        <table style={{\r\n          width: '100%',\r\n          borderCollapse: 'collapse',\r\n          background: '#fafdff',\r\n          borderRadius: '8px',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.03)'\r\n        }}>\r\n          <thead style={{ background: '#e3f2fd' }}>\r\n            <tr>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Tooth Number</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Date</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Status</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Notes</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Procedure</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Operation</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Diagnosis</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Treatment Summary</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {backendTeethHistory.map((t, idx) => (\r\n              <tr key={idx}>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.toothNumber}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>\r\n                  {formatDate(t.date || t.createdAt)}\r\n                </td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.status}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.notes}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.procedure}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.operation}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.diagnosis}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.treatmentSummary}</td>\r\n              </tr>\r\n            ))}\r\n            {backendTeethHistory.length === 0 && (\r\n              <tr>\r\n                <td colSpan={8} style={{ color: '#888', textAlign: 'center', padding: 12 }}>\r\n                  No history yet.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // --- Filter Section ---\r\n  const renderFilterSection = () => (\r\n    <div\r\n      style={{\r\n        background: '#fff',\r\n        borderRadius: '16px',\r\n        border: '1px solid #1976d2',\r\n        boxShadow: '0 4px 24px rgba(25, 118, 210, 0.08)',\r\n        padding: '32px 24px',\r\n        margin: '0 auto 32px auto',\r\n        width: '100%',\r\n        maxWidth: 1200,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        gap: '32px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        boxSizing: 'border-box'\r\n      }}\r\n    >\r\n      <div style={{ minWidth: 200 }}>\r\n        <label style={{ fontWeight: 600, color: '#1976d2', display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          <FaUser style={{ color: '#1976d2' }} /> Patient\r\n        </label>\r\n        <select\r\n          value={selectedPatient}\r\n          onChange={e => setSelectedPatient(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginTop: '8px',\r\n            borderRadius: '8px',\r\n            border: '1.5px solid #90caf9',\r\n            background: '#f8fafd',\r\n            fontSize: 16\r\n          }}\r\n        >\r\n          <option value=\"\">Select Patient</option>\r\n          {patients.map((p) => (\r\n            <option key={p.id} value={p.id}>{p.fullName || p.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div style={{ minWidth: 200 }}>\r\n        <label style={{ fontWeight: 600, color: '#1976d2', display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          <FaUserMd style={{ color: '#1976d2' }} /> Doctor\r\n        </label>\r\n        <select\r\n          value={selectedDoctor}\r\n          onChange={e => setSelectedDoctor(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginTop: '8px',\r\n            borderRadius: '8px',\r\n            border: '1.5px solid #90caf9',\r\n            background: '#f8fafd',\r\n            fontSize: 16\r\n          }}\r\n        >\r\n          <option value=\"\">Select Doctor</option>\r\n          {doctors.map((d) => (\r\n            <option key={d.id} value={d.id}>{d.fullName || d.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div style={{ minWidth: 200 }}>\r\n        <label style={{ fontWeight: 600, color: '#1976d2', display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          <FaClinicMedical style={{ color: '#1976d2' }} /> Clinic\r\n        </label>\r\n        <select\r\n          value={selectedClinic}\r\n          onChange={e => setSelectedClinic(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginTop: '8px',\r\n            borderRadius: '8px',\r\n            border: '1.5px solid #90caf9',\r\n            background: '#f8fafd',\r\n            fontSize: 16\r\n          }}\r\n        >\r\n          <option value=\"\">Select Clinic</option>\r\n          {clinics.map((c) => (\r\n            <option key={c.id} value={c.id}>{c.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div style={{ minWidth: 200 }}>\r\n        <label style={{ fontWeight: 600, color: '#1976d2', display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          <FaCalendarAlt style={{ color: '#1976d2' }} /> Appointment\r\n        </label>\r\n        <select\r\n          value={selectedAppointment}\r\n          onChange={e => setSelectedAppointment(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginTop: '8px',\r\n            borderRadius: '8px',\r\n            border: '1.5px solid #90caf9',\r\n            background: '#f8fafd',\r\n            fontSize: 16\r\n          }}\r\n        >\r\n          <option value=\"\">Select Appointment</option>\r\n          {appointments.map((a) => (\r\n            <option key={a.id} value={a.id}>\r\n              {a.appointmentDate\r\n                ? `${a.appointmentDate} (${a.startTime} - ${a.endTime})`\r\n                : a.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div style={{ minWidth: 200 }}>\r\n        <label style={{ fontWeight: 600, color: '#1976d2', display: 'flex', alignItems: 'center', gap: 6 }}>\r\n          <FaIdBadge style={{ color: '#1976d2' }} /> Membership\r\n        </label>\r\n        <select\r\n          value={selectedMembership}\r\n          onChange={e => setSelectedMembership(e.target.value)}\r\n          style={{\r\n            width: '100%',\r\n            padding: '10px',\r\n            marginTop: '8px',\r\n            borderRadius: '8px',\r\n            border: '1.5px solid #90caf9',\r\n            background: '#f8fafd',\r\n            fontSize: 16\r\n          }}\r\n        >\r\n          <option value=\"\">Select Membership</option>\r\n          <option value=\"basic\">Basic</option>\r\n          <option value=\"premium\">Premium</option>\r\n          <option value=\"vip\">VIP</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // --- Tooth Details Section ---\r\n  const renderToothDetailsSection = () => (\r\n    <div style={{\r\n      minWidth: 350,\r\n      maxWidth: 420,\r\n      padding: '28px 24px',\r\n      border: 'none',\r\n      borderRadius: '18px',\r\n      background: '#fff',\r\n      marginLeft: 16,\r\n      boxShadow: '0 4px 24px rgba(25, 118, 210, 0.10)',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'flex-start'\r\n    }}>\r\n      {selectedTooth ? (\r\n        <>\r\n          <h2 style={{ color: '#1976d2', marginBottom: 18, fontWeight: 700 }}>\r\n            Tooth #{selectedTooth.id} Details\r\n          </h2>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Status</label>\r\n            <select\r\n              style={{\r\n                width: '100%',\r\n                marginBottom: 8,\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 16\r\n              }}\r\n              value={selectedTooth.status}\r\n              onChange={e => handleModalChange('status', e.target.value)}\r\n            >\r\n              <option value=\"\">Select Status</option>\r\n              {TOOTH_STATUSES.map(status => (\r\n                <option key={status} value={status}>{status.charAt(0).toUpperCase() + status.slice(1)}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Notes</label>\r\n            <textarea\r\n              style={{\r\n                width: '100%',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 15,\r\n                minHeight: 40,\r\n                marginTop: 4,\r\n                marginBottom: 8,\r\n                resize: 'vertical'\r\n              }}\r\n              value={selectedTooth.notes || ''}\r\n              onChange={e => handleModalChange('notes', e.target.value)}\r\n              placeholder=\"Enter notes...\"\r\n            />\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Procedure</label>\r\n            <select\r\n              style={{\r\n                width: '100%',\r\n                marginBottom: 8,\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 16\r\n              }}\r\n              value={selectedTooth.procedure}\r\n              onChange={e => handleModalChange('procedure', e.target.value)}\r\n            >\r\n              <option value=\"\">Select Procedure</option>\r\n              {procedures.map(p => (\r\n                <option key={p.id} value={p.procedureName}>{p.procedureName}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Operation</label>\r\n            <select\r\n              style={{\r\n                width: '100%',\r\n                marginBottom: 8,\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 16\r\n              }}\r\n              value={selectedTooth.operation}\r\n              onChange={e => handleModalChange('operation', e.target.value)}\r\n            >\r\n              <option value=\"\">Select Operation</option>\r\n              {operations.map(o => (\r\n                <option key={o.id} value={o.procedureName}>{o.procedureName}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Diagnosis</label>\r\n            <select\r\n              style={{\r\n                width: '100%',\r\n                marginBottom: 8,\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 16\r\n              }}\r\n              value={selectedTooth.diagnosis}\r\n              onChange={e => handleModalChange('diagnosis', e.target.value)}\r\n            >\r\n              <option value=\"\">Select Diagnosis</option>\r\n              {diagnoses.map(d => (\r\n                <option key={d.id} value={d.condition}>{d.condition}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div style={{ marginBottom: 16 }}>\r\n            <label style={{ fontWeight: 600, color: '#1976d2' }}>Treatment Summary</label>\r\n            <textarea\r\n              style={{\r\n                width: '100%',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n                border: '1.5px solid #90caf9',\r\n                background: '#f8fafd',\r\n                fontSize: 15,\r\n                minHeight: 40,\r\n                marginTop: 4,\r\n                marginBottom: 8,\r\n                resize: 'vertical'\r\n              }}\r\n              value={selectedTooth.treatmentSummary || ''}\r\n              onChange={e => handleModalChange('treatmentSummary', e.target.value)}\r\n              placeholder=\"Add treatment summary...\"\r\n            />\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 16 }}>\r\n            <button\r\n              style={{\r\n                background: '#1976d2',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                padding: '10px 32px',\r\n                fontWeight: 'bold',\r\n                fontSize: 16,\r\n                cursor: 'pointer',\r\n                boxShadow: '0 2px 8px rgba(25, 118, 210, 0.08)'\r\n              }}\r\n              onClick={handleSaveToothDetails}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div style={{ color: '#888', marginTop: 40, fontSize: 18, textAlign: 'center' }}>\r\n          Select a tooth to see details\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // --- Tooth Treatment History Section ---\r\n  const renderToothTreatmentHistorySection = () => (\r\n    <div style={{\r\n      width: '100%',\r\n      margin: '32px 0 0 0',\r\n      padding: '24px',\r\n      background: '#fff',\r\n      borderRadius: '16px',\r\n      border: '1.5px solid #90caf9',\r\n      textAlign: 'left',\r\n      boxSizing: 'border-box',\r\n      boxShadow: '0 4px 24px rgba(25, 118, 210, 0.07)'\r\n    }}>\r\n      <div style={{ fontWeight: 'bold', color: '#1976d2', marginBottom: 12, fontSize: 20 }}>\r\n        Tooth Treatment History\r\n      </div>\r\n      {selectedTooth ? (\r\n        <table style={{\r\n          width: '100%',\r\n          borderCollapse: 'collapse',\r\n          background: '#fafdff',\r\n          borderRadius: '8px',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.03)'\r\n        }}>\r\n          <thead style={{ background: '#e3f2fd' }}>\r\n            <tr>\r\n              {/* <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Date</th> */}\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Created At</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Status</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Notes</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Procedure</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Operation</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Diagnosis</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Treatment Summary</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {backendTeethHistory\r\n              .filter((t) => t.toothNumber === selectedTooth.id)\r\n              .map((t, idx) => (\r\n                <tr key={'backend-' + idx}>\r\n                  {/* <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{formatDate(t.date)}</td> */}\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{formatDate(t.createdAt)}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.status}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.notes}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.procedure}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.operation}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.diagnosis}</td>\r\n                  <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.treatmentSummary}</td>\r\n                </tr>\r\n              ))}\r\n            {selectedTooth.history.map((h, idx) => (\r\n              <tr key={'local-' + idx}>\r\n                {/* <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{formatDate(h.date)}</td> */}\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>-</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.status}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.notes}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.procedure}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.operation}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.diagnosis}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{h.treatmentSummary}</td>\r\n              </tr>\r\n            ))}\r\n            {backendTeethHistory.filter((t) => t.toothNumber === selectedTooth.id).length === 0 &&\r\n              selectedTooth.history.length === 0 && (\r\n                <tr>\r\n                  <td colSpan={7} style={{ color: '#888', textAlign: 'center', padding: 12 }}>\r\n                    No history yet.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div style={{ color: '#888', marginTop: 24, fontSize: 16 }}>Select a tooth to see history</div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  // --- All Teeth Treatment History for Patient Section ---\r\n  // (leave your renderAllTeethHistoryTable as is, but you can update the style for consistency)\r\n  const renderAllTeethHistoryTableStyled = () => {\r\n    if (!selectedPatient || backendTeethHistory.length === 0) return null;\r\n    return (\r\n      <div style={{\r\n        width: '100%',\r\n        margin: '32px 0 0 0',\r\n        padding: '24px',\r\n        background: '#fff',\r\n        borderRadius: '16px',\r\n        border: '1.5px solid #90caf9',\r\n        textAlign: 'left',\r\n        boxSizing: 'border-box',\r\n        boxShadow: '0 4px 24px rgba(25, 118, 210, 0.07)'\r\n      }}>\r\n        <div style={{ fontWeight: 'bold', color: '#1976d2', marginBottom: 12, fontSize: 20 }}>\r\n          All Teeth Treatment History for Patient\r\n        </div>\r\n        <table style={{\r\n          width: '100%',\r\n          borderCollapse: 'collapse',\r\n          background: '#fafdff',\r\n          borderRadius: '8px',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 2px 8px rgba(0,0,0,0.03)'\r\n        }}>\r\n          <thead style={{ background: '#e3f2fd' }}>\r\n            <tr>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Tooth Number</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Date</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Status</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Notes</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Procedure</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Operation</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Diagnosis</th>\r\n              <th style={{ padding: 10, border: '1px solid #cce3f6' }}>Treatment Summary</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {backendTeethHistory.map((t, idx) => (\r\n              <tr key={idx}>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.toothNumber}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{formatDate(t.date || t.createdAt)}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.status}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.notes}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.procedure}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.operation}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.diagnosis}</td>\r\n                <td style={{ padding: 10, border: '1px solid #cce3f6' }}>{t.treatmentSummary}</td>\r\n              </tr>\r\n            ))}\r\n            {backendTeethHistory.length === 0 && (\r\n              <tr>\r\n                <td colSpan={8} style={{ color: '#888', textAlign: 'center', padding: 12 }}>\r\n                  No history yet.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {renderFilterSection()}\r\n      <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-start',\r\n        gap: 32\r\n      }}>\r\n        {/* Odontogram Block */}\r\n        <div style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          width: '100%'\r\n        }}>\r\n          <div style={{ width: '100%', overflowX: 'auto', display: 'flex', justifyContent: 'center', textAlign: 'center' }}>\r\n            <svg\r\n              width=\"800\"\r\n              height=\"700\"\r\n              viewBox=\"-70 0 800 700\"\r\n              className=\"odontogram-svg odontogram\"\r\n              style={{ display: 'block', background: '#fff' }}\r\n            >\r\n              {/* Jaw labels */}\r\n              <text x=\"320\" y=\"50\" textAnchor=\"middle\" fontSize=\"22\" fill=\"#007bff\" fontWeight=\"bold\">Upper Jaw</text>\r\n              <text x=\"320\" y=\"610\" textAnchor=\"middle\" fontSize=\"22\" fill=\"#007bff\" fontWeight=\"bold\">Lower Jaw</text>\r\n              <text x=\"80\" y=\"370\" textAnchor=\"middle\" fontSize=\"18\" fill=\"#007bff\" fontWeight=\"bold\" transform=\"rotate(-90 80,370)\">Left</text>\r\n              <text x=\"720\" y=\"520\" textAnchor=\"middle\" fontSize=\"18\" fill=\"#007bff\" fontWeight=\"bold\" transform=\"rotate(90 720,370)\">Right</text>\r\n              {renderArch(teeth.slice(0, 16), 'upper')}\r\n              {renderArch(teeth.slice(16), 'lower')}\r\n            </svg>\r\n          </div>\r\n          <div style={{ width: '100%', textAlign: 'center', marginTop: '16px' }}>\r\n            <button\r\n              style={{\r\n                background: '#1976d2',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                padding: '10px 32px',\r\n                fontWeight: 'bold',\r\n                fontSize: 16,\r\n                cursor: 'pointer',\r\n                boxShadow: '0 2px 8px rgba(25, 118, 210, 0.08)'\r\n              }}\r\n              onClick={() => {\r\n                const odontogramEl = document.querySelector('.odontogram');\r\n                if (!odontogramEl) return;\r\n                import('html2canvas').then((html2canvas) => {\r\n                  html2canvas.default(odontogramEl.parentNode).then((canvas) => {\r\n                    const link = document.createElement('a');\r\n                    link.download = 'odontogram.png';\r\n                    link.href = canvas.toDataURL();\r\n                    link.click();\r\n                  });\r\n                });\r\n              }}\r\n            >\r\n              Download Odontogram Image\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {renderToothDetailsSection()}\r\n      </div>\r\n      {renderToothTreatmentHistorySection()}\r\n      {renderAllTeethHistoryTableStyled()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessionalOdontogram;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport {\r\n  Box, Button, Typography, IconButton, TextField, Paper, Avatar, List, ListItem, ListItemAvatar, ListItemText, Divider, Dialog, DialogTitle, DialogContent, DialogActions, MenuItem\r\n} from '@mui/material';\r\nimport VideocamIcon from '@mui/icons-material/Videocam';\r\nimport CallIcon from '@mui/icons-material/Call';\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport MicOffIcon from '@mui/icons-material/MicOff';\r\nimport VideocamOffIcon from '@mui/icons-material/VideocamOff';\r\nimport CallEndIcon from '@mui/icons-material/CallEnd';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport HistoryIcon from '@mui/icons-material/History';\r\nimport VideoCallOutlinedIcon from '@mui/icons-material/VideoCallOutlined';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst dummyPatient = {\r\n  name: \"John Doe\",\r\n  avatar: \"\",\r\n  id: \"11111111-aaaa-bbbb-cccc-111111111111\"\r\n};\r\n\r\n// Dummy call history data\r\nconst dummyCallHistory = [\r\n  {\r\n    id: 1,\r\n    patientName: \"John Doe\",\r\n    patientAvatar: \"\",\r\n    date: \"2025-07-29T15:00:00.000Z\",\r\n    type: \"video\",\r\n    duration: \"12:34\",\r\n    status: \"Completed\"\r\n  },\r\n  {\r\n    id: 2,\r\n    patientName: \"Jane Smith\",\r\n    patientAvatar: \"\",\r\n    date: \"2025-07-28T10:30:00.000Z\",\r\n    type: \"audio\",\r\n    duration: \"08:21\",\r\n    status: \"Completed\"\r\n  },\r\n  {\r\n    id: 3,\r\n    patientName: \"John Doe\",\r\n    patientAvatar: \"\",\r\n    date: \"2025-07-27T09:15:00.000Z\",\r\n    type: \"video\",\r\n    duration: \"15:02\",\r\n    status: \"Missed\"\r\n  }\r\n];\r\n\r\n// Helper to generate a random Google Meet code (for demo, not official)\r\nfunction generateMeetCode() {\r\n  const chars = 'abcdefghijklmnopqrstuvwxyz';\r\n  const rand = () =>\r\n    Array.from({ length: 3 }, () => chars[Math.floor(Math.random() * chars.length)]).join('');\r\n  return `${rand()}-${rand()}-${rand()}`;\r\n}\r\n\r\n// Add this to your component\r\n\r\n// Replace with your Google OAuth2 client ID\r\nconst CLIENT_ID = \"373581238151-l5fft2cc1mlm0o5nrvins188im9uj4m7.apps.googleusercontent.com\";\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\r\n\r\nfunction loadScript(src) {\r\n  return new Promise((resolve) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = src;\r\n    script.onload = resolve;\r\n    document.body.appendChild(script);\r\n  });\r\n}\r\n\r\nconst Telemedicine = () => {\r\n  const [inCall, setInCall] = useState(false);\r\n  const [videoEnabled, setVideoEnabled] = useState(true);\r\n  const [audioEnabled, setAudioEnabled] = useState(true);\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatInput, setChatInput] = useState('');\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const [meetLink, setMeetLink] = useState('');\r\n  const [copied, setCopied] = useState(false);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [calendarLoading, setCalendarLoading] = useState(false);\r\n  const [patients, setPatients] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [newAppointment, setNewAppointment] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    sessionDuration: 30,\r\n    start: null,\r\n    end: null,\r\n    meetingLink: '',\r\n    status: 'Scheduled',\r\n    recordedSessionUrl: ''\r\n  });\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [showEventModal, setShowEventModal] = useState(false);\r\n  const localVideoRef = useRef(null);\r\n  const remoteVideoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadScript(\"https://accounts.google.com/gsi/client\");\r\n    loadScript(\"https://apis.google.com/js/api.js\");\r\n    fetchAppointments();\r\n    fetchPatients();\r\n    fetchDoctors();\r\n    fetchClinics();\r\n  }, []);\r\n\r\n  const fetchAppointments = async () => {\r\n    setCalendarLoading(true);\r\n    try {\r\n      const res = await axios.get(BASE_URL+'/telemedicines');\r\n      setAppointments(res.data);\r\n    } catch {\r\n      setAppointments([]);\r\n    }\r\n    setCalendarLoading(false);\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const res = await axios.get(BASE_URL+'/patients');\r\n      setPatients(res.data);\r\n    } catch {\r\n      setPatients([]);\r\n    }\r\n  };\r\n\r\n  const fetchClinics = async () => {\r\n    try {\r\n      const res = await axios.get(BASE_URL+'/clinics');\r\n      setClinics(res.data);\r\n    } catch {\r\n      setClinics([]);\r\n    }\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const res = await axios.get(BASE_URL+'/doctors');\r\n      setDoctors(res.data);\r\n    } catch {\r\n      setDoctors([]);\r\n    }\r\n  };\r\n\r\n  // Simulate starting a call (replace with real WebRTC logic)\r\n  const startCall = (type) => {\r\n    setInCall(true);\r\n    setVideoEnabled(type === 'video');\r\n    setAudioEnabled(true);\r\n    setShowHistory(false);\r\n    // Here you would initialize WebRTC and attach streams to refs\r\n  };\r\n\r\n  const endCall = () => {\r\n    setInCall(false);\r\n    setShowChat(false);\r\n    // Here you would close WebRTC connections\r\n  };\r\n\r\n  const toggleVideo = () => setVideoEnabled(v => !v);\r\n  const toggleAudio = () => setAudioEnabled(a => !a);\r\n\r\n  const handleSendMessage = () => {\r\n    if (chatInput.trim()) {\r\n      setMessages([...messages, { sender: 'doctor', text: chatInput }]);\r\n      setChatInput('');\r\n      // Here you would send the message to the patient via signaling server\r\n    }\r\n  };\r\n\r\n  // Authenticate and get access token\r\n  const authenticate = async () => {\r\n    return new Promise((resolve, reject) => {\r\n      window.google.accounts.oauth2.initTokenClient({\r\n        client_id: CLIENT_ID,\r\n        scope: SCOPES,\r\n        callback: (tokenResponse) => {\r\n          if (tokenResponse && tokenResponse.access_token) {\r\n            resolve(tokenResponse.access_token);\r\n          } else {\r\n            reject(\"No access token\");\r\n          }\r\n        },\r\n      }).requestAccessToken();\r\n    });\r\n  };\r\n\r\n  // Create Google Meet event\r\n  const createMeetEvent = async (start, end) => {\r\n    const accessToken = await authenticate();\r\n    return new Promise((resolve) => {\r\n      window.gapi.load(\"client\", async () => {\r\n        await window.gapi.client.init({\r\n          apiKey: \"\",\r\n          discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\r\n        });\r\n        window.gapi.client.setToken({ access_token: accessToken });\r\n        const event = {\r\n          summary: \"Telemedicine Appointment\",\r\n          start: { dateTime: start.toISOString() },\r\n          end: { dateTime: end.toISOString() },\r\n          conferenceData: {\r\n            createRequest: { requestId: String(Date.now()) }\r\n          }\r\n        };\r\n        const response = await window.gapi.client.calendar.events.insert({\r\n          calendarId: \"primary\",\r\n          resource: event,\r\n          conferenceDataVersion: 1,\r\n        });\r\n        resolve(response.result.hangoutLink);\r\n      });\r\n    });\r\n  };\r\n\r\n  // Calendar event mapping\r\n  const calendarEvents = appointments.map(a => ({\r\n    id: a.id,\r\n    title: `Patient: ${patients.find(p => p.id === a.patientId)?.fullName || a.patientId} | Doctor: ${doctors.find(d => d.id === a.doctorId)?.fullName || a.doctorId}`,\r\n    start: new Date(a.createdAt),\r\n    end: new Date(new Date(a.createdAt).getTime() + (a.sessionDuration || 30) * 60000),\r\n    meetingLink: a.meetingLink,\r\n    status: a.status\r\n  }));\r\n\r\n  // Handle new appointment modal open\r\n  const handleOpenModal = () => {\r\n    setNewAppointment({\r\n      patientId: '',\r\n      doctorId: '',\r\n      sessionDuration: 30,\r\n      start: null,\r\n      end: null,\r\n      meetingLink: '',\r\n      status: 'Scheduled',\r\n      recordedSessionUrl: ''\r\n    });\r\n    setOpenModal(true);\r\n  };\r\n\r\n  // Handle create appointment\r\n  const handleCreateAppointment = async () => {\r\n    if (!newAppointment.patientId || !newAppointment.doctorId || !newAppointment.start) return;\r\n    const start = new Date(newAppointment.start);\r\n    const end = new Date(start.getTime() + (newAppointment.sessionDuration || 30) * 60000);\r\n    let meetLink = '';\r\n    try {\r\n      meetLink = await createMeetEvent(start, end);\r\n    } catch {\r\n      meetLink = 'https://meet.google.com/' + Math.random().toString(36).substring(2, 12);\r\n    }\r\n    const payload = {\r\n      patientId: Number(newAppointment.patientId),\r\n      doctorId: Number(newAppointment.doctorId),\r\n      meetingLink: meetLink,\r\n      sessionDuration: newAppointment.sessionDuration,\r\n      status: newAppointment.status,\r\n      createdAt: start.toISOString(),\r\n      updatedAt: start.toISOString()\r\n    };\r\n    await axios.post(BASE_URL + '/telemedicines', payload);\r\n    setOpenModal(false);\r\n    fetchAppointments();\r\n  };\r\n\r\n  // Update handleSelectEvent to show modal with details\r\n  const handleSelectEvent = (event) => {\r\n    setSelectedEvent(event);\r\n    setShowEventModal(true);\r\n  };\r\n\r\n  const handleCopyLink = () => {\r\n    if (meetLink) {\r\n      navigator.clipboard.writeText(meetLink);\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 1500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 1100, mx: 'auto', mt: 4, p: 3 }}>\r\n     \r\n      <Paper sx={{ p: 2, mb: 3 }}>\r\n         <Typography variant=\"h4\" gutterBottom>\r\n        <VideocamIcon sx={{ mr: 1 }} /> Telemedicine Consultation\r\n      </Typography>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        startIcon={<AddIcon />}\r\n        sx={{ mb: 2 }}\r\n        onClick={handleOpenModal}\r\n      >\r\n        New Appointment\r\n      </Button>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Telemedicine Appointments Calendar\r\n        </Typography>\r\n        <div style={{ height: 500 }}>\r\n          <Calendar\r\n            localizer={localizer}\r\n            events={calendarEvents}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            titleAccessor=\"title\"\r\n            style={{ height: 480 }}\r\n            onSelectEvent={handleSelectEvent}\r\n            tooltipAccessor={event => event.meetingLink ? `Click to join: ${event.meetingLink}` : ''}\r\n            eventPropGetter={event => ({\r\n              style: {\r\n                backgroundColor: event.status === 'Scheduled' ? '#1976d2' : '#43a047',\r\n                color: '#fff',\r\n                borderRadius: 6,\r\n                border: 'none'\r\n              }\r\n            })}\r\n          />\r\n        </div>\r\n      </Paper>\r\n\r\n      {/* New Appointment Modal */}\r\n      <Dialog open={openModal} onClose={() => setOpenModal(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>New Telemedicine Appointment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            select\r\n            label=\"Patient\"\r\n            value={newAppointment.patientId}\r\n            onChange={e => setNewAppointment(a => ({ ...a, patientId: e.target.value }))}\r\n            fullWidth\r\n            sx={{ mb: 2, mt: 1 }}\r\n          >\r\n            {patients.map(p => (\r\n              <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Doctor\"\r\n            value={newAppointment.doctorId}\r\n            onChange={e => setNewAppointment(a => ({ ...a, doctorId: e.target.value }))}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          >\r\n            {doctors.map(d => (\r\n              <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Start Date & Time\"\r\n            type=\"datetime-local\"\r\n            value={newAppointment.start || ''}\r\n            onChange={e => setNewAppointment(a => ({ ...a, start: e.target.value }))}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <TextField\r\n            label=\"Session Duration (minutes)\"\r\n            type=\"number\"\r\n            value={newAppointment.sessionDuration}\r\n            onChange={e => setNewAppointment(a => ({ ...a, sessionDuration: Number(e.target.value) }))}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n            inputProps={{ min: 1 }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenModal(false)}>Cancel</Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleCreateAppointment}\r\n            disabled={\r\n              !newAppointment.patientId ||\r\n              !newAppointment.doctorId ||\r\n              !newAppointment.start\r\n            }\r\n          >\r\n            Create & Generate Meet Link\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Event Details Modal */}\r\n      <Dialog open={showEventModal} onClose={() => setShowEventModal(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle sx={{ bgcolor: '#1976d2', color: '#fff', fontWeight: 700 }}>\r\n          Telemedicine Appointment Details\r\n        </DialogTitle>\r\n        <DialogContent sx={{ py: 3 }}>\r\n          {selectedEvent && (\r\n            <Box>\r\n              <Typography variant=\"h6\" sx={{ mb: 2, color: '#1976d2', fontWeight: 600 }}>\r\n                <VideocamIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Video Consultation\r\n              </Typography>\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"subtitle1\" sx={{ fontWeight: 500 }}>\r\n                  <b>Patient:</b> {patients.find(p => p.id === selectedEvent.id || p.id === selectedEvent.patientId)?.fullName || selectedEvent.patientId}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" sx={{ fontWeight: 500 }}>\r\n                  <b>Doctor:</b> {doctors.find(d => d.id === selectedEvent.id || d.id === selectedEvent.doctorId)?.fullName || selectedEvent.doctorId}\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                  <b>Start:</b> {selectedEvent.start ? new Date(selectedEvent.start).toLocaleString() : '-'}\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                  <b>Duration:</b> {selectedEvent.sessionDuration || 30} minutes\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\r\n                  <b>Status:</b> <span style={{\r\n                    color: selectedEvent.status === 'Scheduled' ? '#1976d2' : '#43a047',\r\n                    fontWeight: 600\r\n                  }}>{selectedEvent.status}</span>\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                  <b>Meeting Link:</b>{' '}\r\n                  {selectedEvent.meetingLink ? (\r\n                    <a href={selectedEvent.meetingLink} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#1976d2', wordBreak: 'break-all' }}>\r\n                      {selectedEvent.meetingLink}\r\n                    </a>\r\n                  ) : (\r\n                    <span style={{ color: '#888' }}>-</span>\r\n                  )}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ justifyContent: 'center', pb: 3 }}>\r\n          <Button\r\n            onClick={() => setShowEventModal(false)}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            sx={{ minWidth: 120, fontWeight: 600, mr: 2 }}\r\n          >\r\n            Close\r\n          </Button>\r\n          {selectedEvent && selectedEvent.meetingLink && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              sx={{\r\n                minWidth: 220,\r\n                fontWeight: 700,\r\n                fontSize: 20,\r\n                py: 2,\r\n                bgcolor: '#1976d2',\r\n                boxShadow: '0 4px 16px rgba(25,118,210,0.12)',\r\n                '&:hover': { bgcolor: '#115293' }\r\n              }}\r\n              startIcon={<VideocamIcon sx={{ fontSize: 28 }} />}\r\n              onClick={() => window.open(selectedEvent.meetingLink, '_blank')}\r\n            >\r\n              Join Call\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    {/*   <Paper sx={{ p: 2, mb: 3, display: 'flex', alignItems: 'center', gap: 2 }}>\r\n        <Avatar src={dummyPatient.avatar}>{dummyPatient.name[0]}</Avatar>\r\n        <Box>\r\n          <Typography variant=\"subtitle1\">{dummyPatient.name}</Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">Patient ID: {dummyPatient.id}</Typography>\r\n        </Box>\r\n        {!inCall && (\r\n          <Box sx={{ ml: 'auto', display: 'flex', gap: 1 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<VideocamIcon />}\r\n              onClick={() => startCall('video')}\r\n            >\r\n              New Video Call\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              startIcon={<CallIcon />}\r\n              onClick={() => startCall('audio')}\r\n            >\r\n              New Audio Call\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"info\"\r\n              startIcon={<VideoCallOutlinedIcon />}\r\n              onClick={createMeetEvent}\r\n            >\r\n              Create Google Meet\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"info\"\r\n              startIcon={<HistoryIcon />}\r\n              onClick={() => setShowHistory(h => !h)}\r\n            >\r\n              {showHistory ? \"Hide\" : \"Show\"} Last Calls\r\n            </Button>\r\n          </Box>\r\n        )}\r\n        {inCall && (\r\n          <Box sx={{ ml: 'auto', display: 'flex', gap: 1 }}>\r\n            <IconButton color={videoEnabled ? \"primary\" : \"default\"} onClick={toggleVideo}>\r\n              {videoEnabled ? <VideocamIcon /> : <VideocamOffIcon />}\r\n            </IconButton>\r\n            <IconButton color={audioEnabled ? \"primary\" : \"default\"} onClick={toggleAudio}>\r\n              {audioEnabled ? <MicIcon /> : <MicOffIcon />}\r\n            </IconButton>\r\n            <IconButton color=\"error\" onClick={endCall}>\r\n              <CallEndIcon />\r\n            </IconButton>\r\n            <IconButton color={showChat ? \"primary\" : \"default\"} onClick={() => setShowChat(c => !c)}>\r\n              <ChatIcon />\r\n            </IconButton>\r\n          </Box>\r\n        )}\r\n      </Paper> */}\r\n\r\n      {/* Show Google Meet link and invitation actions */}\r\n      {!inCall && meetLink && (\r\n        <Paper sx={{ p: 2, mb: 3, display: 'flex', alignItems: 'center', gap: 2, bgcolor: '#e3f2fd' }}>\r\n          <Typography variant=\"body1\" sx={{ flex: 1 }}>\r\n            Google Meet Link: <a href={meetLink} target=\"_blank\" rel=\"noopener noreferrer\">{meetLink}</a>\r\n          </Typography>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={copied ? \"success\" : \"primary\"}\r\n            startIcon={<ContentCopyIcon />}\r\n            onClick={handleCopyLink}\r\n          >\r\n            {copied ? \"Copied!\" : \"Copy Link\"}\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n\r\n      {/* Last Video Calls List */}\r\n      {!inCall && showHistory && (\r\n        <Paper sx={{ mb: 3, p: 2 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            <HistoryIcon sx={{ mr: 1 }} /> Last Video/Audio Calls\r\n          </Typography>\r\n          <List>\r\n            {dummyCallHistory.map(call => (\r\n              <React.Fragment key={call.id}>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar src={call.patientAvatar}>{call.patientName[0]}</Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={`${call.patientName} (${call.type === 'video' ? 'Video' : 'Audio'})`}\r\n                    secondary={\r\n                      <>\r\n                        {new Date(call.date).toLocaleString()} &nbsp;|&nbsp; Duration: {call.duration} &nbsp;|&nbsp; Status: {call.status}\r\n                      </>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n                <Divider />\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        </Paper>\r\n      )}\r\n\r\n      {inCall && (\r\n        <Box sx={{ display: 'flex', gap: 2 }}>\r\n          <Box sx={{ flex: 2, bgcolor: '#222', borderRadius: 2, p: 1, minHeight: 320, position: 'relative' }}>\r\n            <video\r\n              ref={remoteVideoRef}\r\n              autoPlay\r\n              playsInline\r\n              style={{ width: '100%', height: 300, background: '#111', borderRadius: 8 }}\r\n              poster=\"https://dummyimage.com/640x360/222/fff&text=Remote+Video\"\r\n            />\r\n            <video\r\n              ref={localVideoRef}\r\n              autoPlay\r\n              muted\r\n              playsInline\r\n              style={{\r\n                width: 120,\r\n                height: 90,\r\n                position: 'absolute',\r\n                bottom: 16,\r\n                right: 16,\r\n                border: '2px solid #fff',\r\n                borderRadius: 8,\r\n                background: '#333'\r\n              }}\r\n              poster=\"https://dummyimage.com/120x90/333/fff&text=You\"\r\n            />\r\n          </Box>\r\n          {showChat && (\r\n            <Box sx={{ flex: 1, bgcolor: '#fafafa', borderRadius: 2, p: 2, display: 'flex', flexDirection: 'column', height: 320 }}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>Chat</Typography>\r\n              <Box sx={{ flex: 1, overflowY: 'auto', mb: 1 }}>\r\n                {messages.map((msg, idx) => (\r\n                  <Box key={idx} sx={{ mb: 1, textAlign: msg.sender === 'doctor' ? 'right' : 'left' }}>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      sx={{\r\n                        display: 'inline-block',\r\n                        bgcolor: msg.sender === 'doctor' ? '#1976d2' : '#e0e0e0',\r\n                        color: msg.sender === 'doctor' ? '#fff' : '#222',\r\n                        px: 1.5, py: 0.5, borderRadius: 2\r\n                      }}\r\n                    >\r\n                      {msg.text}\r\n                    </Typography>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n              <Box sx={{ display: 'flex', gap: 1 }}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  placeholder=\"Type a message...\"\r\n                  value={chatInput}\r\n                  onChange={e => setChatInput(e.target.value)}\r\n                  onKeyDown={e => { if (e.key === 'Enter') handleSendMessage(); }}\r\n                />\r\n                <Button variant=\"contained\" onClick={handleSendMessage}>Send</Button>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n\r\n      {!inCall && !showHistory && (\r\n        <Box sx={{ mt: 4, textAlign: 'center', color: 'text.secondary' }}>\r\n          <Typography variant=\"body1\">\r\n            Select a patient and start a video or audio call.<br />\r\n            <span style={{ fontSize: 24 }}>📞</span>\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\nexport default Telemedicine;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box, Button, Typography, TextField, Paper, MenuItem, Table, TableBody, TableCell, TableContainer,\r\n  TableHead, TableRow, IconButton, Dialog, DialogTitle, DialogContent, DialogActions,\r\n  Stack\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst Billing = () => {\r\n  const [selectedPatient, setSelectedPatient] = useState('');\r\n  const [billItems, setBillItems] = useState([]);\r\n  const [service, setService] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  // Invoice DataTable states\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [loadingInvoices, setLoadingInvoices] = useState(true);\r\n  const [selectedInvoice, setSelectedInvoice] = useState(null);\r\n  const [viewInvoiceDialog, setViewInvoiceDialog] = useState(false);\r\n\r\n  // Add these states for more invoice fields\r\n  const [clinicId, setClinicId] = useState('');\r\n  const [discount, setDiscount] = useState({ amount: 0, percentage: 0, discountReason: '' });\r\n  const [taxAmount, setTaxAmount] = useState(0);\r\n  const [paymentMethod, setPaymentMethod] = useState('Cash');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const [notes, setNotes] = useState('');\r\n\r\n  // New states for patients and clinics\r\n  const [patients, setPatients] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  const services = [\r\n    { id: 's1', name: 'Consultation', price: 50 },\r\n    { id: 's2', name: 'X-Ray', price: 100 },\r\n    { id: 's3', name: 'Cleaning', price: 80 },\r\n    { id: 's4', name: 'Filling', price: 120 },\r\n    { id: 's5', name: 'Root Canal', price: 300 },\r\n    { id: 's6', name: 'Crown', price: 500 },\r\n    { id: 's7', name: 'Bridge', price: 700 },\r\n    { id: 's8', name: 'Extraction', price: 150 },\r\n    { id: 's9', name: 'Whitening', price: 200 },\r\n    { id: 's10', name: 'Implant', price: 1200 },\r\n    { id: 's11', name: 'Braces', price: 2500 },\r\n    { id: 's12', name: 'Veneers', price: 900 },\r\n    { id: 's13', name: 'Fluoride Treatment', price: 60 },\r\n    { id: 's14', name: 'Sealant', price: 75 },\r\n    { id: 's15', name: 'Periodontal Therapy', price: 350 }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchInvoices();\r\n    fetchPatients();\r\n    fetchClinics();\r\n  }, []);\r\n\r\n  const fetchInvoices = async () => {\r\n    setLoadingInvoices(true);\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/invoices`);\r\n      setInvoices(res.data);\r\n    } catch {\r\n      setInvoices([]);\r\n    }\r\n    setLoadingInvoices(false);\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/patients`);\r\n      setPatients(res.data);\r\n    } catch {\r\n      setPatients([]);\r\n    }\r\n  };\r\n\r\n  const fetchClinics = async () => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/clinics`);\r\n      setClinics(res.data);\r\n    } catch {\r\n      setClinics([]);\r\n    }\r\n  };\r\n\r\n  const handleAddItem = () => {\r\n    if (!service) return;\r\n    const selectedService = services.find(s => s.id === service);\r\n    setBillItems([\r\n      ...billItems,\r\n      {\r\n        id: Date.now(),\r\n        name: selectedService.name,\r\n        price: selectedService.price,\r\n        quantity: quantity,\r\n        total: selectedService.price * quantity\r\n      }\r\n    ]);\r\n    setService('');\r\n    setQuantity(1);\r\n  };\r\n\r\n  const handleRemoveItem = (id) => {\r\n    setBillItems(billItems.filter(item => item.id !== id));\r\n  };\r\n\r\n  const totalAmount = billItems.reduce((sum, item) => sum + item.total, 0);\r\n\r\n  const handleGenerateBill = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  // Invoice DataTable handlers\r\n  const handleViewInvoice = (invoice) => {\r\n    setSelectedInvoice(invoice);\r\n    setViewInvoiceDialog(true);\r\n  };\r\n\r\n  const handleCloseInvoiceDialog = () => {\r\n    setViewInvoiceDialog(false);\r\n    setSelectedInvoice(null);\r\n  };\r\n\r\n  const handleDownloadInvoicePDF = (invoice) => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(18);\r\n    doc.text('Invoice', 14, 20);\r\n    doc.setFontSize(12);\r\n    doc.text(`Invoice Number: ${invoice.invoiceNumber}`, 14, 35);\r\n    doc.text(`Patient ID: ${invoice.patientId}`, 14, 45);\r\n    doc.text(`Clinic ID: ${invoice.clinicId}`, 14, 55);\r\n    doc.text(`Invoice Date: ${new Date(invoice.invoiceDate).toLocaleDateString()}`, 14, 65);\r\n    doc.text(`Due Date: ${new Date(invoice.dueDate).toLocaleDateString()}`, 14, 75);\r\n    doc.text(`Payment Status: ${invoice.paymentStatus}`, 14, 85);\r\n    doc.text(`Payment Method: ${invoice.paymentMethod || '-'}`, 14, 95);\r\n\r\n    // Use autoTable as a function:\r\n    autoTable(doc, {\r\n      startY: 110,\r\n      head: [['Item', 'Description', 'Qty', 'Unit Price', 'Total']],\r\n      body: invoice.items.map(item => [\r\n        item.itemType,\r\n        item.itemDescription,\r\n        item.quantity,\r\n        item.unitPrice,\r\n        item.totalPrice\r\n      ]),\r\n    });\r\n\r\n    let y = doc.lastAutoTable ? doc.lastAutoTable.finalY + 10 : 130;\r\n    doc.text(`Subtotal: $${invoice.subTotal}`, 14, y);\r\n    y += 8;\r\n    doc.text(`Discount: $${invoice.discount?.amount || 0} (${invoice.discount?.percentage || 0}%)`, 14, y);\r\n    y += 8;\r\n    doc.text(`Tax: $${invoice.taxAmount}`, 14, y);\r\n    y += 8;\r\n    doc.text(`Grand Total: $${invoice.grandTotal}`, 14, y);\r\n    y += 8;\r\n    doc.text(`Notes: ${invoice.notes || '-'}`, 14, y);\r\n\r\n    doc.save(`invoice_${invoice.invoiceNumber}.pdf`);\r\n  };\r\n\r\n  // Helper functions to get names by id\r\n  const getPatientName = (id) => {\r\n    const p = patients.find(p => String(p.id) === String(id));\r\n    return p ? (p.fullName || p.name) : id;\r\n  };\r\n  const getClinicName = (id) => {\r\n    const c = clinics.find(c => String(c.id) === String(id));\r\n    return c ? c.name : id;\r\n  };\r\n\r\n  const invoiceColumns = [\r\n    { field: 'invoiceNumber', headerName: 'Invoice #', width: 140 },\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 180,\r\n      valueGetter: (params) => getPatientName(params.row.patientId)\r\n    },\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: 180,\r\n      valueGetter: (params) => getClinicName(params.row.clinicId)\r\n    },\r\n    {\r\n      field: 'grandTotal',\r\n      headerName: 'Total',\r\n      width: 100,\r\n      valueFormatter: (params) => `$${params.value}`\r\n    },\r\n    {\r\n      field: 'paymentStatus',\r\n      headerName: 'Status',\r\n      width: 110,\r\n      renderCell: (params) => (\r\n        <span style={{\r\n          color: params.value === 'Paid' ? '#388e3c' : '#d32f2f',\r\n          fontWeight: 'bold'\r\n        }}>\r\n          {params.value}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      field: 'invoiceDate',\r\n      headerName: 'Date',\r\n      width: 120,\r\n      valueFormatter: (params) => new Date(params.value).toLocaleDateString()\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton color=\"primary\" onClick={() => handleViewInvoice(params.row)}>\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n          <IconButton color=\"secondary\" onClick={() => handleDownloadInvoicePDF(params.row)}>\r\n            <PictureAsPdfIcon />\r\n          </IconButton>\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 1000, mx: 'auto', mt: 4, p: { xs: 1, sm: 3 } }}>\r\n      \r\n      <Paper sx={{ p: { xs: 2, sm: 3 }, mb: 4, boxShadow: 3, borderRadius: 3 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <PictureAsPdfIcon sx={{ color: '#1976d2', fontSize: 38, mr: 1 }} />\r\n        <Typography variant=\"h4\" sx={{ color: '#1976d2', fontWeight: 700 }}>\r\n          Patient Billing & Invoices\r\n        </Typography>\r\n      </Box>\r\n        <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', mb: 2 }}>\r\n          <TextField\r\n            select\r\n            label=\"Select Patient\"\r\n            value={selectedPatient}\r\n            onChange={e => setSelectedPatient(e.target.value)}\r\n            sx={{ minWidth: 220, flex: 1 }}\r\n          >\r\n            {patients.map(p => (\r\n              <MenuItem key={p.id} value={p.id}>\r\n                {p.fullName || p.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Select Clinic\"\r\n            value={clinicId}\r\n            onChange={e => setClinicId(e.target.value)}\r\n            sx={{ minWidth: 180, flex: 1 }}\r\n          >\r\n            {clinics.map(c => (\r\n              <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Service\"\r\n            value={service}\r\n            onChange={e => setService(e.target.value)}\r\n            sx={{ minWidth: 180, flex: 1 }}\r\n          >\r\n            {services.map(s => (\r\n              <MenuItem key={s.id} value={s.id}>{s.name} (${s.price})</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Quantity\"\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={e => setQuantity(Number(e.target.value))}\r\n            sx={{ width: 110 }}\r\n            inputProps={{ min: 1 }}\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleAddItem}\r\n            sx={{ height: 40, fontWeight: 600, minWidth: 120 }}\r\n            disabled={!service}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Box>\r\n        <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', mb: 2 }}>\r\n          <TextField\r\n            label=\"Discount Amount\"\r\n            type=\"number\"\r\n            value={discount.amount}\r\n            onChange={e => setDiscount({ ...discount, amount: Number(e.target.value) })}\r\n            sx={{ width: 140 }}\r\n            inputProps={{ min: 0 }}\r\n          />\r\n          <TextField\r\n            label=\"Discount %\"\r\n            type=\"number\"\r\n            value={discount.percentage}\r\n            onChange={e => setDiscount({ ...discount, percentage: Number(e.target.value) })}\r\n            sx={{ width: 120 }}\r\n            inputProps={{ min: 0, max: 100 }}\r\n          />\r\n          <TextField\r\n            label=\"Discount Reason\"\r\n            value={discount.discountReason}\r\n            onChange={e => setDiscount({ ...discount, discountReason: e.target.value })}\r\n            sx={{ minWidth: 180, flex: 1 }}\r\n          />\r\n          <TextField\r\n            label=\"Tax Amount\"\r\n            type=\"number\"\r\n            value={taxAmount}\r\n            onChange={e => setTaxAmount(Number(e.target.value))}\r\n            sx={{ width: 120 }}\r\n            inputProps={{ min: 0 }}\r\n          />\r\n          <TextField\r\n            select\r\n            label=\"Payment Method\"\r\n            value={paymentMethod}\r\n            onChange={e => setPaymentMethod(e.target.value)}\r\n            sx={{ width: 140 }}\r\n          >\r\n            <MenuItem value=\"Cash\">Cash</MenuItem>\r\n            <MenuItem value=\"Card\">Card</MenuItem>\r\n            <MenuItem value=\"Insurance\">Insurance</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            label=\"Due Date\"\r\n            type=\"date\"\r\n            value={dueDate}\r\n            onChange={e => setDueDate(e.target.value)}\r\n            sx={{ width: 150 }}\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n        </Box>\r\n        <TextField\r\n          label=\"Notes\"\r\n          value={notes}\r\n          onChange={e => setNotes(e.target.value)}\r\n          fullWidth\r\n          multiline\r\n          rows={2}\r\n          sx={{ mb: 2 }}\r\n        />\r\n        <TableContainer component={Paper} sx={{ mb: 2, boxShadow: 0 }}>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ fontWeight: 700 }}>Service</TableCell>\r\n                <TableCell sx={{ fontWeight: 700 }}>Price</TableCell>\r\n                <TableCell sx={{ fontWeight: 700 }}>Quantity</TableCell>\r\n                <TableCell sx={{ fontWeight: 700 }}>Total</TableCell>\r\n                <TableCell align=\"right\" sx={{ fontWeight: 700 }}>Remove</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {billItems.map(item => (\r\n                <TableRow key={item.id}>\r\n                  <TableCell>{item.name}</TableCell>\r\n                  <TableCell>${item.price}</TableCell>\r\n                  <TableCell>{item.quantity}</TableCell>\r\n                  <TableCell>${item.total}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <IconButton color=\"error\" onClick={() => handleRemoveItem(item.id)}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {billItems.length === 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align=\"center\">No services added</TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Typography variant=\"h6\" align=\"right\" sx={{ mb: 2, color: '#1976d2', fontWeight: 700 }}>\r\n          Total: ${totalAmount}\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n          onClick={handleGenerateBill}\r\n          disabled={!selectedPatient || !clinicId || billItems.length === 0}\r\n          sx={{ fontWeight: 700, minWidth: 180, fontSize: 16 }}\r\n        >\r\n          Generate Bill\r\n        </Button>\r\n      </Paper>\r\n\r\n      {/* Invoice DataTable */}\r\n      \r\n      <Paper sx={{ p: 2, mb: 4, boxShadow: 2, borderRadius: 2 }}>\r\n        <Typography variant=\"h5\" gutterBottom sx={{ color: '#1976d2', fontWeight: 700 }}>\r\n        Invoices\r\n      </Typography>\r\n        <div style={{ height: 420, width: '100%' }}>\r\n          <DataGrid\r\n            rows={invoices}\r\n            columns={invoiceColumns}\r\n            pageSize={8}\r\n            rowsPerPageOptions={[8, 16, 32]}\r\n            loading={loadingInvoices}\r\n            getRowId={row => row.id}\r\n            disableSelectionOnClick\r\n            autoHeight={false}\r\n            sx={{\r\n              fontSize: 15,\r\n              '& .MuiDataGrid-columnHeaders': { bgcolor: '#e3f2fd', fontWeight: 700 },\r\n              '& .MuiDataGrid-row:hover': { bgcolor: '#f0f6ff' }\r\n            }}\r\n          />\r\n        </div>\r\n      </Paper>\r\n\r\n      {/* View Invoice Dialog */}\r\n      <Dialog open={viewInvoiceDialog} onClose={handleCloseInvoiceDialog} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <PictureAsPdfIcon sx={{ color: '#1976d2' }} />\r\n            <span>Invoice Details</span>\r\n          </Stack>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          {selectedInvoice && (\r\n            <Box sx={{ bgcolor: '#fafdff', borderRadius: 2, p: 2, mb: 2 }}>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ color: '#1976d2', fontWeight: 700 }}>\r\n                Invoice #{selectedInvoice.invoiceNumber}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Patient: {getPatientName(selectedInvoice.patientId)} | Clinic: {getClinicName(selectedInvoice.clinicId)}\r\n              </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                Date: {new Date(selectedInvoice.invoiceDate).toLocaleDateString()}<br />\r\n                Due: {new Date(selectedInvoice.dueDate).toLocaleDateString()}<br />\r\n                Status: <b>{selectedInvoice.paymentStatus}</b><br />\r\n                Payment Method: {selectedInvoice.paymentMethod || '-'}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" sx={{ mt: 2, fontWeight: 600 }}>Items:</Typography>\r\n              <TableContainer component={Paper} sx={{ mb: 2, boxShadow: 0 }}>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell sx={{ fontWeight: 700 }}>Type</TableCell>\r\n                      <TableCell sx={{ fontWeight: 700 }}>Description</TableCell>\r\n                      <TableCell sx={{ fontWeight: 700 }}>Qty</TableCell>\r\n                      <TableCell sx={{ fontWeight: 700 }}>Unit Price</TableCell>\r\n                      <TableCell sx={{ fontWeight: 700 }}>Total</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {selectedInvoice.items.map((item, idx) => (\r\n                      <TableRow key={idx}>\r\n                        <TableCell>{item.itemType}</TableCell>\r\n                        <TableCell>{item.itemDescription}</TableCell>\r\n                        <TableCell>{item.quantity}</TableCell>\r\n                        <TableCell>${item.unitPrice}</TableCell>\r\n                        <TableCell>${item.totalPrice}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <Typography variant=\"body2\">\r\n                Subtotal: <b>${selectedInvoice.subTotal}</b><br />\r\n                Discount: <b>${selectedInvoice.discount?.amount || 0} ({selectedInvoice.discount?.percentage || 0}%)</b><br />\r\n                Tax: <b>${selectedInvoice.taxAmount}</b><br />\r\n                <span style={{ fontSize: 18, fontWeight: 'bold' }}>Grand Total: ${selectedInvoice.grandTotal}</span>\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n                Notes: {selectedInvoice.notes || '-'}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseInvoiceDialog} variant=\"outlined\" color=\"secondary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            startIcon={<PictureAsPdfIcon />}\r\n            onClick={() => handleDownloadInvoicePDF(selectedInvoice)}\r\n          >\r\n            Download PDF\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Bill Preview Dialog */}\r\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <AddIcon sx={{ color: '#1976d2' }} />\r\n            <span>Bill Preview</span>\r\n          </Stack>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ bgcolor: '#fafdff', borderRadius: 2, p: 2 }}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Patient: {getPatientName(selectedPatient)}\r\n            </Typography>\r\n            <Table size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Service</TableCell>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Price</TableCell>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Quantity</TableCell>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Total</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {billItems.map(item => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>{item.name}</TableCell>\r\n                    <TableCell>${item.price}</TableCell>\r\n                    <TableCell>{item.quantity}</TableCell>\r\n                    <TableCell>${item.total}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n            <Typography variant=\"h6\" align=\"right\" sx={{ mt: 2, color: '#1976d2', fontWeight: 700 }}>\r\n              Total: ${totalAmount}\r\n            </Typography>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} variant=\"outlined\" color=\"secondary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={async () => {\r\n              // Prepare invoice object\r\n              const now = new Date();\r\n              const invoiceObj = {\r\n                invoiceNumber: `INV-${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}${now.getTime()}`,\r\n                patientId: Number(selectedPatient),\r\n                clinicId: Number(clinicId),\r\n                items: billItems.map((item, idx) => ({\r\n                  itemId: idx + 1,\r\n                  itemType: item.name,\r\n                  quantity: item.quantity,\r\n                  unitPrice: item.price,\r\n                  totalPrice: item.total,\r\n                  itemDescription: item.name\r\n                })),\r\n                subTotal: totalAmount,\r\n                discount,\r\n                taxAmount,\r\n                grandTotal: totalAmount - (discount.amount || 0) + Number(taxAmount),\r\n                paymentStatus: 'Pending',\r\n                paymentMethod,\r\n                transactionId: null,\r\n                invoiceDate: now.toISOString(),\r\n                dueDate: dueDate ? new Date(dueDate).toISOString() : null,\r\n                notes,\r\n                createdAt: now.toISOString(),\r\n                updatedAt: now.toISOString()\r\n              };\r\n              try {\r\n                await axios.post(`${BASE_URL}/invoices`, invoiceObj);\r\n                setOpenDialog(false);\r\n                fetchInvoices();\r\n                setBillItems([]);\r\n              } catch (e) {\r\n                alert('Failed to save invoice');\r\n              }\r\n            }}\r\n            disabled={\r\n              !selectedPatient ||\r\n              !clinicId ||\r\n              billItems.length === 0\r\n            }\r\n            sx={{ fontWeight: 700, minWidth: 180, fontSize: 16 }}\r\n          >\r\n            Confirm & Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Billing;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box, Typography, Button, Paper, Dialog, DialogTitle, DialogContent, DialogActions,\r\n  TextField, MenuItem, Avatar, IconButton, Tooltip\r\n} from '@mui/material';\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst imagingTypes = [\r\n  { value: 'xray', label: 'X-Ray' },\r\n  { value: 'panoramic', label: 'Panoramic' },\r\n  { value: 'intraoral', label: 'Intraoral Camera' },\r\n  { value: 'cbct', label: 'CBCT' }\r\n];\r\nconst statusOptions = ['Pending', 'Reviewed', 'Flagged'];\r\n\r\nconst DentalImaging = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openView, setOpenView] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [form, setForm] = useState({\r\n    patientId: '',\r\n    doctorId: '',\r\n    type: '',\r\n    imageType: '',\r\n    date: '',\r\n    uploadDate: '',\r\n    notes: '',\r\n    diagnosisNotes: '',\r\n    imageUrl: '',\r\n    status: 'Pending'\r\n  });\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n    fetchPatients();\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  const fetchImages = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/dental-imaging`);\r\n      setImages(res.data);\r\n    } catch {\r\n      setImages([]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/patients`);\r\n      setPatients(res.data);\r\n    } catch {\r\n      setPatients([]);\r\n    }\r\n  };\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/doctors`);\r\n      setDoctors(res.data);\r\n    } catch {\r\n      setDoctors([]);\r\n    }\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setForm({\r\n      patientId: '', doctorId: '', type: '', imageType: '', date: '', uploadDate: '', notes: '', diagnosisNotes: '', imageUrl: '', status: 'Pending'\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setSelectedFile(null);\r\n  };\r\n\r\n  const handleFormChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAddImage = async () => {\r\n    if (!form.patientId || !form.type || !selectedFile) return;\r\n    const payload = {\r\n      patientId: form.patientId,\r\n      doctorId: form.doctorId,\r\n      imageType: imagingTypes.find(t => t.value === form.type)?.label || form.type,\r\n      type: form.type,\r\n      uploadDate: form.uploadDate || new Date().toISOString(),\r\n      notes: form.notes,\r\n      diagnosisNotes: form.diagnosisNotes,\r\n      status: form.status,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    const formData = new FormData();\r\n    Object.entries(payload).forEach(([key, value]) => formData.append(key, value));\r\n    formData.append('image', selectedFile); // <-- field name changed to 'image'\r\n\r\n    // Show cURL for debugging\r\n    const curlParts = [\r\n      `curl -X POST \"${BASE_URL}/dental-imaging\"`,\r\n      `-H \"Content-Type: multipart/form-data\"`,\r\n      ...Object.entries(payload).map(([key, value]) => `-F \"${key}=${value}\"`),\r\n      selectedFile ? `-F \"image=@${selectedFile.name}\"` : ''\r\n    ];\r\n    console.log('cURL:\\n' + curlParts.filter(Boolean).join(' \\\\\\n'));\r\n\r\n    await axios.post(`${BASE_URL}/dental-imaging`, formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' }\r\n    });\r\n    setOpenDialog(false);\r\n    setSelectedFile(null);\r\n    fetchImages();\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await axios.delete(`${BASE_URL}/dental-imaging/${id}`);\r\n    fetchImages();\r\n  };\r\n\r\n  const handleView = (img) => {\r\n    setSelectedImage(img);\r\n    setOpenView(true);\r\n  };\r\n\r\n  const handleCloseView = () => setOpenView(false);\r\n\r\n  // Drag and drop logic\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    setSelectedFile(file);\r\n    const reader = new FileReader();\r\n    reader.onload = (ev) => {\r\n      setForm(f => ({ ...f, imageUrl: ev.target.result }));\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const file = e.dataTransfer.files[0];\r\n    if (!file) return;\r\n    setSelectedFile(file);\r\n    const reader = new FileReader();\r\n    reader.onload = (ev) => {\r\n      setForm(f => ({ ...f, imageUrl: ev.target.result }));\r\n    };\r\n    reader.readAsDataURL(file);\r\n    setDragActive(false);\r\n  };\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(true);\r\n  };\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n  };\r\n\r\n  // Helper functions for names\r\n  const getPatientName = (id) => {\r\n    const p = patients.find(p => String(p.id) === String(id));\r\n    return p ? (p.fullName || p.name) : id;\r\n  };\r\n  const getDoctorName = (id) => {\r\n    const d = doctors.find(d => String(d.id) === String(id));\r\n    return d ? (d.fullName || d.name) : id;\r\n  };\r\n\r\n  // DataGrid columns\r\n  const columns = [\r\n    {\r\n      field: 'imageUrl',\r\n      headerName: 'Preview',\r\n      width: 90,\r\n      renderCell: (params) => {\r\n        let url = params.value;\r\n        // If the imageUrl contains 'uploads\\', extract the filename and build the full URL\r\n        if (url && url.startsWith('uploads\\\\')) {\r\n          const filename = url.replace('uploads\\\\', '').replace('uploads/', '');\r\n          url = `${BASE_URL}/dental-imaging/image/${filename}`;\r\n        }\r\n        return (\r\n          <Avatar\r\n            src={url}\r\n            variant=\"rounded\"\r\n            sx={{ width: 56, height: 40, bgcolor: '#e3f2fd' }}\r\n          />\r\n        );\r\n      }\r\n    },\r\n    {\r\n      field: 'patientId',\r\n      headerName: 'Patient',\r\n      width: 150,\r\n      valueGetter: (params) => getPatientName(params.row.patientId)\r\n    },\r\n    {\r\n      field: 'doctorId',\r\n      headerName: 'Doctor',\r\n      width: 150,\r\n      valueGetter: (params) => getDoctorName(params.row.doctorId)\r\n    },\r\n    {\r\n      field: 'imageType',\r\n      headerName: 'Type',\r\n      width: 120\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 110,\r\n      renderCell: (params) => (\r\n        <span style={{\r\n          color: params.value === 'Reviewed' ? '#388e3c' : params.value === 'Flagged' ? '#d32f2f' : '#1976d2',\r\n          fontWeight: 'bold'\r\n        }}>\r\n          {params.value}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      field: 'uploadDate',\r\n      headerName: 'Upload Date',\r\n      width: 130,\r\n      valueFormatter: (params) => params.value ? new Date(params.value).toLocaleDateString() : '-'\r\n    },\r\n    {\r\n      field: 'diagnosisNotes',\r\n      headerName: 'Diagnosis Notes',\r\n      width: 220\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 120,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <Tooltip title=\"View\">\r\n            <IconButton color=\"primary\" onClick={() => handleView(params.row)}>\r\n              <VisibilityIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton color=\"error\" onClick={() => handleDelete(params.row.id)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 1100, mx: 'auto', mt: 4, p: 3 }}>\r\n      \r\n      <Paper sx={{ p: 3, mb: 3, boxShadow: '0 4px 24px rgba(25,118,210,0.08)' }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <AddPhotoAlternateIcon sx={{ color: '#1976d2', fontSize: 38, mr: 1 }} />\r\n        <Typography variant=\"h4\" sx={{ color: '#1976d2', fontWeight: 700 }}>\r\n          Dental Imaging\r\n        </Typography>\r\n      </Box>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<AddPhotoAlternateIcon />}\r\n          onClick={handleOpenDialog}\r\n          sx={{ mb: 2 }} // Add margin bottom to the button\r\n        >\r\n          Add New Image\r\n        </Button>\r\n        <div style={{ height: 480, width: '100%', background: '#fff', borderRadius: 8 }}>\r\n          <DataGrid\r\n            rows={images}\r\n            columns={columns}\r\n            pageSize={8}\r\n            rowsPerPageOptions={[8, 16, 32]}\r\n            loading={loading}\r\n            getRowId={row => row.id}\r\n            disableSelectionOnClick\r\n            autoHeight={false}\r\n            sx={{\r\n              fontSize: 15,\r\n              '& .MuiDataGrid-columnHeaders': { bgcolor: '#e3f2fd', fontWeight: 700 },\r\n              '& .MuiDataGrid-row:hover': { bgcolor: '#f0f6ff' }\r\n            }}\r\n          />\r\n        </div>\r\n      </Paper>\r\n\r\n      {/* Add Image Dialog */}\r\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Add Dental Image</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            select\r\n            label=\"Patient\"\r\n            name=\"patientId\"\r\n            value={form.patientId}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2, mt: 1 }}\r\n          >\r\n            {patients.map(p => (\r\n              <MenuItem key={p.id} value={p.id}>{p.fullName || p.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Doctor\"\r\n            name=\"doctorId\"\r\n            value={form.doctorId}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          >\r\n            {doctors.map(d => (\r\n              <MenuItem key={d.id} value={d.id}>{d.fullName || d.name}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            select\r\n            label=\"Imaging Type\"\r\n            name=\"type\"\r\n            value={form.type}\r\n            onChange={e => {\r\n              handleFormChange(e);\r\n              setForm(f => ({ ...f, imageType: imagingTypes.find(t => t.value === e.target.value)?.label || '' }));\r\n            }}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          >\r\n            {imagingTypes.map(t => (\r\n              <MenuItem key={t.value} value={t.value}>{t.label}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Status\"\r\n            name=\"status\"\r\n            select\r\n            value={form.status}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n          >\r\n            {statusOptions.map(opt => (\r\n              <MenuItem key={opt} value={opt}>{opt}</MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            label=\"Upload Date\"\r\n            name=\"uploadDate\"\r\n            type=\"datetime-local\"\r\n            value={form.uploadDate}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <TextField\r\n            label=\"Notes\"\r\n            name=\"notes\"\r\n            value={form.notes}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <TextField\r\n            label=\"Diagnosis Notes\"\r\n            name=\"diagnosisNotes\"\r\n            value={form.diagnosisNotes}\r\n            onChange={handleFormChange}\r\n            fullWidth\r\n            sx={{ mb: 2 }}\r\n            multiline\r\n            rows={2}\r\n          />\r\n          <Box\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            onDragLeave={handleDragLeave}\r\n            sx={{\r\n              mb: 2,\r\n              p: 2,\r\n              border: '2px dashed #1976d2',\r\n              borderRadius: 2,\r\n              textAlign: 'center',\r\n              bgcolor: dragActive ? '#e3f2fd' : '#fafafa',\r\n              color: '#1976d2',\r\n              cursor: 'pointer',\r\n              transition: 'background 0.2s'\r\n            }}\r\n          >\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              Drag &amp; drop image here, or click to select\r\n            </Typography>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              style={{ display: 'none' }}\r\n              id=\"dental-image-upload\"\r\n              onChange={handleImageUpload}\r\n            />\r\n            <label htmlFor=\"dental-image-upload\">\r\n              <Button variant=\"outlined\" component=\"span\" startIcon={<AddPhotoAlternateIcon />}>\r\n                Browse\r\n              </Button>\r\n            </label>\r\n          </Box>\r\n          {form.imageUrl && (\r\n            <Box sx={{ mb: 2 }}>\r\n              <img src={form.imageUrl} alt=\"Preview\" style={{ maxWidth: '100%', borderRadius: 8 }} />\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>Cancel</Button>\r\n          <Button variant=\"contained\" onClick={handleAddImage} disabled={!form.patientId || !form.type || !selectedFile}>\r\n            Add Image\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* View Image Dialog */}\r\n      <Dialog open={openView} onClose={handleCloseView} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Image Preview</DialogTitle>\r\n        <DialogContent>\r\n          {selectedImage && (\r\n            <Box>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                {getPatientName(selectedImage.patientId)} - {selectedImage.imageType}\r\n              </Typography>\r\n              <Box sx={{ width: '100%', textAlign: 'center', mb: 2 }}>\r\n                <img\r\n                  src={\r\n                    selectedImage.imageUrl && selectedImage.imageUrl.startsWith('uploads\\\\')\r\n                      ? `${BASE_URL}/dental-imaging/image/${selectedImage.imageUrl.replace('uploads\\\\', '').replace('uploads/', '')}`\r\n                      : selectedImage.imageUrl\r\n                  }\r\n                  alt=\"Dental\"\r\n                  style={{ maxWidth: 500, maxHeight: 350, width: '100%', borderRadius: 8, objectFit: 'contain', background: '#fafafa' }}\r\n                />\r\n              </Box>\r\n              <Typography variant=\"body2\"><strong>Doctor:</strong> {getDoctorName(selectedImage.doctorId)}</Typography>\r\n              <Typography variant=\"body2\"><strong>Upload Date:</strong> {selectedImage.uploadDate ? new Date(selectedImage.uploadDate).toLocaleString() : '-'}</Typography>\r\n              <Typography variant=\"body2\"><strong>Status:</strong> {selectedImage.status || 'Pending'}</Typography>\r\n              <Typography variant=\"body2\"><strong>Notes:</strong> {selectedImage.notes}</Typography>\r\n              <Typography variant=\"body2\"><strong>Diagnosis Notes:</strong> {selectedImage.diagnosisNotes}</Typography>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseView}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DentalImaging;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst categories = ['Dental Tools', 'Consumables', 'Medicines', 'Equipment', 'Other'];\r\nconst statuses = ['In Stock', 'Low Stock', 'Out of Stock', 'Expired'];\r\nconst units = ['pcs', 'box', 'pack', 'bottle', 'tube', 'ml', 'g', 'kg', 'L', 'other'];\r\n\r\nconst AddInventoryItem = ({ closeModal, onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    category: 'Dental Tools',\r\n    quantity: 0,\r\n    unit: 'pcs', // default value for select box\r\n    clinicId: '',\r\n    reorderLevel: 0,\r\n    expiryDate: '',\r\n    status: 'In Stock',\r\n    notes: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [clinics, setClinics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch clinics from /clinics endpoint\r\n    axios.get(`${BASE_URL}/clinics`)\r\n      .then(res => setClinics(res.data))\r\n      .catch(() => setClinics([]));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    // Get clinic name from clinics array\r\n    const clinicObj = clinics.find(c => c.id === form.clinicId);\r\n    const clinicName = clinicObj ? clinicObj.name : '';\r\n\r\n    const itemData = {\r\n      ...form,\r\n      clinicId: Number(form.clinicId),\r\n      clinicName\r\n      // id is NOT included, let backend generate it\r\n    };\r\n    console.log('Submitting item:', itemData);\r\n    try {\r\n      await axios.post(`${BASE_URL}/inventory`, itemData);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <TextField\r\n        label=\"Name\"\r\n        name=\"name\"\r\n        value={form.name}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Category\"\r\n        name=\"category\"\r\n        value={form.category}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {categories.map(c => (\r\n          <MenuItem key={c} value={c}>{c}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Quantity\"\r\n        name=\"quantity\"\r\n        type=\"number\"\r\n        value={form.quantity}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Unit\"\r\n        name=\"unit\"\r\n        value={form.unit}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        required\r\n      >\r\n        {units.map(u => (\r\n          <MenuItem key={u} value={u}>{u}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        select\r\n        label=\"Clinic\"\r\n        name=\"clinicId\"\r\n        value={form.clinicId}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {clinics.map(c => (\r\n          <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      {form.clinicId && (\r\n        <div style={{ margin: '8px 0', color: '#007bff', fontWeight: 'bold' }}>\r\n          Selected Clinic: {clinics.find(c => c.id === form.clinicId)?.name || ''}\r\n        </div>\r\n      )}\r\n      <TextField\r\n        label=\"Reorder Level\"\r\n        name=\"reorderLevel\"\r\n        type=\"number\"\r\n        value={form.reorderLevel}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Expiry Date\"\r\n        name=\"expiryDate\"\r\n        type=\"date\"\r\n        value={form.expiryDate}\r\n        onChange={handleChange}\r\n        InputLabelProps={{ shrink: true }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        select\r\n        label=\"Status\"\r\n        name=\"status\"\r\n        value={form.status}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      >\r\n        {statuses.map(s => (\r\n          <MenuItem key={s} value={s}>{s}</MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        label=\"Notes\"\r\n        name=\"notes\"\r\n        value={form.notes}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        multiline\r\n        rows={2}\r\n      />\r\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n          {loading ? 'Saving...' : 'Create Inventory Item'}\r\n        </Button>\r\n        <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n          Cancel\r\n        </Button>\r\n      </Stack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddInventoryItem;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, MenuItem, Stack } from '@mui/material';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst categories = ['Dental Tools', 'Consumables', 'Medicines', 'Equipment', 'Other'];\r\nconst statuses = ['In Stock', 'Low Stock', 'Out of Stock', 'Expired'];\r\nconst units = ['pcs', 'box', 'pack', 'bottle', 'tube', 'ml', 'g', 'kg', 'L', 'other'];\r\n\r\nconst EditInventoryItem = ({ closeModal, item = {}, clinics = [], onSuccess }) => {\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    category: 'Dental Tools',\r\n    quantity: 0,\r\n    unit: 'pcs',\r\n    clinicId: '',\r\n    reorderLevel: 0,\r\n    expiryDate: '',\r\n    status: 'In Stock',\r\n    notes: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      setForm({\r\n        name: item.name || '',\r\n        category: item.category || 'Dental Tools',\r\n        quantity: item.quantity || 0,\r\n        unit: item.unit || 'pcs',\r\n        clinicId: item.clinicId || '',\r\n        reorderLevel: item.reorderLevel || 0,\r\n        expiryDate: item.expiryDate ? item.expiryDate.slice(0, 10) : '',\r\n        status: item.status || 'In Stock',\r\n        notes: item.notes || '',\r\n      });\r\n    }\r\n  }, [item]);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const now = new Date().toISOString();\r\n    // Get clinic name from clinics array\r\n    const clinicObj = clinics.find(c => c.id === form.clinicId);\r\n\r\n    const itemData = {\r\n      ...form,\r\n      clinicId: Number(form.clinicId),\r\n      updatedAt: now\r\n      // id is NOT included, let backend handle it\r\n    };\r\n    try {\r\n      await axios.put(`${BASE_URL}/inventory/${item.id}`, itemData);\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) closeModal();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <TextField\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          value={form.name}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Category\"\r\n          name=\"category\"\r\n          value={form.category}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          required\r\n        >\r\n          {categories.map(c => (\r\n            <MenuItem key={c} value={c}>{c}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Quantity\"\r\n          name=\"quantity\"\r\n          type=\"number\"\r\n          value={form.quantity}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          required\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Unit\"\r\n          name=\"unit\"\r\n          value={form.unit}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          required\r\n        >\r\n          {units.map(u => (\r\n            <MenuItem key={u} value={u}>{u}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          select\r\n          label=\"Clinic\"\r\n          name=\"clinicId\"\r\n          value={form.clinicId}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        >\r\n          {clinics.map(c => (\r\n            <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        {form.clinicId && (\r\n          <div style={{ margin: '8px 0', color: '#007bff', fontWeight: 'bold' }}>\r\n            Selected Clinic: {clinics.find(c => c.id === form.clinicId)?.name || ''}\r\n          </div>\r\n        )}\r\n        <TextField\r\n          label=\"Reorder Level\"\r\n          name=\"reorderLevel\"\r\n          type=\"number\"\r\n          value={form.reorderLevel}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Expiry Date\"\r\n          name=\"expiryDate\"\r\n          type=\"date\"\r\n          value={form.expiryDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{ shrink: true }}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          select\r\n          label=\"Status\"\r\n          name=\"status\"\r\n          value={form.status}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        >\r\n          {statuses.map(s => (\r\n            <MenuItem key={s} value={s}>{s}</MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField\r\n          label=\"Notes\"\r\n          name=\"notes\"\r\n          value={form.notes}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          multiline\r\n          rows={2}\r\n        />\r\n        <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Saving...' : 'Save Changes'}\r\n          </Button>\r\n          <Button variant=\"outlined\" onClick={closeModal} disabled={loading}>\r\n            Cancel\r\n          </Button>\r\n        </Stack>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditInventoryItem;","import React, { useEffect, useState } from 'react';\r\nimport { Box, Typography, IconButton, Menu, MenuItem, Paper, LinearProgress, Button, Dialog, DialogTitle, DialogContent, Chip } from '@mui/material'; // <-- Add Chip import\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport Inventory2OutlinedIcon from '@mui/icons-material/Inventory2Outlined';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport axios from 'axios';\r\nimport AddInventoryItem from './AddInventoryItem'; // Import at the top\r\nimport EditInventoryItem from './EditInventoryItem'; // Import EditInventoryItem\r\nimport CurrentUser from '../../main/config/user'; // Import DEMO_MODE\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\n// Example demo data\r\nconst DEMO_ITEMS = [\r\n  {\r\n    id: 1,\r\n    name: \"Demo Item\",\r\n    category: \"Consumables\",\r\n    quantity: 10,\r\n    unit: \"pcs\",\r\n    reorderLevel: 5,\r\n    expiryDate: \"2025-12-31\",\r\n    status: \"In Stock\",\r\n    clinicId: 1,\r\n    notes: \"Demo notes\"\r\n  }\r\n  // Add more demo items if needed\r\n];\r\n\r\nconst DEMO_CLINICS = [\r\n  {\r\n    id: 1,\r\n    name: \"Demo Clinic\"\r\n  }\r\n  // Add more demo clinics if needed\r\n];\r\n\r\nconst InventoryItem = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionAnchorEl, setActionAnchorEl] = useState(null);\r\n  const [actionRow, setActionRow] = useState(null);\r\n  const [addModalOpen, setAddModalOpen] = useState(false);\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [editItem, setEditItem] = useState(null);\r\n  const [viewModalOpen, setViewModalOpen] = useState(false);\r\n  const [viewItem, setViewItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (CurrentUser.DEMO_MODE) {\r\n      setItems(DEMO_ITEMS);\r\n      setLoading(false);\r\n    } else {\r\n      axios.get(`${BASE_URL}/inventory`)\r\n        .then(res => setItems(res.data))\r\n        .finally(() => setLoading(false));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (CurrentUser.DEMO_MODE) {\r\n      setClinics(DEMO_CLINICS);\r\n    } else {\r\n      axios.get(`${BASE_URL}/clinics`)\r\n        .then(res => setClinics(res.data))\r\n        .catch(() => setClinics([]));\r\n    }\r\n  }, []);\r\n\r\n  const handleActionClick = (event, row) => {\r\n    setActionAnchorEl(event.currentTarget);\r\n    setActionRow(row);\r\n  };\r\n\r\n  const handleActionClose = () => {\r\n    setActionAnchorEl(null);\r\n    setActionRow(null);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditItem(actionRow);\r\n    setEditModalOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!actionRow) return;\r\n    if (window.confirm(`Are you sure you want to delete \"${actionRow.name}\"?`)) {\r\n      setLoading(true);\r\n      try {\r\n        await axios.delete(`${BASE_URL}/inventory/${actionRow.id}`);\r\n        setItems(prev => prev.filter(item => item.id !== actionRow.id));\r\n      } catch (err) {\r\n        alert('Failed to delete item.');\r\n      }\r\n      setLoading(false);\r\n    }\r\n    handleActionClose();\r\n  };\r\n\r\n  const handleView = () => {\r\n    setViewItem(actionRow);\r\n    setViewModalOpen(true);\r\n    handleActionClose();\r\n  };\r\n\r\n  // Add/Update Inventory Item\r\n  const handleAddSuccess = async () => {\r\n    // Refetch items after add to ensure IDs are present\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/inventory`);\r\n      setItems(res.data);\r\n    } catch {\r\n      // fallback: do nothing or show error\r\n    }\r\n    setAddModalOpen(false);\r\n  };\r\n\r\n  // Fix for handleEditSuccess to avoid error if updatedItem is undefined/null\r\n  const handleEditSuccess = (updatedItem) => {\r\n    if (updatedItem && updatedItem.id !== undefined) {\r\n      setItems(prev => prev.map(item => item.id === updatedItem.id ? updatedItem : item));\r\n    }\r\n    setEditModalOpen(false);\r\n    setEditItem(null);\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'name', headerName: 'Name', width: 180 },\r\n    { field: 'category', headerName: 'Category', width: 140 },\r\n    {\r\n      field: 'quantity',\r\n      headerName: 'Quantity',\r\n      width: 100,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={params.value === 0 ? 'error' : params.value < 10 ? 'warning' : 'success'}\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    { field: 'unit', headerName: 'Unit', width: 90 },\r\n    { field: 'reorderLevel', headerName: 'Reorder Level', width: 120 },\r\n    {\r\n      field: 'expiryDate',\r\n      headerName: 'Expiry Date',\r\n      width: 130,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value ? new Date(params.value).toLocaleDateString() : '-'}\r\n          color={params.value && new Date(params.value) < new Date() ? 'error' : 'info'}\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 110,\r\n      renderCell: (params) => (\r\n        <Chip\r\n          label={params.value}\r\n          color={\r\n            params.value === 'In Stock'\r\n              ? 'success'\r\n              : params.value === 'Low Stock'\r\n              ? 'warning'\r\n              : params.value === 'Out of Stock'\r\n              ? 'error'\r\n              : params.value === 'Expired'\r\n              ? 'default'\r\n              : 'primary'\r\n          }\r\n          size=\"small\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      field: 'clinicId',\r\n      headerName: 'Clinic',\r\n      width: 220,\r\n      valueGetter: (params) => {\r\n        const clinic = clinics.find(c => c.id === params.value);\r\n        return clinic ? clinic.name : params.value;\r\n      }\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Actions',\r\n      width: 90,\r\n      sortable: false,\r\n      filterable: false,\r\n      renderCell: (params) => (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"action-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={(event) => handleActionClick(event, params.row)}\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </>\r\n      ),\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 1000, mx: 'auto', mt: 4, p: 3 }}>\r\n      <Paper sx={{ p: 2 }}>\r\n        <Typography variant=\"h5\" sx={{ mb: 2, display: 'flex', alignItems: 'center', fontWeight: 600 }}>\r\n          <Inventory2OutlinedIcon sx={{ mr: 1 }} />\r\n          Inventory Items\r\n        </Typography>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => setAddModalOpen(true)}\r\n          sx={{ mb: 2 }}\r\n        >\r\n          <i className=\"fas fa-plus\"></i> Create Inventory Item\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          sx={{\r\n            color: \"#1976d2\",\r\n            borderColor: \"#1976d2\",\r\n            background: \"#fff\",\r\n            mb: 2,\r\n            ml: 2,\r\n            '&:hover': {\r\n              borderColor: \"#1565c0\",\r\n              background: \"#e3f2fd\",\r\n              color: \"#1565c0\"\r\n            }\r\n          }}\r\n          onClick={() => {\r\n            setLoading(true);\r\n            if (CurrentUser.DEMO_MODE) {\r\n              setItems(DEMO_ITEMS);\r\n              setLoading(false);\r\n            } else {\r\n              axios.get(`${BASE_URL}/inventory`)\r\n                .then(res => setItems(res.data))\r\n                .finally(() => setLoading(false));\r\n            }\r\n          }}\r\n        >\r\n          Refresh\r\n        </Button>\r\n        {loading ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <div style={{ height: 430, width: '100%' }}>\r\n            <DataGrid\r\n              rows={items}\r\n              columns={columns}\r\n              pageSize={5}\r\n              rowsPerPageOptions={[5]}\r\n              components={{ Toolbar: GridToolbar }}\r\n              getRowId={row => row.id}\r\n            />\r\n            <Menu\r\n              id=\"action-menu\"\r\n              anchorEl={actionAnchorEl}\r\n              open={Boolean(actionAnchorEl)}\r\n              onClose={handleActionClose}\r\n            >\r\n              <MenuItem onClick={handleView}>\r\n                <VisibilityIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n                View\r\n              </MenuItem>\r\n              <MenuItem onClick={handleEdit}>\r\n                <EditIcon fontSize=\"small\" sx={{ mr: 1 }} />\r\n                Edit\r\n              </MenuItem>\r\n              <MenuItem onClick={handleDelete}>\r\n                <DeleteIcon fontSize=\"small\" sx={{ mr: 1, color: 'error.main' }} />\r\n                Delete\r\n              </MenuItem>\r\n            </Menu>\r\n            {/* Add Inventory Item Modal */}\r\n            <Dialog open={addModalOpen} onClose={() => setAddModalOpen(false)} maxWidth=\"sm\" fullWidth>\r\n              <DialogTitle>Create Inventory Item</DialogTitle>\r\n              <DialogContent>\r\n                <AddInventoryItem\r\n                  closeModal={() => setAddModalOpen(false)}\r\n                  onSuccess={handleAddSuccess}\r\n                />\r\n              </DialogContent>\r\n            </Dialog>\r\n            {/* Edit Inventory Item Modal */}\r\n            <Dialog open={editModalOpen} onClose={() => setEditModalOpen(false)} maxWidth=\"sm\" fullWidth>\r\n              <DialogTitle>Edit Inventory Item</DialogTitle>\r\n              <DialogContent>\r\n                <EditInventoryItem\r\n                  closeModal={() => setEditModalOpen(false)}\r\n                  item={editItem} // <-- Pass selected object here!\r\n                  clinics={clinics}\r\n                  onSuccess={handleEditSuccess}\r\n                />\r\n              </DialogContent>\r\n            </Dialog>\r\n            {/* View Inventory Item Modal */}\r\n            <Dialog open={viewModalOpen} onClose={() => setViewModalOpen(false)} maxWidth=\"sm\" fullWidth>\r\n              <DialogTitle>\r\n                <Inventory2OutlinedIcon sx={{ mr: 1, color: \"#1976d2\" }} />\r\n                <span style={{ color: \"#1976d2\", fontWeight: 700 }}>Inventory Item Details</span>\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                {viewItem && (\r\n                  <Box\r\n                    sx={{\r\n                      p: 2,\r\n                      background: \"#f5faff\",\r\n                      borderRadius: 2,\r\n                      boxShadow: 2,\r\n                      border: \"1px solid #90caf9\",\r\n                      mb: 2,\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"h6\" sx={{ color: \"#1976d2\", fontWeight: 600, mb: 2 }}>\r\n                      {viewItem.name}\r\n                    </Typography>\r\n                    <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 2 }}>\r\n                      <Chip label={`ID: ${viewItem.id}`} color=\"primary\" />\r\n                      <Chip label={`Category: ${viewItem.category}`} color=\"info\" />\r\n                      <Chip label={`Unit: ${viewItem.unit}`} color=\"default\" />\r\n                      <Chip label={`Status: ${viewItem.status}`} color={\r\n                        viewItem.status === 'In Stock'\r\n                          ? 'success'\r\n                          : viewItem.status === 'Low Stock'\r\n                          ? 'warning'\r\n                          : viewItem.status === 'Out of Stock'\r\n                          ? 'error'\r\n                          : viewItem.status === 'Expired'\r\n                          ? 'default'\r\n                          : 'primary'\r\n                      } />\r\n                    </Box>\r\n                    <Box sx={{ mt: 2 }}>\r\n                      <Typography><strong>Quantity:</strong> {viewItem.quantity}</Typography>\r\n                      <Typography><strong>Reorder Level:</strong> {viewItem.reorderLevel}</Typography>\r\n                      <Typography>\r\n                        <strong>Expiry Date:</strong> {viewItem.expiryDate ? new Date(viewItem.expiryDate).toLocaleDateString() : '-'}\r\n                      </Typography>\r\n                      <Typography>\r\n                        <strong>Clinic:</strong> {\r\n                          (() => {\r\n                            const clinic = clinics.find(c => c.id === viewItem.clinicId);\r\n                            return clinic ? clinic.name : viewItem.clinicId;\r\n                          })()\r\n                        }\r\n                      </Typography>\r\n                      <Typography sx={{ mt: 1 }}>\r\n                        <strong>Notes:</strong> {viewItem.notes || <span style={{ color: \"#aaa\" }}>No notes</span>}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </DialogContent>\r\n            </Dialog>\r\n          </div>\r\n        )}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default InventoryItem;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box, Button, Typography, Grid, Container, Card, CardContent, Divider, Avatar,\r\n  AppBar, Toolbar, IconButton, MenuItem, Menu, Chip, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Select, InputLabel, FormControl, Stack, Snackbar, Alert\r\n} from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport './HomePage.css';\r\n// Dentist theme images (royalty-free/unsplash)\r\nconst heroImg = \"images/1.jpg\";\r\nconst aboutImg = \"images/2.jpg\";\r\nconst servicesImg = \"images/3.jpg\";\r\nconst contactImg = \"images/4.jpg\";\r\n\r\nconst blogPosts = [\r\n  { title: \"5 Tips for Healthy Teeth\", date: \"2025-07-01\", excerpt: \"Discover essential tips to keep your teeth healthy and strong.\" },\r\n  { title: \"The Importance of Regular Checkups\", date: \"2025-06-15\", excerpt: \"Why you shouldn't skip your dental appointments.\" },\r\n];\r\n\r\nconst pricing = [\r\n  { service: \"Consultation\", price: \"$30\" },\r\n  { service: \"Teeth Cleaning\", price: \"$50\" },\r\n  { service: \"Whitening\", price: \"$120\" },\r\n  { service: \"Braces (per month)\", price: \"$80\" },\r\n];\r\n\r\nconst openingHours = [\r\n  { day: \"Monday - Friday\", hours: \"08:00 - 18:00\" },\r\n  { day: \"Saturday\", hours: \"09:00 - 14:00\" },\r\n  { day: \"Sunday\", hours: \"Closed\" },\r\n];\r\n\r\n// Replace menuLinks with updated menu (remove \"Blog\", replace \"Pricing\" with \"Memberships\")\r\nconst menuLinks = [\r\n  { label: \"Home\", href: \"#hero\" },\r\n  { label: \"About\", href: \"#about\" },\r\n  { label: \"Services\", href: \"#services\" },\r\n  { label: \"Doctors\", href: \"#doctors\" },\r\n  { label: \"Staff\", href: \"#staff\" },\r\n  { label: \"Memberships\", href: \"#memberships\" }, // was \"Pricing\"\r\n  // { label: \"Blog\", href: \"#blog\" }, // removed\r\n  { label: \"Contact\", href: \"#contact\" },\r\n  { label: \"Login\", href: \"/login\" },\r\n];\r\n\r\nconst HomePage = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const history = useHistory();\r\n\r\n  // Add state for services from backend\r\n  const [services, setServices] = useState([\r\n    \"General & Family Dentistry\",\r\n    \"Cosmetic Dentistry (Whitening, Veneers)\",\r\n    \"Dental Implants & Restorations\",\r\n    \"Orthodontics (Braces & Aligners)\",\r\n    \"Pediatric Dentistry\",\r\n    \"Emergency Dental Care\"\r\n  ]);\r\n  const [loadingServices, setLoadingServices] = useState(true);\r\n\r\n  // About Us state\r\n  const [aboutUs, setAboutUs] = useState({\r\n    description: '',\r\n    highlights: [],\r\n  });\r\n  const [loadingAbout, setLoadingAbout] = useState(true);\r\n\r\n  // Contact info state\r\n  const [clinicSettings, setClinicSettings] = useState({\r\n    system: {\r\n      address: '',\r\n      email: '',\r\n      appName: '',\r\n      showLogo: false,\r\n      phone: '',\r\n    },\r\n    openHours: [\r\n      { day: \"Monday\", hours: \"\" },\r\n      { day: \"Tuesday\", hours: \"\" },\r\n      { day: \"Wednesday\", hours: \"\" },\r\n      { day: \"Thursday\", hours: \"\" },\r\n      { day: \"Friday\", hours: \"\" },\r\n      { day: \"Saturday\", hours: \"\" },\r\n      { day: \"Sunday\", hours: \"\" },\r\n    ]\r\n  });\r\n  const [editingHours, setEditingHours] = useState(false);\r\n  const [openHoursDraft, setOpenHoursDraft] = useState([]);\r\n  const [savingHours, setSavingHours] = useState(false);\r\n\r\n  // Memberships state\r\n  const [memberships, setMemberships] = useState([]);\r\n  const [loadingMemberships, setLoadingMemberships] = useState(true);\r\n\r\n  // Remove static doctors and staffs arrays\r\n  // const doctors = [...]\r\n  // const staffs = [...]\r\n\r\n  // Add state for doctors and staffs from backend\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [staffs, setStaffs] = useState([]);\r\n  const [loadingDoctors, setLoadingDoctors] = useState(true);\r\n  const [loadingStaffs, setLoadingStaffs] = useState(true);\r\n\r\n  // Add these states at the top of HomePage component:\r\n  const [openPatientModal, setOpenPatientModal] = useState(false);\r\n  const [openAppointmentModal, setOpenAppointmentModal] = useState(false);\r\n  const [patientForm, setPatientForm] = useState({\r\n    fullName: '',\r\n    medicalRecordNumber: '',\r\n    insuranceId: '',\r\n    bloodType: '',\r\n    allergies: [],\r\n    medicalHistory: [],\r\n    currentMedications: [],\r\n    emergencyContact: { name: '', phone: '', relationship: '' }\r\n  });\r\n  const [savedPatient, setSavedPatient] = useState(null);\r\n  const [appointmentForm, setAppointmentForm] = useState({\r\n    doctorId: '',\r\n    clinicLocationId: '',\r\n    appointmentDate: '',\r\n    startTime: '',\r\n    endTime: '',\r\n    status: 'Scheduled',\r\n    appointmentType: 'In-Person',\r\n    reasonForVisit: '',\r\n    notes: ''\r\n  });\r\n  const [doctorsList, setDoctorsList] = useState([]);\r\n  const [clinicsList, setClinicsList] = useState([]);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\r\n\r\n  useEffect(() => {\r\n    // Fetch services\r\n    const fetchServices = async () => {\r\n      setLoadingServices(true);\r\n      try {\r\n        const res = await axios.get(BASE_URL + '/services');\r\n        if (res.data && Array.isArray(res.data.services)) {\r\n          setServices(res.data.services);\r\n        }\r\n      } catch (e) {\r\n        // fallback to default or show error if needed\r\n      }\r\n      setLoadingServices(false);\r\n    };\r\n    fetchServices();\r\n\r\n    // Fetch about us\r\n    const fetchAboutUs = async () => {\r\n      setLoadingAbout(true);\r\n      try {\r\n        const res = await axios.get(BASE_URL + '/aboutus');\r\n        if (res.data && res.data.aboutUs) {\r\n          setAboutUs(res.data.aboutUs);\r\n        }\r\n      } catch (e) {\r\n        setAboutUs({\r\n          description: '',\r\n          highlights: [],\r\n        });\r\n      }\r\n      setLoadingAbout(false);\r\n    };\r\n    fetchAboutUs();\r\n\r\n    // Fetch clinic settings for contact info and open hours\r\n    const fetchClinicSettings = async () => {\r\n      try {\r\n        const res = await axios.get(BASE_URL + '/clinicsettings');\r\n        if (res.data && res.data.system) {\r\n          setClinicSettings(res.data);\r\n          setOpenHoursDraft(res.data.openHours || []);\r\n        }\r\n      } catch (e) {\r\n        // fallback: keep empty/default\r\n      }\r\n    };\r\n    fetchClinicSettings();\r\n\r\n    // Fetch memberships\r\n    const fetchMemberships = async () => {\r\n      setLoadingMemberships(true);\r\n      try {\r\n        const res = await axios.get(BASE_URL + '/memberships');\r\n        if (Array.isArray(res.data)) {\r\n          setMemberships(res.data.slice(0, 4));\r\n        } else if (Array.isArray(res.data.memberships)) {\r\n          setMemberships(res.data.memberships.slice(0, 4));\r\n        }\r\n      } catch (e) {\r\n        setMemberships([]);\r\n      }\r\n      setLoadingMemberships(false);\r\n    };\r\n    fetchMemberships();\r\n\r\n    // Fetch doctors\r\n    const fetchDoctors = async () => {\r\n      setLoadingDoctors(true);\r\n      try {\r\n        const res = await axios.get(BASE_URL + '/doctors');\r\n        if (Array.isArray(res.data)) {\r\n          setDoctors(res.data.slice(0, 4));\r\n        } else if (Array.isArray(res.data.doctors)) {\r\n          setDoctors(res.data.doctors.slice(0, 4));\r\n        }\r\n      } catch (e) {\r\n        setDoctors([]);\r\n      }\r\n      setLoadingDoctors(false);\r\n    };\r\n    fetchDoctors();\r\n\r\n    // Fetch staffs\r\n    const fetchStaffs = async () => {\r\n      setLoadingStaffs(true);\r\n      try {\r\n        const res = await axios.get(BASE_URL + '/staff');\r\n        if (Array.isArray(res.data)) {\r\n          setStaffs(res.data.slice(0, 4));\r\n        } else if (Array.isArray(res.data.staffs)) {\r\n          setStaffs(res.data.staffs.slice(0, 4));\r\n        }\r\n      } catch (e) {\r\n        setStaffs([]);\r\n      }\r\n      setLoadingStaffs(false);\r\n    };\r\n    fetchStaffs();\r\n  }, []);\r\n\r\n  // Fetch doctors and clinics for selects\r\n  useEffect(() => {\r\n    if (openAppointmentModal) {\r\n      axios.get(BASE_URL + '/doctors').then(res => {\r\n        setDoctorsList(Array.isArray(res.data) ? res.data : res.data.doctors || []);\r\n      });\r\n      axios.get(BASE_URL + '/clinics').then(res => {\r\n        setClinicsList(Array.isArray(res.data) ? res.data : res.data.clinics || []);\r\n      });\r\n    }\r\n  }, [openAppointmentModal]);\r\n\r\n  const handleMenu = (event) => setAnchorEl(event.currentTarget);\r\n  const handleClose = () => setAnchorEl(null);\r\n\r\n  // Smooth scroll for menu\r\n  const handleMenuClick = (href) => {\r\n    handleClose();\r\n    const el = document.querySelector(href);\r\n    if (el) el.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Handle open hours edit\r\n  const handleEditOpenHours = () => {\r\n    setOpenHoursDraft(clinicSettings.openHours || []);\r\n    setEditingHours(true);\r\n  };\r\n\r\n  const handleOpenHourChange = (idx, value) => {\r\n    setOpenHoursDraft(prev =>\r\n      prev.map((item, i) => (i === idx ? { ...item, hours: value } : item))\r\n    );\r\n  };\r\n\r\n  const handleSaveOpenHours = async () => {\r\n    setSavingHours(true);\r\n    try {\r\n      const updatedSettings = { ...clinicSettings, openHours: openHoursDraft };\r\n      await axios.put(BASE_URL + '/clinicsettings', updatedSettings);\r\n      setClinicSettings(updatedSettings);\r\n      setEditingHours(false);\r\n    } catch (e) {\r\n      // Optionally show error\r\n    }\r\n    setSavingHours(false);\r\n  };\r\n\r\n  // Handler for Book Appointment button\r\n  const handleBookVisit = () => {\r\n    setOpenPatientModal(true);\r\n  };\r\n\r\n  // Save patient and go to appointment modal\r\n  const handleSavePatient = async () => {\r\n    try {\r\n      // Save patient to backend\r\n      const res = await axios.post(BASE_URL + '/patients', patientForm);\r\n      setSavedPatient(res.data);\r\n      setOpenPatientModal(false);\r\n      setOpenAppointmentModal(true);\r\n    } catch (e) {\r\n      setSnackbar({ open: true, message: 'Failed to save patient', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  // Save appointment and return to home\r\n  const handleSaveAppointment = async () => {\r\n    try {\r\n      const payload = {\r\n        ...appointmentForm,\r\n        patientId: savedPatient.id,\r\n      };\r\n      await axios.post(BASE_URL + '/appointments', payload);\r\n      setOpenAppointmentModal(false);\r\n      setSnackbar({ open: true, message: 'Appointment created successfully!', severity: 'success' });\r\n      setTimeout(() => {\r\n        window.location.href = '/';\r\n      }, 1200);\r\n    } catch (e) {\r\n      setSnackbar({ open: true, message: 'Failed to create appointment', severity: 'error' });\r\n    }\r\n  };\r\n\r\n  // Add scroll handlers before return:\r\n  const handleContactScroll = () => {\r\n    const contactSection = document.getElementById('contact');\r\n    if (contactSection) {\r\n      contactSection.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className=\"home-page-root\" sx={{ bgcolor: '#fafdff', minHeight: '100vh', fontFamily: 'Roboto, Arial, sans-serif' }}>\r\n      {/* AppBar/Menu */}\r\n      <AppBar position=\"fixed\" color=\"primary\" elevation={0} sx={{ bgcolor: '#1976d2' }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" sx={{ flexGrow: 1, fontWeight: 700, letterSpacing: 1 }}>\r\n            <span style={{ color: '#fff' }}>Dentic</span>\r\n            <span style={{ color: '#90caf9' }}>Clinic</span>\r\n          </Typography>\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' }, gap: 2 }}>\r\n            {menuLinks.map((link) =>\r\n              link.label === \"Login\" ? (\r\n                <Button\r\n                  key={link.label}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  sx={{ fontWeight: 600, fontSize: 16, textTransform: 'none', px: 3 }}\r\n                  onClick={() => {\r\n                    window.location.href = link.href;\r\n                  }}\r\n                >\r\n                  {link.label}\r\n                </Button>\r\n              ) : link.label === \"Contact\" ? (\r\n                <Button\r\n                  key={link.label}\r\n                  color=\"inherit\"\r\n                  sx={{ fontWeight: 500, fontSize: 16, textTransform: 'none' }}\r\n                  onClick={handleContactScroll}\r\n                >\r\n                  {link.label}\r\n                </Button>\r\n              ) : link.label === \"Memberships\" ? (\r\n                <Button\r\n                  key={link.label}\r\n                  color=\"inherit\"\r\n                  sx={{ fontWeight: 500, fontSize: 16, textTransform: 'none' }}\r\n                  onClick={() => handleMenuClick(\"#memberships\")}\r\n                >\r\n                  {link.label}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  key={link.label}\r\n                  color=\"inherit\"\r\n                  sx={{ fontWeight: 500, fontSize: 16, textTransform: 'none' }}\r\n                  onClick={() => {\r\n                    if (link.href.startsWith(\"#\")) {\r\n                      handleMenuClick(link.href);\r\n                    } else {\r\n                      window.location.href = link.href;\r\n                    }\r\n                  }}\r\n                >\r\n                  {link.label}\r\n                </Button>\r\n              )\r\n            )}\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton color=\"inherit\" onClick={handleMenu}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              anchorEl={anchorEl}\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n              keepMounted\r\n            >\r\n              {menuLinks.map((link) =>\r\n                link.label === \"Login\" ? (\r\n                  <MenuItem\r\n                    key={link.label}\r\n                    onClick={() => {\r\n                      handleClose();\r\n                      window.location.href = link.href;\r\n                    }}\r\n                    sx={{\r\n                      fontWeight: 600,\r\n                      color: 'secondary.main',\r\n                      bgcolor: 'secondary.lighter',\r\n                      borderRadius: 1,\r\n                      my: 1,\r\n                    }}\r\n                  >\r\n                    {link.label}\r\n                  </MenuItem>\r\n                ) : link.label === \"Contact\" ? (\r\n                  <MenuItem\r\n                    key={link.label}\r\n                    onClick={() => {\r\n                      handleClose();\r\n                      handleContactScroll();\r\n                    }}\r\n                  >\r\n                    {link.label}\r\n                  </MenuItem>\r\n                ) : link.label === \"Memberships\" ? (\r\n                  <MenuItem\r\n                    key={link.label}\r\n                    onClick={() => {\r\n                      handleClose();\r\n                      handleMenuClick(\"#memberships\");\r\n                    }}\r\n                  >\r\n                    {link.label}\r\n                  </MenuItem>\r\n                ) : (\r\n                  <MenuItem\r\n                    key={link.label}\r\n                    onClick={() => {\r\n                      handleClose();\r\n                      if (link.href.startsWith(\"#\")) {\r\n                        handleMenuClick(link.href);\r\n                      } else {\r\n                        window.location.href = link.href;\r\n                      }\r\n                    }}\r\n                  >\r\n                    {link.label}\r\n                  </MenuItem>\r\n                )\r\n              )}\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleClose();\r\n                  handleBookVisit();\r\n                }}\r\n                sx={{ fontWeight: 600, color: 'secondary.main', mt: 1 }}\r\n              >\r\n                Book Visit\r\n              </MenuItem>\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Hero Section */}\r\n      <Box\r\n        id=\"hero\"\r\n        sx={{\r\n          pt: { xs: 10, md: 14 },\r\n          pb: { xs: 6, md: 10 },\r\n          minHeight: { xs: 400, md: 520 },\r\n          background: `linear-gradient(90deg, rgba(25,118,210,0.85) 60%, rgba(66,165,245,0.85) 100%), url(${heroImg}) center/cover no-repeat`,\r\n          color: '#fff',\r\n          textAlign: 'center',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography variant=\"h2\" fontWeight={700} gutterBottom sx={{ letterSpacing: 1 }}>\r\n            Dentic Dental Clinic\r\n          </Typography>\r\n          <Typography variant=\"h5\" sx={{ mb: 4, fontWeight: 400 }}>\r\n            Modern, gentle, and affordable dental care for your whole family.\r\n          </Typography>\r\n          <Box display=\"flex\" justifyContent=\"center\" gap={2} sx={{ mb: 2 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              sx={{ px: 4, fontWeight: 600 }}\r\n              onClick={handleBookVisit}\r\n            >\r\n              Book Appointment\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"inherit\"\r\n              size=\"large\"\r\n              sx={{ px: 4, fontWeight: 600 }}\r\n              onClick={handleContactScroll}\r\n            >\r\n              Contact Us\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* About Section */}\r\n      <Container id=\"about\" maxWidth=\"lg\" sx={{ mt: 12 }}>\r\n        <Grid container spacing={6} alignItems=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <img\r\n              src={aboutImg}\r\n              alt=\"Dentist at work\"\r\n              style={{ width: '100%', borderRadius: 16, boxShadow: '0 8px 32px rgba(25, 118, 210, 0.08)' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h4\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n              About Us\r\n            </Typography>\r\n            <Divider sx={{ mb: 2, width: 60, borderColor: '#1976d2' }} />\r\n            {loadingAbout ? (\r\n              <Typography>Loading...</Typography>\r\n            ) : (\r\n              <>\r\n                <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                  {aboutUs.description}\r\n                </Typography>\r\n                <ul style={{ paddingLeft: 18, marginBottom: 0 }}>\r\n                  {aboutUs.highlights && aboutUs.highlights.map((item, idx) => (\r\n                    <li key={idx}>{item}</li>\r\n                  ))}\r\n                </ul>\r\n              </>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      {/* Services Section */}\r\n      <Container id=\"services\" maxWidth=\"lg\" sx={{ mt: 12 }}>\r\n        <Grid container spacing={6} alignItems=\"center\">\r\n          <Grid item xs={12} md={6} order={{ xs: 2, md: 1 }}>\r\n            <Typography variant=\"h4\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n              Our Services\r\n            </Typography>\r\n            <Divider sx={{ mb: 2, width: 60, borderColor: '#1976d2' }} />\r\n            {loadingServices ? (\r\n              <Typography>Loading services...</Typography>\r\n            ) : (\r\n              <ul style={{ paddingLeft: 18, marginBottom: 0, fontSize: 18 }}>\r\n                {services.map((service, idx) => (\r\n                  <li key={idx}>{service}</li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={6} order={{ xs: 1, md: 2 }}>\r\n            <img\r\n              src={servicesImg}\r\n              alt=\"Dental Services\"\r\n              style={{ width: '100%', borderRadius: 16, boxShadow: '0 8px 32px rgba(25, 118, 210, 0.08)' }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      {/* Opening Hours Section */}\r\n      <Container id=\"opening\" maxWidth=\"sm\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" align=\"center\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n          Opening Hours\r\n        </Typography>\r\n        <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2' }} />\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          {(clinicSettings.openHours || []).map((item, idx) => (\r\n            <Box key={item.day} sx={{ mb: 2, display: 'flex', justifyContent: 'center', alignItems: 'center', gap: 2 }}>\r\n              <Typography variant=\"subtitle1\" fontWeight={600} sx={{ minWidth: 140, textAlign: 'right' }}>\r\n                {item.day}\r\n              </Typography>\r\n              <Chip\r\n                label={item.hours}\r\n                color={item.hours === 'Closed' ? 'error' : 'primary'}\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  fontWeight: 600,\r\n                  fontSize: 16,\r\n                  px: 2,\r\n                  bgcolor: item.hours === 'Closed' ? '#ffebee' : '#e3f2fd',\r\n                  color: item.hours === 'Closed' ? 'error.main' : 'primary.main',\r\n                  borderColor: item.hours === 'Closed' ? '#ffcdd2' : '#90caf9',\r\n                }}\r\n              />\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Container>\r\n\r\n      {/* Memberships Section (replaces Pricing) */}\r\n      <Container id=\"memberships\" maxWidth=\"lg\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" align=\"center\" fontWeight={700} gutterBottom sx={{ color: '#1976d2', letterSpacing: 1 }}>\r\n          Memberships\r\n        </Typography>\r\n        <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2' }} />\r\n        {loadingMemberships ? (\r\n          <Typography align=\"center\">Loading memberships...</Typography>\r\n        ) : (\r\n          <Grid container spacing={4} justifyContent=\"center\">\r\n            {memberships.map((item, idx) => (\r\n              <Grid item xs={12} sm={6} md={3} key={item.id || idx}>\r\n                <Card\r\n                  elevation={8}\r\n                  sx={{\r\n                    textAlign: 'center',\r\n                    py: 6,\r\n                    px: { xs: 2, md: 3 },\r\n                    borderRadius: 5,\r\n                    minHeight: 420,\r\n                    width: '100%',\r\n                    background: `linear-gradient(135deg, #e3f2fd 60%, #fff 100%)`,\r\n                    boxShadow: '0 12px 40px rgba(25, 118, 210, 0.13)',\r\n                    position: 'relative',\r\n                    overflow: 'visible',\r\n                    transition: 'transform 0.2s',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    '&:hover': {\r\n                      transform: 'translateY(-10px) scale(1.025)',\r\n                      boxShadow: '0 20px 60px rgba(25, 118, 210, 0.20)',\r\n                    }\r\n                  }}\r\n                >\r\n                  <Box sx={{ width: '100%', display: 'flex', justifyContent: 'flex-end', position: 'absolute', top: 24, right: 24, zIndex: 2 }}>\r\n                    <Chip\r\n                      label={item.paymentStatus === \"Active\" ? \"Active\" : \"Inactive\"}\r\n                      color={item.paymentStatus === \"Active\" ? \"success\" : \"error\"}\r\n                      sx={{\r\n                        fontWeight: 700,\r\n                        fontSize: 16,\r\n                        px: 2.5,\r\n                        letterSpacing: 0.5,\r\n                        py: 1,\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                  <Avatar\r\n                    sx={{\r\n                      bgcolor: '#1976d2',\r\n                      width: 90,\r\n                      height: 90,\r\n                      mb: 2,\r\n                      fontSize: 40,\r\n                      fontWeight: 700,\r\n                      boxShadow: 3,\r\n                      zIndex: 1,\r\n                      mt: 6,\r\n                    }}\r\n                  >\r\n                    {item.membershipPlan?.[0] || 'M'}\r\n                  </Avatar>\r\n                  <Typography variant=\"h5\" fontWeight={700} sx={{ color: '#1976d2', mb: 1.5, letterSpacing: 1, mt: 1 }}>\r\n                    {item.membershipPlan}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 1 }}>\r\n                    <b>Valid:</b> {item.validityPeriod?.startDate ? new Date(item.validityPeriod.startDate).toLocaleDateString() : '-'}\r\n                    {\" \"}to{\" \"}\r\n                    {item.validityPeriod?.endDate ? new Date(item.validityPeriod.endDate).toLocaleDateString() : '-'}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                    <b>Renewal:</b> {item.renewalDate ? new Date(item.renewalDate).toLocaleDateString() : '-'}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                    <b>Last Payment:</b> {item.lastPaymentAmount ? (\r\n                      <span style={{ color: \"#388e3c\", fontWeight: 600 }}>${item.lastPaymentAmount}</span>\r\n                    ) : '-'}\r\n                  </Typography>\r\n                  <Divider sx={{ my: 2.5, borderColor: '#90caf9', width: '100%' }} />\r\n                  <Typography variant=\"body1\" fontWeight={600} sx={{ mb: 1.5, color: '#1976d2' }}>\r\n                    Benefits\r\n                  </Typography>\r\n                  <Box component=\"ul\" sx={{ listStyle: 'none', p: 0, m: 0, textAlign: 'left', width: '100%', maxWidth: 400, mx: 'auto' }}>\r\n                    {(item.benefits || []).map((b, i) => (\r\n                      <Box\r\n                        key={i}\r\n                        component=\"li\"\r\n                        sx={{\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          mb: 1.2,\r\n                          fontSize: 17,\r\n                          color: '#333',\r\n                        }}\r\n                      >\r\n                        <Box\r\n                          component=\"span\"\r\n                          sx={{\r\n                            display: 'inline-block',\r\n                            width: 10,\r\n                            height: 10,\r\n                            borderRadius: '50%',\r\n                            background: '#1976d2',\r\n                            mr: 2,\r\n                            flexShrink: 0,\r\n                            mt: '2px'\r\n                          }}\r\n                        />\r\n                        {b}\r\n                      </Box>\r\n                    ))}\r\n                  </Box>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n            {memberships.length === 0 && (\r\n              <Typography align=\"center\" sx={{ width: '100%', mt: 2 }}>No memberships found.</Typography>\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n\r\n      {/* Blog Section */}\r\n      {/* \r\n      <Container id=\"blog\" maxWidth=\"md\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" align=\"center\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n          Blog\r\n        </Typography>\r\n        <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2' }} />\r\n        <Grid container spacing={4}>\r\n          {blogPosts.map((post, idx) => (\r\n            <Grid item xs={12} md={6} key={idx}>\r\n              <Card elevation={2} sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" fontWeight={600}>{post.title}</Typography>\r\n                <Typography variant=\"caption\" color=\"text.secondary\">{new Date(post.date).toLocaleDateString()}</Typography>\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>{post.excerpt}</Typography>\r\n                <Button size=\"small\" sx={{ mt: 2 }}>Read More</Button>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n      */}\r\n\r\n      {/* Doctors Section */}\r\n      <Container id=\"doctors\" maxWidth=\"lg\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" align=\"center\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n          Our Doctors\r\n        </Typography>\r\n        <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2' }} />\r\n        {loadingDoctors ? (\r\n          <Typography align=\"center\">Loading doctors...</Typography>\r\n        ) : (\r\n          <Grid container spacing={4} justifyContent=\"center\">\r\n            {doctors.map((doc, idx) => (\r\n              <Grid item xs={12} sm={6} md={3} key={doc.id || idx}>\r\n                <Card elevation={2} sx={{ textAlign: 'center', py: 4 }}>\r\n                  <Avatar\r\n                    src={\r\n                      doc.img\r\n                        ? doc.img\r\n                        : `https://randomuser.me/api/portraits/med/men/${doc.id % 50}.jpg`\r\n                    }\r\n                    alt={doc.fullName}\r\n                    sx={{ width: 80, height: 80, mx: 'auto', mb: 2, fontSize: 32, bgcolor: '#1976d2' }}\r\n                  >\r\n                    {!doc.img && (doc.fullName?.[0] || 'D')}\r\n                  </Avatar>\r\n                  <Typography variant=\"h6\" fontWeight={600}>{doc.fullName}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">{doc.specialization || doc.specialty}</Typography>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n            {doctors.length === 0 && (\r\n              <Typography align=\"center\" sx={{ width: '100%', mt: 2 }}>No doctors found.</Typography>\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n\r\n      {/* Staff Section */}\r\n      <Container id=\"staff\" maxWidth=\"md\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" align=\"center\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n          Our Staff\r\n        </Typography>\r\n        <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2' }} />\r\n        {loadingStaffs ? (\r\n          <Typography align=\"center\">Loading staff...</Typography>\r\n        ) : (\r\n          <Grid container spacing={4} justifyContent=\"center\">\r\n            {staffs.map((staff, idx) => (\r\n              <Grid item xs={12} sm={6} md={3} key={staff.id || idx}>\r\n                <Card elevation={1} sx={{ textAlign: 'center', py: 4 }}>\r\n                  <Avatar\r\n                    src={\r\n                      staff.img\r\n                        ? staff.img\r\n                        : `https://randomuser.me/api/portraits/med/women/${staff.id % 50}.jpg`\r\n                    }\r\n                    alt={staff.fullName}\r\n                    sx={{ width: 70, height: 70, mx: 'auto', mb: 2, fontSize: 28, bgcolor: '#1976d2' }}\r\n                  >\r\n                    {!staff.img && (staff.fullName?.[0] || 'S')}\r\n                  </Avatar>\r\n                  <Typography variant=\"subtitle1\" fontWeight={600}>{staff.fullName}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">{staff.role}</Typography>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n            {staffs.length === 0 && (\r\n              <Typography align=\"center\" sx={{ width: '100%', mt: 2 }}>No staff found.</Typography>\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n\r\n      {/* Contact Section */}\r\n      <Box\r\n        id=\"contact\"\r\n        sx={{\r\n          width: '100vw',\r\n          position: 'relative',\r\n          left: '50%',\r\n          right: '50%',\r\n          ml: '-50vw',\r\n          mr: '-50vw',\r\n          background: `linear-gradient(rgba(25,118,210,0.85),rgba(25,118,210,0.85)), url(${contactImg}) center/cover no-repeat`,\r\n          py: { xs: 8, md: 10 },\r\n          mt: 10,\r\n          mb: 10,\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Card\r\n            elevation={4}\r\n            sx={{\r\n              p: { xs: 3, md: 5 },\r\n              bgcolor: 'rgba(255,255,255,0.97)',\r\n              borderRadius: 4,\r\n              boxShadow: '0 8px 32px rgba(25, 118, 210, 0.10)',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <Typography variant=\"h4\" fontWeight={700} gutterBottom sx={{ color: '#1976d2' }}>\r\n              Contact Us\r\n            </Typography>\r\n            <Divider sx={{ mb: 3, width: 60, mx: 'auto', borderColor: '#1976d2', opacity: 0.6 }} />\r\n            <Typography variant=\"body1\" sx={{ mb: 3 }}>\r\n              Have questions or want to book an appointment? Reach out to us!\r\n            </Typography>\r\n            <Grid container spacing={2} justifyContent=\"center\" sx={{ mb: 2 }}>\r\n              <Grid item xs={12} sm={4}>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <Avatar sx={{ bgcolor: '#1976d2', mb: 1 }}>\r\n                    <i className=\"fas fa-envelope\" style={{ color: '#fff' }} />\r\n                  </Avatar>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Email</Typography>\r\n                  <Typography variant=\"body2\" sx={{ wordBreak: 'break-all' }}>\r\n                    {clinicSettings.system.email || 'info@denticclinic.com'}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <Avatar sx={{ bgcolor: '#1976d2', mb: 1 }}>\r\n                    <i className=\"fas fa-phone\" style={{ color: '#fff' }} />\r\n                  </Avatar>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Phone</Typography>\r\n                  <Typography variant=\"body2\">\r\n                    {clinicSettings.system.phone || '+1 234 567 890'}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={4}>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <Avatar sx={{ bgcolor: '#1976d2', mb: 1 }}>\r\n                    <i className=\"fas fa-map-marker-alt\" style={{ color: '#fff' }} />\r\n                  </Avatar>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">Address</Typography>\r\n                  <Typography variant=\"body2\">\r\n                    {clinicSettings.system.address || '123 Smile Street, Happy City, Country'}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              sx={{ mt: 2, px: 5, fontWeight: 600, borderRadius: 2 }}\r\n              onClick={() => window.location.href = '/send-message'}\r\n            >\r\n              Send Message\r\n            </Button>\r\n          </Card>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* Call to Action */}\r\n      <Box sx={{ bgcolor: '#1976d2', color: '#fff', py: 6, mt: 10 }}>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography variant=\"h5\" align=\"center\" fontWeight={700} gutterBottom>\r\n            Ready for a brighter, healthier smile?\r\n          </Typography>\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              sx={{ px: 5, fontWeight: 600 }}\r\n              onClick={handleBookVisit}\r\n            >\r\n              Book Your Visit\r\n            </Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* Footer */}\r\n      <Box sx={{ bgcolor: '#222', color: '#fff', py: 3, mt: 8 }}>\r\n        <Container maxWidth=\"md\">\r\n          <Typography align=\"center\" variant=\"body2\">\r\n            &copy; {new Date().getFullYear()} Dentic Clinic. All rights reserved.\r\n          </Typography>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* Patient Modal JSX */}\r\n      <Dialog open={openPatientModal} onClose={() => setOpenPatientModal(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Add Patient</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2} sx={{ mt: 1 }}>\r\n            <TextField label=\"Full Name\" value={patientForm.fullName} onChange={e => setPatientForm(f => ({ ...f, fullName: e.target.value }))} fullWidth required />\r\n            <TextField label=\"Medical Record Number\" value={patientForm.medicalRecordNumber} onChange={e => setPatientForm(f => ({ ...f, medicalRecordNumber: e.target.value }))} fullWidth />\r\n            <TextField label=\"Insurance ID\" value={patientForm.insuranceId} onChange={e => setPatientForm(f => ({ ...f, insuranceId: e.target.value }))} fullWidth />\r\n            <FormControl fullWidth>\r\n              <InputLabel>Blood Type</InputLabel>\r\n              <Select\r\n                label=\"Blood Type\"\r\n                value={patientForm.bloodType}\r\n                onChange={e => setPatientForm(f => ({ ...f, bloodType: e.target.value }))}\r\n              >\r\n                {['A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-'].map(bt => (\r\n                  <MenuItem key={bt} value={bt}>{bt}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              label=\"Allergies (comma separated)\"\r\n              value={patientForm.allergies.join(', ')}\r\n              onChange={e => setPatientForm(f => ({ ...f, allergies: e.target.value.split(',').map(a => a.trim()).filter(Boolean) }))}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Emergency Contact Name\"\r\n              value={patientForm.emergencyContact.name}\r\n              onChange={e => setPatientForm(f => ({ ...f, emergencyContact: { ...f.emergencyContact, name: e.target.value } }))}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Emergency Contact Phone\"\r\n              value={patientForm.emergencyContact.phone}\r\n              onChange={e => setPatientForm(f => ({ ...f, emergencyContact: { ...f.emergencyContact, phone: e.target.value } }))}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Emergency Contact Relationship\"\r\n              value={patientForm.emergencyContact.relationship}\r\n              onChange={e => setPatientForm(f => ({ ...f, emergencyContact: { ...f.emergencyContact, relationship: e.target.value } }))}\r\n              fullWidth\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenPatientModal(false)} color=\"primary\" variant=\"outlined\">Cancel</Button>\r\n          <Button onClick={handleSavePatient} color=\"primary\" variant=\"contained\">Next</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Appointment Modal JSX */}\r\n      <Dialog open={openAppointmentModal} onClose={() => setOpenAppointmentModal(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Book Appointment</DialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2} sx={{ mt: 1 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Doctor</InputLabel>\r\n              <Select\r\n                label=\"Doctor\"\r\n                value={appointmentForm.doctorId}\r\n                onChange={e => setAppointmentForm(f => ({ ...f, doctorId: e.target.value }))}\r\n              >\r\n                {doctorsList.map(doc => (\r\n                  <MenuItem key={doc.id} value={doc.id}>{doc.fullName}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Clinic Location</InputLabel>\r\n              <Select\r\n                label=\"Clinic Location\"\r\n                value={appointmentForm.clinicLocationId}\r\n                onChange={e => setAppointmentForm(f => ({ ...f, clinicLocationId: e.target.value }))}\r\n              >\r\n                {clinicsList.map(clinic => (\r\n                  <MenuItem key={clinic.id} value={clinic.id}>{clinic.name}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              label=\"Appointment Date\"\r\n              type=\"date\"\r\n              value={appointmentForm.appointmentDate}\r\n              onChange={e => setAppointmentForm(f => ({ ...f, appointmentDate: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Start Time\"\r\n              type=\"time\"\r\n              value={appointmentForm.startTime}\r\n              onChange={e => setAppointmentForm(f => ({ ...f, startTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"End Time\"\r\n              type=\"time\"\r\n              value={appointmentForm.endTime}\r\n              onChange={e => setAppointmentForm(f => ({ ...f, endTime: e.target.value }))}\r\n              InputLabelProps={{ shrink: true }}\r\n              fullWidth\r\n            />\r\n            <FormControl fullWidth>\r\n              <InputLabel>Type</InputLabel>\r\n              <Select\r\n                label=\"Type\"\r\n                value={appointmentForm.appointmentType}\r\n                onChange={e => setAppointmentForm(f => ({ ...f, appointmentType: e.target.value }))}\r\n              >\r\n                <MenuItem value=\"In-Person\">In-Person</MenuItem>\r\n                <MenuItem value=\"Telemedicine\">Telemedicine</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              label=\"Reason for Visit\"\r\n              value={appointmentForm.reasonForVisit}\r\n              onChange={e => setAppointmentForm(f => ({ ...f, reasonForVisit: e.target.value }))}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Notes\"\r\n              value={appointmentForm.notes}\r\n              onChange={e => setAppointmentForm(f => ({ ...f, notes: e.target.value }))}\r\n              fullWidth\r\n              multiline\r\n              rows={2}\r\n            />\r\n          </Stack>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenAppointmentModal(false)} color=\"primary\" variant=\"outlined\">Cancel</Button>\r\n          <Button onClick={handleSaveAppointment} color=\"primary\" variant=\"contained\">Book</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Snackbar for feedback */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={3000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity} sx={{ width: '100%' }}>\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n\r\n};\r\nexport default HomePage;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box, Typography, Paper, List, ListItem, ListItemIcon, ListItemText, Divider, Button,\r\n  Dialog, DialogTitle, DialogContent, DialogActions\r\n} from '@mui/material';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport FlashOnIcon from '@mui/icons-material/FlashOn';\r\nimport ListAltIcon from '@mui/icons-material/ListAlt';\r\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\n\r\n// --- NEW: Import module documentation from JSON/text file ---\r\nimport moduleDocs from './moduleDocs.json';\r\n\r\nconst docItems = [\r\n  {\r\n    icon: <DashboardIcon color=\"primary\" />,\r\n    primary: \"Widgets\",\r\n    secondary: \"Quick stats for patients, appointments, staff, and more. Hover for highlight.\"\r\n  },\r\n  {\r\n    icon: <BarChartIcon color=\"secondary\" />,\r\n    primary: \"Charts\",\r\n    secondary: \"Visualize clinic data (patients, medicaments, appointments, etc.)\"\r\n  },\r\n  {\r\n    icon: <FlashOnIcon sx={{ color: \"#fbc02d\" }} />,\r\n    primary: \"Recent Activities\",\r\n    secondary: \"Track latest actions and updates in your clinic.\"\r\n  },\r\n  {\r\n    icon: <ListAltIcon sx={{ color: \"#43a047\" }} />,\r\n    primary: \"Quick Actions\",\r\n    secondary: \"Use buttons to add patients, schedule appointments, and manage records.\"\r\n  },\r\n  {\r\n    icon: <ListAltIcon sx={{ color: \"#0288d1\" }} />,\r\n    primary: \"Top 5 Lists\",\r\n    secondary: \"See top doctors, patients, and medicaments at a glance.\"\r\n  },\r\n  {\r\n    icon: <MonetizationOnIcon sx={{ color: \"#d32f2f\" }} />,\r\n    primary: \"Financial Summary\",\r\n    secondary: \"Overview of income, expenses, and profit.\"\r\n  },\r\n  {\r\n    icon: <SearchIcon sx={{ color: \"#8e24aa\" }} />,\r\n    primary: \"Search & Filter\",\r\n    secondary: \"Quickly find patients, appointments, or medicaments.\"\r\n  },\r\n  {\r\n    icon: <SettingsIcon sx={{ color: \"#1976d2\" }} />,\r\n    primary: \"Settings\",\r\n    secondary: \"Edit your profile or customize your dashboard widgets.\"\r\n  },\r\n  {\r\n    icon: <ChatIcon sx={{ color: \"#009688\" }} />,\r\n    primary: \"Help\",\r\n    secondary: \"For support, use the Live Chat or contact your admin.\"\r\n  }\r\n];\r\n\r\nconst moduleItems = [\r\n  { label: \"Dashboard\", desc: \"Overview, widgets, charts, and quick stats.\" },\r\n  { label: \"Patient Management\", desc: \"Add, edit, view, and search patients. Medical history, allergies, blood type, emergency contact.\" },\r\n  { label: \"Doctor Management\", desc: \"Manage doctor profiles and schedules.\" },\r\n  { label: \"Staff Management\", desc: \"Manage staff profiles and roles.\" },\r\n  { label: \"Clinic Management\", desc: \"Clinic info, locations, and working hours.\" },\r\n  { label: \"Appointment Management\", desc: \"Book, edit, and view appointments. Telemedicine support.\" },\r\n  { label: \"Billing & Invoices\", desc: \"Create and manage bills, invoices, and payments.\" },\r\n  { label: \"Payments\", desc: \"Track and manage patient payments.\" },\r\n  { label: \"Expenses\", desc: \"Record and monitor clinic expenses.\" },\r\n  { label: \"Memberships\", desc: \"Manage patient memberships and plans.\" },\r\n  { label: \"Prescription Management\", desc: \"Create, edit, and view prescriptions.\" },\r\n  { label: \"Medicament Management\", desc: \"Manage medicaments, manufacturers, and stock.\" },\r\n  { label: \"Certificates\", desc: \"Issue and manage certificates.\" },\r\n  { label: \"Reports & Analytics\", desc: \"View statistics, summaries, and trends.\" },\r\n  { label: \"Contact & Communication\", desc: \"Contact section, book visit, and communication tools.\" },\r\n  { label: \"Settings\", desc: \"Profile and dashboard customization.\" },\r\n  { label: \"Help & Documentation\", desc: \"Access help center and user guides.\" }\r\n];\r\n\r\nconst DocumentationHelp = () => {\r\n  const [openModule, setOpenModule] = useState(null);\r\n  const [moduleContent, setModuleContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (openModule) {\r\n      setModuleContent(moduleDocs[openModule] || \"Documentation coming soon.\");\r\n    }\r\n  }, [openModule]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxWidth: 700,\r\n        width: '100%',\r\n        mx: 'auto',\r\n        mt: 4,\r\n        mb: 4,\r\n        px: { xs: 1, sm: 2 },\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          borderRadius: 4,\r\n          p: { xs: 2, sm: 4 },\r\n          bgcolor: '#fafdff',\r\n          boxShadow: '0 4px 24px rgba(25,118,210,0.08)',\r\n          width: '100%',\r\n          minWidth: 320,\r\n        }}\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n          <HelpOutlineIcon sx={{ fontSize: 36, color: '#1976d2', mr: 1 }} />\r\n          <Typography variant=\"h4\" fontWeight={700} color=\"primary\">\r\n            Dashboard Documentation & Help\r\n          </Typography>\r\n        </Box>\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\" mb={3}>\r\n          Welcome to your Dentic Clinic dashboard! Here’s a quick guide to help you get the most out of your admin panel.\r\n        </Typography>\r\n        <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 1, mt: 2 }}>\r\n          Main Modules\r\n        </Typography>\r\n        <List sx={{ mb: 2 }}>\r\n          {moduleItems.map((mod, idx) => (\r\n            <ListItem\r\n              key={idx}\r\n              button\r\n              onClick={() => setOpenModule(mod.label)}\r\n              sx={{\r\n                pl: 0,\r\n                mb: 0.5,\r\n                borderRadius: 2,\r\n                '&:hover': { bgcolor: '#e3f2fd', cursor: 'pointer' }\r\n              }}\r\n            >\r\n              <ListItemIcon sx={{ minWidth: 32 }}>\r\n                <FlashOnIcon color=\"primary\" fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={<Typography variant=\"subtitle2\" fontWeight={600}>{mod.label}</Typography>}\r\n                secondary={<Typography variant=\"body2\" color=\"text.secondary\">{mod.desc}</Typography>}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <List>\r\n          {docItems.map((item, idx) => (\r\n            <ListItem key={idx} alignItems=\"flex-start\" sx={{ mb: 1 }}>\r\n              <ListItemIcon sx={{ minWidth: 40 }}>{item.icon}</ListItemIcon>\r\n              <ListItemText\r\n                primary={<Typography variant=\"subtitle1\" fontWeight={600}>{item.primary}</Typography>}\r\n                secondary={<Typography variant=\"body2\" color=\"text.secondary\">{item.secondary}</Typography>}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider sx={{ my: 2 }} />\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" flexWrap=\"wrap\" gap={2}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            For more detailed documentation, please refer to the user manual or contact support.\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            href=\"/help\"\r\n            sx={{ textTransform: 'none', fontWeight: 600 }}\r\n          >\r\n            Go to Help Center\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* Modal for module documentation */}\r\n      <Dialog\r\n        open={!!openModule}\r\n        onClose={() => setOpenModule(null)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          {openModule} Documentation\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-line' }}>\r\n            {moduleContent}\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenModule(null)} color=\"primary\" variant=\"outlined\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DocumentationHelp;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useForm } from 'react-hook-form';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  Avatar,\r\n  Stack,\r\n} from '@mui/material';\r\nimport PersonAddAltIcon from '@mui/icons-material/PersonAddAlt';\r\nimport BASE_URL from '../../main/urls/urls';\r\n\r\nconst Register = () => {\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [user, setUser] = useState({ username: '', password: '' });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(BASE_URL+'/users', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: user.username, password: user.password }),\r\n      });\r\n      if (response.ok) {\r\n        alert('Registration successful! You can now log in.');\r\n        history.replace('/login');\r\n      } else {\r\n        alert('Registration failed. Please try a different username.');\r\n      }\r\n    } catch (e) {\r\n      alert('An error occurred. Please try again.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const goToLogin = () => {\r\n    history.replace('/login');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        bgcolor: '#fafdff',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundImage: 'url(\"images/login.jpg\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n      }}\r\n    >\r\n      <Paper elevation={6} sx={{ p: 4, maxWidth: 380, width: '100%', borderRadius: 3, backdropFilter: 'blur(2px)', background: 'rgba(255,255,255,0.92)' }}>\r\n        <Stack alignItems=\"center\" spacing={2}>\r\n          <Avatar sx={{ bgcolor: '#1976d2', width: 64, height: 64 }}>\r\n            <PersonAddAltIcon fontSize=\"large\" />\r\n          </Avatar>\r\n          <Typography variant=\"h5\" fontWeight={700} color=\"primary\">\r\n            Register Account\r\n          </Typography>\r\n        </Stack>\r\n        <form onSubmit={handleSubmit(onSubmit)} style={{ marginTop: 24 }}>\r\n          <TextField\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={user.username}\r\n            onChange={handleInputChange}\r\n            inputRef={register({ required: true })}\r\n            error={!!errors?.username}\r\n            helperText={errors?.username && \"Username is required\"}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={user.password}\r\n            onChange={handleInputChange}\r\n            inputRef={register({ required: true })}\r\n            error={!!errors?.password}\r\n            helperText={errors?.password && \"Password is required\"}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            size=\"large\"\r\n            sx={{ mt: 2, mb: 1, fontWeight: 600 }}\r\n            startIcon={<PersonAddAltIcon />}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Registering...' : 'Register'}\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={goToLogin}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n            sx={{ mb: 1, fontWeight: 600 }}\r\n          >\r\n            Back to Login\r\n          </Button>\r\n        </form>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mt: 2 }}>\r\n          &copy; {new Date().getFullYear()} Dentic Clinic\r\n        </Typography>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Register;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { Button, Typography, TextField, Paper, Stack, Alert } from '@mui/material';\r\n\r\nconst AboutUsPage = () => {\r\n  const [description, setDescription] = useState('');\r\n  const [highlights, setHighlights] = useState([]);\r\n  const [textarea, setTextarea] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [success, setSuccess] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch about us on mount\r\n  useEffect(() => {\r\n    fetchAboutUs();\r\n  }, []);\r\n\r\n  const fetchAboutUs = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const res = await axios.get(BASE_URL + '/aboutus');\r\n      const about = res.data.aboutUs || {};\r\n      setDescription(about.description || '');\r\n      setHighlights(about.highlights || []);\r\n      setTextarea((about.highlights || []).join('\\n'));\r\n    } catch (e) {\r\n      setError('Failed to load About Us.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEditMode(true);\r\n    setSuccess('');\r\n    setError('');\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditMode(false);\r\n    setTextarea(highlights.join('\\n'));\r\n    setSuccess('');\r\n    setError('');\r\n  };\r\n\r\n  const handleChangeDesc = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleChangeHighlights = (e) => {\r\n    setTextarea(e.target.value);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n    try {\r\n      const updatedHighlights = textarea\r\n        .split('\\n')\r\n        .map(s => s.trim())\r\n        .filter(Boolean);\r\n      await axios.post(BASE_URL + '/aboutus', {\r\n        aboutUs: {\r\n          description,\r\n          highlights: updatedHighlights,\r\n        }\r\n      });\r\n      setHighlights(updatedHighlights);\r\n      setEditMode(false);\r\n      setSuccess('About Us updated successfully.');\r\n    } catch (e) {\r\n      setError('Failed to update About Us.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ maxWidth: 700, mx: 'auto', mt: 6, p: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        <i className=\"menu-icon fa fa-info-circle\"></i> About Us\r\n      </Typography>\r\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n      {success && <Alert severity=\"success\" sx={{ mb: 2 }}>{success}</Alert>}\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          label=\"Description\"\r\n          multiline\r\n          minRows={3}\r\n          value={description}\r\n          onChange={handleChangeDesc}\r\n          fullWidth\r\n          disabled={!editMode || loading}\r\n        />\r\n        <TextField\r\n          label=\"Highlights\"\r\n          multiline\r\n          minRows={5}\r\n          value={textarea}\r\n          onChange={handleChangeHighlights}\r\n          fullWidth\r\n          disabled={!editMode || loading}\r\n          helperText=\"One highlight per line\"\r\n        />\r\n        {!editMode ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleEdit}\r\n            disabled={loading}\r\n            sx={{ width: 120 }}\r\n          >\r\n            Edit\r\n          </Button>\r\n        ) : (\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              onClick={handleSave}\r\n              disabled={loading}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={handleCancel}\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Stack>\r\n        )}\r\n      </Stack>\r\n      {!editMode && (\r\n        <div style={{ marginTop: 24 }}>\r\n          <Typography variant=\"subtitle1\" fontWeight={600} gutterBottom>\r\n            Highlights:\r\n          </Typography>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {highlights.map((h, idx) => (\r\n              <li className=\"list-group-item\" key={idx}>\r\n                {h}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AboutUsPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Content.css';\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport Configuration from '../Configuration/Configuration';\r\nimport Dashbord from '../DashBoard/DashBoard';\r\nimport Rendezvous from '../Rendezvous/Rendezvous';\r\nimport Prescription from '../Prescription/Prescription';\r\nimport Payment from '../Payment/Payment';\r\nimport Patient from '../Patient/Patient';\r\nimport Medicament from '../Medicament/Medicament';\r\nimport Login from '../Login/Login';\r\nimport AddPrescription from \"../AddPrescription/AddPrescription\";\r\nimport CurrentUser from '../../main/config/user';\r\nimport AddMedicament from '../AddMedicament/AddMedicament';\r\nimport AddPatient from '../AddPatient/AddPatient';\r\nimport Expense from \"../Expense/Expense\";\r\nimport Income from \"../Income/Income\";\r\nimport Note from \"../Note/Note\";\r\nimport ToDo from \"../ToDo/ToDo\";\r\nimport Message from \"../Message/Message\";\r\nimport MedicamentManufacture from \"../MedicamentManufacture/MedicamentManufacture\";\r\nimport MedicamentCategory from \"../MedicamentCategory/MedicamentCategory\";\r\nimport LabTest from \"../LabTest/LabTest\";\r\nimport Invoice from \"../Invoice/Invoice\";\r\nimport Certificates from '../Certificates/Certificates'\r\nimport Consultation from '../Consultation/Consultations.jsx'\r\nimport CertificateTemplates from '../CertificateTemplates/CertificateTemplates'\r\nimport TestLab from '../LabTest/LabTest'\r\nimport MedicamentAnalytics from '../MedicamentAnalytics/MedicamentAnalytics';\r\nimport PatientAnalytics from '../PatientAnalytics/PatientAnalytics'\r\nimport SaleAnalytics from '../SaleAnalytics/SaleAnalytics'\r\nimport Services from '../Services/Services'\r\nimport OpeningHourPage from '../OpeningHourPage/OpeningHourPage'\r\nimport ContactPage from '../ContactPage/ContactPage'\r\nimport ServicePage from '../ServicePage/ServicePage'\r\nimport BlogPage from '../BlogPage/BlogPage'\r\nimport Testimonial from '../Testimonial/Testimonial'\r\nimport Schedule from '../Schedule/Schedule'\r\nimport NewsLetter from '../NewsLetter/NewsLetter'\r\nimport SearchPatient from '../SearchPatient/SearchPatient';\r\nimport Profile from '../Profile/Profile';\r\nimport Appointments from '../Appointements/Appointements';\r\nimport CaseStudies from '../CaseStudy/CaseStudies';\r\nimport MembershipDetails from '../Membership/MembershipDetails.jsx';\r\nimport OperationDetails from '../Operation/OperationDetails.jsx';\r\nimport ClinicInfo from '../Clinic/ClinicInfo.jsx';\r\nimport Diagnoses from '../Diagnose/Diagnoses.jsx';\r\nimport EquipmentMaintenance from '../EquipmentMaintenance/EquipementMaintenance.js';\r\nimport InsuranceInfo from '../Insurance/InsuranceInfo.jsx';\r\nimport LegalCompliance from '../LegalCompliance/LegalCompliance.jsx';\r\nimport LoyaltyProgram from '../LoyaltyProgram/LoyaltyProgram.js';\r\nimport MarketingCampaign from '../MarketingCampaign/MarketingCampaign.jsx';\r\nimport StaffProfile from '../Staff/StaffProfile.jsx';\r\nimport ProcedureDetails from '../Procedure/ProcedureDetails.jsx';\r\nimport TreatmentPlan from '../TreatmentPlan/TreatmentPlan.jsx';\r\nimport Doctors from '../Doctor/Doctors.jsx';\r\nimport ProfessionalOdontogram from '../Odontogram/ProfessionalOdontogram.js';\r\nimport Telemedicine from '../Telemedicine/Telemedicine.js';\r\nimport Billing from '../Billing/Billing.js';\r\nimport DentalImaging from '../DentalImaging/DentalImaging.js';\r\nimport InventoryItem from '../InventoryItem/InventoryItem.js';\r\nimport HomePage from '../Home/HomePage.jsx';\r\nimport DocumentationHelp from '../DocumentationHelp/DocumentationHelp.js';\r\nimport Register from '../Register/Register.js';\r\nimport AboutUsPage from '../AboutUsPage/AboutUsPage.jsx';\r\nimport AddInventoryItem from '../InventoryItem/AddInventoryItem.js';\r\nimport AddAppointment from '../Appointements/AddAppointment.js';\r\n\r\nconst Content = ({ connected }) => (\r\n  <div className=\"col-md-12\" style={{ display: (connected ? 'block' : 'none') }}>\r\n    <div>\r\n      <Route exact path=\"/dashboard\" component={Dashbord} />\r\n      <Route exact path=\"/rendezvous\" component={Appointments} />\r\n      <Route exact path=\"/prescription\" component={Prescription} />\r\n      <Route exact path=\"/addprescription\" component={AddPrescription} />\r\n      <Route exact path=\"/patient\" component={Patient} />\r\n      <Route exact path=\"/medicaments\" component={Medicament} />\r\n      <Route exact path=\"/configuration\" component={Configuration} />\r\n      <Route exact path=\"/add-prescription\" component={AddPrescription} />\r\n      <Route exact path=\"/add-medicament\" component={AddMedicament} />\r\n      <Route exact path=\"/add-patient\" component={AddPatient} />\r\n      <Route exact path=\"/add-appointement\" component={Rendezvous} />\r\n      <Route exact path=\"/payment\" component={Payment} />\r\n      <Route exact path=\"/income\" component={Income} />\r\n      <Route exact path=\"/expense\" component={Expense} />\r\n      <Route exact path=\"/note\" component={Note} />\r\n      <Route exact path=\"/todo\" component={ToDo} />\r\n      <Route exact path=\"/message\" component={Message} />\r\n      <Route exact path=\"/telemedicine\" component={Telemedicine} />\r\n      <Route exact path=\"/billing\" component={Billing} />\r\n      <Route exact path=\"/dental-imaging\" component={DentalImaging} />\r\n      <Route exact path=\"/inventory-item\" component={InventoryItem} />\r\n      <Route exact path=\"/aboutus\" component={AboutUsPage} />\r\n      <Route exact path=\"/medicament-manufacture\" component={MedicamentManufacture} />\r\n      <Route exact path=\"/medicament-category\" component={MedicamentCategory} />\r\n      <Route exact path=\"/lab-test\" component={LabTest} />\r\n      <Route exact path=\"/invoice\" component={Invoice} />\r\n      <Route exact path=\"/certificate\" component={Certificates} />\r\n      <Route exact path=\"/consultation\" component={Consultation} />\r\n      <Route exact path=\"/certificate-template\" component={CertificateTemplates} />\r\n      <Route exact path=\"/quick-test\" component={TestLab} />\r\n      <Route exact path=\"/medicament-analytics\" component={MedicamentAnalytics} />\r\n      <Route exact path=\"/patient-analytics\" component={PatientAnalytics} />\r\n      <Route exact path=\"/sale-analytics\" component={SaleAnalytics} />\r\n      <Route exact path=\"/service\" component={Services} />\r\n\r\n      <Route exact path=\"/homepage\" component={HomePage} />\r\n      <Route exact path=\"/openinghourpage\" component={OpeningHourPage} />\r\n      <Route exact path=\"/servicepage\" component={ServicePage} />\r\n      <Route exact path=\"/blogpage\" component={BlogPage} />\r\n      <Route exact path=\"/contactpage\" component={ContactPage} />\r\n\r\n      <Route exact path=\"/testimonials\" component={Testimonial} />\r\n      <Route exact path=\"/schedule\" component={Schedule} />\r\n      <Route exact path=\"/messages\" component={Message} />\r\n      <Route exact path=\"/newsletters\" component={NewsLetter} />\r\n      <Route path=\"/result/:input\" component={SearchPatient} />\r\n      <Route exact path=\"/profile\" component={Profile} />\r\n\r\n\r\n      <Route exact path=\"/case-study\" component={CaseStudies} />\r\n      <Route exact path=\"/dental-membership\" component={MembershipDetails} />\r\n      <Route exact path=\"/operation\" component={OperationDetails} />\r\n      <Route exact path=\"/treatment-plan\" component={TreatmentPlan} />\r\n      <Route exact path=\"/procedure\" component={ProcedureDetails} />\r\n      <Route exact path=\"/staff\" component={StaffProfile} />\r\n      <Route exact path=\"/marketing\" component={MarketingCampaign} />\r\n      <Route exact path=\"/loyalty\" component={LoyaltyProgram} />\r\n      <Route exact path=\"/legal\" component={LegalCompliance} />\r\n      <Route exact path=\"/insurance\" component={InsuranceInfo} />\r\n      <Route exact path=\"/income\" component={Income} />\r\n      <Route exact path=\"/equipment-maintenance\" component={EquipmentMaintenance} />\r\n      <Route exact path=\"/diagnosis\" component={Diagnoses} />\r\n      <Route exact path=\"/clinic\" component={ClinicInfo} />\r\n      <Route exact path=\"/doctor\" component={Doctors} />\r\n      <Route exact path=\"/help\" component={DocumentationHelp} />\r\n      <Route exact path=\"/odontogram\" component={ProfessionalOdontogram} />\r\n      <Route exact path=\"/appointments/add\" component={AddAppointment} />\r\n      <Route exact path=\"/patients/add\" component={AddPatient} />\r\n      <Route exact path=\"/inventory/add\" component={AddInventoryItem} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nContent.propTypes = {};\r\n\r\nContent.defaultProps = {};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Footer.css';\r\nimport CurrentUser from '../../main/config/user';\r\n\r\nconst Footer = ({ connected }) => (\r\n\r\n\r\n  <footer className=\"site-footer\" style={{ display: (connected ? 'block' : 'none') }}>\r\n    <div className=\"footer-inner bg-white\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\">\r\n\r\n        </div>\r\n        <div className=\"col-sm-6 text-right\">\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {};\r\n\r\nFooter.defaultProps = {};\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  Alert,\r\n  Stack,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst SendMessage = () => {\r\n  const [form, setForm] = useState({ name: '', subject: '', message: '' });\r\n  const [loading, setLoading] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n    setError('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSent(false);\r\n    try {\r\n      await axios.post(BASE_URL + '/messages', form);\r\n      setSent(true);\r\n      setForm({ name: '', subject: '', message: '' });\r\n      setTimeout(() => {\r\n        history.push('/');\r\n      }, 1500); // Redirect after 1.5 seconds\r\n    } catch (err) {\r\n      setError('Failed to send message. Please try again.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 480, mx: 'auto', mt: 8 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        <Typography variant=\"h5\" fontWeight={700} gutterBottom color=\"primary\">\r\n          Send a Message\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <Stack spacing={2}>\r\n            <TextField\r\n              label=\"Your Name\"\r\n              name=\"name\"\r\n              value={form.name}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Subject\"\r\n              name=\"subject\"\r\n              value={form.subject}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Message\"\r\n              name=\"message\"\r\n              value={form.message}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n              multiline\r\n              minRows={4}\r\n            />\r\n            {error && <Alert severity=\"error\">{error}</Alert>}\r\n            {sent && <Alert severity=\"success\">Message sent successfully! Redirecting...</Alert>}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={loading}\r\n              sx={{ fontWeight: 600 }}\r\n            >\r\n              {loading ? 'Sending...' : 'Send Message'}\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SendMessage;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n  Stack,\r\n  Alert,\r\n  MenuItem,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport BASE_URL from '../../main/urls/urls';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst initialState = {\r\n  patientId: '',\r\n  doctorId: '',\r\n  clinicLocationId: '',\r\n  appointmentDate: '',\r\n  startTime: '',\r\n  endTime: '',\r\n  status: 'Scheduled',\r\n  appointmentType: 'In-Person',\r\n  reasonForVisit: '',\r\n  notes: '',\r\n};\r\n\r\nconst BookAppointment = () => {\r\n  const [form, setForm] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [patients, setPatients] = useState([]);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [clinics, setClinics] = useState([]);\r\n  const [loadingSelects, setLoadingSelects] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoadingSelects(true);\r\n      try {\r\n        const [patientsRes, doctorsRes, clinicsRes] = await Promise.all([\r\n          axios.get(BASE_URL + '/patients'),\r\n          axios.get(BASE_URL + '/doctors'),\r\n          axios.get(BASE_URL + '/clinics'),\r\n        ]);\r\n        setPatients(patientsRes.data || []);\r\n        setDoctors(doctorsRes.data || []);\r\n        setClinics(clinicsRes.data || []);\r\n      } catch (err) {\r\n        setError('Failed to load select options.');\r\n      }\r\n      setLoadingSelects(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n    setError('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSent(false);\r\n    try {\r\n      await axios.post(BASE_URL + '/appointments', {\r\n        ...form,\r\n        id: undefined, // Let backend handle id\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n      setSent(true);\r\n      setForm(initialState);\r\n      setTimeout(() => history.push('/'), 1500);\r\n    } catch (err) {\r\n      setError('Failed to book appointment. Please try again.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 500, mx: 'auto', mt: 8 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        <Typography variant=\"h5\" fontWeight={700} gutterBottom color=\"primary\">\r\n          Book Appointment\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <Stack spacing={2}>\r\n            <TextField\r\n              select\r\n              label=\"Patient\"\r\n              name=\"patientId\"\r\n              value={form.patientId}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n              disabled={loadingSelects}\r\n            >\r\n              {loadingSelects ? (\r\n                <MenuItem value=\"\">\r\n                  <CircularProgress size={20} />\r\n                </MenuItem>\r\n              ) : (\r\n                patients.map((p) => (\r\n                  <MenuItem key={p.id} value={p.id}>\r\n                    {p.name || p.fullName || `Patient #${p.id}`}\r\n                  </MenuItem>\r\n                ))\r\n              )}\r\n            </TextField>\r\n            <TextField\r\n              select\r\n              label=\"Doctor\"\r\n              name=\"doctorId\"\r\n              value={form.doctorId}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n              disabled={loadingSelects}\r\n            >\r\n              {loadingSelects ? (\r\n                <MenuItem value=\"\">\r\n                  <CircularProgress size={20} />\r\n                </MenuItem>\r\n              ) : (\r\n                doctors.map((d) => (\r\n                  <MenuItem key={d.id} value={d.id}>\r\n                    {d.name || d.fullName || `Doctor #${d.id}`}\r\n                  </MenuItem>\r\n                ))\r\n              )}\r\n            </TextField>\r\n            <TextField\r\n              select\r\n              label=\"Clinic Location\"\r\n              name=\"clinicLocationId\"\r\n              value={form.clinicLocationId}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n              disabled={loadingSelects}\r\n            >\r\n              {loadingSelects ? (\r\n                <MenuItem value=\"\">\r\n                  <CircularProgress size={20} />\r\n                </MenuItem>\r\n              ) : (\r\n                clinics.map((c) => (\r\n                  <MenuItem key={c.id} value={c.id}>\r\n                    {c.name || c.location || `Clinic #${c.id}`}\r\n                  </MenuItem>\r\n                ))\r\n              )}\r\n            </TextField>\r\n            <TextField\r\n              label=\"Appointment Date\"\r\n              name=\"appointmentDate\"\r\n              type=\"date\"\r\n              value={form.appointmentDate}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <TextField\r\n                label=\"Start Time\"\r\n                name=\"startTime\"\r\n                type=\"time\"\r\n                value={form.startTime}\r\n                onChange={handleChange}\r\n                required\r\n                fullWidth\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n              <TextField\r\n                label=\"End Time\"\r\n                name=\"endTime\"\r\n                type=\"time\"\r\n                value={form.endTime}\r\n                onChange={handleChange}\r\n                required\r\n                fullWidth\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n            </Stack>\r\n            <TextField\r\n              label=\"Status\"\r\n              name=\"status\"\r\n              select\r\n              value={form.status}\r\n              onChange={handleChange}\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"Scheduled\">Scheduled</MenuItem>\r\n              <MenuItem value=\"Completed\">Completed</MenuItem>\r\n              <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n            </TextField>\r\n            <TextField\r\n              label=\"Appointment Type\"\r\n              name=\"appointmentType\"\r\n              select\r\n              value={form.appointmentType}\r\n              onChange={handleChange}\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"In-Person\">In-Person</MenuItem>\r\n              <MenuItem value=\"Online\">Online</MenuItem>\r\n            </TextField>\r\n            <TextField\r\n              label=\"Reason For Visit\"\r\n              name=\"reasonForVisit\"\r\n              value={form.reasonForVisit}\r\n              onChange={handleChange}\r\n              required\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label=\"Notes\"\r\n              name=\"notes\"\r\n              value={form.notes}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              multiline\r\n              minRows={2}\r\n            />\r\n            {error && <Alert severity=\"error\">{error}</Alert>}\r\n            {sent && <Alert severity=\"success\">Appointment booked! Redirecting...</Alert>}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={loading || loadingSelects}\r\n              sx={{ fontWeight: 600 }}\r\n            >\r\n              {loading ? 'Booking...' : 'Book Appointment'}\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BookAppointment;","import React, { useState } from 'react';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport Header from '../Header/Header';\r\nimport Content from '../Content/Content';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Footer from '../Footer/Footer';\r\nimport Login from '../Login/Login';\r\nimport HomePage from '../Home/HomePage';\r\nimport Register from '../Register/Register';\r\nimport SendMessage from '../Home/SendMessage';\r\nimport BookAppointment from '../Appointments/BookAppointment';\r\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom';\r\n\r\nconst Root = () => {\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  const handleClick = num => {\r\n    setConnected(num);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n       <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n           <Route exact path=\"/register\" >\r\n           <Register />\r\n           </Route>\r\n            <Route exact path=\"/send-message\" >\r\n           <SendMessage />\r\n           </Route>\r\n           <Route path=\"/book-appointment\">\r\n            <BookAppointment />\r\n           </Route>\r\n          <Route>\r\n            {connected === true ? (\r\n              <div>\r\n                <Navigation connected={connected} />\r\n                <Header connected={connected} handleClick={handleClick} />\r\n                <div id=\"right-panel\" className=\"right-panel\">\r\n                  <div className=\"content\">\r\n                    <div className=\"animated fadeIn\">\r\n                      <div className=\"row\">\r\n                        <Content connected={connected} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clearfix\"></div>\r\n                  <Footer connected={connected} />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Login handleClick={handleClick} />\r\n            )}\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Root from './components/Root/Root';\r\n\r\nfunction App() {\r\n  return (\r\n   <Root/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'light',\r\n    primary: {\r\n      main: '#1976d2',\r\n    },\r\n    secondary: {\r\n      main: '#dc004e',\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}